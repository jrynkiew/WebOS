"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionError = exports.ActionErrorCode = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

let ActionErrorCode;
exports.ActionErrorCode = ActionErrorCode;

(function (ActionErrorCode) {
  ActionErrorCode[ActionErrorCode["ErrExistedAction"] = 0] = "ErrExistedAction";
  ActionErrorCode[ActionErrorCode["ErrBalance"] = 1] = "ErrBalance";
  ActionErrorCode[ActionErrorCode["ErrNonce"] = 2] = "ErrNonce";
  ActionErrorCode[ActionErrorCode["ErrAddress"] = 3] = "ErrAddress";
  ActionErrorCode[ActionErrorCode["ErrGasPrice"] = 4] = "ErrGasPrice";
  ActionErrorCode[ActionErrorCode["ErrUnknown"] = 5] = "ErrUnknown";
})(ActionErrorCode || (exports.ActionErrorCode = ActionErrorCode = {}));

class ActionError extends Error {
  constructor(code, message) {
    super(message);

    _defineProperty(this, "code", void 0);

    this.code = code;
    Object.setPrototypeOf(this, ActionError.prototype);
  }

}

exports.ActionError = ActionError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hY3Rpb24vdHlwZXMudHMiXSwibmFtZXMiOlsiQWN0aW9uRXJyb3JDb2RlIiwiQWN0aW9uRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiY29kZSIsIm1lc3NhZ2UiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBeUZZQSxlOzs7V0FBQUEsZTtBQUFBQSxFQUFBQSxlLENBQUFBLGU7QUFBQUEsRUFBQUEsZSxDQUFBQSxlO0FBQUFBLEVBQUFBLGUsQ0FBQUEsZTtBQUFBQSxFQUFBQSxlLENBQUFBLGU7QUFBQUEsRUFBQUEsZSxDQUFBQSxlO0FBQUFBLEVBQUFBLGUsQ0FBQUEsZTtHQUFBQSxlLCtCQUFBQSxlOztBQVNMLE1BQU1DLFdBQU4sU0FBMEJDLEtBQTFCLENBQWdDO0FBR3JDQyxFQUFBQSxXQUFXLENBQUNDLElBQUQsRUFBd0JDLE9BQXhCLEVBQXlDO0FBQ2xELFVBQU1BLE9BQU47O0FBRGtEOztBQUVsRCxTQUFLRCxJQUFMLEdBQVlBLElBQVo7QUFDQUUsSUFBQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCLElBQXRCLEVBQTRCTixXQUFXLENBQUNPLFNBQXhDO0FBQ0Q7O0FBUG9DIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBCYXNlQWN0aW9uUmVxdWVzdCB7XG4gIGdhc0xpbWl0Pzogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBnYXNQcmljZT86IHN0cmluZyB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUcmFuc2ZlciBleHRlbmRzIEJhc2VBY3Rpb25SZXF1ZXN0IHtcbiAgYW1vdW50OiBzdHJpbmc7XG4gIHJlY2lwaWVudDogc3RyaW5nO1xuICBwYXlsb2FkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXhlY3V0aW9uIGV4dGVuZHMgQmFzZUFjdGlvblJlcXVlc3Qge1xuICAvLyBFeGVjdXRpb24gY29udHJhY3RcbiAgY29udHJhY3Q6IHN0cmluZztcblxuICAvLyBFeGVjdXRpb24gYW1vdW50XG4gIGFtb3VudDogc3RyaW5nO1xuXG4gIC8vIEV4ZWN1dGlvbiBkYXRhXG4gIGRhdGE6IEJ1ZmZlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDbGFpbUZyb21SZXdhcmRpbmdGdW5kIGV4dGVuZHMgQmFzZUFjdGlvblJlcXVlc3Qge1xuICBhbW91bnQ6IHN0cmluZztcbiAgZGF0YTogQnVmZmVyIHwge307XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3Rha2VDcmVhdGUgZXh0ZW5kcyBCYXNlQWN0aW9uUmVxdWVzdCB7XG4gIGNhbmRpZGF0ZU5hbWU6IHN0cmluZztcbiAgc3Rha2VkQW1vdW50OiBzdHJpbmc7XG4gIHN0YWtlZER1cmF0aW9uOiBudW1iZXI7XG4gIGF1dG9TdGFrZTogYm9vbGVhbjtcbiAgcGF5bG9hZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0YWtlVW5zdGFrZSBleHRlbmRzIEJhc2VBY3Rpb25SZXF1ZXN0IHtcbiAgYnVja2V0SW5kZXg6IG51bWJlcjtcbiAgcGF5bG9hZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0YWtlV2l0aGRyYXcgZXh0ZW5kcyBCYXNlQWN0aW9uUmVxdWVzdCB7XG4gIGJ1Y2tldEluZGV4OiBudW1iZXI7XG4gIHBheWxvYWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdGFrZUFkZERlcG9zaXQgZXh0ZW5kcyBCYXNlQWN0aW9uUmVxdWVzdCB7XG4gIGJ1Y2tldEluZGV4OiBudW1iZXI7XG4gIGFtb3VudDogc3RyaW5nO1xuICBwYXlsb2FkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3Rha2VSZXN0YWtlIGV4dGVuZHMgQmFzZUFjdGlvblJlcXVlc3Qge1xuICBidWNrZXRJbmRleDogbnVtYmVyO1xuICBzdGFrZWREdXJhdGlvbjogbnVtYmVyO1xuICBhdXRvU3Rha2U6IGJvb2xlYW47XG4gIHBheWxvYWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdGFrZUNoYW5nZUNhbmRpZGF0ZSBleHRlbmRzIEJhc2VBY3Rpb25SZXF1ZXN0IHtcbiAgYnVja2V0SW5kZXg6IG51bWJlcjtcbiAgY2FuZGlkYXRlTmFtZTogc3RyaW5nO1xuICBwYXlsb2FkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3Rha2VUcmFuc2Zlck93bmVyc2hpcCBleHRlbmRzIEJhc2VBY3Rpb25SZXF1ZXN0IHtcbiAgYnVja2V0SW5kZXg6IG51bWJlcjtcbiAgdm90ZXJBZGRyZXNzOiBzdHJpbmc7XG4gIHBheWxvYWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDYW5kaWRhdGVSZWdpc3RlciBleHRlbmRzIEJhc2VBY3Rpb25SZXF1ZXN0IHtcbiAgLy8gQ2FuZGlkYXRlQmFzaWNJbmZvXG4gIG5hbWU6IHN0cmluZztcbiAgb3BlcmF0b3JBZGRyZXNzOiBzdHJpbmc7XG4gIHJld2FyZEFkZHJlc3M6IHN0cmluZztcblxuICBzdGFrZWRBbW91bnQ6IHN0cmluZztcbiAgc3Rha2VkRHVyYXRpb246IG51bWJlcjtcbiAgYXV0b1N0YWtlOiBib29sZWFuO1xuICBvd25lckFkZHJlc3M6IHN0cmluZztcbiAgcGF5bG9hZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENhbmRpZGF0ZVVwZGF0ZSBleHRlbmRzIEJhc2VBY3Rpb25SZXF1ZXN0IHtcbiAgbmFtZTogc3RyaW5nO1xuICBvcGVyYXRvckFkZHJlc3M6IHN0cmluZztcbiAgcmV3YXJkQWRkcmVzczogc3RyaW5nO1xufVxuXG5leHBvcnQgZW51bSBBY3Rpb25FcnJvckNvZGUge1xuICBFcnJFeGlzdGVkQWN0aW9uLFxuICBFcnJCYWxhbmNlLFxuICBFcnJOb25jZSxcbiAgRXJyQWRkcmVzcyxcbiAgRXJyR2FzUHJpY2UsXG4gIEVyclVua25vd25cbn1cblxuZXhwb3J0IGNsYXNzIEFjdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBwdWJsaWMgY29kZTogQWN0aW9uRXJyb3JDb2RlO1xuXG4gIGNvbnN0cnVjdG9yKGNvZGU6IEFjdGlvbkVycm9yQ29kZSwgbWVzc2FnZTogc3RyaW5nKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQWN0aW9uRXJyb3IucHJvdG90eXBlKTtcbiAgfVxufVxuIl19