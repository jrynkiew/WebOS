/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["test"] = factory();
	else
		root["test"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@ethersproject/abi/lib.esm/_version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/_version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"abi/5.0.7\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/abi-coder.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/abi-coder.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbiCoder\": () => (/* binding */ AbiCoder),\n/* harmony export */   \"defaultAbiCoder\": () => (/* binding */ defaultAbiCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n/* harmony import */ var _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coders/abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _coders_address__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./coders/address */ \"./node_modules/@ethersproject/abi/lib.esm/coders/address.js\");\n/* harmony import */ var _coders_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./coders/array */ \"./node_modules/@ethersproject/abi/lib.esm/coders/array.js\");\n/* harmony import */ var _coders_boolean__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./coders/boolean */ \"./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js\");\n/* harmony import */ var _coders_bytes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./coders/bytes */ \"./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js\");\n/* harmony import */ var _coders_fixed_bytes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coders/fixed-bytes */ \"./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js\");\n/* harmony import */ var _coders_null__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./coders/null */ \"./node_modules/@ethersproject/abi/lib.esm/coders/null.js\");\n/* harmony import */ var _coders_number__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./coders/number */ \"./node_modules/@ethersproject/abi/lib.esm/coders/number.js\");\n/* harmony import */ var _coders_string__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./coders/string */ \"./node_modules/@ethersproject/abi/lib.esm/coders/string.js\");\n/* harmony import */ var _coders_tuple__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./coders/tuple */ \"./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js\");\n/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./fragments */ \"./node_modules/@ethersproject/abi/lib.esm/fragments.js\");\n // See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_0__.version);\n\n\n\n\n\n\n\n\n\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nclass AbiCoder {\n  constructor(coerceFunc) {\n    logger.checkNew(new.target, AbiCoder);\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_13__.defineReadOnly)(this, \"coerceFunc\", coerceFunc || null);\n  }\n\n  _getCoder(param) {\n    switch (param.baseType) {\n      case \"address\":\n        return new _coders_address__WEBPACK_IMPORTED_MODULE_3__.AddressCoder(param.name);\n\n      case \"bool\":\n        return new _coders_boolean__WEBPACK_IMPORTED_MODULE_5__.BooleanCoder(param.name);\n\n      case \"string\":\n        return new _coders_string__WEBPACK_IMPORTED_MODULE_10__.StringCoder(param.name);\n\n      case \"bytes\":\n        return new _coders_bytes__WEBPACK_IMPORTED_MODULE_6__.BytesCoder(param.name);\n\n      case \"array\":\n        return new _coders_array__WEBPACK_IMPORTED_MODULE_4__.ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n\n      case \"tuple\":\n        return new _coders_tuple__WEBPACK_IMPORTED_MODULE_11__.TupleCoder((param.components || []).map(component => {\n          return this._getCoder(component);\n        }), param.name);\n\n      case \"\":\n        return new _coders_null__WEBPACK_IMPORTED_MODULE_8__.NullCoder(param.name);\n    } // u?int[0-9]*\n\n\n    let match = param.type.match(paramTypeNumber);\n\n    if (match) {\n      let size = parseInt(match[2] || \"256\");\n\n      if (size === 0 || size > 256 || size % 8 !== 0) {\n        logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n      }\n\n      return new _coders_number__WEBPACK_IMPORTED_MODULE_9__.NumberCoder(size / 8, match[1] === \"int\", param.name);\n    } // bytes[0-9]+\n\n\n    match = param.type.match(paramTypeBytes);\n\n    if (match) {\n      let size = parseInt(match[1]);\n\n      if (size === 0 || size > 32) {\n        logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n      }\n\n      return new _coders_fixed_bytes__WEBPACK_IMPORTED_MODULE_7__.FixedBytesCoder(size, param.name);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n  }\n\n  _getWordSize() {\n    return 32;\n  }\n\n  _getReader(data, allowLoose) {\n    return new _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n  }\n\n  _getWriter() {\n    return new _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Writer(this._getWordSize());\n  }\n\n  encode(types, values) {\n    if (types.length !== values.length) {\n      logger.throwError(\"types/values length mismatch\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.INVALID_ARGUMENT, {\n        count: {\n          types: types.length,\n          values: values.length\n        },\n        value: {\n          types: types,\n          values: values\n        }\n      });\n    }\n\n    const coders = types.map(type => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_12__.ParamType.from(type)));\n    const coder = new _coders_tuple__WEBPACK_IMPORTED_MODULE_11__.TupleCoder(coders, \"_\");\n\n    const writer = this._getWriter();\n\n    coder.encode(writer, values);\n    return writer.data;\n  }\n\n  decode(types, data, loose) {\n    const coders = types.map(type => this._getCoder(_fragments__WEBPACK_IMPORTED_MODULE_12__.ParamType.from(type)));\n    const coder = new _coders_tuple__WEBPACK_IMPORTED_MODULE_11__.TupleCoder(coders, \"_\");\n    return coder.decode(this._getReader((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_14__.arrayify)(data), loose));\n  }\n\n}\nconst defaultAbiCoder = new AbiCoder();\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/abi-coder.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkResultErrors\": () => (/* binding */ checkResultErrors),\n/* harmony export */   \"Coder\": () => (/* binding */ Coder),\n/* harmony export */   \"Writer\": () => (/* binding */ Writer),\n/* harmony export */   \"Reader\": () => (/* binding */ Reader)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n\n\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_0__.version);\nfunction checkResultErrors(result) {\n  // Find the first error (if any)\n  const errors = [];\n\n  const checkErrors = function (path, object) {\n    if (!Array.isArray(object)) {\n      return;\n    }\n\n    for (let key in object) {\n      const childPath = path.slice();\n      childPath.push(key);\n\n      try {\n        checkErrors(childPath, object[key]);\n      } catch (error) {\n        errors.push({\n          path: childPath,\n          error: error\n        });\n      }\n    }\n  };\n\n  checkErrors([], result);\n  return errors;\n}\nclass Coder {\n  constructor(name, type, localName, dynamic) {\n    // @TODO: defineReadOnly these\n    this.name = name;\n    this.type = type;\n    this.localName = localName;\n    this.dynamic = dynamic;\n  }\n\n  _throwError(message, value) {\n    logger.throwArgumentError(message, this.localName, value);\n  }\n\n}\nclass Writer {\n  constructor(wordSize) {\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"wordSize\", wordSize || 32);\n    this._data = [];\n    this._dataLength = 0;\n    this._padding = new Uint8Array(wordSize);\n  }\n\n  get data() {\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexConcat)(this._data);\n  }\n\n  get length() {\n    return this._dataLength;\n  }\n\n  _writeData(data) {\n    this._data.push(data);\n\n    this._dataLength += data.length;\n    return data.length;\n  }\n\n  appendWriter(writer) {\n    return this._writeData((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)(writer._data));\n  } // Arrayish items; padded on the right to wordSize\n\n\n  writeBytes(value) {\n    let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(value);\n    const paddingOffset = bytes.length % this.wordSize;\n\n    if (paddingOffset) {\n      bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([bytes, this._padding.slice(paddingOffset)]);\n    }\n\n    return this._writeData(bytes);\n  }\n\n  _getValue(value) {\n    let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(value));\n\n    if (bytes.length > this.wordSize) {\n      logger.throwError(\"value out-of-bounds\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.BUFFER_OVERRUN, {\n        length: this.wordSize,\n        offset: bytes.length\n      });\n    }\n\n    if (bytes.length % this.wordSize) {\n      bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.concat)([this._padding.slice(bytes.length % this.wordSize), bytes]);\n    }\n\n    return bytes;\n  } // BigNumberish items; padded on the left to wordSize\n\n\n  writeValue(value) {\n    return this._writeData(this._getValue(value));\n  }\n\n  writeUpdatableValue() {\n    const offset = this._data.length;\n\n    this._data.push(this._padding);\n\n    this._dataLength += this.wordSize;\n    return value => {\n      this._data[offset] = this._getValue(value);\n    };\n  }\n\n}\nclass Reader {\n  constructor(data, wordSize, coerceFunc, allowLoose) {\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"_data\", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.arrayify)(data));\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"wordSize\", wordSize || 32);\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"_coerceFunc\", coerceFunc);\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(this, \"allowLoose\", allowLoose);\n    this._offset = 0;\n  }\n\n  get data() {\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(this._data);\n  }\n\n  get consumed() {\n    return this._offset;\n  } // The default Coerce function\n\n\n  static coerce(name, value) {\n    let match = name.match(\"^u?int([0-9]+)$\");\n\n    if (match && parseInt(match[1]) <= 48) {\n      value = value.toNumber();\n    }\n\n    return value;\n  }\n\n  coerce(name, value) {\n    if (this._coerceFunc) {\n      return this._coerceFunc(name, value);\n    }\n\n    return Reader.coerce(name, value);\n  }\n\n  _peekBytes(offset, length, loose) {\n    let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n\n    if (this._offset + alignedLength > this._data.length) {\n      if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n        alignedLength = length;\n      } else {\n        logger.throwError(\"data out-of-bounds\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.BUFFER_OVERRUN, {\n          length: this._data.length,\n          offset: this._offset + alignedLength\n        });\n      }\n    }\n\n    return this._data.slice(this._offset, this._offset + alignedLength);\n  }\n\n  subReader(offset) {\n    return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n  }\n\n  readBytes(length, loose) {\n    let bytes = this._peekBytes(0, length, !!loose);\n\n    this._offset += bytes.length; // @TODO: Make sure the length..end bytes are all 0?\n\n    return bytes.slice(0, length);\n  }\n\n  readValue() {\n    return _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(this.readBytes(this.wordSize));\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/address.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/address.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AddressCoder\": () => (/* binding */ AddressCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/address */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\n\n\nclass AddressCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(localName) {\n    super(\"address\", \"address\", localName, false);\n  }\n\n  encode(writer, value) {\n    try {\n      (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_1__.getAddress)(value);\n    } catch (error) {\n      this._throwError(error.message, value);\n    }\n\n    return writer.writeValue(value);\n  }\n\n  decode(reader) {\n    return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_1__.getAddress)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexZeroPad)(reader.readValue().toHexString(), 20));\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/address.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AnonymousCoder\": () => (/* binding */ AnonymousCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n // Clones the functionality of an existing Coder, but without a localName\n\nclass AnonymousCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(coder) {\n    super(coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n\n  encode(writer, value) {\n    return this.coder.encode(writer, value);\n  }\n\n  decode(reader) {\n    return this.coder.decode(reader);\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/array.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pack\": () => (/* binding */ pack),\n/* harmony export */   \"unpack\": () => (/* binding */ unpack),\n/* harmony export */   \"ArrayCoder\": () => (/* binding */ ArrayCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _anonymous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./anonymous */ \"./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js\");\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_0__.version);\n\n\nfunction pack(writer, coders, values) {\n  let arrayValues = null;\n\n  if (Array.isArray(values)) {\n    arrayValues = values;\n  } else if (values && typeof values === \"object\") {\n    let unique = {};\n    arrayValues = coders.map(coder => {\n      const name = coder.localName;\n\n      if (!name) {\n        logger.throwError(\"cannot encode object for signature with missing names\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      if (unique[name]) {\n        logger.throwError(\"cannot encode object for signature with duplicate names\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      unique[name] = true;\n      return values[name];\n    });\n  } else {\n    logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n  }\n\n  if (coders.length !== arrayValues.length) {\n    logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n  }\n\n  let staticWriter = new _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Writer(writer.wordSize);\n  let dynamicWriter = new _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Writer(writer.wordSize);\n  let updateFuncs = [];\n  coders.forEach((coder, index) => {\n    let value = arrayValues[index];\n\n    if (coder.dynamic) {\n      // Get current dynamic offset (for the future pointer)\n      let dynamicOffset = dynamicWriter.length; // Encode the dynamic value into the dynamicWriter\n\n      coder.encode(dynamicWriter, value); // Prepare to populate the correct offset once we are done\n\n      let updateFunc = staticWriter.writeUpdatableValue();\n      updateFuncs.push(baseOffset => {\n        updateFunc(baseOffset + dynamicOffset);\n      });\n    } else {\n      coder.encode(staticWriter, value);\n    }\n  }); // Backfill all the dynamic offsets, now that we know the static length\n\n  updateFuncs.forEach(func => {\n    func(staticWriter.length);\n  });\n  let length = writer.appendWriter(staticWriter);\n  length += writer.appendWriter(dynamicWriter);\n  return length;\n}\nfunction unpack(reader, coders) {\n  let values = []; // A reader anchored to this base\n\n  let baseReader = reader.subReader(0);\n  coders.forEach(coder => {\n    let value = null;\n\n    if (coder.dynamic) {\n      let offset = reader.readValue();\n      let offsetReader = baseReader.subReader(offset.toNumber());\n\n      try {\n        value = coder.decode(offsetReader);\n      } catch (error) {\n        // Cannot recover from this\n        if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    } else {\n      try {\n        value = coder.decode(reader);\n      } catch (error) {\n        // Cannot recover from this\n        if (error.code === _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    }\n\n    if (value != undefined) {\n      values.push(value);\n    }\n  }); // We only output named properties for uniquely named coders\n\n  const uniqueNames = coders.reduce((accum, coder) => {\n    const name = coder.localName;\n\n    if (name) {\n      if (!accum[name]) {\n        accum[name] = 0;\n      }\n\n      accum[name]++;\n    }\n\n    return accum;\n  }, {}); // Add any named parameters (i.e. tuples)\n\n  coders.forEach((coder, index) => {\n    let name = coder.localName;\n\n    if (!name || uniqueNames[name] !== 1) {\n      return;\n    }\n\n    if (name === \"length\") {\n      name = \"_length\";\n    }\n\n    if (values[name] != null) {\n      return;\n    }\n\n    const value = values[index];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, name, {\n        get: () => {\n          throw value;\n        }\n      });\n    } else {\n      values[name] = value;\n    }\n  });\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, i, {\n        get: () => {\n          throw value;\n        }\n      });\n    }\n  }\n\n  return Object.freeze(values);\n}\nclass ArrayCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_2__.Coder {\n  constructor(coder, length, localName) {\n    const type = coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\";\n    const dynamic = length === -1 || coder.dynamic;\n    super(\"array\", type, localName, dynamic);\n    this.coder = coder;\n    this.length = length;\n  }\n\n  encode(writer, value) {\n    if (!Array.isArray(value)) {\n      this._throwError(\"expected array value\", value);\n    }\n\n    let count = this.length;\n\n    if (count === -1) {\n      count = value.length;\n      writer.writeValue(value.length);\n    }\n\n    logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? \" \" + this.localName : \"\"));\n    let coders = [];\n\n    for (let i = 0; i < value.length; i++) {\n      coders.push(this.coder);\n    }\n\n    return pack(writer, coders, value);\n  }\n\n  decode(reader) {\n    let count = this.length;\n\n    if (count === -1) {\n      count = reader.readValue().toNumber();\n    }\n\n    let coders = [];\n\n    for (let i = 0; i < count; i++) {\n      coders.push(new _anonymous__WEBPACK_IMPORTED_MODULE_3__.AnonymousCoder(this.coder));\n    }\n\n    return reader.coerce(this.name, unpack(reader, coders));\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/array.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BooleanCoder\": () => (/* binding */ BooleanCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\nclass BooleanCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(localName) {\n    super(\"bool\", \"bool\", localName, false);\n  }\n\n  encode(writer, value) {\n    return writer.writeValue(value ? 1 : 0);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.type, !reader.readValue().isZero());\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DynamicBytesCoder\": () => (/* binding */ DynamicBytesCoder),\n/* harmony export */   \"BytesCoder\": () => (/* binding */ BytesCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\n\nclass DynamicBytesCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(type, localName) {\n    super(type, type, localName, true);\n  }\n\n  encode(writer, value) {\n    value = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(value);\n    let length = writer.writeValue(value.length);\n    length += writer.writeBytes(value);\n    return length;\n  }\n\n  decode(reader) {\n    return reader.readBytes(reader.readValue().toNumber(), true);\n  }\n\n}\nclass BytesCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"bytes\", localName);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.hexlify)(super.decode(reader)));\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FixedBytesCoder\": () => (/* binding */ FixedBytesCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\n // @TODO: Merge this with bytes\n\nclass FixedBytesCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(size, localName) {\n    let name = \"bytes\" + String(size);\n    super(name, name, localName, false);\n    this.size = size;\n  }\n\n  encode(writer, value) {\n    let data = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(value);\n\n    if (data.length !== this.size) {\n      this._throwError(\"incorrect data length\", value);\n    }\n\n    return writer.writeBytes(data);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.hexlify)(reader.readBytes(this.size)));\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/null.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/null.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NullCoder\": () => (/* binding */ NullCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\nclass NullCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(localName) {\n    super(\"null\", \"\", localName, false);\n  }\n\n  encode(writer, value) {\n    if (value != null) {\n      this._throwError(\"not null\", value);\n    }\n\n    return writer.writeBytes([]);\n  }\n\n  decode(reader) {\n    reader.readBytes(0);\n    return reader.coerce(this.name, null);\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/null.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/number.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/number.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NumberCoder\": () => (/* binding */ NumberCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/constants */ \"./node_modules/@ethersproject/constants/lib.esm/bignumbers.js\");\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n\n\n\n\n\nclass NumberCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(size, signed, localName) {\n    const name = (signed ? \"int\" : \"uint\") + size * 8;\n    super(name, name, localName, false);\n    this.size = size;\n    this.signed = signed;\n  }\n\n  encode(writer, value) {\n    let v = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_1__.BigNumber.from(value); // Check bounds are safe for encoding\n\n    let maxUintValue = _ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.MaxUint256.mask(writer.wordSize * 8);\n\n    if (this.signed) {\n      let bounds = maxUintValue.mask(this.size * 8 - 1);\n\n      if (v.gt(bounds) || v.lt(bounds.add(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.One).mul(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.NegativeOne))) {\n        this._throwError(\"value out-of-bounds\", value);\n      }\n    } else if (v.lt(_ethersproject_constants__WEBPACK_IMPORTED_MODULE_2__.Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n      this._throwError(\"value out-of-bounds\", value);\n    }\n\n    v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n    if (this.signed) {\n      v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n    }\n\n    return writer.writeValue(v);\n  }\n\n  decode(reader) {\n    let value = reader.readValue().mask(this.size * 8);\n\n    if (this.signed) {\n      value = value.fromTwos(this.size * 8);\n    }\n\n    return reader.coerce(this.name, value);\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/number.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/string.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/string.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StringCoder\": () => (/* binding */ StringCoder)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n/* harmony import */ var _bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes */ \"./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js\");\n\n\n\n\nclass StringCoder extends _bytes__WEBPACK_IMPORTED_MODULE_0__.DynamicBytesCoder {\n  constructor(localName) {\n    super(\"string\", localName);\n  }\n\n  encode(writer, value) {\n    return super.encode(writer, (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8Bytes)(value));\n  }\n\n  decode(reader) {\n    return (0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8String)(super.decode(reader));\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/string.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TupleCoder\": () => (/* binding */ TupleCoder)\n/* harmony export */ });\n/* harmony import */ var _abstract_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array */ \"./node_modules/@ethersproject/abi/lib.esm/coders/array.js\");\n\n\n\n\nclass TupleCoder extends _abstract_coder__WEBPACK_IMPORTED_MODULE_0__.Coder {\n  constructor(coders, localName) {\n    let dynamic = false;\n    const types = [];\n    coders.forEach(coder => {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n\n      types.push(coder.type);\n    });\n    const type = \"tuple(\" + types.join(\",\") + \")\";\n    super(\"tuple\", type, localName, dynamic);\n    this.coders = coders;\n  }\n\n  encode(writer, value) {\n    return (0,_array__WEBPACK_IMPORTED_MODULE_1__.pack)(writer, this.coders, value);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, (0,_array__WEBPACK_IMPORTED_MODULE_1__.unpack)(reader, this.coders));\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/fragments.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/fragments.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FormatTypes\": () => (/* binding */ FormatTypes),\n/* harmony export */   \"ParamType\": () => (/* binding */ ParamType),\n/* harmony export */   \"Fragment\": () => (/* binding */ Fragment),\n/* harmony export */   \"EventFragment\": () => (/* binding */ EventFragment),\n/* harmony export */   \"ConstructorFragment\": () => (/* binding */ ConstructorFragment),\n/* harmony export */   \"FunctionFragment\": () => (/* binding */ FunctionFragment)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_0__.version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = {\n  calldata: true,\n  memory: true,\n  storage: true\n};\nlet ModifiersNest = {\n  calldata: true,\n  memory: true\n};\n\nfunction checkModifier(type, name) {\n  if (type === \"bytes\" || type === \"string\") {\n    if (ModifiersBytes[name]) {\n      return true;\n    }\n  } else if (type === \"address\") {\n    if (name === \"payable\") {\n      return true;\n    }\n  } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n    if (ModifiersNest[name]) {\n      return true;\n    }\n  }\n\n  if (ModifiersBytes[name] || name === \"payable\") {\n    logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n  }\n\n  return false;\n} // @TODO: Make sure that children of an indexed tuple are marked with a null indexed\n\n\nfunction parseParamType(param, allowIndexed) {\n  let originalParam = param;\n\n  function throwError(i) {\n    logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n  }\n\n  param = param.replace(/\\s/g, \" \");\n\n  function newNode(parent) {\n    let node = {\n      type: \"\",\n      name: \"\",\n      parent: parent,\n      state: {\n        allowType: true\n      }\n    };\n\n    if (allowIndexed) {\n      node.indexed = false;\n    }\n\n    return node;\n  }\n\n  let parent = {\n    type: \"\",\n    name: \"\",\n    state: {\n      allowType: true\n    }\n  };\n  let node = parent;\n\n  for (let i = 0; i < param.length; i++) {\n    let c = param[i];\n\n    switch (c) {\n      case \"(\":\n        if (node.state.allowType && node.type === \"\") {\n          node.type = \"tuple\";\n        } else if (!node.state.allowParams) {\n          throwError(i);\n        }\n\n        node.state.allowType = false;\n        node.type = verifyType(node.type);\n        node.components = [newNode(node)];\n        node = node.components[0];\n        break;\n\n      case \")\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let child = node;\n        node = node.parent;\n\n        if (!node) {\n          throwError(i);\n        }\n\n        delete child.parent;\n        node.state.allowParams = false;\n        node.state.allowName = true;\n        node.state.allowArray = true;\n        break;\n\n      case \",\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let sibling = newNode(node.parent); //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n\n        node.parent.components.push(sibling);\n        delete node.parent;\n        node = sibling;\n        break;\n      // Hit a space...\n\n      case \" \":\n        // If reading type, the type is done and may read a param or name\n        if (node.state.allowType) {\n          if (node.type !== \"\") {\n            node.type = verifyType(node.type);\n            delete node.state.allowType;\n            node.state.allowName = true;\n            node.state.allowParams = true;\n          }\n        } // If reading name, the name is done\n\n\n        if (node.state.allowName) {\n          if (node.name !== \"\") {\n            if (node.name === \"indexed\") {\n              if (!allowIndexed) {\n                throwError(i);\n              }\n\n              if (node.indexed) {\n                throwError(i);\n              }\n\n              node.indexed = true;\n              node.name = \"\";\n            } else if (checkModifier(node.type, node.name)) {\n              node.name = \"\";\n            } else {\n              node.state.allowName = false;\n            }\n          }\n        }\n\n        break;\n\n      case \"[\":\n        if (!node.state.allowArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.allowArray = false;\n        node.state.allowName = false;\n        node.state.readArray = true;\n        break;\n\n      case \"]\":\n        if (!node.state.readArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.readArray = false;\n        node.state.allowArray = true;\n        node.state.allowName = true;\n        break;\n\n      default:\n        if (node.state.allowType) {\n          node.type += c;\n          node.state.allowParams = true;\n          node.state.allowArray = true;\n        } else if (node.state.allowName) {\n          node.name += c;\n          delete node.state.allowArray;\n        } else if (node.state.readArray) {\n          node.type += c;\n        } else {\n          throwError(i);\n        }\n\n    }\n  }\n\n  if (node.parent) {\n    logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n  }\n\n  delete parent.state;\n\n  if (node.name === \"indexed\") {\n    if (!allowIndexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    if (node.indexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    node.indexed = true;\n    node.name = \"\";\n  } else if (checkModifier(node.type, node.name)) {\n    node.name = \"\";\n  }\n\n  parent.type = verifyType(parent.type);\n  return parent;\n}\n\nfunction populate(object, params) {\n  for (let key in params) {\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_2__.defineReadOnly)(object, key, params[key]);\n  }\n}\n\nconst FormatTypes = Object.freeze({\n  // Bare formatting, as is needed for computing a sighash of an event or function\n  sighash: \"sighash\",\n  // Human-Readable with Minimal spacing and without names (compact human-readable)\n  minimal: \"minimal\",\n  // Human-Readble with nice spacing, including all names\n  full: \"full\",\n  // JSON-format a la Solidity\n  json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nclass ParamType {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard) {\n      logger.throwError(\"use fromString\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new ParamType()\"\n      });\n    }\n\n    populate(this, params);\n    let match = this.type.match(paramTypeArray);\n\n    if (match) {\n      populate(this, {\n        arrayLength: parseInt(match[2] || \"-1\"),\n        arrayChildren: ParamType.fromObject({\n          type: match[1],\n          components: this.components\n        }),\n        baseType: \"array\"\n      });\n    } else {\n      populate(this, {\n        arrayLength: null,\n        arrayChildren: null,\n        baseType: this.components != null ? \"tuple\" : this.type\n      });\n    }\n\n    this._isParamType = true;\n    Object.freeze(this);\n  } // Format the parameter fragment\n  //   - sighash: \"(uint256,address)\"\n  //   - minimal: \"tuple(uint256,address) indexed\"\n  //   - full:    \"tuple(uint256 foo, addres bar) indexed baz\"\n\n\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      let result = {\n        type: this.baseType === \"tuple\" ? \"tuple\" : this.type,\n        name: this.name || undefined\n      };\n\n      if (typeof this.indexed === \"boolean\") {\n        result.indexed = this.indexed;\n      }\n\n      if (this.components) {\n        result.components = this.components.map(comp => JSON.parse(comp.format(format)));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    let result = \"\"; // Array\n\n    if (this.baseType === \"array\") {\n      result += this.arrayChildren.format(format);\n      result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n    } else {\n      if (this.baseType === \"tuple\") {\n        if (format !== FormatTypes.sighash) {\n          result += this.type;\n        }\n\n        result += \"(\" + this.components.map(comp => comp.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \")\";\n      } else {\n        result += this.type;\n      }\n    }\n\n    if (format !== FormatTypes.sighash) {\n      if (this.indexed === true) {\n        result += \" indexed\";\n      }\n\n      if (format === FormatTypes.full && this.name) {\n        result += \" \" + this.name;\n      }\n    }\n\n    return result;\n  }\n\n  static from(value, allowIndexed) {\n    if (typeof value === \"string\") {\n      return ParamType.fromString(value, allowIndexed);\n    }\n\n    return ParamType.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ParamType.isParamType(value)) {\n      return value;\n    }\n\n    return new ParamType(_constructorGuard, {\n      name: value.name || null,\n      type: verifyType(value.type),\n      indexed: value.indexed == null ? null : !!value.indexed,\n      components: value.components ? value.components.map(ParamType.fromObject) : null\n    });\n  }\n\n  static fromString(value, allowIndexed) {\n    function ParamTypify(node) {\n      return ParamType.fromObject({\n        name: node.name,\n        type: node.type,\n        indexed: node.indexed,\n        components: node.components\n      });\n    }\n\n    return ParamTypify(parseParamType(value, !!allowIndexed));\n  }\n\n  static isParamType(value) {\n    return !!(value != null && value._isParamType);\n  }\n\n}\n;\n\nfunction parseParams(value, allowIndex) {\n  return splitNesting(value).map(param => ParamType.fromString(param, allowIndex));\n}\n\nclass Fragment {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard) {\n      logger.throwError(\"use a static from method\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new Fragment()\"\n      });\n    }\n\n    populate(this, params);\n    this._isFragment = true;\n    Object.freeze(this);\n  }\n\n  static from(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return Fragment.fromString(value);\n    }\n\n    return Fragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    switch (value.type) {\n      case \"function\":\n        return FunctionFragment.fromObject(value);\n\n      case \"event\":\n        return EventFragment.fromObject(value);\n\n      case \"constructor\":\n        return ConstructorFragment.fromObject(value);\n\n      case \"fallback\":\n      case \"receive\":\n        // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n        return null;\n    }\n\n    return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n  }\n\n  static fromString(value) {\n    // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n    value = value.replace(/\\s/g, \" \");\n    value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n    value = value.trim();\n\n    if (value.split(\" \")[0] === \"event\") {\n      return EventFragment.fromString(value.substring(5).trim());\n    } else if (value.split(\" \")[0] === \"function\") {\n      return FunctionFragment.fromString(value.substring(8).trim());\n    } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n      return ConstructorFragment.fromString(value.trim());\n    }\n\n    return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n  }\n\n  static isFragment(value) {\n    return !!(value && value._isFragment);\n  }\n\n}\nclass EventFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"event\",\n        anonymous: this.anonymous,\n        name: this.name,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"event \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.anonymous) {\n        result += \"anonymous \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return EventFragment.fromString(value);\n    }\n\n    return EventFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (EventFragment.isEventFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"event\") {\n      logger.throwArgumentError(\"invalid event object\", \"value\", value);\n    }\n\n    const params = {\n      name: verifyIdentifier(value.name),\n      anonymous: value.anonymous,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      type: \"event\"\n    };\n    return new EventFragment(_constructorGuard, params);\n  }\n\n  static fromString(value) {\n    let match = value.match(regexParen);\n\n    if (!match) {\n      logger.throwArgumentError(\"invalid event string\", \"value\", value);\n    }\n\n    let anonymous = false;\n    match[3].split(\" \").forEach(modifier => {\n      switch (modifier.trim()) {\n        case \"anonymous\":\n          anonymous = true;\n          break;\n\n        case \"\":\n          break;\n\n        default:\n          logger.warn(\"unknown modifier: \" + modifier);\n      }\n    });\n    return EventFragment.fromObject({\n      name: match[1].trim(),\n      anonymous: anonymous,\n      inputs: parseParams(match[2], true),\n      type: \"event\"\n    });\n  }\n\n  static isEventFragment(value) {\n    return value && value._isFragment && value.type === \"event\";\n  }\n\n}\n\nfunction parseGas(value, params) {\n  params.gas = null;\n  let comps = value.split(\"@\");\n\n  if (comps.length !== 1) {\n    if (comps.length > 2) {\n      logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n    }\n\n    if (!comps[1].match(/^[0-9]+$/)) {\n      logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n    }\n\n    params.gas = _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(comps[1]);\n    return comps[0];\n  }\n\n  return value;\n}\n\nfunction parseModifiers(value, params) {\n  params.constant = false;\n  params.payable = false;\n  params.stateMutability = \"nonpayable\";\n  value.split(\" \").forEach(modifier => {\n    switch (modifier.trim()) {\n      case \"constant\":\n        params.constant = true;\n        break;\n\n      case \"payable\":\n        params.payable = true;\n        params.stateMutability = \"payable\";\n        break;\n\n      case \"nonpayable\":\n        params.payable = false;\n        params.stateMutability = \"nonpayable\";\n        break;\n\n      case \"pure\":\n        params.constant = true;\n        params.stateMutability = \"pure\";\n        break;\n\n      case \"view\":\n        params.constant = true;\n        params.stateMutability = \"view\";\n        break;\n\n      case \"external\":\n      case \"public\":\n      case \"\":\n        break;\n\n      default:\n        console.log(\"unknown modifier: \" + modifier);\n    }\n  });\n}\n\nfunction verifyState(value) {\n  let result = {\n    constant: false,\n    payable: true,\n    stateMutability: \"payable\"\n  };\n\n  if (value.stateMutability != null) {\n    result.stateMutability = value.stateMutability; // Set (and check things are consistent) the constant property\n\n    result.constant = result.stateMutability === \"view\" || result.stateMutability === \"pure\";\n\n    if (value.constant != null) {\n      if (!!value.constant !== result.constant) {\n        logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    } // Set (and check things are consistent) the payable property\n\n\n    result.payable = result.stateMutability === \"payable\";\n\n    if (value.payable != null) {\n      if (!!value.payable !== result.payable) {\n        logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    }\n  } else if (value.payable != null) {\n    result.payable = !!value.payable; // If payable we can assume non-constant; otherwise we can't assume\n\n    if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n      logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    result.constant = !!value.constant;\n\n    if (result.constant) {\n      result.stateMutability = \"view\";\n    } else {\n      result.stateMutability = result.payable ? \"payable\" : \"nonpayable\";\n    }\n\n    if (result.payable && result.constant) {\n      logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n    }\n  } else if (value.constant != null) {\n    result.constant = !!value.constant;\n    result.payable = !result.constant;\n    result.stateMutability = result.constant ? \"view\" : \"payable\";\n  } else if (value.type !== \"constructor\") {\n    logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n  }\n\n  return result;\n}\n\nclass ConstructorFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"constructor\",\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payble: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    if (format === FormatTypes.sighash) {\n      logger.throwError(\"cannot format a constructor for sighash\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"format(sighash)\"\n      });\n    }\n\n    let result = \"constructor(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n      result += this.stateMutability + \" \";\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return ConstructorFragment.fromString(value);\n    }\n\n    return ConstructorFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ConstructorFragment.isConstructorFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"constructor\") {\n      logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n\n    if (state.constant) {\n      logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n    }\n\n    const params = {\n      name: null,\n      type: value.type,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(value.gas) : null\n    };\n    return new ConstructorFragment(_constructorGuard, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"constructor\"\n    };\n    value = parseGas(value, params);\n    let parens = value.match(regexParen);\n\n    if (!parens || parens[1].trim() !== \"constructor\") {\n      logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n    }\n\n    params.inputs = parseParams(parens[2].trim(), false);\n    parseModifiers(parens[3].trim(), params);\n    return ConstructorFragment.fromObject(params);\n  }\n\n  static isConstructorFragment(value) {\n    return value && value._isFragment && value.type === \"constructor\";\n  }\n\n}\nclass FunctionFragment extends ConstructorFragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"function\",\n        name: this.name,\n        constant: this.constant,\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payble: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format))),\n        ouputs: this.outputs.map(output => JSON.parse(output.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"function \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.stateMutability) {\n        if (this.stateMutability !== \"nonpayable\") {\n          result += this.stateMutability + \" \";\n        }\n      } else if (this.constant) {\n        result += \"view \";\n      }\n\n      if (this.outputs && this.outputs.length) {\n        result += \"returns (\" + this.outputs.map(output => output.format(format)).join(\", \") + \") \";\n      }\n\n      if (this.gas != null) {\n        result += \"@\" + this.gas.toString() + \" \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return FunctionFragment.fromString(value);\n    }\n\n    return FunctionFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (FunctionFragment.isFunctionFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"function\") {\n      logger.throwArgumentError(\"invalid function object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n    const params = {\n      type: value.type,\n      name: verifyIdentifier(value.name),\n      constant: state.constant,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      outputs: value.outputs ? value.outputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_3__.BigNumber.from(value.gas) : null\n    };\n    return new FunctionFragment(_constructorGuard, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"function\"\n    };\n    value = parseGas(value, params);\n    let comps = value.split(\" returns \");\n\n    if (comps.length > 2) {\n      logger.throwArgumentError(\"invalid function string\", \"value\", value);\n    }\n\n    let parens = comps[0].match(regexParen);\n\n    if (!parens) {\n      logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n    }\n\n    params.name = parens[1].trim();\n\n    if (params.name) {\n      verifyIdentifier(params.name);\n    }\n\n    params.inputs = parseParams(parens[2], false);\n    parseModifiers(parens[3].trim(), params); // We have outputs\n\n    if (comps.length > 1) {\n      let returns = comps[1].match(regexParen);\n\n      if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n        logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n      }\n\n      params.outputs = parseParams(returns[2], false);\n    } else {\n      params.outputs = [];\n    }\n\n    return FunctionFragment.fromObject(params);\n  }\n\n  static isFunctionFragment(value) {\n    return value && value._isFragment && value.type === \"function\";\n  }\n\n} //export class ErrorFragment extends Fragment {\n//}\n//export class StructFragment extends Fragment {\n//}\n\nfunction verifyType(type) {\n  // These need to be transformed to their full description\n  if (type.match(/^uint($|[^1-9])/)) {\n    type = \"uint256\" + type.substring(4);\n  } else if (type.match(/^int($|[^1-9])/)) {\n    type = \"int256\" + type.substring(3);\n  } // @TODO: more verification\n\n\n  return type;\n}\n\nconst regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\n\nfunction verifyIdentifier(value) {\n  if (!value || !value.match(regexIdentifier)) {\n    logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n  }\n\n  return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value) {\n  value = value.trim();\n  let result = [];\n  let accum = \"\";\n  let depth = 0;\n\n  for (let offset = 0; offset < value.length; offset++) {\n    let c = value[offset];\n\n    if (c === \",\" && depth === 0) {\n      result.push(accum);\n      accum = \"\";\n    } else {\n      accum += c;\n\n      if (c === \"(\") {\n        depth++;\n      } else if (c === \")\") {\n        depth--;\n\n        if (depth === -1) {\n          logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n        }\n      }\n    }\n  }\n\n  if (accum) {\n    result.push(accum);\n  }\n\n  return result;\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/fragments.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConstructorFragment\": () => (/* reexport safe */ _fragments__WEBPACK_IMPORTED_MODULE_0__.ConstructorFragment),\n/* harmony export */   \"EventFragment\": () => (/* reexport safe */ _fragments__WEBPACK_IMPORTED_MODULE_0__.EventFragment),\n/* harmony export */   \"Fragment\": () => (/* reexport safe */ _fragments__WEBPACK_IMPORTED_MODULE_0__.Fragment),\n/* harmony export */   \"FunctionFragment\": () => (/* reexport safe */ _fragments__WEBPACK_IMPORTED_MODULE_0__.FunctionFragment),\n/* harmony export */   \"ParamType\": () => (/* reexport safe */ _fragments__WEBPACK_IMPORTED_MODULE_0__.ParamType),\n/* harmony export */   \"FormatTypes\": () => (/* reexport safe */ _fragments__WEBPACK_IMPORTED_MODULE_0__.FormatTypes),\n/* harmony export */   \"AbiCoder\": () => (/* reexport safe */ _abi_coder__WEBPACK_IMPORTED_MODULE_1__.AbiCoder),\n/* harmony export */   \"defaultAbiCoder\": () => (/* reexport safe */ _abi_coder__WEBPACK_IMPORTED_MODULE_1__.defaultAbiCoder),\n/* harmony export */   \"Interface\": () => (/* reexport safe */ _interface__WEBPACK_IMPORTED_MODULE_2__.Interface),\n/* harmony export */   \"Indexed\": () => (/* reexport safe */ _interface__WEBPACK_IMPORTED_MODULE_2__.Indexed),\n/* harmony export */   \"checkResultErrors\": () => (/* reexport safe */ _interface__WEBPACK_IMPORTED_MODULE_2__.checkResultErrors),\n/* harmony export */   \"LogDescription\": () => (/* reexport safe */ _interface__WEBPACK_IMPORTED_MODULE_2__.LogDescription),\n/* harmony export */   \"TransactionDescription\": () => (/* reexport safe */ _interface__WEBPACK_IMPORTED_MODULE_2__.TransactionDescription)\n/* harmony export */ });\n/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fragments */ \"./node_modules/@ethersproject/abi/lib.esm/fragments.js\");\n/* harmony import */ var _abi_coder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./abi-coder */ \"./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var _interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface */ \"./node_modules/@ethersproject/abi/lib.esm/interface.js\");\n\n\n\n\n\n\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/abi/lib.esm/interface.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/abi/lib.esm/interface.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"checkResultErrors\": () => (/* reexport safe */ _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_1__.checkResultErrors),\n/* harmony export */   \"LogDescription\": () => (/* binding */ LogDescription),\n/* harmony export */   \"TransactionDescription\": () => (/* binding */ TransactionDescription),\n/* harmony export */   \"Indexed\": () => (/* binding */ Indexed),\n/* harmony export */   \"Interface\": () => (/* binding */ Interface)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_address__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ethersproject/address */ \"./node_modules/@ethersproject/address/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ethersproject/hash */ \"./node_modules/@ethersproject/hash/lib.esm/id.js\");\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/properties */ \"./node_modules/@ethersproject/properties/lib.esm/index.js\");\n/* harmony import */ var _abi_coder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abi-coder */ \"./node_modules/@ethersproject/abi/lib.esm/abi-coder.js\");\n/* harmony import */ var _coders_abstract_coder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./coders/abstract-coder */ \"./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js\");\n/* harmony import */ var _fragments__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fragments */ \"./node_modules/@ethersproject/abi/lib.esm/fragments.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/abi/lib.esm/_version.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_4__.Logger(_version__WEBPACK_IMPORTED_MODULE_3__.version);\n\nclass LogDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.Description {}\nclass TransactionDescription extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.Description {}\nclass Indexed extends _ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.Description {\n  static isIndexed(value) {\n    return !!(value && value._isIndexed);\n  }\n\n}\n\nfunction wrapAccessError(property, error) {\n  const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n  wrap.error = error;\n  return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n\nclass Interface {\n  constructor(fragments) {\n    logger.checkNew(new.target, Interface);\n    let abi = [];\n\n    if (typeof fragments === \"string\") {\n      abi = JSON.parse(fragments);\n    } else {\n      abi = fragments;\n    }\n\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"fragments\", abi.map(fragment => {\n      return _fragments__WEBPACK_IMPORTED_MODULE_2__.Fragment.from(fragment);\n    }).filter(fragment => fragment != null));\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"_abiCoder\", (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.getStatic)(new.target, \"getAbiCoder\")());\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"functions\", {});\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"errors\", {});\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"events\", {});\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"structs\", {}); // Add all fragments by their signature\n\n    this.fragments.forEach(fragment => {\n      let bucket = null;\n\n      switch (fragment.type) {\n        case \"constructor\":\n          if (this.deploy) {\n            logger.warn(\"duplicate definition - constructor\");\n            return;\n          } //checkNames(fragment, \"input\", fragment.inputs);\n\n\n          (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"deploy\", fragment);\n          return;\n\n        case \"function\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n          bucket = this.functions;\n          break;\n\n        case \"event\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          bucket = this.events;\n          break;\n\n        default:\n          return;\n      }\n\n      let signature = fragment.format();\n\n      if (bucket[signature]) {\n        logger.warn(\"duplicate definition - \" + signature);\n        return;\n      }\n\n      bucket[signature] = fragment;\n    }); // If we do not have a constructor add a default\n\n    if (!this.deploy) {\n      (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"deploy\", _fragments__WEBPACK_IMPORTED_MODULE_2__.ConstructorFragment.from({\n        payable: false,\n        type: \"constructor\"\n      }));\n    }\n\n    (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.defineReadOnly)(this, \"_isInterface\", true);\n  }\n\n  format(format) {\n    if (!format) {\n      format = _fragments__WEBPACK_IMPORTED_MODULE_2__.FormatTypes.full;\n    }\n\n    if (format === _fragments__WEBPACK_IMPORTED_MODULE_2__.FormatTypes.sighash) {\n      logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n    }\n\n    const abi = this.fragments.map(fragment => fragment.format(format)); // We need to re-bundle the JSON fragments a bit\n\n    if (format === _fragments__WEBPACK_IMPORTED_MODULE_2__.FormatTypes.json) {\n      return JSON.stringify(abi.map(j => JSON.parse(j)));\n    }\n\n    return abi;\n  } // Sub-classes can override these to handle other blockchains\n\n\n  static getAbiCoder() {\n    return _abi_coder__WEBPACK_IMPORTED_MODULE_0__.defaultAbiCoder;\n  }\n\n  static getAddress(address) {\n    return (0,_ethersproject_address__WEBPACK_IMPORTED_MODULE_6__.getAddress)(address);\n  }\n\n  static getSighash(functionFragment) {\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexDataSlice)((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(functionFragment.format()), 0, 4);\n  }\n\n  static getEventTopic(eventFragment) {\n    return (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(eventFragment.format());\n  } // Find a function definition by any means necessary (unless it is ambiguous)\n\n\n  getFunction(nameOrSignatureOrSighash) {\n    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrSighash)) {\n      for (const name in this.functions) {\n        if (nameOrSignatureOrSighash === this.getSighash(name)) {\n          return this.functions[name];\n        }\n      }\n\n      logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n    } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n    if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrSighash.trim();\n      const matching = Object.keys(this.functions).filter(f => f.split(\"(\"\n      /* fix:) */\n      )[0] === name);\n\n      if (matching.length === 0) {\n        logger.throwArgumentError(\"no matching function\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n      }\n\n      return this.functions[matching[0]];\n    } // Normlize the signature and lookup the function\n\n\n    const result = this.functions[_fragments__WEBPACK_IMPORTED_MODULE_2__.FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n\n    if (!result) {\n      logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n    }\n\n    return result;\n  } // Find an event definition by any means necessary (unless it is ambiguous)\n\n\n  getEvent(nameOrSignatureOrTopic) {\n    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(nameOrSignatureOrTopic)) {\n      const topichash = nameOrSignatureOrTopic.toLowerCase();\n\n      for (const name in this.events) {\n        if (topichash === this.getEventTopic(name)) {\n          return this.events[name];\n        }\n      }\n\n      logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n    } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n    if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrTopic.trim();\n      const matching = Object.keys(this.events).filter(f => f.split(\"(\"\n      /* fix:) */\n      )[0] === name);\n\n      if (matching.length === 0) {\n        logger.throwArgumentError(\"no matching event\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n      }\n\n      return this.events[matching[0]];\n    } // Normlize the signature and lookup the function\n\n\n    const result = this.events[_fragments__WEBPACK_IMPORTED_MODULE_2__.EventFragment.fromString(nameOrSignatureOrTopic).format()];\n\n    if (!result) {\n      logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n    }\n\n    return result;\n  } // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n\n\n  getSighash(functionFragment) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.getStatic)(this.constructor, \"getSighash\")(functionFragment);\n  } // Get the topic (the bytes32 hash) used by Solidity to identify an event\n\n\n  getEventTopic(eventFragment) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    return (0,_ethersproject_properties__WEBPACK_IMPORTED_MODULE_5__.getStatic)(this.constructor, \"getEventTopic\")(eventFragment);\n  }\n\n  _decodeParams(params, data) {\n    return this._abiCoder.decode(params, data);\n  }\n\n  _encodeParams(params, values) {\n    return this._abiCoder.encode(params, values);\n  }\n\n  encodeDeploy(values) {\n    return this._encodeParams(this.deploy.inputs, values || []);\n  } // Decode the data for a function call (e.g. tx.data)\n\n\n  decodeFunctionData(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);\n\n    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n      logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes));\n    }\n\n    return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n  } // Encode the data for a function call (e.g. tx.data)\n\n\n  encodeFunctionData(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)([this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || [])]));\n  } // Decode the result from a function call (e.g. from eth_call)\n\n\n  decodeFunctionResult(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    let bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.arrayify)(data);\n    let reason = null;\n    let errorSignature = null;\n\n    switch (bytes.length % this._abiCoder._getWordSize()) {\n      case 0:\n        try {\n          return this._abiCoder.decode(functionFragment.outputs, bytes);\n        } catch (error) {}\n\n        break;\n\n      case 4:\n        if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(bytes.slice(0, 4)) === \"0x08c379a0\") {\n          errorSignature = \"Error(string)\";\n          reason = this._abiCoder.decode([\"string\"], bytes.slice(4))[0];\n        }\n\n        break;\n    }\n\n    return logger.throwError(\"call revert exception\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_4__.Logger.errors.CALL_EXCEPTION, {\n      method: functionFragment.format(),\n      errorSignature: errorSignature,\n      errorArgs: [reason],\n      reason: reason\n    });\n  } // Encode the result for a function call (e.g. for eth_call)\n\n\n  encodeFunctionResult(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(this._abiCoder.encode(functionFragment.outputs, values || []));\n  } // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n\n\n  encodeFilterTopics(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (values.length > eventFragment.inputs.length) {\n      logger.throwError(\"too many arguments for \" + eventFragment.format(), _ethersproject_logger__WEBPACK_IMPORTED_MODULE_4__.Logger.errors.UNEXPECTED_ARGUMENT, {\n        argument: \"values\",\n        value: values\n      });\n    }\n\n    let topics = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    const encodeTopic = (param, value) => {\n      if (param.type === \"string\") {\n        return (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(value);\n      } else if (param.type === \"bytes\") {\n        return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(value));\n      } // Check addresses are valid\n\n\n      if (param.type === \"address\") {\n        this._abiCoder.encode([\"address\"], [value]);\n      }\n\n      return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexZeroPad)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.hexlify)(value), 32);\n    };\n\n    values.forEach((value, index) => {\n      let param = eventFragment.inputs[index];\n\n      if (!param.indexed) {\n        if (value != null) {\n          logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n        }\n\n        return;\n      }\n\n      if (value == null) {\n        topics.push(null);\n      } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n        logger.throwArgumentError(\"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n      } else if (Array.isArray(value)) {\n        topics.push(value.map(value => encodeTopic(param, value)));\n      } else {\n        topics.push(encodeTopic(param, value));\n      }\n    }); // Trim off trailing nulls\n\n    while (topics.length && topics[topics.length - 1] === null) {\n      topics.pop();\n    }\n\n    return topics;\n  }\n\n  encodeEventLog(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    const topics = [];\n    const dataTypes = [];\n    const dataValues = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    if (values.length !== eventFragment.inputs.length) {\n      logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n    }\n\n    eventFragment.inputs.forEach((param, index) => {\n      const value = values[index];\n\n      if (param.indexed) {\n        if (param.type === \"string\") {\n          topics.push((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_8__.id)(value));\n        } else if (param.type === \"bytes\") {\n          topics.push((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_9__.keccak256)(value));\n        } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n          // @TOOD\n          throw new Error(\"not implemented\");\n        } else {\n          topics.push(this._abiCoder.encode([param.type], [value]));\n        }\n      } else {\n        dataTypes.push(param);\n        dataValues.push(value);\n      }\n    });\n    return {\n      data: this._abiCoder.encode(dataTypes, dataValues),\n      topics: topics\n    };\n  } // Decode a filter for the event and the search criteria\n\n\n  decodeEventLog(eventFragment, data, topics) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (topics != null && !eventFragment.anonymous) {\n      let topicHash = this.getEventTopic(eventFragment);\n\n      if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.isHexString)(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n        logger.throwError(\"fragment/topic mismatch\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_4__.Logger.errors.INVALID_ARGUMENT, {\n          argument: \"topics[0]\",\n          expected: topicHash,\n          value: topics[0]\n        });\n      }\n\n      topics = topics.slice(1);\n    }\n\n    let indexed = [];\n    let nonIndexed = [];\n    let dynamic = [];\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n          indexed.push(_fragments__WEBPACK_IMPORTED_MODULE_2__.ParamType.fromObject({\n            type: \"bytes32\",\n            name: param.name\n          }));\n          dynamic.push(true);\n        } else {\n          indexed.push(param);\n          dynamic.push(false);\n        }\n      } else {\n        nonIndexed.push(param);\n        dynamic.push(false);\n      }\n    });\n    let resultIndexed = topics != null ? this._abiCoder.decode(indexed, (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_7__.concat)(topics)) : null;\n\n    let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n    let result = [];\n    let nonIndexedIndex = 0,\n        indexedIndex = 0;\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (resultIndexed == null) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: null\n          });\n        } else if (dynamic[index]) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: resultIndexed[indexedIndex++]\n          });\n        } else {\n          try {\n            result[index] = resultIndexed[indexedIndex++];\n          } catch (error) {\n            result[index] = error;\n          }\n        }\n      } else {\n        try {\n          result[index] = resultNonIndexed[nonIndexedIndex++];\n        } catch (error) {\n          result[index] = error;\n        }\n      } // Add the keyword argument if named and safe\n\n\n      if (param.name && result[param.name] == null) {\n        const value = result[index]; // Make error named values throw on access\n\n        if (value instanceof Error) {\n          Object.defineProperty(result, param.name, {\n            get: () => {\n              throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value);\n            }\n          });\n        } else {\n          result[param.name] = value;\n        }\n      }\n    }); // Make all error indexed values throw on access\n\n    for (let i = 0; i < result.length; i++) {\n      const value = result[i];\n\n      if (value instanceof Error) {\n        Object.defineProperty(result, i, {\n          get: () => {\n            throw wrapAccessError(`index ${i}`, value);\n          }\n        });\n      }\n    }\n\n    return Object.freeze(result);\n  } // Given a transaction, find the matching function fragment (if any) and\n  // determine all its properties and call parameters\n\n\n  parseTransaction(tx) {\n    let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n\n    if (!fragment) {\n      return null;\n    }\n\n    return new TransactionDescription({\n      args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n      functionFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      sighash: this.getSighash(fragment),\n      value: _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_10__.BigNumber.from(tx.value || \"0\")\n    });\n  } // Given an event log, find the matching event fragment (if any) and\n  // determine all its properties and values\n\n\n  parseLog(log) {\n    let fragment = this.getEvent(log.topics[0]);\n\n    if (!fragment || fragment.anonymous) {\n      return null;\n    } // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n    //        Probably not, because just because it is the only event in the ABI does\n    //        not mean we have the full ABI; maybe jsut a fragment?\n\n\n    return new LogDescription({\n      eventFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      topic: this.getEventTopic(fragment),\n      args: this.decodeEventLog(fragment, log.data, log.topics)\n    });\n  }\n  /*\n  static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n      if (Interface.isInterface(value)) {\n          return value;\n      }\n      if (typeof(value) === \"string\") {\n          return new Interface(JSON.parse(value));\n      }\n      return new Interface(value);\n  }\n  */\n\n\n  static isInterface(value) {\n    return !!(value && value._isInterface);\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/abi/lib.esm/interface.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/address/lib.esm/_version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/address/lib.esm/_version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"address/5.1.0\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/address/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/address/lib.esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ethersproject/address/lib.esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAddress\": () => (/* binding */ getAddress),\n/* harmony export */   \"isAddress\": () => (/* binding */ isAddress),\n/* harmony export */   \"getIcapAddress\": () => (/* binding */ getIcapAddress),\n/* harmony export */   \"getContractAddress\": () => (/* binding */ getContractAddress),\n/* harmony export */   \"getCreate2Address\": () => (/* binding */ getCreate2Address)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_rlp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ethersproject/rlp */ \"./node_modules/@ethersproject/rlp/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/address/lib.esm/_version.js\");\n\n\n\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n\nfunction getChecksumAddress(address) {\n  if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isHexString)(address, 20)) {\n    logger.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  address = address.toLowerCase();\n  const chars = address.substring(2).split(\"\");\n  const expanded = new Uint8Array(40);\n\n  for (let i = 0; i < 40; i++) {\n    expanded[i] = chars[i].charCodeAt(0);\n  }\n\n  const hashed = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)(expanded));\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return \"0x\" + chars.join(\"\");\n} // Shims for environments that are missing some required constants and functions\n\n\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction log10(x) {\n  if (Math.log10) {\n    return Math.log10(x);\n  }\n\n  return Math.log(x) / Math.LN10;\n} // See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\n\n\nconst ibanLookup = {};\n\nfor (let i = 0; i < 10; i++) {\n  ibanLookup[String(i)] = String(i);\n}\n\nfor (let i = 0; i < 26; i++) {\n  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n} // How many decimal digits can we process? (for 64-bit float, this is 15)\n\n\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address) {\n  address = address.toUpperCase();\n  address = address.substring(4) + address.substring(0, 2) + \"00\";\n  let expanded = address.split(\"\").map(c => {\n    return ibanLookup[c];\n  }).join(\"\"); // Javascript can handle integers safely up to 15 (decimal) digits\n\n  while (expanded.length >= safeDigits) {\n    let block = expanded.substring(0, safeDigits);\n    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n  }\n\n  let checksum = String(98 - parseInt(expanded, 10) % 97);\n\n  while (checksum.length < 2) {\n    checksum = \"0\" + checksum;\n  }\n\n  return checksum;\n}\n\n;\nfunction getAddress(address) {\n  let result = null;\n\n  if (typeof address !== \"string\") {\n    logger.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    // Missing the 0x prefix\n    if (address.substring(0, 2) !== \"0x\") {\n      address = \"0x\" + address;\n    }\n\n    result = getChecksumAddress(address); // It is a checksummed address with a bad checksum\n\n    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n      logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n    } // Maybe ICAP? (we only support direct mode)\n\n  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    // It is an ICAP address with a bad checksum\n    if (address.substring(2, 4) !== ibanChecksum(address)) {\n      logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n    }\n\n    result = (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__._base36To16)(address.substring(4));\n\n    while (result.length < 40) {\n      result = \"0\" + result;\n    }\n\n    result = getChecksumAddress(\"0x\" + result);\n  } else {\n    logger.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  return result;\n}\nfunction isAddress(address) {\n  try {\n    getAddress(address);\n    return true;\n  } catch (error) {}\n\n  return false;\n}\nfunction getIcapAddress(address) {\n  let base36 = (0,_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__._base16To36)(getAddress(address).substring(2)).toUpperCase();\n\n  while (base36.length < 30) {\n    base36 = \"0\" + base36;\n  }\n\n  return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n} // http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\nfunction getContractAddress(transaction) {\n  let from = null;\n\n  try {\n    from = getAddress(transaction.from);\n  } catch (error) {\n    logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n  }\n\n  const nonce = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.stripZeros)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_4__.BigNumber.from(transaction.nonce).toHexString()));\n  return getAddress((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_ethersproject_rlp__WEBPACK_IMPORTED_MODULE_5__.encode)([from, nonce])), 12));\n}\nfunction getCreate2Address(from, salt, initCodeHash) {\n  if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataLength)(salt) !== 32) {\n    logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n  }\n\n  if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataLength)(initCodeHash) !== 32) {\n    logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n  }\n\n  return getAddress((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexDataSlice)((0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.concat)([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/address/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bignumber/lib.esm/_version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ethersproject/bignumber/lib.esm/_version.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"bignumber/5.1.1\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/bignumber/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isBigNumberish\": () => (/* binding */ isBigNumberish),\n/* harmony export */   \"BigNumber\": () => (/* binding */ BigNumber),\n/* harmony export */   \"_base36To16\": () => (/* binding */ _base36To16),\n/* harmony export */   \"_base16To36\": () => (/* binding */ _base16To36)\n/* harmony export */ });\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/bignumber/lib.esm/_version.js\");\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\n\nvar BN = (bn_js__WEBPACK_IMPORTED_MODULE_0___default().BN);\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger(_version__WEBPACK_IMPORTED_MODULE_2__.version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nfunction isBigNumberish(value) {\n  return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(value) || typeof value === \"bigint\" || (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isBytes)(value));\n} // Only warn about passing 10 into radix once\n\nlet _warnedToStringRadix = false;\nclass BigNumber {\n  constructor(constructorGuard, hex) {\n    logger.checkNew(new.target, BigNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger.throwError(\"cannot call constructor directly; use BigNumber.from\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new (BigNumber)\"\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n    Object.freeze(this);\n  }\n\n  fromTwos(value) {\n    return toBigNumber(toBN(this).fromTwos(value));\n  }\n\n  toTwos(value) {\n    return toBigNumber(toBN(this).toTwos(value));\n  }\n\n  abs() {\n    if (this._hex[0] === \"-\") {\n      return BigNumber.from(this._hex.substring(1));\n    }\n\n    return this;\n  }\n\n  add(other) {\n    return toBigNumber(toBN(this).add(toBN(other)));\n  }\n\n  sub(other) {\n    return toBigNumber(toBN(this).sub(toBN(other)));\n  }\n\n  div(other) {\n    const o = BigNumber.from(other);\n\n    if (o.isZero()) {\n      throwFault(\"division by zero\", \"div\");\n    }\n\n    return toBigNumber(toBN(this).div(toBN(other)));\n  }\n\n  mul(other) {\n    return toBigNumber(toBN(this).mul(toBN(other)));\n  }\n\n  mod(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot modulo negative values\", \"mod\");\n    }\n\n    return toBigNumber(toBN(this).umod(value));\n  }\n\n  pow(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot raise to negative values\", \"pow\");\n    }\n\n    return toBigNumber(toBN(this).pow(value));\n  }\n\n  and(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'and' negative values\", \"and\");\n    }\n\n    return toBigNumber(toBN(this).and(value));\n  }\n\n  or(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'or' negative values\", \"or\");\n    }\n\n    return toBigNumber(toBN(this).or(value));\n  }\n\n  xor(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'xor' negative values\", \"xor\");\n    }\n\n    return toBigNumber(toBN(this).xor(value));\n  }\n\n  mask(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot mask negative values\", \"mask\");\n    }\n\n    return toBigNumber(toBN(this).maskn(value));\n  }\n\n  shl(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shl\");\n    }\n\n    return toBigNumber(toBN(this).shln(value));\n  }\n\n  shr(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shr\");\n    }\n\n    return toBigNumber(toBN(this).shrn(value));\n  }\n\n  eq(other) {\n    return toBN(this).eq(toBN(other));\n  }\n\n  lt(other) {\n    return toBN(this).lt(toBN(other));\n  }\n\n  lte(other) {\n    return toBN(this).lte(toBN(other));\n  }\n\n  gt(other) {\n    return toBN(this).gt(toBN(other));\n  }\n\n  gte(other) {\n    return toBN(this).gte(toBN(other));\n  }\n\n  isNegative() {\n    return this._hex[0] === \"-\";\n  }\n\n  isZero() {\n    return toBN(this).isZero();\n  }\n\n  toNumber() {\n    try {\n      return toBN(this).toNumber();\n    } catch (error) {\n      throwFault(\"overflow\", \"toNumber\", this.toString());\n    }\n\n    return null;\n  }\n\n  toBigInt() {\n    try {\n      return BigInt(this.toString());\n    } catch (e) {}\n\n    return logger.throwError(\"this platform does not support BigInt\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNSUPPORTED_OPERATION, {\n      value: this.toString()\n    });\n  }\n\n  toString() {\n    // Lots of people expect this, which we do not support, so check (See: #889)\n    if (arguments.length > 0) {\n      if (arguments[0] === 10) {\n        if (!_warnedToStringRadix) {\n          _warnedToStringRadix = true;\n          logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n        }\n      } else if (arguments[0] === 16) {\n        logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNEXPECTED_ARGUMENT, {});\n      } else {\n        logger.throwError(\"BigNumber.toString does not accept parameters\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.UNEXPECTED_ARGUMENT, {});\n      }\n    }\n\n    return toBN(this).toString(10);\n  }\n\n  toHexString() {\n    return this._hex;\n  }\n\n  toJSON(key) {\n    return {\n      type: \"BigNumber\",\n      hex: this.toHexString()\n    };\n  }\n\n  static from(value) {\n    if (value instanceof BigNumber) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      if (value.match(/^-?0x[0-9a-f]+$/i)) {\n        return new BigNumber(_constructorGuard, toHex(value));\n      }\n\n      if (value.match(/^-?[0-9]+$/)) {\n        return new BigNumber(_constructorGuard, toHex(new BN(value)));\n      }\n\n      return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n    }\n\n    if (typeof value === \"number\") {\n      if (value % 1) {\n        throwFault(\"underflow\", \"BigNumber.from\", value);\n      }\n\n      if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n        throwFault(\"overflow\", \"BigNumber.from\", value);\n      }\n\n      return BigNumber.from(String(value));\n    }\n\n    const anyValue = value;\n\n    if (typeof anyValue === \"bigint\") {\n      return BigNumber.from(anyValue.toString());\n    }\n\n    if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isBytes)(anyValue)) {\n      return BigNumber.from((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.hexlify)(anyValue));\n    }\n\n    if (anyValue) {\n      // Hexable interface (takes piority)\n      if (anyValue.toHexString) {\n        const hex = anyValue.toHexString();\n\n        if (typeof hex === \"string\") {\n          return BigNumber.from(hex);\n        }\n      } else {\n        // For now, handle legacy JSON-ified values (goes away in v6)\n        let hex = anyValue._hex; // New-form JSON\n\n        if (hex == null && anyValue.type === \"BigNumber\") {\n          hex = anyValue.hex;\n        }\n\n        if (typeof hex === \"string\") {\n          if ((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(hex) || hex[0] === \"-\" && (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_3__.isHexString)(hex.substring(1))) {\n            return BigNumber.from(hex);\n          }\n        }\n      }\n    }\n\n    return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n  }\n\n  static isBigNumber(value) {\n    return !!(value && value._isBigNumber);\n  }\n\n} // Normalize the hex string\n\nfunction toHex(value) {\n  // For BN, call on the hex string\n  if (typeof value !== \"string\") {\n    return toHex(value.toString(16));\n  } // If negative, prepend the negative sign to the normalized positive value\n\n\n  if (value[0] === \"-\") {\n    // Strip off the negative sign\n    value = value.substring(1); // Cannot have mulitple negative signs (e.g. \"--0x04\")\n\n    if (value[0] === \"-\") {\n      logger.throwArgumentError(\"invalid hex\", \"value\", value);\n    } // Call toHex on the positive component\n\n\n    value = toHex(value); // Do not allow \"-0x00\"\n\n    if (value === \"0x00\") {\n      return value;\n    } // Negate the value\n\n\n    return \"-\" + value;\n  } // Add a \"0x\" prefix if missing\n\n\n  if (value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  } // Normalize zero\n\n\n  if (value === \"0x\") {\n    return \"0x00\";\n  } // Make the string even length\n\n\n  if (value.length % 2) {\n    value = \"0x0\" + value.substring(2);\n  } // Trim to smallest even-length string\n\n\n  while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n    value = \"0x\" + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBigNumber(value) {\n  return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value) {\n  const hex = BigNumber.from(value).toHexString();\n\n  if (hex[0] === \"-\") {\n    return new BN(\"-\" + hex.substring(3), 16);\n  }\n\n  return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger.throwError(fault, _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__.Logger.errors.NUMERIC_FAULT, params);\n} // value should have no prefix\n\n\nfunction _base36To16(value) {\n  return new BN(value, 36).toString(16);\n} // value should have no prefix\n\nfunction _base16To36(value) {\n  return new BN(value, 16).toString(36);\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bytes/lib.esm/_version.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ethersproject/bytes/lib.esm/_version.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"bytes/5.1.0\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/bytes/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/bytes/lib.esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@ethersproject/bytes/lib.esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isBytesLike\": () => (/* binding */ isBytesLike),\n/* harmony export */   \"isBytes\": () => (/* binding */ isBytes),\n/* harmony export */   \"arrayify\": () => (/* binding */ arrayify),\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"stripZeros\": () => (/* binding */ stripZeros),\n/* harmony export */   \"zeroPad\": () => (/* binding */ zeroPad),\n/* harmony export */   \"isHexString\": () => (/* binding */ isHexString),\n/* harmony export */   \"hexlify\": () => (/* binding */ hexlify),\n/* harmony export */   \"hexDataLength\": () => (/* binding */ hexDataLength),\n/* harmony export */   \"hexDataSlice\": () => (/* binding */ hexDataSlice),\n/* harmony export */   \"hexConcat\": () => (/* binding */ hexConcat),\n/* harmony export */   \"hexValue\": () => (/* binding */ hexValue),\n/* harmony export */   \"hexStripZeros\": () => (/* binding */ hexStripZeros),\n/* harmony export */   \"hexZeroPad\": () => (/* binding */ hexZeroPad),\n/* harmony export */   \"splitSignature\": () => (/* binding */ splitSignature),\n/* harmony export */   \"joinSignature\": () => (/* binding */ joinSignature)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/bytes/lib.esm/_version.js\");\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version); ///////////////////////////////\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nfunction addSlice(array) {\n  if (array.slice) {\n    return array;\n  }\n\n  array.slice = function () {\n    const args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n  };\n\n  return array;\n}\n\nfunction isBytesLike(value) {\n  return isHexString(value) && !(value.length % 2) || isBytes(value);\n}\nfunction isBytes(value) {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n\n  if (typeof value === \"string\") {\n    return false;\n  }\n\n  if (value.length == null) {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n\n    if (typeof v !== \"number\" || v < 0 || v >= 256 || v % 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction arrayify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid arrayify value\");\n    const result = [];\n\n    while (value) {\n      result.unshift(value & 0xff);\n      value = parseInt(String(value / 256));\n    }\n\n    if (result.length === 0) {\n      result.push(0);\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    let hex = value.substring(2);\n\n    if (hex.length % 2) {\n      if (options.hexPad === \"left\") {\n        hex = \"0x0\" + hex.substring(2);\n      } else if (options.hexPad === \"right\") {\n        hex += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    const result = [];\n\n    for (let i = 0; i < hex.length; i += 2) {\n      result.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isBytes(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nfunction concat(items) {\n  const objects = items.map(item => arrayify(item));\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result = new Uint8Array(length);\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n  return addSlice(result);\n}\nfunction stripZeros(value) {\n  let result = arrayify(value);\n\n  if (result.length === 0) {\n    return result;\n  } // Find the first non-zero entry\n\n\n  let start = 0;\n\n  while (start < result.length && result[start] === 0) {\n    start++;\n  } // If we started with zeros, strip them\n\n\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\nfunction zeroPad(value, length) {\n  value = arrayify(value);\n\n  if (value.length > length) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n  }\n\n  const result = new Uint8Array(length);\n  result.set(value, length - value.length);\n  return addSlice(result);\n}\nfunction isHexString(value, length) {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nfunction hexlify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n    let hex = \"\";\n\n    while (value) {\n      hex = HexCharacters[value & 0x0f] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if (value.length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + value.substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    return value.toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    let result = \"0x\";\n\n    for (let i = 0; i < value.length; i++) {\n      let v = value[i];\n      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\n\nfunction hexDataLength(data) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    return null;\n  }\n\n  return (data.length - 2) / 2;\n}\nfunction hexDataSlice(data, offset, endOffset) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return \"0x\" + data.substring(offset);\n}\nfunction hexConcat(items) {\n  let result = \"0x\";\n  items.forEach(item => {\n    result += hexlify(item).substring(2);\n  });\n  return result;\n}\nfunction hexValue(value) {\n  const trimmed = hexStripZeros(hexlify(value, {\n    hexPad: \"left\"\n  }));\n\n  if (trimmed === \"0x\") {\n    return \"0x0\";\n  }\n\n  return trimmed;\n}\nfunction hexStripZeros(value) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  }\n\n  if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  value = value.substring(2);\n  let offset = 0;\n\n  while (offset < value.length && value[offset] === \"0\") {\n    offset++;\n  }\n\n  return \"0x\" + value.substring(offset);\n}\nfunction hexZeroPad(value, length) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  } else if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  if (value.length > 2 * length + 2) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  return value;\n}\nfunction splitSignature(signature) {\n  const result = {\n    r: \"0x\",\n    s: \"0x\",\n    _vs: \"0x\",\n    recoveryParam: 0,\n    v: 0\n  };\n\n  if (isBytesLike(signature)) {\n    const bytes = arrayify(signature);\n\n    if (bytes.length !== 65) {\n      logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n    } // Get the r, s and v\n\n\n    result.r = hexlify(bytes.slice(0, 32));\n    result.s = hexlify(bytes.slice(32, 64));\n    result.v = bytes[64]; // Allow a recid to be used as the v\n\n    if (result.v < 27) {\n      if (result.v === 0 || result.v === 1) {\n        result.v += 27;\n      } else {\n        logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n      }\n    } // Compute recoveryParam from v\n\n\n    result.recoveryParam = 1 - result.v % 2; // Compute _vs from recoveryParam and s\n\n    if (result.recoveryParam) {\n      bytes[32] |= 0x80;\n    }\n\n    result._vs = hexlify(bytes.slice(32, 64));\n  } else {\n    result.r = signature.r;\n    result.s = signature.s;\n    result.v = signature.v;\n    result.recoveryParam = signature.recoveryParam;\n    result._vs = signature._vs; // If the _vs is available, use it to populate missing s, v and recoveryParam\n    // and verify non-missing s, v and recoveryParam\n\n    if (result._vs != null) {\n      const vs = zeroPad(arrayify(result._vs), 32);\n      result._vs = hexlify(vs); // Set or check the recid\n\n      const recoveryParam = vs[0] >= 128 ? 1 : 0;\n\n      if (result.recoveryParam == null) {\n        result.recoveryParam = recoveryParam;\n      } else if (result.recoveryParam !== recoveryParam) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n      } // Set or check the s\n\n\n      vs[0] &= 0x7f;\n      const s = hexlify(vs);\n\n      if (result.s == null) {\n        result.s = s;\n      } else if (result.s !== s) {\n        logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n      }\n    } // Use recid and v to populate each other\n\n\n    if (result.recoveryParam == null) {\n      if (result.v == null) {\n        logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n      } else if (result.v === 0 || result.v === 1) {\n        result.recoveryParam = result.v;\n      } else {\n        result.recoveryParam = 1 - result.v % 2;\n      }\n    } else {\n      if (result.v == null) {\n        result.v = 27 + result.recoveryParam;\n      } else if (result.recoveryParam !== 1 - result.v % 2) {\n        logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n      }\n    }\n\n    if (result.r == null || !isHexString(result.r)) {\n      logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n    } else {\n      result.r = hexZeroPad(result.r, 32);\n    }\n\n    if (result.s == null || !isHexString(result.s)) {\n      logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n    } else {\n      result.s = hexZeroPad(result.s, 32);\n    }\n\n    const vs = arrayify(result.s);\n\n    if (vs[0] >= 128) {\n      logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n    }\n\n    if (result.recoveryParam) {\n      vs[0] |= 0x80;\n    }\n\n    const _vs = hexlify(vs);\n\n    if (result._vs) {\n      if (!isHexString(result._vs)) {\n        logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n      }\n\n      result._vs = hexZeroPad(result._vs, 32);\n    } // Set or check the _vs\n\n\n    if (result._vs == null) {\n      result._vs = _vs;\n    } else if (result._vs !== _vs) {\n      logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n    }\n  }\n\n  return result;\n}\nfunction joinSignature(signature) {\n  signature = splitSignature(signature);\n  return hexlify(concat([signature.r, signature.s, signature.recoveryParam ? \"0x1c\" : \"0x1b\"]));\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/bytes/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/constants/lib.esm/bignumbers.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ethersproject/constants/lib.esm/bignumbers.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NegativeOne\": () => (/* binding */ NegativeOne),\n/* harmony export */   \"Zero\": () => (/* binding */ Zero),\n/* harmony export */   \"One\": () => (/* binding */ One),\n/* harmony export */   \"Two\": () => (/* binding */ Two),\n/* harmony export */   \"WeiPerEther\": () => (/* binding */ WeiPerEther),\n/* harmony export */   \"MaxUint256\": () => (/* binding */ MaxUint256)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/bignumber */ \"./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n\nconst NegativeOne = /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(-1);\nconst Zero = /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(0);\nconst One = /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(1);\nconst Two = /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(2);\nconst WeiPerEther = /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = /*#__PURE__*/_ethersproject_bignumber__WEBPACK_IMPORTED_MODULE_0__.BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/constants/lib.esm/bignumbers.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/hash/lib.esm/id.js":
/*!********************************************************!*\
  !*** ./node_modules/@ethersproject/hash/lib.esm/id.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"id\": () => (/* binding */ id)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/keccak256 */ \"./node_modules/@ethersproject/keccak256/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/strings */ \"./node_modules/@ethersproject/strings/lib.esm/utf8.js\");\n\n\nfunction id(text) {\n  return (0,_ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_0__.keccak256)((0,_ethersproject_strings__WEBPACK_IMPORTED_MODULE_1__.toUtf8Bytes)(text));\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/hash/lib.esm/id.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/keccak256/lib.esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/keccak256/lib.esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keccak256\": () => (/* binding */ keccak256)\n/* harmony export */ });\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha3 */ \"./node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n\n\n\n\nfunction keccak256(data) {\n  return '0x' + js_sha3__WEBPACK_IMPORTED_MODULE_0___default().keccak_256((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_1__.arrayify)(data));\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/keccak256/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/logger/lib.esm/_version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@ethersproject/logger/lib.esm/_version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"logger/5.1.0\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/logger/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/logger/lib.esm/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/logger/lib.esm/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LogLevel\": () => (/* binding */ LogLevel),\n/* harmony export */   \"ErrorCode\": () => (/* binding */ ErrorCode),\n/* harmony export */   \"Logger\": () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/logger/lib.esm/_version.js\");\n\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\n\nlet _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    const missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n\n;\nclass Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n\n    console.log.apply(console, args);\n  }\n\n  debug(...args) {\n    this._log(Logger.levels.DEBUG, args);\n  }\n\n  info(...args) {\n    this._log(Logger.levels.INFO, args);\n  }\n\n  warn(...args) {\n    this._log(Logger.levels.WARNING, args);\n  }\n\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      try {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    } // @TODO: Any??\n\n\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message) {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(_version__WEBPACK_IMPORTED_MODULE_0__.version);\n    }\n\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n\n    _logLevel = level;\n  }\n\n  static from(version) {\n    return new Logger(version);\n  }\n\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/logger/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/properties/lib.esm/_version.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ethersproject/properties/lib.esm/_version.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"properties/5.1.0\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/properties/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/properties/lib.esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/properties/lib.esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defineReadOnly\": () => (/* binding */ defineReadOnly),\n/* harmony export */   \"getStatic\": () => (/* binding */ getStatic),\n/* harmony export */   \"resolveProperties\": () => (/* binding */ resolveProperties),\n/* harmony export */   \"checkProperties\": () => (/* binding */ checkProperties),\n/* harmony export */   \"shallowCopy\": () => (/* binding */ shallowCopy),\n/* harmony export */   \"deepCopy\": () => (/* binding */ deepCopy),\n/* harmony export */   \"Description\": () => (/* binding */ Description)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/properties/lib.esm/_version.js\");\n\n\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\nfunction defineReadOnly(object, name, value) {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n} // Crawl up the constructor chain to find a static method\n\nfunction getStatic(ctor, key) {\n  for (let i = 0; i < 32; i++) {\n    if (ctor[key]) {\n      return ctor[key];\n    }\n\n    if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n      break;\n    }\n\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n\n  return null;\n}\nfunction resolveProperties(object) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const promises = Object.keys(object).map(key => {\n      const value = object[key];\n      return Promise.resolve(value).then(v => ({\n        key: key,\n        value: v\n      }));\n    });\n    const results = yield Promise.all(promises);\n    return results.reduce((accum, result) => {\n      accum[result.key] = result.value;\n      return accum;\n    }, {});\n  });\n}\nfunction checkProperties(object, properties) {\n  if (!object || typeof object !== \"object\") {\n    logger.throwArgumentError(\"invalid object\", \"object\", object);\n  }\n\n  Object.keys(object).forEach(key => {\n    if (!properties[key]) {\n      logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n    }\n  });\n}\nfunction shallowCopy(object) {\n  const result = {};\n\n  for (const key in object) {\n    result[key] = object[key];\n  }\n\n  return result;\n}\nconst opaque = {\n  bigint: true,\n  boolean: true,\n  \"function\": true,\n  number: true,\n  string: true\n};\n\nfunction _isFrozen(object) {\n  // Opaque objects are not mutable, so safe to copy by assignment\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return true;\n  }\n\n  if (Array.isArray(object) || typeof object === \"object\") {\n    if (!Object.isFrozen(object)) {\n      return false;\n    }\n\n    const keys = Object.keys(object);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!_isFrozen(object[keys[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n} // Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\n\n\nfunction _deepCopy(object) {\n  if (_isFrozen(object)) {\n    return object;\n  } // Arrays are mutable, so we need to create a copy\n\n\n  if (Array.isArray(object)) {\n    return Object.freeze(object.map(item => deepCopy(item)));\n  }\n\n  if (typeof object === \"object\") {\n    const result = {};\n\n    for (const key in object) {\n      const value = object[key];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      defineReadOnly(result, key, deepCopy(value));\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n}\n\nfunction deepCopy(object) {\n  return _deepCopy(object);\n}\nclass Description {\n  constructor(info) {\n    for (const key in info) {\n      this[key] = deepCopy(info[key]);\n    }\n  }\n\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/properties/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/rlp/lib.esm/_version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/rlp/lib.esm/_version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"rlp/5.1.0\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/rlp/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/rlp/lib.esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ethersproject/rlp/lib.esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encode\": () => (/* binding */ encode),\n/* harmony export */   \"decode\": () => (/* binding */ decode)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/rlp/lib.esm/_version.js\");\n //See: https://github.com/ethereum/wiki/wiki/RLP\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version);\n\nfunction arrayifyInteger(value) {\n  const result = [];\n\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction unarrayifyInteger(data, offset, length) {\n  let result = 0;\n\n  for (let i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    let payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n\n    if (payload.length <= 55) {\n      payload.unshift(0xc0 + payload.length);\n      return payload;\n    }\n\n    const length = arrayifyInteger(payload.length);\n    length.unshift(0xf7 + length.length);\n    return length.concat(payload);\n  }\n\n  if (!(0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.isBytesLike)(object)) {\n    logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n  }\n\n  const data = Array.prototype.slice.call((0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(object));\n\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n\n  const length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\n\nfunction encode(object) {\n  return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(_encode(object));\n}\n\nfunction _decodeChildren(data, offset, childOffset, length) {\n  const result = [];\n\n  while (childOffset < offset + 1 + length) {\n    const decoded = _decode(data, childOffset);\n\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n\n    if (childOffset > offset + 1 + length) {\n      logger.throwError(\"child data too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n  }\n\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n} // returns { consumed: number, result: Object }\n\n\nfunction _decode(data, offset) {\n  if (data.length === 0) {\n    logger.throwError(\"data too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n  } // Array with extra length prefix\n\n\n  if (data[offset] >= 0xf8) {\n    const lengthLength = data[offset] - 0xf7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger.throwError(\"data short segment too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger.throwError(\"data long segment too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n  } else if (data[offset] >= 0xc0) {\n    const length = data[offset] - 0xc0;\n\n    if (offset + 1 + length > data.length) {\n      logger.throwError(\"data array too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    return _decodeChildren(data, offset, offset + 1, length);\n  } else if (data[offset] >= 0xb8) {\n    const lengthLength = data[offset] - 0xb7;\n\n    if (offset + 1 + lengthLength > data.length) {\n      logger.throwError(\"data array too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const length = unarrayifyInteger(data, offset + 1, lengthLength);\n\n    if (offset + 1 + lengthLength + length > data.length) {\n      logger.throwError(\"data array too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n    return {\n      consumed: 1 + lengthLength + length,\n      result: result\n    };\n  } else if (data[offset] >= 0x80) {\n    const length = data[offset] - 0x80;\n\n    if (offset + 1 + length > data.length) {\n      logger.throwError(\"data too short\", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger.errors.BUFFER_OVERRUN, {});\n    }\n\n    const result = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data.slice(offset + 1, offset + 1 + length));\n    return {\n      consumed: 1 + length,\n      result: result\n    };\n  }\n\n  return {\n    consumed: 1,\n    result: (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.hexlify)(data[offset])\n  };\n}\n\nfunction decode(data) {\n  const bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(data);\n\n  const decoded = _decode(bytes, 0);\n\n  if (decoded.consumed !== bytes.length) {\n    logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n  }\n\n  return decoded.result;\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/rlp/lib.esm/index.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/_version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/_version.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"strings/5.1.0\";\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/strings/lib.esm/_version.js?");

/***/ }),

/***/ "./node_modules/@ethersproject/strings/lib.esm/utf8.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ethersproject/strings/lib.esm/utf8.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UnicodeNormalizationForm\": () => (/* binding */ UnicodeNormalizationForm),\n/* harmony export */   \"Utf8ErrorReason\": () => (/* binding */ Utf8ErrorReason),\n/* harmony export */   \"Utf8ErrorFuncs\": () => (/* binding */ Utf8ErrorFuncs),\n/* harmony export */   \"toUtf8Bytes\": () => (/* binding */ toUtf8Bytes),\n/* harmony export */   \"_toEscapedUtf8String\": () => (/* binding */ _toEscapedUtf8String),\n/* harmony export */   \"_toUtf8String\": () => (/* binding */ _toUtf8String),\n/* harmony export */   \"toUtf8String\": () => (/* binding */ toUtf8String),\n/* harmony export */   \"toUtf8CodePoints\": () => (/* binding */ toUtf8CodePoints)\n/* harmony export */ });\n/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethersproject/bytes */ \"./node_modules/@ethersproject/bytes/lib.esm/index.js\");\n/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethersproject/logger */ \"./node_modules/@ethersproject/logger/lib.esm/index.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_version */ \"./node_modules/@ethersproject/strings/lib.esm/_version.js\");\n\n\n\n\n\nconst logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(_version__WEBPACK_IMPORTED_MODULE_1__.version); ///////////////////////////////\n\nvar UnicodeNormalizationForm;\n\n(function (UnicodeNormalizationForm) {\n  UnicodeNormalizationForm[\"current\"] = \"\";\n  UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n  UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n  UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n  UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n\n;\nvar Utf8ErrorReason;\n\n(function (Utf8ErrorReason) {\n  // A continuation byte was present where there was nothing to continue\n  // - offset = the index the codepoint began in\n  Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\"; // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\"; // The string is too short to process the expected codepoint\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\"; // A missing continuation byte was expected but not found\n  // - offset = the index the continuation byte was expected at\n\n  Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\"; // The computed code point is outside the range for UTF-8\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; outside the UTF-8 range\n\n  Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\"; // UTF-8 strings may not contain UTF-16 surrogate pairs\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n\n  Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\"; // The string is an overlong reperesentation\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; already bounds checked\n\n  Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n\n;\n\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n  return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n  // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n    let i = 0;\n\n    for (let o = offset + 1; o < bytes.length; o++) {\n      if (bytes[o] >> 6 !== 0x02) {\n        break;\n      }\n\n      i++;\n    }\n\n    return i;\n  } // This byte runs us past the end of the string, so just jump to the end\n  // (but the first byte was read already read and therefore skipped)\n\n\n  if (reason === Utf8ErrorReason.OVERRUN) {\n    return bytes.length - offset - 1;\n  } // Nothing to skip\n\n\n  return 0;\n}\n\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n  // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n  if (reason === Utf8ErrorReason.OVERLONG) {\n    output.push(badCodepoint);\n    return 0;\n  } // Put the replacement character into the output\n\n\n  output.push(0xfffd); // Otherwise, process as if ignoring errors\n\n  return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n} // Common error handing strategies\n\n\nconst Utf8ErrorFuncs = Object.freeze({\n  error: errorFunc,\n  ignore: ignoreFunc,\n  replace: replaceFunc\n}); // http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\n\nfunction getUtf8CodePoints(bytes, onError) {\n  if (onError == null) {\n    onError = Utf8ErrorFuncs.error;\n  }\n\n  bytes = (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(bytes);\n  const result = [];\n  let i = 0; // Invalid bytes are ignored\n\n  while (i < bytes.length) {\n    const c = bytes[i++]; // 0xxx xxxx\n\n    if (c >> 7 === 0) {\n      result.push(c);\n      continue;\n    } // Multibyte; how many bytes left for this character?\n\n\n    let extraLength = null;\n    let overlongMask = null; // 110x xxxx 10xx xxxx\n\n    if ((c & 0xe0) === 0xc0) {\n      extraLength = 1;\n      overlongMask = 0x7f; // 1110 xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf0) === 0xe0) {\n      extraLength = 2;\n      overlongMask = 0x7ff; // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf8) === 0xf0) {\n      extraLength = 3;\n      overlongMask = 0xffff;\n    } else {\n      if ((c & 0xc0) === 0x80) {\n        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n      } else {\n        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n      }\n\n      continue;\n    } // Do we have enough bytes in our data?\n\n\n    if (i - 1 + extraLength >= bytes.length) {\n      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n      continue;\n    } // Remove the length prefix from the char\n\n\n    let res = c & (1 << 8 - extraLength - 1) - 1;\n\n    for (let j = 0; j < extraLength; j++) {\n      let nextChar = bytes[i]; // Invalid continuation byte\n\n      if ((nextChar & 0xc0) != 0x80) {\n        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n        res = null;\n        break;\n      }\n\n      ;\n      res = res << 6 | nextChar & 0x3f;\n      i++;\n    } // See above loop for invalid contimuation byte\n\n\n    if (res === null) {\n      continue;\n    } // Maximum code point\n\n\n    if (res > 0x10ffff) {\n      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Reserved for UTF-16 surrogate halves\n\n\n    if (res >= 0xd800 && res <= 0xdfff) {\n      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Check for overlong sequences (more bytes than needed)\n\n\n    if (res <= overlongMask) {\n      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    result.push(res);\n  }\n\n  return result;\n} // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n  if (form != UnicodeNormalizationForm.current) {\n    logger.checkNormalize();\n    str = str.normalize(form);\n  }\n\n  let result = [];\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push(c >> 6 | 0xc0);\n      result.push(c & 0x3f | 0x80);\n    } else if ((c & 0xfc00) == 0xd800) {\n      i++;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new Error(\"invalid utf-8 string\");\n      } // Surrogate Pair\n\n\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push(pair >> 18 | 0xf0);\n      result.push(pair >> 12 & 0x3f | 0x80);\n      result.push(pair >> 6 & 0x3f | 0x80);\n      result.push(pair & 0x3f | 0x80);\n    } else {\n      result.push(c >> 12 | 0xe0);\n      result.push(c >> 6 & 0x3f | 0x80);\n      result.push(c & 0x3f | 0x80);\n    }\n  }\n\n  return (0,_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_2__.arrayify)(result);\n}\n;\n\nfunction escapeChar(value) {\n  const hex = \"0000\" + value.toString(16);\n  return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nfunction _toEscapedUtf8String(bytes, onError) {\n  return '\"' + getUtf8CodePoints(bytes, onError).map(codePoint => {\n    if (codePoint < 256) {\n      switch (codePoint) {\n        case 8:\n          return \"\\\\b\";\n\n        case 9:\n          return \"\\\\t\";\n\n        case 10:\n          return \"\\\\n\";\n\n        case 13:\n          return \"\\\\r\";\n\n        case 34:\n          return \"\\\\\\\"\";\n\n        case 92:\n          return \"\\\\\\\\\";\n      }\n\n      if (codePoint >= 32 && codePoint < 127) {\n        return String.fromCharCode(codePoint);\n      }\n    }\n\n    if (codePoint <= 0xffff) {\n      return escapeChar(codePoint);\n    }\n\n    codePoint -= 0x10000;\n    return escapeChar((codePoint >> 10 & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n  }).join(\"\") + '\"';\n}\nfunction _toUtf8String(codePoints) {\n  return codePoints.map(codePoint => {\n    if (codePoint <= 0xffff) {\n      return String.fromCharCode(codePoint);\n    }\n\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);\n  }).join(\"\");\n}\nfunction toUtf8String(bytes, onError) {\n  return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nfunction toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n  return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n//# sourceURL=webpack://test/./node_modules/@ethersproject/strings/lib.esm/utf8.js?");

/***/ }),

/***/ "./node_modules/array-filter/index.js":
/*!********************************************!*\
  !*** ./node_modules/array-filter/index.js ***!
  \********************************************/
/***/ ((module) => {

eval("/**\n * Array#filter.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object=} self\n * @return {Array}\n * @throw TypeError\n */\nmodule.exports = function (arr, fn, self) {\n  if (arr.filter) return arr.filter(fn, self);\n  if (void 0 === arr || null === arr) throw new TypeError();\n  if ('function' != typeof fn) throw new TypeError();\n  var ret = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (!hasOwn.call(arr, i)) continue;\n    var val = arr[i];\n    if (fn.call(self, val, i, arr)) ret.push(val);\n  }\n\n  return ret;\n};\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n//# sourceURL=webpack://test/./node_modules/array-filter/index.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1.js":
/*!******************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst asn1 = exports;\nasn1.bignum = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\nasn1.define = __webpack_require__(/*! ./asn1/api */ \"./node_modules/asn1.js/lib/asn1/api.js\").define;\nasn1.base = __webpack_require__(/*! ./asn1/base */ \"./node_modules/asn1.js/lib/asn1/base/index.js\");\nasn1.constants = __webpack_require__(/*! ./asn1/constants */ \"./node_modules/asn1.js/lib/asn1/constants/index.js\");\nasn1.decoders = __webpack_require__(/*! ./asn1/decoders */ \"./node_modules/asn1.js/lib/asn1/decoders/index.js\");\nasn1.encoders = __webpack_require__(/*! ./asn1/encoders */ \"./node_modules/asn1.js/lib/asn1/encoders/index.js\");\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/api.js":
/*!**********************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/api.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst encoders = __webpack_require__(/*! ./encoders */ \"./node_modules/asn1.js/lib/asn1/encoders/index.js\");\n\nconst decoders = __webpack_require__(/*! ./decoders */ \"./node_modules/asn1.js/lib/asn1/decoders/index.js\");\n\nconst inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n\n  inherits(Generated, Base);\n\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der'; // Lazily create decoder\n\n  if (!this.decoders.hasOwnProperty(enc)) this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der'; // Lazily create encoder\n\n  if (!this.encoders.hasOwnProperty(enc)) this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc,\n/* internal */\nreporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/api.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nconst Reporter = __webpack_require__(/*! ../base/reporter */ \"./node_modules/asn1.js/lib/asn1/base/reporter.js\").Reporter;\n\nconst Buffer = __webpack_require__(/*! safer-buffer */ \"./node_modules/safer-buffer/safer.js\").Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\n\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  } // Or accept compatible API\n\n\n  const isCompatible = typeof data === 'object' && Buffer.isBuffer(data.base) && data.constructor.name === 'DecoderBuffer' && typeof data.offset === 'number' && typeof data.length === 'number' && typeof data.save === 'function' && typeof data.restore === 'function' && typeof data.isEmpty === 'function' && typeof data.readUInt8 === 'function' && typeof data.skip === 'function' && typeof data.raw === 'function';\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return {\n    offset: this.offset,\n    reporter: Reporter.prototype.save.call(this)\n  };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n  const res = new DecoderBuffer(this.base); // Share reporter state\n\n  res._reporterState = this._reporterState;\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function (item) {\n      if (!EncoderBuffer.isEncoderBuffer(item)) item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\n\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  } // Or accept compatible API\n\n\n  const isCompatible = typeof data === 'object' && data.constructor.name === 'EncoderBuffer' && typeof data.length === 'number' && typeof data.join === 'function';\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out) out = Buffer.alloc(this.length);\n  if (!offset) offset = 0;\n  if (this.length === 0) return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/base/buffer.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst base = exports;\nbase.Reporter = __webpack_require__(/*! ./reporter */ \"./node_modules/asn1.js/lib/asn1/base/reporter.js\").Reporter;\nbase.DecoderBuffer = __webpack_require__(/*! ./buffer */ \"./node_modules/asn1.js/lib/asn1/base/buffer.js\").DecoderBuffer;\nbase.EncoderBuffer = __webpack_require__(/*! ./buffer */ \"./node_modules/asn1.js/lib/asn1/base/buffer.js\").EncoderBuffer;\nbase.Node = __webpack_require__(/*! ./node */ \"./node_modules/asn1.js/lib/asn1/base/node.js\");\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/base/index.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/node.js":
/*!****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/node.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst Reporter = __webpack_require__(/*! ../base/reporter */ \"./node_modules/asn1.js/lib/asn1/base/reporter.js\").Reporter;\n\nconst EncoderBuffer = __webpack_require__(/*! ../base/buffer */ \"./node_modules/asn1.js/lib/asn1/base/buffer.js\").EncoderBuffer;\n\nconst DecoderBuffer = __webpack_require__(/*! ../base/buffer */ \"./node_modules/asn1.js/lib/asn1/base/buffer.js\").DecoderBuffer;\n\nconst assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\"); // Supported tags\n\n\nconst tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr']; // Public methods list\n\nconst methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags); // Overrided methods list\n\nconst overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n  state.name = name;\n  state.enc = enc;\n  state.parent = parent || null;\n  state.children = null; // State\n\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null; // Should create new instance on each method\n\n  if (!state.parent) {\n    state.children = [];\n\n    this._wrap();\n  }\n}\n\nmodule.exports = Node;\nconst stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n  assert(state.parent === null);\n  body.call(this); // Filter children\n\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState; // Filter children and args\n\n  const children = args.filter(function (arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children; // Replace parent to maintain backward link\n\n    children.forEach(function (child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) return arg;\n      const res = {};\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n}; //\n// Overrided methods\n//\n\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n}); //\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n  assert(state.use === null);\n  state.use = item;\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n  state.optional = true;\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n  state.obj = true;\n  if (args.length !== 0) this._useArgs(args);\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n  assert(state.key === null);\n  state.key = newKey;\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n  state.any = true;\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n  assert(state.choice === null);\n  state.choice = obj;\n\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n  assert(state.use === null);\n  state.contains = item;\n  return this;\n}; //\n// Decoding\n//\n\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState; // Decode root node\n\n  if (state.parent === null) return input.wrapResult(state.children[0]._decode(input, options));\n  let result = state['default'];\n  let present = true;\n  let prevKey = null;\n  if (state.key !== null) prevKey = input.enterKey(state.key); // Check if tag is there\n\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null) tag = state.explicit;else if (state.implicit !== null) tag = state.implicit;else if (state.tag !== null) tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n\n      try {\n        if (state.choice === null) this._decodeGeneric(state.tag, input, options);else this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n      if (input.isError(present)) return present;\n    }\n  } // Push object on stack\n\n\n  let prevObj;\n  if (state.obj && present) prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n\n      if (input.isError(explicit)) return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset; // Unwrap implicit and normal values\n\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any) save = input.save();\n\n      const body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);\n\n      if (input.isError(body)) return body;\n      if (state.any) result = input.raw(save);else input = body;\n    }\n\n    if (options && options.track && state.tag !== null) options.track(input.path(), start, input.length, 'tagged');\n    if (options && options.track && state.tag !== null) options.track(input.path(), input.offset, input.length, 'content'); // Select proper method for tag\n\n    if (state.any) {// no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result)) return result; // Decode children\n\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    } // Decode contained/encoded by schema, only in bit or octet strings\n\n\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);\n    }\n  } // Pop object\n\n\n  if (state.obj && present) result = input.leaveObject(prevObj); // Set key\n\n  if (state.key !== null && (result !== null || present === true)) input.leaveKey(prevKey, state.key, result);else if (prevKey !== null) input.exitKey(prevKey);\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n  if (tag === 'seq' || tag === 'set') return null;\n  if (tag === 'seqof' || tag === 'setof') return this._decodeList(input, tag, state.args[0], options);else if (/str$/.test(tag)) return this._decodeStr(input, tag, options);else if (tag === 'objid' && state.args) return this._decodeObjid(input, state.args[0], state.args[1], options);else if (tag === 'objid') return this._decodeObjid(input, null, null, options);else if (tag === 'gentime' || tag === 'utctime') return this._decodeTime(input, tag, options);else if (tag === 'null_') return this._decodeNull(input, options);else if (tag === 'bool') return this._decodeBool(input, options);else if (tag === 'objDesc') return this._decodeStr(input, tag, options);else if (tag === 'int' || tag === 'enum') return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n  const state = this._baseState; // Create altered use decoder if implicit is set\n\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n  Object.keys(state.choice).some(function (key) {\n    const save = input.save();\n    const node = state.choice[key];\n\n    try {\n      const value = node._decode(input, options);\n\n      if (input.isError(value)) return false;\n      result = {\n        type: key,\n        value: value\n      };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n\n    return true;\n  }, this);\n  if (!match) return input.error('Choice not matched');\n  return result;\n}; //\n// Encoding\n//\n\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data) return;\n\n  const result = this._encodeValue(data, reporter, parent);\n\n  if (result === undefined) return;\n  if (this._skipDefault(result, reporter, parent)) return;\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState; // Decode root node\n\n  if (state.parent === null) return state.children[0]._encode(data, reporter || new Reporter());\n  let result = null; // Set reporter to share it with a child class\n\n  this.reporter = reporter; // Check if data is there\n\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null) data = state['default'];else return;\n  } // Encode children first\n\n\n  let content = null;\n  let primitive = false;\n\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') return child._encode(null, reporter, data);\n      if (child._baseState.key === null) return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n      if (typeof data !== 'object') return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n\n      reporter.leaveKey(prevKey);\n      return res;\n    }, this).filter(function (child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1)) return reporter.error('Too many args for : ' + state.tag);\n      if (!Array.isArray(data)) return reporter.error('seqof/setof, but data is not Array');\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function (item) {\n        const state = this._baseState;\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  } // Encode data itself\n\n\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null) reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null) result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  } // Wrap in explicit\n\n\n  if (state.explicit !== null) result = this._encodeComposite(state.explicit, false, 'context', result);\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n  const node = state.choice[data.type];\n\n  if (!node) {\n    assert(false, data.type + ' not found in ' + JSON.stringify(Object.keys(state.choice)));\n  }\n\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n  if (/str$/.test(tag)) return this._encodeStr(data, tag);else if (tag === 'objid' && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);else if (tag === 'objid') return this._encodeObjid(data, null, null);else if (tag === 'gentime' || tag === 'utctime') return this._encodeTime(data, tag);else if (tag === 'null_') return this._encodeNull();else if (tag === 'int' || tag === 'enum') return this._encodeInt(data, state.args && state.reverseArgs[0]);else if (tag === 'bool') return this._encodeBool(data);else if (tag === 'objDesc') return this._encodeStr(data, tag);else throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/base/node.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\n\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n  return {\n    obj: state.obj,\n    pathLen: state.path.length\n  };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n  this.exitKey(index);\n  if (state.obj !== null) state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n  const inherited = msg instanceof ReporterError;\n\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function (elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial) throw err;\n  if (!inherited) state.errors.push(err);\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial) return result;\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\n\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace) Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n\n  return this;\n};\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/base/reporter.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/der.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval(" // Helper\n\nfunction reverse(map) {\n  const res = {};\n  Object.keys(map).forEach(function (key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key) key = key | 0;\n    const value = map[key];\n    res[value] = key;\n  });\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/constants/der.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst constants = exports; // Helper\n\nconstants._reverse = function reverse(map) {\n  const res = {};\n  Object.keys(map).forEach(function (key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key) key = key | 0;\n    const value = map[key];\n    res[value] = key;\n  });\n  return res;\n};\n\nconstants.der = __webpack_require__(/*! ./der */ \"./node_modules/asn1.js/lib/asn1/constants/der.js\");\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/constants/index.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nconst bignum = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nconst DecoderBuffer = __webpack_require__(/*! ../base/buffer */ \"./node_modules/asn1.js/lib/asn1/base/buffer.js\").DecoderBuffer;\n\nconst Node = __webpack_require__(/*! ../base/node */ \"./node_modules/asn1.js/lib/asn1/base/node.js\"); // Import DER constants\n\n\nconst der = __webpack_require__(/*! ../constants/der */ \"./node_modules/asn1.js/lib/asn1/constants/der.js\");\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity; // Construct base tree\n\n  this.tree = new DERNode();\n\n  this.tree._init(entity.body);\n}\n\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n}; // Tree methods\n\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\n\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty()) return false;\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag)) return decodedTag;\n  buffer.restore(state);\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + 'of' === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer, 'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag)) return decodedTag;\n  let len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of \"' + tag + '\"'); // Failure\n\n  if (buffer.isError(len)) return len;\n\n  if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null) return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"'); // Indefinite length... find END tag\n\n  const state = buffer.save();\n\n  const res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: \"' + this.tag + '\"');\n\n  if (buffer.isError(res)) return res;\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag)) return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len)) return len;\n    let res;\n    if (tag.primitive || len !== null) res = buffer.skip(len);else res = this._skipUntilEnd(buffer, fail); // Failure\n\n    if (buffer.isError(res)) return res;\n    if (tag.tagStr === 'end') break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {\n  const result = [];\n\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n\n    if (buffer.isError(possibleEnd)) return possibleEnd;\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd) break;\n    result.push(res);\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused)) return unused;\n    return {\n      unused: unused,\n      data: buffer.raw()\n    };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1) return buffer.error('Decoding of string type: bmpstr length mismatch');\n    let str = '';\n\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' + 'numstr unsupported characters');\n    }\n\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' + 'printstr unsupported characters');\n    }\n\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n\n  if (subident & 0x80) identifiers.push(ident);\n  const first = identifiers[0] / 40 | 0;\n  const second = identifiers[0] % 40;\n  if (relative) result = identifiers;else result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined) tmp = values[result.join('.')];\n    if (tmp !== undefined) result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70) year = 2000 + year;else year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res)) return res;else return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n  if (values) res = values[res.toString(10)] || res;\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function') entity = entity(obj);\n  return entity._getDecoder('der').tree;\n}; // Utility methods\n\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag)) return tag;\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0; // Multi-octet tag - load\n\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct)) return oct;\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n\n  const tagStr = der.tag[tag];\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len)) return len; // Indefinite form\n\n  if (!primitive && len === 0x80) return null; // Definite form\n\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  } // Long form\n\n\n  const num = len & 0x7f;\n  if (num > 4) return buf.error('length octect is too long');\n  len = 0;\n\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j)) return j;\n    len |= j;\n  }\n\n  return len;\n}\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/decoders/der.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst decoders = exports;\ndecoders.der = __webpack_require__(/*! ./der */ \"./node_modules/asn1.js/lib/asn1/decoders/der.js\");\ndecoders.pem = __webpack_require__(/*! ./pem */ \"./node_modules/asn1.js/lib/asn1/decoders/pem.js\");\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/decoders/index.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nconst Buffer = __webpack_require__(/*! safer-buffer */ \"./node_modules/safer-buffer/safer.js\").Buffer;\n\nconst DERDecoder = __webpack_require__(/*! ./der */ \"./node_modules/asn1.js/lib/asn1/decoders/der.js\");\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\n\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n  const label = options.label.toUpperCase();\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null) continue;\n    if (match[2] !== label) continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN') break;\n      start = i;\n    } else {\n      if (match[1] !== 'END') break;\n      end = i;\n      break;\n    }\n  }\n\n  if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n  const base64 = lines.slice(start + 1, end).join(''); // Remove excessive symbols\n\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/decoders/pem.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nconst Buffer = __webpack_require__(/*! safer-buffer */ \"./node_modules/safer-buffer/safer.js\").Buffer;\n\nconst Node = __webpack_require__(/*! ../base/node */ \"./node_modules/asn1.js/lib/asn1/base/node.js\"); // Import DER constants\n\n\nconst der = __webpack_require__(/*! ../constants/der */ \"./node_modules/asn1.js/lib/asn1/constants/der.js\");\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity; // Construct base tree\n\n  this.tree = new DERNode();\n\n  this.tree._init(entity.body);\n}\n\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n}; // Tree methods\n\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\n\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter); // Short form\n\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([header, content]);\n  } // Long form\n  // Count octets required to store length\n\n\n  let lenOctets = 1;\n\n  for (let i = content.length; i >= 0x100; i >>= 8) lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([header, content]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([str.unused | 0, str.data]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' + 'only digits and space');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' + 'only latin upper and lower case letters, ' + 'digits, space, apostrophe, left and rigth ' + 'parenthesis, plus sign, comma, hyphen, ' + 'dot, slash, colon, equal sign, ' + 'question mark');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values) return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id)) return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n\n    for (let i = 0; i < id.length; i++) id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n\n    for (let i = 0; i < id.length; i++) id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' + 'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40) return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  } // Count number of octets\n\n\n  let size = 0;\n\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n\n    for (size++; ident >= 0x80; ident >>= 7) size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n\n    while ((ident >>= 7) > 0) objid[offset--] = 0x80 | ident & 0x7f;\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10) return '0' + num;else return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [two(date.getUTCFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else if (tag === 'utctime') {\n    str = [two(date.getUTCFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values) return this.reporter.error('String int or enum given, but no values map');\n\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' + JSON.stringify(num));\n    }\n\n    num = values[num];\n  } // Bignum, assume big endian\n\n\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0) size++;\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0) out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80) return this._createEncoderBuffer(num);\n  if (num < 0x100) return this._createEncoderBuffer([0, num]);\n  let size = 1;\n\n  for (let i = num; i >= 0x100; i >>= 8) size++;\n\n  const out = new Array(size);\n\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n\n  if (out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function') entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null) return false;\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined) state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n  if (data.length !== state.defaultBuffer.length) return false;\n\n  for (i = 0; i < data.length; i++) if (data[i] !== state.defaultBuffer[i]) return false;\n\n  return true;\n}; // Utility methods\n\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n  if (tag === 'seqof') tag = 'seq';else if (tag === 'setof') tag = 'set';\n  if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];else if (typeof tag === 'number' && (tag | 0) === tag) res = tag;else return reporter.error('Unknown tag: ' + tag);\n  if (res >= 0x1f) return reporter.error('Multi-octet tag encoding unsupported');\n  if (!primitive) res |= 0x20;\n  res |= der.tagClassByName[cls || 'universal'] << 6;\n  return res;\n}\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/encoders/der.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst encoders = exports;\nencoders.der = __webpack_require__(/*! ./der */ \"./node_modules/asn1.js/lib/asn1/encoders/der.js\");\nencoders.pem = __webpack_require__(/*! ./pem */ \"./node_modules/asn1.js/lib/asn1/encoders/pem.js\");\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/encoders/index.js?");

/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nconst DEREncoder = __webpack_require__(/*! ./der */ \"./node_modules/asn1.js/lib/asn1/encoders/der.js\");\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\n\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n  const p = buf.toString('base64');\n  const out = ['-----BEGIN ' + options.label + '-----'];\n\n  for (let i = 0; i < p.length; i += 64) out.push(p.slice(i, i + 64));\n\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n\n//# sourceURL=webpack://test/./node_modules/asn1.js/lib/asn1/encoders/pem.js?");

/***/ }),

/***/ "./node_modules/assert/build/assert.js":
/*!*********************************************!*\
  !*** ./node_modules/assert/build/assert.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar _require = __webpack_require__(/*! ./internal/errors */ \"./node_modules/assert/build/internal/errors.js\"),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = __webpack_require__(/*! ./internal/assert/assertion_error */ \"./node_modules/assert/build/internal/assert/assertion_error.js\");\n\nvar _require2 = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\"),\n    inspect = _require2.inspect;\n\nvar _require$types = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\").types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : __webpack_require__(/*! es6-object-assign */ \"./node_modules/es6-object-assign/index.js\").assign;\nvar objectIs = Object.is ? Object.is : __webpack_require__(/*! object-is */ \"./node_modules/object-is/index.js\");\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = __webpack_require__(/*! ./internal/util/comparisons */ \"./node_modules/assert/build/internal/util/comparisons.js\");\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\n//# sourceURL=webpack://test/./node_modules/assert/build/assert.js?");

/***/ }),

/***/ "./node_modules/assert/build/internal/assert/assertion_error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/assert/build/internal/assert/assertion_error.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _require = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\"),\n    inspect = _require.inspect;\n\nvar _require2 = __webpack_require__(/*! ../errors */ \"./node_modules/assert/build/internal/errors.js\"),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError = /*#__PURE__*/function (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;\n\n//# sourceURL=webpack://test/./node_modules/assert/build/internal/assert/assertion_error.js?");

/***/ }),

/***/ "./node_modules/assert/build/internal/errors.js":
/*!******************************************************!*\
  !*** ./node_modules/assert/build/internal/errors.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = __webpack_require__(/*! ../assert */ \"./node_modules/assert/build/assert.js\");\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\");\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = __webpack_require__(/*! ../assert */ \"./node_modules/assert/build/assert.js\");\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;\n\n//# sourceURL=webpack://test/./node_modules/assert/build/internal/errors.js?");

/***/ }),

/***/ "./node_modules/assert/build/internal/util/comparisons.js":
/*!****************************************************************!*\
  !*** ./node_modules/assert/build/internal/util/comparisons.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : __webpack_require__(/*! object-is */ \"./node_modules/object-is/index.js\");\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : __webpack_require__(/*! is-nan */ \"./node_modules/is-nan/index.js\");\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\").types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};\n\n//# sourceURL=webpack://test/./node_modules/assert/build/internal/util/comparisons.js?");

/***/ }),

/***/ "./node_modules/available-typed-arrays/index.js":
/*!******************************************************!*\
  !*** ./node_modules/available-typed-arrays/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar filter = __webpack_require__(/*! array-filter */ \"./node_modules/array-filter/index.js\");\n\nmodule.exports = function availableTypedArrays() {\n  return filter(['BigInt64Array', 'BigUint64Array', 'Float32Array', 'Float64Array', 'Int16Array', 'Int32Array', 'Int8Array', 'Uint16Array', 'Uint32Array', 'Uint8Array', 'Uint8ClampedArray'], function (typedArray) {\n    return typeof __webpack_require__.g[typedArray] === 'function';\n  });\n};\n\n//# sourceURL=webpack://test/./node_modules/available-typed-arrays/index.js?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\n//# sourceURL=webpack://test/./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/bech32/index.js":
/*!**************************************!*\
  !*** ./node_modules/bech32/index.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'; // pre-compute lookup table\n\nvar ALPHABET_MAP = {};\n\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep(pre) {\n  var b = pre >> 25;\n  return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;\n}\n\nfunction prefixChk(prefix) {\n  var chk = 1;\n\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')');\n    chk = polymodStep(chk) ^ c >> 5;\n  }\n\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ v & 0x1f;\n  }\n\n  return chk;\n}\n\nfunction encode(prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (prefix.length + 7 + words.length > LIMIT) throw new TypeError('Exceeds length limit');\n  prefix = prefix.toLowerCase(); // determine chk mod\n\n  var chk = prefixChk(prefix);\n  var result = prefix + '1';\n\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if (x >> 5 !== 0) throw new Error('Non 5-bit word');\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = chk >> (5 - i) * 5 & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result;\n}\n\nfunction decode(str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) throw new TypeError(str + ' too short');\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit'); // don't allow mixed case\n\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str);\n  str = lowered;\n  var split = str.lastIndexOf('1');\n  if (split === -1) throw new Error('No separator character for ' + str);\n  if (split === 0) throw new Error('Missing prefix for ' + str);\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) throw new Error('Data too short');\n  var chk = prefixChk(prefix);\n  var words = [];\n\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) throw new Error('Unknown character ' + c);\n    chk = polymodStep(chk) ^ v; // not in the checksum?\n\n    if (i + 6 >= wordChars.length) continue;\n    words.push(v);\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str);\n  return {\n    prefix: prefix,\n    words: words\n  };\n}\n\nfunction convert(data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n  var result = [];\n\n  for (var i = 0; i < data.length; ++i) {\n    value = value << inBits | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push(value >> bits & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding');\n    if (value << outBits - bits & maxV) throw new Error('Non-zero padding');\n  }\n\n  return result;\n}\n\nfunction toWords(bytes) {\n  return convert(bytes, 8, 5, true);\n}\n\nfunction fromWords(words) {\n  return convert(words, 5, 8, false);\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n};\n\n//# sourceURL=webpack://test/./node_modules/bech32/index.js?");

/***/ }),

/***/ "./node_modules/bignumber.js/bignumber.js":
/*!************************************************!*\
  !*** ./node_modules/bignumber.js/bignumber.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;;\n\n(function (globalObject) {\n  'use strict';\n  /*\r\n   *      bignumber.js v9.0.0\r\n   *      A JavaScript library for arbitrary-precision arithmetic.\r\n   *      https://github.com/MikeMcl/bignumber.js\r\n   *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *      MIT Licensed.\r\n   *\r\n   *      BigNumber.prototype methods     |  BigNumber methods\r\n   *                                      |\r\n   *      absoluteValue            abs    |  clone\r\n   *      comparedTo                      |  config               set\r\n   *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n   *      dividedBy                div    |      ROUNDING_MODE\r\n   *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n   *      exponentiatedBy          pow    |      RANGE\r\n   *      integerValue                    |      CRYPTO\r\n   *      isEqualTo                eq     |      MODULO_MODE\r\n   *      isFinite                        |      POW_PRECISION\r\n   *      isGreaterThan            gt     |      FORMAT\r\n   *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n   *      isInteger                       |  isBigNumber\r\n   *      isLessThan               lt     |  maximum              max\r\n   *      isLessThanOrEqualTo      lte    |  minimum              min\r\n   *      isNaN                           |  random\r\n   *      isNegative                      |  sum\r\n   *      isPositive                      |\r\n   *      isZero                          |\r\n   *      minus                           |\r\n   *      modulo                   mod    |\r\n   *      multipliedBy             times  |\r\n   *      negated                         |\r\n   *      plus                            |\r\n   *      precision                sd     |\r\n   *      shiftedBy                       |\r\n   *      squareRoot               sqrt   |\r\n   *      toExponential                   |\r\n   *      toFixed                         |\r\n   *      toFormat                        |\r\n   *      toFraction                      |\r\n   *      toJSON                          |\r\n   *      toNumber                        |\r\n   *      toPrecision                     |\r\n   *      toString                        |\r\n   *      valueOf                         |\r\n   *\r\n   */\n\n  var BigNumber,\n      isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\n      mathceil = Math.ceil,\n      mathfloor = Math.floor,\n      bignumberError = '[BigNumber Error] ',\n      tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\n      BASE = 1e14,\n      LOG_BASE = 14,\n      MAX_SAFE_INTEGER = 0x1fffffffffffff,\n      // 2^53 - 1\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\n      SQRT_BASE = 1e7,\n      // EDITABLE\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\n  MAX = 1E9; // 0 to MAX_INT32\n\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\n\n  function clone(configObject) {\n    var div,\n        convertBase,\n        parseNumeric,\n        P = BigNumber.prototype = {\n      constructor: BigNumber,\n      toString: null,\n      valueOf: null\n    },\n        ONE = new BigNumber(1),\n        //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\n    // The default values below must be integers within the inclusive ranges stated.\n    // The values can also be changed at run-time using BigNumber.set.\n    // The maximum number of decimal places for operations involving division.\n    DECIMAL_PLACES = 20,\n        // 0 to MAX\n    // The rounding mode used when rounding to the above decimal places, and when using\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\n    // UP         0 Away from zero.\n    // DOWN       1 Towards zero.\n    // CEIL       2 Towards +Infinity.\n    // FLOOR      3 Towards -Infinity.\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n    ROUNDING_MODE = 4,\n        // 0 to 8\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\n    // The exponent value at and beneath which toString returns exponential notation.\n    // Number type: -7\n    TO_EXP_NEG = -7,\n        // 0 to -MAX\n    // The exponent value at and above which toString returns exponential notation.\n    // Number type: 21\n    TO_EXP_POS = 21,\n        // 0 to MAX\n    // RANGE : [MIN_EXP, MAX_EXP]\n    // The minimum exponent value, beneath which underflow to zero occurs.\n    // Number type: -324  (5e-324)\n    MIN_EXP = -1e7,\n        // -1 to -MAX\n    // The maximum exponent value, above which overflow to Infinity occurs.\n    // Number type:  308  (1.7976931348623157e+308)\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\n    MAX_EXP = 1e7,\n        // 1 to MAX\n    // Whether to use cryptographically-secure random number generation, if available.\n    CRYPTO = false,\n        // true or false\n    // The modulo mode used when calculating the modulus: a mod n.\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\n    // The remainder (r) is calculated as: r = a - n * q.\n    //\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\n    // DOWN      1 The remainder has the same sign as the dividend.\n    //             This modulo mode is commonly known as 'truncated division' and is\n    //             equivalent to (a % n) in JavaScript.\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\n    //             The remainder is always positive.\n    //\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\n    // modes are commonly used for the modulus operation.\n    // Although the other rounding modes can also be used, they may not give useful results.\n    MODULO_MODE = 1,\n        // 0 to 9\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\n    POW_PRECISION = 0,\n        // 0 to MAX\n    // The format specification used by the BigNumber.prototype.toFormat method.\n    FORMAT = {\n      prefix: '',\n      groupSize: 3,\n      secondaryGroupSize: 0,\n      groupSeparator: ',',\n      decimalSeparator: '.',\n      fractionGroupSize: 0,\n      fractionGroupSeparator: '\\xA0',\n      // non-breaking space\n      suffix: ''\n    },\n        // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\n    // '-', '.', whitespace, or repeated character.\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz'; //------------------------------------------------------------------------------------------\n    // CONSTRUCTOR\n\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\n\n    function BigNumber(v, b) {\n      var alphabet,\n          c,\n          caseChanged,\n          e,\n          i,\n          isNum,\n          len,\n          str,\n          x = this; // Enable constructor call without `new`.\n\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\n\n      if (b == null) {\n        if (v && v._isBigNumber === true) {\n          x.s = v.s;\n\n          if (!v.c || v.e > MAX_EXP) {\n            x.c = x.e = null;\n          } else if (v.e < MIN_EXP) {\n            x.c = [x.e = 0];\n          } else {\n            x.e = v.e;\n            x.c = v.c.slice();\n          }\n\n          return;\n        }\n\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\n          // Use `1 / n` to handle minus zero also.\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1; // Fast path for integers, where n < 2147483648 (2**31).\n\n          if (v === ~~v) {\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\n\n            if (e > MAX_EXP) {\n              x.c = x.e = null;\n            } else {\n              x.e = e;\n              x.c = [v];\n            }\n\n            return;\n          }\n\n          str = String(v);\n        } else {\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\n        } // Decimal point?\n\n\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', ''); // Exponential form?\n\n        if ((i = str.search(/e/i)) > 0) {\n          // Determine exponent.\n          if (e < 0) e = i;\n          e += +str.slice(i + 1);\n          str = str.substring(0, i);\n        } else if (e < 0) {\n          // Integer.\n          e = str.length;\n        }\n      } else {\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\n        intCheck(b, 2, ALPHABET.length, 'Base'); // Allow exponential notation to be used with base 10 argument, while\n        // also rounding to DECIMAL_PLACES as with other bases.\n\n        if (b == 10) {\n          x = new BigNumber(v);\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\n        }\n\n        str = String(v);\n\n        if (isNum = typeof v == 'number') {\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1; // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\n\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\n            throw Error(tooManyDigits + v);\n          }\n        } else {\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\n        }\n\n        alphabet = ALPHABET.slice(0, b);\n        e = i = 0; // Check that str is a valid base b number.\n        // Don't use RegExp, so alphabet can contain special characters.\n\n        for (len = str.length; i < len; i++) {\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\n            if (c == '.') {\n              // If '.' is not the first character and it has not be found before.\n              if (i > e) {\n                e = len;\n                continue;\n              }\n            } else if (!caseChanged) {\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {\n                caseChanged = true;\n                i = -1;\n                e = 0;\n                continue;\n              }\n            }\n\n            return parseNumeric(x, String(v), isNum, b);\n          }\n        } // Prevent later check for length on converted number.\n\n\n        isNum = false;\n        str = convertBase(str, b, 10, x.s); // Decimal point?\n\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;\n      } // Determine leading zeros.\n\n\n      for (i = 0; str.charCodeAt(i) === 48; i++); // Determine trailing zeros.\n\n\n      for (len = str.length; str.charCodeAt(--len) === 48;);\n\n      if (str = str.slice(i, ++len)) {\n        len -= i; // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\n\n        if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\n          throw Error(tooManyDigits + x.s * v);\n        } // Overflow?\n\n\n        if ((e = e - i - 1) > MAX_EXP) {\n          // Infinity.\n          x.c = x.e = null; // Underflow?\n        } else if (e < MIN_EXP) {\n          // Zero.\n          x.c = [x.e = 0];\n        } else {\n          x.e = e;\n          x.c = []; // Transform base\n          // e is the base 10 exponent.\n          // i is where to slice str to get the first element of the coefficient array.\n\n          i = (e + 1) % LOG_BASE;\n          if (e < 0) i += LOG_BASE; // i < 1\n\n          if (i < len) {\n            if (i) x.c.push(+str.slice(0, i));\n\n            for (len -= LOG_BASE; i < len;) {\n              x.c.push(+str.slice(i, i += LOG_BASE));\n            }\n\n            i = LOG_BASE - (str = str.slice(i)).length;\n          } else {\n            i -= len;\n          }\n\n          for (; i--; str += '0');\n\n          x.c.push(+str);\n        }\n      } else {\n        // Zero.\n        x.c = [x.e = 0];\n      }\n    } // CONSTRUCTOR PROPERTIES\n\n\n    BigNumber.clone = clone;\n    BigNumber.ROUND_UP = 0;\n    BigNumber.ROUND_DOWN = 1;\n    BigNumber.ROUND_CEIL = 2;\n    BigNumber.ROUND_FLOOR = 3;\n    BigNumber.ROUND_HALF_UP = 4;\n    BigNumber.ROUND_HALF_DOWN = 5;\n    BigNumber.ROUND_HALF_EVEN = 6;\n    BigNumber.ROUND_HALF_CEIL = 7;\n    BigNumber.ROUND_HALF_FLOOR = 8;\n    BigNumber.EUCLID = 9;\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\n\n    BigNumber.config = BigNumber.set = function (obj) {\n      var p, v;\n\n      if (obj != null) {\n        if (typeof obj == 'object') {\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\n            v = obj[p];\n            intCheck(v, 0, MAX, p);\n            DECIMAL_PLACES = v;\n          } // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\n            v = obj[p];\n            intCheck(v, 0, 8, p);\n            ROUNDING_MODE = v;\n          } // EXPONENTIAL_AT {number|number[]}\n          // Integer, -MAX to MAX inclusive or\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\n            v = obj[p];\n\n            if (v && v.pop) {\n              intCheck(v[0], -MAX, 0, p);\n              intCheck(v[1], 0, MAX, p);\n              TO_EXP_NEG = v[0];\n              TO_EXP_POS = v[1];\n            } else {\n              intCheck(v, -MAX, MAX, p);\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\n            }\n          } // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'RANGE')) {\n            v = obj[p];\n\n            if (v && v.pop) {\n              intCheck(v[0], -MAX, -1, p);\n              intCheck(v[1], 1, MAX, p);\n              MIN_EXP = v[0];\n              MAX_EXP = v[1];\n            } else {\n              intCheck(v, -MAX, MAX, p);\n\n              if (v) {\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\n              } else {\n                throw Error(bignumberError + p + ' cannot be zero: ' + v);\n              }\n            }\n          } // CRYPTO {boolean} true or false.\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\n          // '[BigNumber Error] crypto unavailable'\n\n\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\n            v = obj[p];\n\n            if (v === !!v) {\n              if (v) {\n                if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n                  CRYPTO = v;\n                } else {\n                  CRYPTO = !v;\n                  throw Error(bignumberError + 'crypto unavailable');\n                }\n              } else {\n                CRYPTO = v;\n              }\n            } else {\n              throw Error(bignumberError + p + ' not true or false: ' + v);\n            }\n          } // MODULO_MODE {number} Integer, 0 to 9 inclusive.\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\n            v = obj[p];\n            intCheck(v, 0, 9, p);\n            MODULO_MODE = v;\n          } // POW_PRECISION {number} Integer, 0 to MAX inclusive.\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\n            v = obj[p];\n            intCheck(v, 0, MAX, p);\n            POW_PRECISION = v;\n          } // FORMAT {object}\n          // '[BigNumber Error] FORMAT not an object: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\n            v = obj[p];\n            if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);\n          } // ALPHABET {string}\n          // '[BigNumber Error] ALPHABET invalid: {v}'\n\n\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\n            v = obj[p]; // Disallow if only one character,\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\n\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\n              ALPHABET = v;\n            } else {\n              throw Error(bignumberError + p + ' invalid: ' + v);\n            }\n          }\n        } else {\n          // '[BigNumber Error] Object expected: {v}'\n          throw Error(bignumberError + 'Object expected: ' + obj);\n        }\n      }\n\n      return {\n        DECIMAL_PLACES: DECIMAL_PLACES,\n        ROUNDING_MODE: ROUNDING_MODE,\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\n        RANGE: [MIN_EXP, MAX_EXP],\n        CRYPTO: CRYPTO,\n        MODULO_MODE: MODULO_MODE,\n        POW_PRECISION: POW_PRECISION,\n        FORMAT: FORMAT,\n        ALPHABET: ALPHABET\n      };\n    };\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\n\n\n    BigNumber.isBigNumber = function (v) {\n      if (!v || v._isBigNumber !== true) return false;\n      if (!BigNumber.DEBUG) return true;\n      var i,\n          n,\n          c = v.c,\n          e = v.e,\n          s = v.s;\n\n      out: if ({}.toString.call(c) == '[object Array]') {\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\n          // If the first element is zero, the BigNumber value must be zero.\n          if (c[0] === 0) {\n            if (e === 0 && c.length === 1) return true;\n            break out;\n          } // Calculate number of digits that c[0] should have, based on the exponent.\n\n\n          i = (e + 1) % LOG_BASE;\n          if (i < 1) i += LOG_BASE; // Calculate number of digits of c[0].\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\n\n          if (String(c[0]).length == i) {\n            for (i = 0; i < c.length; i++) {\n              n = c[i];\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\n            } // Last element cannot be zero, unless it is the only element.\n\n\n            if (n !== 0) return true;\n          }\n        } // Infinity/NaN\n\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\n        return true;\n      }\n\n      throw Error(bignumberError + 'Invalid BigNumber: ' + v);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\n\n\n    BigNumber.maximum = BigNumber.max = function () {\n      return maxOrMin(arguments, P.lt);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\n\n\n    BigNumber.minimum = BigNumber.min = function () {\n      return maxOrMin(arguments, P.gt);\n    };\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\n\n\n    BigNumber.random = function () {\n      var pow2_53 = 0x20000000000000; // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\n      // Check if Math.random() produces more than 32 bits of randomness.\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\n\n      var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {\n        return mathfloor(Math.random() * pow2_53);\n      } : function () {\n        return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);\n      };\n      return function (dp) {\n        var a,\n            b,\n            e,\n            k,\n            v,\n            i = 0,\n            c = [],\n            rand = new BigNumber(ONE);\n        if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);\n        k = mathceil(dp / LOG_BASE);\n\n        if (CRYPTO) {\n          // Browsers supporting crypto.getRandomValues.\n          if (crypto.getRandomValues) {\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\n\n            for (; i < k;) {\n              // 53 bits:\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\n              //                                     11111 11111111 11111111\n              // 0x20000 is 2^21.\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11); // Rejection sampling:\n              // 0 <= v < 9007199254740992\n              // Probability that v >= 9e15, is\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\n\n              if (v >= 9e15) {\n                b = crypto.getRandomValues(new Uint32Array(2));\n                a[i] = b[0];\n                a[i + 1] = b[1];\n              } else {\n                // 0 <= v <= 8999999999999999\n                // 0 <= (v % 1e14) <= 99999999999999\n                c.push(v % 1e14);\n                i += 2;\n              }\n            }\n\n            i = k / 2; // Node.js supporting crypto.randomBytes.\n          } else if (crypto.randomBytes) {\n            // buffer\n            a = crypto.randomBytes(k *= 7);\n\n            for (; i < k;) {\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\n              // 0 <= v < 9007199254740992\n              v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\n\n              if (v >= 9e15) {\n                crypto.randomBytes(7).copy(a, i);\n              } else {\n                // 0 <= (v % 1e14) <= 99999999999999\n                c.push(v % 1e14);\n                i += 7;\n              }\n            }\n\n            i = k / 7;\n          } else {\n            CRYPTO = false;\n            throw Error(bignumberError + 'crypto unavailable');\n          }\n        } // Use Math.random.\n\n\n        if (!CRYPTO) {\n          for (; i < k;) {\n            v = random53bitInt();\n            if (v < 9e15) c[i++] = v % 1e14;\n          }\n        }\n\n        k = c[--i];\n        dp %= LOG_BASE; // Convert trailing digits to zeros according to dp.\n\n        if (k && dp) {\n          v = POWS_TEN[LOG_BASE - dp];\n          c[i] = mathfloor(k / v) * v;\n        } // Remove trailing elements which are zero.\n\n\n        for (; c[i] === 0; c.pop(), i--); // Zero?\n\n\n        if (i < 0) {\n          c = [e = 0];\n        } else {\n          // Remove leading elements which are zero and adjust exponent accordingly.\n          for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE); // Count the digits of the first element of c to determine leading zeros, and...\n\n\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++); // adjust the exponent accordingly.\n\n\n          if (i < LOG_BASE) e -= LOG_BASE - i;\n        }\n\n        rand.e = e;\n        rand.c = c;\n        return rand;\n      };\n    }();\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\n\n\n    BigNumber.sum = function () {\n      var i = 1,\n          args = arguments,\n          sum = new BigNumber(args[0]);\n\n      for (; i < args.length;) sum = sum.plus(args[i++]);\n\n      return sum;\n    }; // PRIVATE FUNCTIONS\n    // Called by BigNumber and BigNumber.prototype.toString.\n\n\n    convertBase = function () {\n      var decimal = '0123456789';\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\n\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\n        var j,\n            arr = [0],\n            arrL,\n            i = 0,\n            len = str.length;\n\n        for (; i < len;) {\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\n\n          arr[0] += alphabet.indexOf(str.charAt(i++));\n\n          for (j = 0; j < arr.length; j++) {\n            if (arr[j] > baseOut - 1) {\n              if (arr[j + 1] == null) arr[j + 1] = 0;\n              arr[j + 1] += arr[j] / baseOut | 0;\n              arr[j] %= baseOut;\n            }\n          }\n        }\n\n        return arr.reverse();\n      } // Convert a numeric string of baseIn to a numeric string of baseOut.\n      // If the caller is toString, we are converting from base 10 to baseOut.\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\n\n\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\n        var alphabet,\n            d,\n            e,\n            k,\n            r,\n            x,\n            xc,\n            y,\n            i = str.indexOf('.'),\n            dp = DECIMAL_PLACES,\n            rm = ROUNDING_MODE; // Non-integer.\n\n        if (i >= 0) {\n          k = POW_PRECISION; // Unlimited precision.\n\n          POW_PRECISION = 0;\n          str = str.replace('.', '');\n          y = new BigNumber(baseIn);\n          x = y.pow(str.length - i);\n          POW_PRECISION = k; // Convert str as if an integer, then restore the fraction part by dividing the\n          // result by its base raised to a power.\n\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);\n          y.e = y.c.length;\n        } // Convert the number as integer.\n\n\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET)); // xc now represents str as an integer and converted to baseOut. e is the exponent.\n\n        e = k = xc.length; // Remove trailing zeros.\n\n        for (; xc[--k] == 0; xc.pop()); // Zero?\n\n\n        if (!xc[0]) return alphabet.charAt(0); // Does str represent an integer? If so, no need for the division.\n\n        if (i < 0) {\n          --e;\n        } else {\n          x.c = xc;\n          x.e = e; // The sign is needed for correct rounding.\n\n          x.s = sign;\n          x = div(x, y, dp, rm, baseOut);\n          xc = x.c;\n          r = x.r;\n          e = x.e;\n        } // xc now represents str converted to baseOut.\n        // THe index of the rounding digit.\n\n\n        d = e + dp + 1; // The rounding digit: the digit to the right of the digit that may be rounded up.\n\n        i = xc[d]; // Look at the rounding digits and mode to determine whether to round up.\n\n        k = baseOut / 2;\n        r = r || d < 0 || xc[d + 1] != null;\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7)); // If the index of the rounding digit is not greater than zero, or xc represents\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\n        // such as 0.00001.\n\n        if (d < 1 || !xc[0]) {\n          // 1^-dp or 0\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\n        } else {\n          // Truncate xc to the required number of decimal places.\n          xc.length = d; // Round up?\n\n          if (r) {\n            // Rounding up may mean the previous digit has to be rounded up and so on.\n            for (--baseOut; ++xc[--d] > baseOut;) {\n              xc[d] = 0;\n\n              if (!d) {\n                ++e;\n                xc = [1].concat(xc);\n              }\n            }\n          } // Determine trailing zeros.\n\n\n          for (k = xc.length; !xc[--k];); // E.g. [4, 11, 15] becomes 4bf.\n\n\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])); // Add leading zeros, decimal point and trailing zeros as required.\n\n\n          str = toFixedPoint(str, e, alphabet.charAt(0));\n        } // The caller will add the sign.\n\n\n        return str;\n      };\n    }(); // Perform division in the specified base. Called by div and convertBase.\n\n\n    div = function () {\n      // Assume non-zero x and k.\n      function multiply(x, k, base) {\n        var m,\n            temp,\n            xlo,\n            xhi,\n            carry = 0,\n            i = x.length,\n            klo = k % SQRT_BASE,\n            khi = k / SQRT_BASE | 0;\n\n        for (x = x.slice(); i--;) {\n          xlo = x[i] % SQRT_BASE;\n          xhi = x[i] / SQRT_BASE | 0;\n          m = khi * xlo + xhi * klo;\n          temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\n          x[i] = temp % base;\n        }\n\n        if (carry) x = [carry].concat(x);\n        return x;\n      }\n\n      function compare(a, b, aL, bL) {\n        var i, cmp;\n\n        if (aL != bL) {\n          cmp = aL > bL ? 1 : -1;\n        } else {\n          for (i = cmp = 0; i < aL; i++) {\n            if (a[i] != b[i]) {\n              cmp = a[i] > b[i] ? 1 : -1;\n              break;\n            }\n          }\n        }\n\n        return cmp;\n      }\n\n      function subtract(a, b, aL, base) {\n        var i = 0; // Subtract b from a.\n\n        for (; aL--;) {\n          a[aL] -= i;\n          i = a[aL] < b[aL] ? 1 : 0;\n          a[aL] = i * base + a[aL] - b[aL];\n        } // Remove leading zeros.\n\n\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\n      } // x: dividend, y: divisor.\n\n\n      return function (x, y, dp, rm, base) {\n        var cmp,\n            e,\n            i,\n            more,\n            n,\n            prod,\n            prodL,\n            q,\n            qc,\n            rem,\n            remL,\n            rem0,\n            xi,\n            xL,\n            yc0,\n            yL,\n            yz,\n            s = x.s == y.s ? 1 : -1,\n            xc = x.c,\n            yc = y.c; // Either NaN, Infinity or 0?\n\n        if (!xc || !xc[0] || !yc || !yc[0]) {\n          return new BigNumber( // Return NaN if either NaN, or both Infinity or 0.\n          !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0);\n        }\n\n        q = new BigNumber(s);\n        qc = q.c = [];\n        e = x.e - y.e;\n        s = dp + e + 1;\n\n        if (!base) {\n          base = BASE;\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\n          s = s / LOG_BASE | 0;\n        } // Result exponent may be one less then the current value of e.\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\n\n\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\n\n        if (yc[i] > (xc[i] || 0)) e--;\n\n        if (s < 0) {\n          qc.push(1);\n          more = true;\n        } else {\n          xL = xc.length;\n          yL = yc.length;\n          i = 0;\n          s += 2; // Normalise xc and yc so highest order digit of yc is >= base / 2.\n\n          n = mathfloor(base / (yc[0] + 1)); // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\n\n          if (n > 1) {\n            yc = multiply(yc, n, base);\n            xc = multiply(xc, n, base);\n            yL = yc.length;\n            xL = xc.length;\n          }\n\n          xi = yL;\n          rem = xc.slice(0, yL);\n          remL = rem.length; // Add zeros to make remainder as long as divisor.\n\n          for (; remL < yL; rem[remL++] = 0);\n\n          yz = yc.slice();\n          yz = [0].concat(yz);\n          yc0 = yc[0];\n          if (yc[1] >= base / 2) yc0++; // Not necessary, but to prevent trial digit n > base, when using base 3.\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\n\n          do {\n            n = 0; // Compare divisor and remainder.\n\n            cmp = compare(yc, rem, yL, remL); // If divisor < remainder.\n\n            if (cmp < 0) {\n              // Calculate trial digit, n.\n              rem0 = rem[0];\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0); // n is how many times the divisor goes into the current remainder.\n\n              n = mathfloor(rem0 / yc0); //  Algorithm:\n              //  product = divisor multiplied by trial digit (n).\n              //  Compare product and remainder.\n              //  If product is greater than remainder:\n              //    Subtract divisor from product, decrement trial digit.\n              //  Subtract product from remainder.\n              //  If product was less than remainder at the last compare:\n              //    Compare new remainder and divisor.\n              //    If remainder is greater than divisor:\n              //      Subtract divisor from remainder, increment trial digit.\n\n              if (n > 1) {\n                // n may be > base only when base is 3.\n                if (n >= base) n = base - 1; // product = divisor * trial digit.\n\n                prod = multiply(yc, n, base);\n                prodL = prod.length;\n                remL = rem.length; // Compare product and remainder.\n                // If product > remainder then trial digit n too high.\n                // n is 1 too high about 5% of the time, and is not known to have\n                // ever been more than 1 too high.\n\n                while (compare(prod, rem, prodL, remL) == 1) {\n                  n--; // Subtract divisor from product.\n\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\n                  prodL = prod.length;\n                  cmp = 1;\n                }\n              } else {\n                // n is 0 or 1, cmp is -1.\n                // If n is 0, there is no need to compare yc and rem again below,\n                // so change cmp to 1 to avoid it.\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\n                if (n == 0) {\n                  // divisor < remainder, so n must be at least 1.\n                  cmp = n = 1;\n                } // product = divisor\n\n\n                prod = yc.slice();\n                prodL = prod.length;\n              }\n\n              if (prodL < remL) prod = [0].concat(prod); // Subtract product from remainder.\n\n              subtract(rem, prod, remL, base);\n              remL = rem.length; // If product was < remainder.\n\n              if (cmp == -1) {\n                // Compare divisor and new remainder.\n                // If divisor < new remainder, subtract divisor from remainder.\n                // Trial digit n too low.\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\n                while (compare(yc, rem, yL, remL) < 1) {\n                  n++; // Subtract divisor from remainder.\n\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\n                  remL = rem.length;\n                }\n              }\n            } else if (cmp === 0) {\n              n++;\n              rem = [0];\n            } // else cmp === 1 and n will be 0\n            // Add the next digit, n, to the result array.\n\n\n            qc[i++] = n; // Update the remainder.\n\n            if (rem[0]) {\n              rem[remL++] = xc[xi] || 0;\n            } else {\n              rem = [xc[xi]];\n              remL = 1;\n            }\n          } while ((xi++ < xL || rem[0] != null) && s--);\n\n          more = rem[0] != null; // Leading zero?\n\n          if (!qc[0]) qc.splice(0, 1);\n        }\n\n        if (base == BASE) {\n          // To calculate q.e, first get the number of digits of qc[0].\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\n\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more); // Caller is convertBase.\n        } else {\n          q.e = e;\n          q.r = +more;\n        }\n\n        return q;\n      };\n    }();\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\n\n\n    function format(n, i, rm, id) {\n      var c0, e, ne, len, str;\n      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n      if (!n.c) return n.toString();\n      c0 = n.c[0];\n      ne = n.e;\n\n      if (i == null) {\n        str = coeffToString(n.c);\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');\n      } else {\n        n = round(new BigNumber(n), i, rm); // n.e may have changed if the value was rounded up.\n\n        e = n.e;\n        str = coeffToString(n.c);\n        len = str.length; // toPrecision returns exponential notation if the number of significant digits\n        // specified is less than the number of digits necessary to represent the integer\n        // part of the value in fixed-point notation.\n        // Exponential notation.\n\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\n          // Append zeros?\n          for (; len < i; str += '0', len++);\n\n          str = toExponential(str, e); // Fixed-point notation.\n        } else {\n          i -= ne;\n          str = toFixedPoint(str, e, '0'); // Append zeros?\n\n          if (e + 1 > len) {\n            if (--i > 0) for (str += '.'; i--; str += '0');\n          } else {\n            i += e - len;\n\n            if (i > 0) {\n              if (e + 1 == len) str += '.';\n\n              for (; i--; str += '0');\n            }\n          }\n        }\n      }\n\n      return n.s < 0 && c0 ? '-' + str : str;\n    } // Handle BigNumber.max and BigNumber.min.\n\n\n    function maxOrMin(args, method) {\n      var n,\n          i = 1,\n          m = new BigNumber(args[0]);\n\n      for (; i < args.length; i++) {\n        n = new BigNumber(args[i]); // If any number is NaN, return NaN.\n\n        if (!n.s) {\n          m = n;\n          break;\n        } else if (method.call(m, n)) {\n          m = n;\n        }\n      }\n\n      return m;\n    }\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\n\n\n    function normalise(n, c, e) {\n      var i = 1,\n          j = c.length; // Remove trailing zeros.\n\n      for (; !c[--j]; c.pop()); // Calculate the base 10 exponent. First get the number of digits of c[0].\n\n\n      for (j = c[0]; j >= 10; j /= 10, i++); // Overflow?\n\n\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\n        // Infinity.\n        n.c = n.e = null; // Underflow?\n      } else if (e < MIN_EXP) {\n        // Zero.\n        n.c = [n.e = 0];\n      } else {\n        n.e = e;\n        n.c = c;\n      }\n\n      return n;\n    } // Handle values that fail the validity test in BigNumber.\n\n\n    parseNumeric = function () {\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\n          dotAfter = /^([^.]+)\\.$/,\n          dotBefore = /^\\.([^.]+)$/,\n          isInfinityOrNaN = /^-?(Infinity|NaN)$/,\n          whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\n      return function (x, str, isNum, b) {\n        var base,\n            s = isNum ? str : str.replace(whitespaceOrPlus, ''); // No exception on ±Infinity or NaN.\n\n        if (isInfinityOrNaN.test(s)) {\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\n        } else {\n          if (!isNum) {\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\n            s = s.replace(basePrefix, function (m, p1, p2) {\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\n              return !b || b == base ? p1 : m;\n            });\n\n            if (b) {\n              base = b; // E.g. '1.' to '1', '.1' to '0.1'\n\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\n            }\n\n            if (str != s) return new BigNumber(s, base);\n          } // '[BigNumber Error] Not a number: {n}'\n          // '[BigNumber Error] Not a base {b} number: {n}'\n\n\n          if (BigNumber.DEBUG) {\n            throw Error(bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\n          } // NaN\n\n\n          x.s = null;\n        }\n\n        x.c = x.e = null;\n      };\n    }();\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\n\n\n    function round(x, sd, rm, r) {\n      var d,\n          i,\n          j,\n          k,\n          n,\n          ni,\n          rd,\n          xc = x.c,\n          pows10 = POWS_TEN; // if x is not Infinity or NaN...\n\n      if (xc) {\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\n        // ni is the index of n within x.c.\n        // d is the number of digits of n.\n        // i is the index of rd within n including leading zeros.\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\n        out: {\n          // Get the number of digits of the first element of xc.\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\n\n          i = sd - d; // If the rounding digit is in the first element of xc...\n\n          if (i < 0) {\n            i += LOG_BASE;\n            j = sd;\n            n = xc[ni = 0]; // Get the rounding digit at index j of n.\n\n            rd = n / pows10[d - j - 1] % 10 | 0;\n          } else {\n            ni = mathceil((i + 1) / LOG_BASE);\n\n            if (ni >= xc.length) {\n              if (r) {\n                // Needed by sqrt.\n                for (; xc.length <= ni; xc.push(0));\n\n                n = rd = 0;\n                d = 1;\n                i %= LOG_BASE;\n                j = i - LOG_BASE + 1;\n              } else {\n                break out;\n              }\n            } else {\n              n = k = xc[ni]; // Get the number of digits of n.\n\n              for (d = 1; k >= 10; k /= 10, d++); // Get the index of rd within n.\n\n\n              i %= LOG_BASE; // Get the index of rd within n, adjusted for leading zeros.\n              // The number of leading zeros of n is given by LOG_BASE - d.\n\n              j = i - LOG_BASE + d; // Get the rounding digit at index j of n.\n\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\n            }\n          }\n\n          r = r || sd < 0 || // Are there any non-zero digits after the rounding digit?\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\n          xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\n          r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.\n          (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n\n          if (sd < 1 || !xc[0]) {\n            xc.length = 0;\n\n            if (r) {\n              // Convert sd to decimal places.\n              sd -= x.e + 1; // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\n              x.e = -sd || 0;\n            } else {\n              // Zero.\n              xc[0] = x.e = 0;\n            }\n\n            return x;\n          } // Remove excess digits.\n\n\n          if (i == 0) {\n            xc.length = ni;\n            k = 1;\n            ni--;\n          } else {\n            xc.length = ni + 1;\n            k = pows10[LOG_BASE - i]; // E.g. 56700 becomes 56000 if 7 is the rounding digit.\n            // j > 0 means i > number of leading zeros of n.\n\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\n          } // Round up?\n\n\n          if (r) {\n            for (;;) {\n              // If the digit to be rounded up is in the first element of xc...\n              if (ni == 0) {\n                // i will be the length of xc[0] before k is added.\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\n\n                j = xc[0] += k;\n\n                for (k = 1; j >= 10; j /= 10, k++); // if i != k the length has increased.\n\n\n                if (i != k) {\n                  x.e++;\n                  if (xc[0] == BASE) xc[0] = 1;\n                }\n\n                break;\n              } else {\n                xc[ni] += k;\n                if (xc[ni] != BASE) break;\n                xc[ni--] = 0;\n                k = 1;\n              }\n            }\n          } // Remove trailing zeros.\n\n\n          for (i = xc.length; xc[--i] === 0; xc.pop());\n        } // Overflow? Infinity.\n\n\n        if (x.e > MAX_EXP) {\n          x.c = x.e = null; // Underflow? Zero.\n        } else if (x.e < MIN_EXP) {\n          x.c = [x.e = 0];\n        }\n      }\n\n      return x;\n    }\n\n    function valueOf(n) {\n      var str,\n          e = n.e;\n      if (e === null) return n.toString();\n      str = coeffToString(n.c);\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');\n      return n.s < 0 ? '-' + str : str;\n    } // PROTOTYPE/INSTANCE METHODS\n\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\n\n\n    P.absoluteValue = P.abs = function () {\n      var x = new BigNumber(this);\n      if (x.s < 0) x.s = 1;\n      return x;\n    };\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\n\n\n    P.comparedTo = function (y, b) {\n      return compare(this, new BigNumber(y, b));\n    };\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\n\n\n    P.decimalPlaces = P.dp = function (dp, rm) {\n      var c,\n          n,\n          v,\n          x = this;\n\n      if (dp != null) {\n        intCheck(dp, 0, MAX);\n        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n        return round(new BigNumber(x), dp + x.e + 1, rm);\n      }\n\n      if (!(c = x.c)) return null;\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE; // Subtract the number of trailing zeros of the last number.\n\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\n      if (n < 0) n = 0;\n      return n;\n    };\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\n\n\n    P.dividedBy = P.div = function (y, b) {\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\n\n\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\n      return div(this, new BigNumber(y, b), 0, 1);\n    };\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\n\n\n    P.exponentiatedBy = P.pow = function (n, m) {\n      var half,\n          isModExp,\n          i,\n          k,\n          more,\n          nIsBig,\n          nIsNeg,\n          nIsOdd,\n          y,\n          x = this;\n      n = new BigNumber(n); // Allow NaN and ±Infinity, but not other non-integers.\n\n      if (n.c && !n.isInteger()) {\n        throw Error(bignumberError + 'Exponent not an integer: ' + valueOf(n));\n      }\n\n      if (m != null) m = new BigNumber(m); // Exponent of MAX_SAFE_INTEGER is 15.\n\n      nIsBig = n.e > 14; // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\n\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\n        // The sign of the result of pow when x is negative depends on the evenness of n.\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\n        return m ? y.mod(m) : y;\n      }\n\n      nIsNeg = n.s < 0;\n\n      if (m) {\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\n        if (isModExp) x = x.mod(m); // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\n        // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 // [1, 240000000]\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 // [80000000000000]  [99999750000000]\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\n        // If x is negative and n is odd, k = -0, else k = 0.\n        k = x.s < 0 && isOdd(n) ? -0 : 0; // If x >= 1, k = ±Infinity.\n\n        if (x.e > -1) k = 1 / k; // If n is negative return ±0, else return ±Infinity.\n\n        return new BigNumber(nIsNeg ? 1 / k : k);\n      } else if (POW_PRECISION) {\n        // Truncating each coefficient array to a length of k after each multiplication\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\n        // i.e. there will be a minimum of 28 guard digits retained.\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\n      }\n\n      if (nIsBig) {\n        half = new BigNumber(0.5);\n        if (nIsNeg) n.s = 1;\n        nIsOdd = isOdd(n);\n      } else {\n        i = Math.abs(+valueOf(n));\n        nIsOdd = i % 2;\n      }\n\n      y = new BigNumber(ONE); // Performs 54 loop iterations for n of 9007199254740991.\n\n      for (;;) {\n        if (nIsOdd) {\n          y = y.times(x);\n          if (!y.c) break;\n\n          if (k) {\n            if (y.c.length > k) y.c.length = k;\n          } else if (isModExp) {\n            y = y.mod(m); //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\n          }\n        }\n\n        if (i) {\n          i = mathfloor(i / 2);\n          if (i === 0) break;\n          nIsOdd = i % 2;\n        } else {\n          n = n.times(half);\n          round(n, n.e + 1, 1);\n\n          if (n.e > 14) {\n            nIsOdd = isOdd(n);\n          } else {\n            i = +valueOf(n);\n            if (i === 0) break;\n            nIsOdd = i % 2;\n          }\n        }\n\n        x = x.times(x);\n\n        if (k) {\n          if (x.c && x.c.length > k) x.c.length = k;\n        } else if (isModExp) {\n          x = x.mod(m); //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\n        }\n      }\n\n      if (isModExp) return y;\n      if (nIsNeg) y = ONE.div(y);\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\n    };\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\n\n\n    P.integerValue = function (rm) {\n      var n = new BigNumber(this);\n      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n      return round(n, n.e + 1, rm);\n    };\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\n\n\n    P.isEqualTo = P.eq = function (y, b) {\n      return compare(this, new BigNumber(y, b)) === 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\n\n\n    P.isFinite = function () {\n      return !!this.c;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\n\n\n    P.isGreaterThan = P.gt = function (y, b) {\n      return compare(this, new BigNumber(y, b)) > 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\n\n\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\n\n\n    P.isInteger = function () {\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\n\n\n    P.isLessThan = P.lt = function (y, b) {\n      return compare(this, new BigNumber(y, b)) < 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\n\n\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\n\n\n    P.isNaN = function () {\n      return !this.s;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\n\n\n    P.isNegative = function () {\n      return this.s < 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\n\n\n    P.isPositive = function () {\n      return this.s > 0;\n    };\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\n\n\n    P.isZero = function () {\n      return !!this.c && this.c[0] == 0;\n    };\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\n\n\n    P.minus = function (y, b) {\n      var i,\n          j,\n          t,\n          xLTy,\n          x = this,\n          a = x.s;\n      y = new BigNumber(y, b);\n      b = y.s; // Either NaN?\n\n      if (!a || !b) return new BigNumber(NaN); // Signs differ?\n\n      if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n      }\n\n      var xe = x.e / LOG_BASE,\n          ye = y.e / LOG_BASE,\n          xc = x.c,\n          yc = y.c;\n\n      if (!xe || !ye) {\n        // Either Infinity?\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN); // Either zero?\n\n        if (!xc[0] || !yc[0]) {\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\n          ROUNDING_MODE == 3 ? -0 : 0);\n        }\n      }\n\n      xe = bitFloor(xe);\n      ye = bitFloor(ye);\n      xc = xc.slice(); // Determine which is the bigger number.\n\n      if (a = xe - ye) {\n        if (xLTy = a < 0) {\n          a = -a;\n          t = xc;\n        } else {\n          ye = xe;\n          t = yc;\n        }\n\n        t.reverse(); // Prepend zeros to equalise exponents.\n\n        for (b = a; b--; t.push(0));\n\n        t.reverse();\n      } else {\n        // Exponents equal. Check digit by digit.\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\n\n        for (a = b = 0; b < j; b++) {\n          if (xc[b] != yc[b]) {\n            xLTy = xc[b] < yc[b];\n            break;\n          }\n        }\n      } // x < y? Point xc to the array of the bigger number.\n\n\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\n      b = (j = yc.length) - (i = xc.length); // Append zeros to xc if shorter.\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\n\n      if (b > 0) for (; b--; xc[i++] = 0);\n      b = BASE - 1; // Subtract yc from xc.\n\n      for (; j > a;) {\n        if (xc[--j] < yc[j]) {\n          for (i = j; i && !xc[--i]; xc[i] = b);\n\n          --xc[i];\n          xc[j] += BASE;\n        }\n\n        xc[j] -= yc[j];\n      } // Remove leading zeros and adjust exponent accordingly.\n\n\n      for (; xc[0] == 0; xc.splice(0, 1), --ye); // Zero?\n\n\n      if (!xc[0]) {\n        // Following IEEE 754 (2008) 6.3,\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\n        y.c = [y.e = 0];\n        return y;\n      } // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\n      // for finite x and y.\n\n\n      return normalise(y, xc, ye);\n    };\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\n\n\n    P.modulo = P.mod = function (y, b) {\n      var q,\n          s,\n          x = this;\n      y = new BigNumber(y, b); // Return NaN if x is Infinity or NaN, or y is NaN or zero.\n\n      if (!x.c || !y.s || y.c && !y.c[0]) {\n        return new BigNumber(NaN); // Return x if y is Infinity or x is zero.\n      } else if (!y.c || x.c && !x.c[0]) {\n        return new BigNumber(x);\n      }\n\n      if (MODULO_MODE == 9) {\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\n        // r = x - qy    where  0 <= r < abs(y)\n        s = y.s;\n        y.s = 1;\n        q = div(x, y, 0, 3);\n        y.s = s;\n        q.s *= s;\n      } else {\n        q = div(x, y, 0, MODULO_MODE);\n      }\n\n      y = x.minus(q.times(y)); // To match JavaScript %, ensure sign of zero is sign of dividend.\n\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\n      return y;\n    };\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\n\n\n    P.multipliedBy = P.times = function (y, b) {\n      var c,\n          e,\n          i,\n          j,\n          k,\n          m,\n          xcL,\n          xlo,\n          xhi,\n          ycL,\n          ylo,\n          yhi,\n          zc,\n          base,\n          sqrtBase,\n          x = this,\n          xc = x.c,\n          yc = (y = new BigNumber(y, b)).c; // Either NaN, ±Infinity or ±0?\n\n      if (!xc || !yc || !xc[0] || !yc[0]) {\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\n          y.c = y.e = y.s = null;\n        } else {\n          y.s *= x.s; // Return ±Infinity if either is ±Infinity.\n\n          if (!xc || !yc) {\n            y.c = y.e = null; // Return ±0 if either is ±0.\n          } else {\n            y.c = [0];\n            y.e = 0;\n          }\n        }\n\n        return y;\n      }\n\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\n      y.s *= x.s;\n      xcL = xc.length;\n      ycL = yc.length; // Ensure xc points to longer array and xcL to its length.\n\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i; // Initialise the result array with zeros.\n\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\n\n      base = BASE;\n      sqrtBase = SQRT_BASE;\n\n      for (i = ycL; --i >= 0;) {\n        c = 0;\n        ylo = yc[i] % sqrtBase;\n        yhi = yc[i] / sqrtBase | 0;\n\n        for (k = xcL, j = i + k; j > i;) {\n          xlo = xc[--k] % sqrtBase;\n          xhi = xc[k] / sqrtBase | 0;\n          m = yhi * xlo + xhi * ylo;\n          xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\n          zc[j--] = xlo % base;\n        }\n\n        zc[j] = c;\n      }\n\n      if (c) {\n        ++e;\n      } else {\n        zc.splice(0, 1);\n      }\n\n      return normalise(y, zc, e);\n    };\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\n\n\n    P.negated = function () {\n      var x = new BigNumber(this);\n      x.s = -x.s || null;\n      return x;\n    };\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\n\n\n    P.plus = function (y, b) {\n      var t,\n          x = this,\n          a = x.s;\n      y = new BigNumber(y, b);\n      b = y.s; // Either NaN?\n\n      if (!a || !b) return new BigNumber(NaN); // Signs differ?\n\n      if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n      }\n\n      var xe = x.e / LOG_BASE,\n          ye = y.e / LOG_BASE,\n          xc = x.c,\n          yc = y.c;\n\n      if (!xe || !ye) {\n        // Return ±Infinity if either ±Infinity.\n        if (!xc || !yc) return new BigNumber(a / 0); // Either zero?\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\n      }\n\n      xe = bitFloor(xe);\n      ye = bitFloor(ye);\n      xc = xc.slice(); // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\n\n      if (a = xe - ye) {\n        if (a > 0) {\n          ye = xe;\n          t = yc;\n        } else {\n          a = -a;\n          t = xc;\n        }\n\n        t.reverse();\n\n        for (; a--; t.push(0));\n\n        t.reverse();\n      }\n\n      a = xc.length;\n      b = yc.length; // Point xc to the longer array, and b to the shorter length.\n\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a; // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\n\n      for (a = 0; b;) {\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\n      }\n\n      if (a) {\n        xc = [a].concat(xc);\n        ++ye;\n      } // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n      // ye = MAX_EXP + 1 possible\n\n\n      return normalise(y, xc, ye);\n    };\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\n\n\n    P.precision = P.sd = function (sd, rm) {\n      var c,\n          n,\n          v,\n          x = this;\n\n      if (sd != null && sd !== !!sd) {\n        intCheck(sd, 1, MAX);\n        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);\n        return round(new BigNumber(x), sd, rm);\n      }\n\n      if (!(c = x.c)) return null;\n      v = c.length - 1;\n      n = v * LOG_BASE + 1;\n\n      if (v = c[v]) {\n        // Subtract the number of trailing zeros of the last element.\n        for (; v % 10 == 0; v /= 10, n--); // Add the number of digits of the first element.\n\n\n        for (v = c[0]; v >= 10; v /= 10, n++);\n      }\n\n      if (sd && x.e + 1 > n) n = x.e + 1;\n      return n;\n    };\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\n\n\n    P.shiftedBy = function (k) {\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n      return this.times('1e' + k);\n    };\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\n\n\n    P.squareRoot = P.sqrt = function () {\n      var m,\n          n,\n          r,\n          rep,\n          t,\n          x = this,\n          c = x.c,\n          s = x.s,\n          e = x.e,\n          dp = DECIMAL_PLACES + 4,\n          half = new BigNumber('0.5'); // Negative/NaN/Infinity/zero?\n\n      if (s !== 1 || !c || !c[0]) {\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\n      } // Initial estimate.\n\n\n      s = Math.sqrt(+valueOf(x)); // Math.sqrt underflow/overflow?\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n\n      if (s == 0 || s == 1 / 0) {\n        n = coeffToString(c);\n        if ((n.length + e) % 2 == 0) n += '0';\n        s = Math.sqrt(+n);\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\n\n        if (s == 1 / 0) {\n          n = '1e' + e;\n        } else {\n          n = s.toExponential();\n          n = n.slice(0, n.indexOf('e') + 1) + e;\n        }\n\n        r = new BigNumber(n);\n      } else {\n        r = new BigNumber(s + '');\n      } // Check for zero.\n      // r could be zero if MIN_EXP is changed after the this value was created.\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\n      // coeffToString to throw.\n\n\n      if (r.c[0]) {\n        e = r.e;\n        s = e + dp;\n        if (s < 3) s = 0; // Newton-Raphson iteration.\n\n        for (;;) {\n          t = r;\n          r = half.times(t.plus(div(x, t, dp, 1)));\n\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\n            // The exponent of r may here be one less than the final result exponent,\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\n            // are indexed correctly.\n            if (r.e < e) --s;\n            n = n.slice(s - 3, s + 1); // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\n            // iteration.\n\n            if (n == '9999' || !rep && n == '4999') {\n              // On the first iteration only, check to see if rounding up gives the\n              // exact result as the nines may infinitely repeat.\n              if (!rep) {\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\n\n                if (t.times(t).eq(x)) {\n                  r = t;\n                  break;\n                }\n              }\n\n              dp += 4;\n              s += 4;\n              rep = 1;\n            } else {\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\n              // result. If not, then there are further digits and m will be truthy.\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n                // Truncate to the first rounding digit.\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\n                m = !r.times(r).eq(x);\n              }\n\n              break;\n            }\n          }\n        }\n      }\n\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\n\n\n    P.toExponential = function (dp, rm) {\n      if (dp != null) {\n        intCheck(dp, 0, MAX);\n        dp++;\n      }\n\n      return format(this, dp, rm, 1);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\n\n\n    P.toFixed = function (dp, rm) {\n      if (dp != null) {\n        intCheck(dp, 0, MAX);\n        dp = dp + this.e + 1;\n      }\n\n      return format(this, dp, rm);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\n\n\n    P.toFormat = function (dp, rm, format) {\n      var str,\n          x = this;\n\n      if (format == null) {\n        if (dp != null && rm && typeof rm == 'object') {\n          format = rm;\n          rm = null;\n        } else if (dp && typeof dp == 'object') {\n          format = dp;\n          dp = rm = null;\n        } else {\n          format = FORMAT;\n        }\n      } else if (typeof format != 'object') {\n        throw Error(bignumberError + 'Argument not an object: ' + format);\n      }\n\n      str = x.toFixed(dp, rm);\n\n      if (x.c) {\n        var i,\n            arr = str.split('.'),\n            g1 = +format.groupSize,\n            g2 = +format.secondaryGroupSize,\n            groupSeparator = format.groupSeparator || '',\n            intPart = arr[0],\n            fractionPart = arr[1],\n            isNeg = x.s < 0,\n            intDigits = isNeg ? intPart.slice(1) : intPart,\n            len = intDigits.length;\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\n\n        if (g1 > 0 && len > 0) {\n          i = len % g1 || g1;\n          intPart = intDigits.substr(0, i);\n\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\n\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\n          if (isNeg) intPart = '-' + intPart;\n        }\n\n        str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;\n      }\n\n      return (format.prefix || '') + str + (format.suffix || '');\n    };\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\n\n\n    P.toFraction = function (md) {\n      var d,\n          d0,\n          d1,\n          d2,\n          e,\n          exp,\n          n,\n          n0,\n          n1,\n          q,\n          r,\n          s,\n          x = this,\n          xc = x.c;\n\n      if (md != null) {\n        n = new BigNumber(md); // Throw if md is less than one or is not an integer, unless it is Infinity.\n\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\n          throw Error(bignumberError + 'Argument ' + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\n        }\n      }\n\n      if (!xc) return new BigNumber(x);\n      d = new BigNumber(ONE);\n      n1 = d0 = new BigNumber(ONE);\n      d1 = n0 = new BigNumber(ONE);\n      s = coeffToString(xc); // Determine initial denominator.\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\n\n      e = d.e = s.length - x.e - 1;\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\n      md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;\n      exp = MAX_EXP;\n      MAX_EXP = 1 / 0;\n      n = new BigNumber(s); // n0 = d1 = 0\n\n      n0.c[0] = 0;\n\n      for (;;) {\n        q = div(n, d, 0, 1);\n        d2 = d0.plus(q.times(d1));\n        if (d2.comparedTo(md) == 1) break;\n        d0 = d1;\n        d1 = d2;\n        n1 = n0.plus(q.times(d2 = n1));\n        n0 = d2;\n        d = n.minus(q.times(d2 = d));\n        n = d2;\n      }\n\n      d2 = div(md.minus(d0), d1, 0, 1);\n      n0 = n0.plus(d2.times(n1));\n      d0 = d0.plus(d2.times(d1));\n      n0.s = n1.s = x.s;\n      e = e * 2; // Determine which fraction is closer to x, n0/d0 or n1/d1\n\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n      MAX_EXP = exp;\n      return r;\n    };\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\n\n\n    P.toNumber = function () {\n      return +valueOf(this);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\n\n\n    P.toPrecision = function (sd, rm) {\n      if (sd != null) intCheck(sd, 1, MAX);\n      return format(this, sd, rm, 2);\n    };\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\n\n\n    P.toString = function (b) {\n      var str,\n          n = this,\n          s = n.s,\n          e = n.e; // Infinity or NaN?\n\n      if (e === null) {\n        if (s) {\n          str = 'Infinity';\n          if (s < 0) str = '-' + str;\n        } else {\n          str = 'NaN';\n        }\n      } else {\n        if (b == null) {\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');\n        } else if (b === 10) {\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\n        } else {\n          intCheck(b, 2, ALPHABET.length, 'Base');\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\n        }\n\n        if (s < 0 && n.c[0]) str = '-' + str;\n      }\n\n      return str;\n    };\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\n\n\n    P.valueOf = P.toJSON = function () {\n      return valueOf(this);\n    };\n\n    P._isBigNumber = true;\n    if (configObject != null) BigNumber.set(configObject);\n    return BigNumber;\n  } // PRIVATE HELPER FUNCTIONS\n  // These functions don't need access to variables,\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\n\n\n  function bitFloor(n) {\n    var i = n | 0;\n    return n > 0 || n === i ? i : i - 1;\n  } // Return a coefficient array as a string of base 10 digits.\n\n\n  function coeffToString(a) {\n    var s,\n        z,\n        i = 1,\n        j = a.length,\n        r = a[0] + '';\n\n    for (; i < j;) {\n      s = a[i++] + '';\n      z = LOG_BASE - s.length;\n\n      for (; z--; s = '0' + s);\n\n      r += s;\n    } // Determine trailing zeros.\n\n\n    for (j = r.length; r.charCodeAt(--j) === 48;);\n\n    return r.slice(0, j + 1 || 1);\n  } // Compare the value of BigNumbers x and y.\n\n\n  function compare(x, y) {\n    var a,\n        b,\n        xc = x.c,\n        yc = y.c,\n        i = x.s,\n        j = y.s,\n        k = x.e,\n        l = y.e; // Either NaN?\n\n    if (!i || !j) return null;\n    a = xc && !xc[0];\n    b = yc && !yc[0]; // Either zero?\n\n    if (a || b) return a ? b ? 0 : -j : i; // Signs differ?\n\n    if (i != j) return i;\n    a = i < 0;\n    b = k == l; // Either Infinity?\n\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1; // Compare exponents.\n\n    if (!b) return k > l ^ a ? 1 : -1;\n    j = (k = xc.length) < (l = yc.length) ? k : l; // Compare digit by digit.\n\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1; // Compare lengths.\n\n\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\n  }\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\n\n\n  function intCheck(n, min, max, name) {\n    if (n < min || n > max || n !== mathfloor(n)) {\n      throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));\n    }\n  } // Assumes finite n.\n\n\n  function isOdd(n) {\n    var k = n.c.length - 1;\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\n  }\n\n  function toExponential(str, e) {\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;\n  }\n\n  function toFixedPoint(str, e, z) {\n    var len, zs; // Negative exponent?\n\n    if (e < 0) {\n      // Prepend zeros.\n      for (zs = z + '.'; ++e; zs += z);\n\n      str = zs + str; // Positive exponent\n    } else {\n      len = str.length; // Append zeros.\n\n      if (++e > len) {\n        for (zs = z, e -= len; --e; zs += z);\n\n        str += zs;\n      } else if (e < len) {\n        str = str.slice(0, e) + '.' + str.slice(e);\n      }\n    }\n\n    return str;\n  } // EXPORT\n\n\n  BigNumber = clone();\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber; // AMD.\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return BigNumber;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // Node.js and other environments that support module.exports.\n  } else {}\n})(this);\n\n//# sourceURL=webpack://test/./node_modules/bignumber.js/bignumber.js?");

/***/ }),

/***/ "./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = __webpack_require__(/*! buffer */ \"?8131\").Buffer;\n    }\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index); // 'A' - 'F'\n\n    if (c >= 65 && c <= 70) {\n      return c - 55; // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87; // '0' - '9'\n    } else {\n      return c - 48 & 0xf;\n    }\n  }\n\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // 24-bits chunks\n\n\n    var off = 0;\n    var j = 0;\n    var w;\n\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n//# sourceURL=webpack://test/./node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/brorand/index.js":
/*!***************************************!*\
  !*** ./node_modules/brorand/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var r;\n\nmodule.exports = function rand(len) {\n  if (!r) r = new Rand(null);\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\n\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n}; // Emulate crypto API using randy\n\n\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes) return this.rand.getBytes(n);\n  var res = new Uint8Array(n);\n\n  for (var i = 0; i < res.length; i++) res[i] = this.rand.getByte();\n\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    }; // Safari's WebWorkers do not have `crypto`\n\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function () {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = __webpack_require__(/*! crypto */ \"?3fc0\");\n\n    if (typeof crypto.randomBytes !== 'function') throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {}\n}\n\n//# sourceURL=webpack://test/./node_modules/brorand/index.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/aes.js":
/*!********************************************!*\
  !*** ./node_modules/browserify-aes/aes.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nfunction asUInt32Array(buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n  var len = buf.length / 4 | 0;\n  var out = new Array(len);\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4);\n  }\n\n  return out;\n}\n\nfunction scrubVec(v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0;\n  }\n}\n\nfunction cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0];\n  var SUB_MIX1 = SUB_MIX[1];\n  var SUB_MIX2 = SUB_MIX[2];\n  var SUB_MIX3 = SUB_MIX[3];\n  var s0 = M[0] ^ keySchedule[0];\n  var s1 = M[1] ^ keySchedule[1];\n  var s2 = M[2] ^ keySchedule[2];\n  var s3 = M[3] ^ keySchedule[3];\n  var t0, t1, t2, t3;\n  var ksRow = 4;\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[s1 >>> 16 & 0xff] ^ SUB_MIX2[s2 >>> 8 & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++];\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[s2 >>> 16 & 0xff] ^ SUB_MIX2[s3 >>> 8 & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++];\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[s3 >>> 16 & 0xff] ^ SUB_MIX2[s0 >>> 8 & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++];\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[s0 >>> 16 & 0xff] ^ SUB_MIX2[s1 >>> 8 & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++];\n    s0 = t0;\n    s1 = t1;\n    s2 = t2;\n    s3 = t3;\n  }\n\n  t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n  t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n  t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n  t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n  t0 = t0 >>> 0;\n  t1 = t1 >>> 0;\n  t2 = t2 >>> 0;\n  t3 = t3 >>> 0;\n  return [t0, t1, t2, t3];\n} // AES constants\n\n\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\nvar G = function () {\n  // Compute double table\n  var d = new Array(256);\n\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1;\n    } else {\n      d[j] = j << 1 ^ 0x11b;\n    }\n  }\n\n  var SBOX = [];\n  var INV_SBOX = [];\n  var SUB_MIX = [[], [], [], []];\n  var INV_SUB_MIX = [[], [], [], []]; // Walk GF(2^8)\n\n  var x = 0;\n  var xi = 0;\n\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;\n    sx = sx >>> 8 ^ sx & 0xff ^ 0x63;\n    SBOX[x] = sx;\n    INV_SBOX[sx] = x; // Compute multiplication\n\n    var x2 = d[x];\n    var x4 = d[x2];\n    var x8 = d[x4]; // Compute sub bytes, mix columns tables\n\n    var t = d[sx] * 0x101 ^ sx * 0x1010100;\n    SUB_MIX[0][x] = t << 24 | t >>> 8;\n    SUB_MIX[1][x] = t << 16 | t >>> 16;\n    SUB_MIX[2][x] = t << 8 | t >>> 24;\n    SUB_MIX[3][x] = t; // Compute inv sub bytes, inv mix columns tables\n\n    t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    INV_SUB_MIX[0][sx] = t << 24 | t >>> 8;\n    INV_SUB_MIX[1][sx] = t << 16 | t >>> 16;\n    INV_SUB_MIX[2][sx] = t << 8 | t >>> 24;\n    INV_SUB_MIX[3][sx] = t;\n\n    if (x === 0) {\n      x = xi = 1;\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]];\n      xi ^= d[d[xi]];\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  };\n}();\n\nfunction AES(key) {\n  this._key = asUInt32Array(key);\n\n  this._reset();\n}\n\nAES.blockSize = 4 * 4;\nAES.keySize = 256 / 8;\nAES.prototype.blockSize = AES.blockSize;\nAES.prototype.keySize = AES.keySize;\n\nAES.prototype._reset = function () {\n  var keyWords = this._key;\n  var keySize = keyWords.length;\n  var nRounds = keySize + 6;\n  var ksRows = (nRounds + 1) * 4;\n  var keySchedule = [];\n\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k];\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1];\n\n    if (k % keySize === 0) {\n      t = t << 8 | t >>> 24;\n      t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 0xff] << 16 | G.SBOX[t >>> 8 & 0xff] << 8 | G.SBOX[t & 0xff];\n      t ^= RCON[k / keySize | 0] << 24;\n    } else if (keySize > 6 && k % keySize === 4) {\n      t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 0xff] << 16 | G.SBOX[t >>> 8 & 0xff] << 8 | G.SBOX[t & 0xff];\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t;\n  }\n\n  var invKeySchedule = [];\n\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik;\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)];\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt;\n    } else {\n      invKeySchedule[ik] = G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[tt >>> 16 & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[tt >>> 8 & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]];\n    }\n  }\n\n  this._nRounds = nRounds;\n  this._keySchedule = keySchedule;\n  this._invKeySchedule = invKeySchedule;\n};\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M);\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds);\n};\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M);\n  var buf = Buffer.allocUnsafe(16);\n  buf.writeUInt32BE(out[0], 0);\n  buf.writeUInt32BE(out[1], 4);\n  buf.writeUInt32BE(out[2], 8);\n  buf.writeUInt32BE(out[3], 12);\n  return buf;\n};\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M); // swap\n\n  var m1 = M[1];\n  M[1] = M[3];\n  M[3] = m1;\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds);\n  var buf = Buffer.allocUnsafe(16);\n  buf.writeUInt32BE(out[0], 0);\n  buf.writeUInt32BE(out[3], 4);\n  buf.writeUInt32BE(out[2], 8);\n  buf.writeUInt32BE(out[1], 12);\n  return buf;\n};\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule);\n  scrubVec(this._invKeySchedule);\n  scrubVec(this._key);\n};\n\nmodule.exports.AES = AES;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/aes.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/authCipher.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/authCipher.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var aes = __webpack_require__(/*! ./aes */ \"./node_modules/browserify-aes/aes.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar Transform = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar GHASH = __webpack_require__(/*! ./ghash */ \"./node_modules/browserify-aes/ghash.js\");\n\nvar xor = __webpack_require__(/*! buffer-xor */ \"./node_modules/buffer-xor/index.js\");\n\nvar incr32 = __webpack_require__(/*! ./incr32 */ \"./node_modules/browserify-aes/incr32.js\");\n\nfunction xorTest(a, b) {\n  var out = 0;\n  if (a.length !== b.length) out++;\n  var len = Math.min(a.length, b.length);\n\n  for (var i = 0; i < len; ++i) {\n    out += a[i] ^ b[i];\n  }\n\n  return out;\n}\n\nfunction calcIv(self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])]);\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])]);\n  }\n\n  var ghash = new GHASH(ck);\n  var len = iv.length;\n  var toPad = len % 16;\n  ghash.update(iv);\n\n  if (toPad) {\n    toPad = 16 - toPad;\n    ghash.update(Buffer.alloc(toPad, 0));\n  }\n\n  ghash.update(Buffer.alloc(8, 0));\n  var ivBits = len * 8;\n  var tail = Buffer.alloc(8);\n  tail.writeUIntBE(ivBits, 0, 8);\n  ghash.update(tail);\n  self._finID = ghash.state;\n  var out = Buffer.from(self._finID);\n  incr32(out);\n  return out;\n}\n\nfunction StreamCipher(mode, key, iv, decrypt) {\n  Transform.call(this);\n  var h = Buffer.alloc(4, 0);\n  this._cipher = new aes.AES(key);\n\n  var ck = this._cipher.encryptBlock(h);\n\n  this._ghash = new GHASH(ck);\n  iv = calcIv(this, iv, ck);\n  this._prev = Buffer.from(iv);\n  this._cache = Buffer.allocUnsafe(0);\n  this._secCache = Buffer.allocUnsafe(0);\n  this._decrypt = decrypt;\n  this._alen = 0;\n  this._len = 0;\n  this._mode = mode;\n  this._authTag = null;\n  this._called = false;\n}\n\ninherits(StreamCipher, Transform);\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - this._alen % 16;\n\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0);\n\n      this._ghash.update(rump);\n    }\n  }\n\n  this._called = true;\n\n  var out = this._mode.encrypt(this, chunk);\n\n  if (this._decrypt) {\n    this._ghash.update(chunk);\n  } else {\n    this._ghash.update(out);\n  }\n\n  this._len += chunk.length;\n  return out;\n};\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data');\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data');\n  this._authTag = tag;\n\n  this._cipher.scrub();\n};\n\nStreamCipher.prototype.getAuthTag = function getAuthTag() {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state');\n  return this._authTag;\n};\n\nStreamCipher.prototype.setAuthTag = function setAuthTag(tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state');\n  this._authTag = tag;\n};\n\nStreamCipher.prototype.setAAD = function setAAD(buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state');\n\n  this._ghash.update(buf);\n\n  this._alen += buf.length;\n};\n\nmodule.exports = StreamCipher;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/authCipher.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/browser.js":
/*!************************************************!*\
  !*** ./node_modules/browserify-aes/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var ciphers = __webpack_require__(/*! ./encrypter */ \"./node_modules/browserify-aes/encrypter.js\");\n\nvar deciphers = __webpack_require__(/*! ./decrypter */ \"./node_modules/browserify-aes/decrypter.js\");\n\nvar modes = __webpack_require__(/*! ./modes/list.json */ \"./node_modules/browserify-aes/modes/list.json\");\n\nfunction getCiphers() {\n  return Object.keys(modes);\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher;\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;\nexports.createDecipher = exports.Decipher = deciphers.createDecipher;\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv;\nexports.listCiphers = exports.getCiphers = getCiphers;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/browser.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/decrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/decrypter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var AuthCipher = __webpack_require__(/*! ./authCipher */ \"./node_modules/browserify-aes/authCipher.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar MODES = __webpack_require__(/*! ./modes */ \"./node_modules/browserify-aes/modes/index.js\");\n\nvar StreamCipher = __webpack_require__(/*! ./streamCipher */ \"./node_modules/browserify-aes/streamCipher.js\");\n\nvar Transform = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nvar aes = __webpack_require__(/*! ./aes */ \"./node_modules/browserify-aes/aes.js\");\n\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"./node_modules/evp_bytestokey/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nfunction Decipher(mode, key, iv) {\n  Transform.call(this);\n  this._cache = new Splitter();\n  this._last = void 0;\n  this._cipher = new aes.AES(key);\n  this._prev = Buffer.from(iv);\n  this._mode = mode;\n  this._autopadding = true;\n}\n\ninherits(Decipher, Transform);\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data);\n\n  var chunk;\n  var thing;\n  var out = [];\n\n  while (chunk = this._cache.get(this._autopadding)) {\n    thing = this._mode.decrypt(this, chunk);\n    out.push(thing);\n  }\n\n  return Buffer.concat(out);\n};\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush();\n\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk));\n  } else if (chunk) {\n    throw new Error('data not multiple of block length');\n  }\n};\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo;\n  return this;\n};\n\nfunction Splitter() {\n  this.cache = Buffer.allocUnsafe(0);\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data]);\n};\n\nSplitter.prototype.get = function (autoPadding) {\n  var out;\n\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16);\n      this.cache = this.cache.slice(16);\n      return out;\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16);\n      this.cache = this.cache.slice(16);\n      return out;\n    }\n  }\n\n  return null;\n};\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache;\n};\n\nfunction unpad(last) {\n  var padded = last[15];\n\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data');\n  }\n\n  var i = -1;\n\n  while (++i < padded) {\n    if (last[i + (16 - padded)] !== padded) {\n      throw new Error('unable to decrypt data');\n    }\n  }\n\n  if (padded === 16) return;\n  return last.slice(0, 16 - padded);\n}\n\nfunction createDecipheriv(suite, password, iv) {\n  var config = MODES[suite.toLowerCase()];\n  if (!config) throw new TypeError('invalid suite type');\n  if (typeof iv === 'string') iv = Buffer.from(iv);\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length);\n  if (typeof password === 'string') password = Buffer.from(password);\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length);\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true);\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true);\n  }\n\n  return new Decipher(config.module, password, iv);\n}\n\nfunction createDecipher(suite, password) {\n  var config = MODES[suite.toLowerCase()];\n  if (!config) throw new TypeError('invalid suite type');\n  var keys = ebtk(password, false, config.key, config.iv);\n  return createDecipheriv(suite, keys.key, keys.iv);\n}\n\nexports.createDecipher = createDecipher;\nexports.createDecipheriv = createDecipheriv;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/decrypter.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/encrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/encrypter.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var MODES = __webpack_require__(/*! ./modes */ \"./node_modules/browserify-aes/modes/index.js\");\n\nvar AuthCipher = __webpack_require__(/*! ./authCipher */ \"./node_modules/browserify-aes/authCipher.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar StreamCipher = __webpack_require__(/*! ./streamCipher */ \"./node_modules/browserify-aes/streamCipher.js\");\n\nvar Transform = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nvar aes = __webpack_require__(/*! ./aes */ \"./node_modules/browserify-aes/aes.js\");\n\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"./node_modules/evp_bytestokey/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nfunction Cipher(mode, key, iv) {\n  Transform.call(this);\n  this._cache = new Splitter();\n  this._cipher = new aes.AES(key);\n  this._prev = Buffer.from(iv);\n  this._mode = mode;\n  this._autopadding = true;\n}\n\ninherits(Cipher, Transform);\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data);\n\n  var chunk;\n  var thing;\n  var out = [];\n\n  while (chunk = this._cache.get()) {\n    thing = this._mode.encrypt(this, chunk);\n    out.push(thing);\n  }\n\n  return Buffer.concat(out);\n};\n\nvar PADDING = Buffer.alloc(16, 0x10);\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush();\n\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk);\n\n    this._cipher.scrub();\n\n    return chunk;\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub();\n\n    throw new Error('data not multiple of block length');\n  }\n};\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo;\n  return this;\n};\n\nfunction Splitter() {\n  this.cache = Buffer.allocUnsafe(0);\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data]);\n};\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16);\n    this.cache = this.cache.slice(16);\n    return out;\n  }\n\n  return null;\n};\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length;\n  var padBuff = Buffer.allocUnsafe(len);\n  var i = -1;\n\n  while (++i < len) {\n    padBuff.writeUInt8(len, i);\n  }\n\n  return Buffer.concat([this.cache, padBuff]);\n};\n\nfunction createCipheriv(suite, password, iv) {\n  var config = MODES[suite.toLowerCase()];\n  if (!config) throw new TypeError('invalid suite type');\n  if (typeof password === 'string') password = Buffer.from(password);\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length);\n  if (typeof iv === 'string') iv = Buffer.from(iv);\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length);\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv);\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv);\n  }\n\n  return new Cipher(config.module, password, iv);\n}\n\nfunction createCipher(suite, password) {\n  var config = MODES[suite.toLowerCase()];\n  if (!config) throw new TypeError('invalid suite type');\n  var keys = ebtk(password, false, config.key, config.iv);\n  return createCipheriv(suite, keys.key, keys.iv);\n}\n\nexports.createCipheriv = createCipheriv;\nexports.createCipher = createCipher;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/encrypter.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/ghash.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-aes/ghash.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar ZEROES = Buffer.alloc(16, 0);\n\nfunction toArray(buf) {\n  return [buf.readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12)];\n}\n\nfunction fromArray(out) {\n  var buf = Buffer.allocUnsafe(16);\n  buf.writeUInt32BE(out[0] >>> 0, 0);\n  buf.writeUInt32BE(out[1] >>> 0, 4);\n  buf.writeUInt32BE(out[2] >>> 0, 8);\n  buf.writeUInt32BE(out[3] >>> 0, 12);\n  return buf;\n}\n\nfunction GHASH(key) {\n  this.h = key;\n  this.state = Buffer.alloc(16, 0);\n  this.cache = Buffer.allocUnsafe(0);\n} // from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\n\n\nGHASH.prototype.ghash = function (block) {\n  var i = -1;\n\n  while (++i < block.length) {\n    this.state[i] ^= block[i];\n  }\n\n  this._multiply();\n};\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h);\n  var Zi = [0, 0, 0, 0];\n  var j, xi, lsbVi;\n  var i = -1;\n\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0;\n\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0];\n      Zi[1] ^= Vi[1];\n      Zi[2] ^= Vi[2];\n      Zi[3] ^= Vi[3];\n    } // Store the value of LSB(V_i)\n\n\n    lsbVi = (Vi[3] & 1) !== 0; // V_i+1 = V_i >> 1\n\n    for (j = 3; j > 0; j--) {\n      Vi[j] = Vi[j] >>> 1 | (Vi[j - 1] & 1) << 31;\n    }\n\n    Vi[0] = Vi[0] >>> 1; // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ 0xe1 << 24;\n    }\n  }\n\n  this.state = fromArray(Zi);\n};\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf]);\n  var chunk;\n\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16);\n    this.cache = this.cache.slice(16);\n    this.ghash(chunk);\n  }\n};\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16));\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]));\n  return this.state;\n};\n\nmodule.exports = GHASH;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/ghash.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/incr32.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-aes/incr32.js ***!
  \***********************************************/
/***/ ((module) => {

eval("function incr32(iv) {\n  var len = iv.length;\n  var item;\n\n  while (len--) {\n    item = iv.readUInt8(len);\n\n    if (item === 255) {\n      iv.writeUInt8(0, len);\n    } else {\n      item++;\n      iv.writeUInt8(item, len);\n      break;\n    }\n  }\n}\n\nmodule.exports = incr32;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/incr32.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/cbc.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cbc.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var xor = __webpack_require__(/*! buffer-xor */ \"./node_modules/buffer-xor/index.js\");\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev);\n  self._prev = self._cipher.encryptBlock(data);\n  return self._prev;\n};\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev;\n  self._prev = block;\n\n  var out = self._cipher.decryptBlock(block);\n\n  return xor(out, pad);\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/cbc.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar xor = __webpack_require__(/*! buffer-xor */ \"./node_modules/buffer-xor/index.js\");\n\nfunction encryptStart(self, data, decrypt) {\n  var len = data.length;\n  var out = xor(data, self._cache);\n  self._cache = self._cache.slice(len);\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out]);\n  return out;\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0);\n  var len;\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev);\n      self._prev = Buffer.allocUnsafe(0);\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length;\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)]);\n      data = data.slice(len);\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)]);\n      break;\n    }\n  }\n\n  return out;\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/cfb.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb1.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb1.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nfunction encryptByte(self, byteParam, decrypt) {\n  var pad;\n  var i = -1;\n  var len = 8;\n  var out = 0;\n  var bit, value;\n\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev);\n    bit = byteParam & 1 << 7 - i ? 0x80 : 0;\n    value = pad[0] ^ bit;\n    out += (value & 0x80) >> i % 8;\n    self._prev = shiftIn(self._prev, decrypt ? bit : value);\n  }\n\n  return out;\n}\n\nfunction shiftIn(buffer, value) {\n  var len = buffer.length;\n  var i = -1;\n  var out = Buffer.allocUnsafe(buffer.length);\n  buffer = Buffer.concat([buffer, Buffer.from([value])]);\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> 7;\n  }\n\n  return out;\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length;\n  var out = Buffer.allocUnsafe(len);\n  var i = -1;\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt);\n  }\n\n  return out;\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/cfb1.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb8.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb8.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nfunction encryptByte(self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev);\n\n  var out = pad[0] ^ byteParam;\n  self._prev = Buffer.concat([self._prev.slice(1), Buffer.from([decrypt ? byteParam : out])]);\n  return out;\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length;\n  var out = Buffer.allocUnsafe(len);\n  var i = -1;\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt);\n  }\n\n  return out;\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/cfb8.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/ctr.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ctr.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var xor = __webpack_require__(/*! buffer-xor */ \"./node_modules/buffer-xor/index.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar incr32 = __webpack_require__(/*! ../incr32 */ \"./node_modules/browserify-aes/incr32.js\");\n\nfunction getBlock(self) {\n  var out = self._cipher.encryptBlockRaw(self._prev);\n\n  incr32(self._prev);\n  return out;\n}\n\nvar blockSize = 16;\n\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize);\n  var start = self._cache.length;\n  self._cache = Buffer.concat([self._cache, Buffer.allocUnsafe(chunkNum * blockSize)]);\n\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self);\n    var offset = start + i * blockSize;\n\n    self._cache.writeUInt32BE(out[0], offset + 0);\n\n    self._cache.writeUInt32BE(out[1], offset + 4);\n\n    self._cache.writeUInt32BE(out[2], offset + 8);\n\n    self._cache.writeUInt32BE(out[3], offset + 12);\n  }\n\n  var pad = self._cache.slice(0, chunk.length);\n\n  self._cache = self._cache.slice(chunk.length);\n  return xor(chunk, pad);\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/ctr.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/ecb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ecb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block);\n};\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block);\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/ecb.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var modeModules = {\n  ECB: __webpack_require__(/*! ./ecb */ \"./node_modules/browserify-aes/modes/ecb.js\"),\n  CBC: __webpack_require__(/*! ./cbc */ \"./node_modules/browserify-aes/modes/cbc.js\"),\n  CFB: __webpack_require__(/*! ./cfb */ \"./node_modules/browserify-aes/modes/cfb.js\"),\n  CFB8: __webpack_require__(/*! ./cfb8 */ \"./node_modules/browserify-aes/modes/cfb8.js\"),\n  CFB1: __webpack_require__(/*! ./cfb1 */ \"./node_modules/browserify-aes/modes/cfb1.js\"),\n  OFB: __webpack_require__(/*! ./ofb */ \"./node_modules/browserify-aes/modes/ofb.js\"),\n  CTR: __webpack_require__(/*! ./ctr */ \"./node_modules/browserify-aes/modes/ctr.js\"),\n  GCM: __webpack_require__(/*! ./ctr */ \"./node_modules/browserify-aes/modes/ctr.js\")\n};\n\nvar modes = __webpack_require__(/*! ./list.json */ \"./node_modules/browserify-aes/modes/list.json\");\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode];\n}\n\nmodule.exports = modes;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/index.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/ofb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ofb.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var xor = __webpack_require__(/*! buffer-xor */ \"./node_modules/buffer-xor/index.js\");\n\nfunction getBlock(self) {\n  self._prev = self._cipher.encryptBlock(self._prev);\n  return self._prev;\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)]);\n  }\n\n  var pad = self._cache.slice(0, chunk.length);\n\n  self._cache = self._cache.slice(chunk.length);\n  return xor(chunk, pad);\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/ofb.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/streamCipher.js":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/streamCipher.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var aes = __webpack_require__(/*! ./aes */ \"./node_modules/browserify-aes/aes.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar Transform = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nfunction StreamCipher(mode, key, iv, decrypt) {\n  Transform.call(this);\n  this._cipher = new aes.AES(key);\n  this._prev = Buffer.from(iv);\n  this._cache = Buffer.allocUnsafe(0);\n  this._secCache = Buffer.allocUnsafe(0);\n  this._decrypt = decrypt;\n  this._mode = mode;\n}\n\ninherits(StreamCipher, Transform);\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt);\n};\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub();\n};\n\nmodule.exports = StreamCipher;\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/streamCipher.js?");

/***/ }),

/***/ "./node_modules/browserify-cipher/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-cipher/browser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var DES = __webpack_require__(/*! browserify-des */ \"./node_modules/browserify-des/index.js\");\n\nvar aes = __webpack_require__(/*! browserify-aes/browser */ \"./node_modules/browserify-aes/browser.js\");\n\nvar aesModes = __webpack_require__(/*! browserify-aes/modes */ \"./node_modules/browserify-aes/modes/index.js\");\n\nvar desModes = __webpack_require__(/*! browserify-des/modes */ \"./node_modules/browserify-des/modes.js\");\n\nvar ebtk = __webpack_require__(/*! evp_bytestokey */ \"./node_modules/evp_bytestokey/index.js\");\n\nfunction createCipher(suite, password) {\n  suite = suite.toLowerCase();\n  var keyLen, ivLen;\n\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key;\n    ivLen = aesModes[suite].iv;\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8;\n    ivLen = desModes[suite].iv;\n  } else {\n    throw new TypeError('invalid suite type');\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen);\n  return createCipheriv(suite, keys.key, keys.iv);\n}\n\nfunction createDecipher(suite, password) {\n  suite = suite.toLowerCase();\n  var keyLen, ivLen;\n\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key;\n    ivLen = aesModes[suite].iv;\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8;\n    ivLen = desModes[suite].iv;\n  } else {\n    throw new TypeError('invalid suite type');\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen);\n  return createDecipheriv(suite, keys.key, keys.iv);\n}\n\nfunction createCipheriv(suite, key, iv) {\n  suite = suite.toLowerCase();\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv);\n  if (desModes[suite]) return new DES({\n    key: key,\n    iv: iv,\n    mode: suite\n  });\n  throw new TypeError('invalid suite type');\n}\n\nfunction createDecipheriv(suite, key, iv) {\n  suite = suite.toLowerCase();\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv);\n  if (desModes[suite]) return new DES({\n    key: key,\n    iv: iv,\n    mode: suite,\n    decrypt: true\n  });\n  throw new TypeError('invalid suite type');\n}\n\nfunction getCiphers() {\n  return Object.keys(desModes).concat(aes.getCiphers());\n}\n\nexports.createCipher = exports.Cipher = createCipher;\nexports.createCipheriv = exports.Cipheriv = createCipheriv;\nexports.createDecipher = exports.Decipher = createDecipher;\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv;\nexports.listCiphers = exports.getCiphers = getCiphers;\n\n//# sourceURL=webpack://test/./node_modules/browserify-cipher/browser.js?");

/***/ }),

/***/ "./node_modules/browserify-des/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var CipherBase = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nvar des = __webpack_require__(/*! des.js */ \"./node_modules/des.js/lib/des.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n};\nmodes.des = modes['des-cbc'];\nmodes.des3 = modes['des-ede3-cbc'];\nmodule.exports = DES;\ninherits(DES, CipherBase);\n\nfunction DES(opts) {\n  CipherBase.call(this);\n  var modeName = opts.mode.toLowerCase();\n  var mode = modes[modeName];\n  var type;\n\n  if (opts.decrypt) {\n    type = 'decrypt';\n  } else {\n    type = 'encrypt';\n  }\n\n  var key = opts.key;\n\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key);\n  }\n\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)]);\n  }\n\n  var iv = opts.iv;\n\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv);\n  }\n\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  });\n}\n\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data));\n};\n\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final());\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-des/index.js?");

/***/ }),

/***/ "./node_modules/browserify-des/modes.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/modes.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports[\"des-ecb\"] = {\n  key: 8,\n  iv: 0\n};\nexports[\"des-cbc\"] = exports.des = {\n  key: 8,\n  iv: 8\n};\nexports[\"des-ede3-cbc\"] = exports.des3 = {\n  key: 24,\n  iv: 8\n};\nexports[\"des-ede3\"] = {\n  key: 24,\n  iv: 0\n};\nexports[\"des-ede-cbc\"] = {\n  key: 16,\n  iv: 8\n};\nexports[\"des-ede\"] = {\n  key: 16,\n  iv: 0\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-des/modes.js?");

/***/ }),

/***/ "./node_modules/browserify-rsa/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-rsa/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var BN = __webpack_require__(/*! bn.js */ \"./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js\");\n\nvar randomBytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\n\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder: r.invm(priv.modulus)\n  };\n}\n\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r;\n\n  do {\n    r = new BN(randomBytes(len));\n  } while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));\n\n  return r;\n}\n\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(BN.mont(priv.prime1));\n  var c2 = blinded.toRed(BN.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1).fromRed();\n  var m2 = c2.redPow(priv.exponent2).fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p).imul(q);\n  return m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);\n}\n\ncrt.getr = getr;\nmodule.exports = crt;\n\n//# sourceURL=webpack://test/./node_modules/browserify-rsa/index.js?");

/***/ }),

/***/ "./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js":
/*!******************************************************************!*\
  !*** ./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = __webpack_require__(/*! buffer */ \"?f9d4\").Buffer;\n    }\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this._strip();\n  };\n\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index); // '0' - '9'\n\n    if (c >= 48 && c <= 57) {\n      return c - 48; // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55; // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // 24-bits chunks\n\n\n    var off = 0;\n    var j = 0;\n    var w;\n\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        b = c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move(dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move(dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype._strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  }; // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n\n\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate(ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position++] = word & 0xff;\n\n      if (position < res.length) {\n        res[position++] = word >> 8 & 0xff;\n      }\n\n      if (position < res.length) {\n        res[position++] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position--] = word & 0xff;\n\n      if (position >= 0) {\n        res[position--] = word >> 8 & 0xff;\n      }\n\n      if (position >= 0) {\n        res[position--] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = num.words[off] >>> wbit & 0x01;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q._strip();\n    }\n\n    a._strip(); // Denormalize\n\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  }; // WARNING: DEPRECATED\n\n\n  BN.prototype.modn = function modn(num) {\n    return this.modrn(num);\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n//# sourceURL=webpack://test/./node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/browserify-sign/algos.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-sign/algos.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./browser/algorithms.json */ \"./node_modules/browserify-sign/browser/algorithms.json\");\n\n//# sourceURL=webpack://test/./node_modules/browserify-sign/algos.js?");

/***/ }),

/***/ "./node_modules/browserify-sign/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\n\nvar stream = __webpack_require__(/*! readable-stream */ \"./node_modules/readable-stream/readable-browser.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar sign = __webpack_require__(/*! ./sign */ \"./node_modules/browserify-sign/browser/sign.js\");\n\nvar verify = __webpack_require__(/*! ./verify */ \"./node_modules/browserify-sign/browser/verify.js\");\n\nvar algorithms = __webpack_require__(/*! ./algorithms.json */ \"./node_modules/browserify-sign/browser/algorithms.json\");\n\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n  var data = algorithms[algorithm];\n  if (!data) throw new Error('Unknown message digest');\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\n\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc);\n\n  this._hash.update(data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n\n  var hash = this._hash.digest();\n\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n  var data = algorithms[algorithm];\n  if (!data) throw new Error('Unknown message digest');\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\n\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc);\n\n  this._hash.update(data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc);\n  this.end();\n\n  var hash = this._hash.digest();\n\n  return verify(sig, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};\n\n//# sourceURL=webpack://test/./node_modules/browserify-sign/browser/index.js?");

/***/ }),

/***/ "./node_modules/browserify-sign/browser/sign.js":
/*!******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/sign.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar createHmac = __webpack_require__(/*! create-hmac */ \"./node_modules/create-hmac/browser.js\");\n\nvar crt = __webpack_require__(/*! browserify-rsa */ \"./node_modules/browserify-rsa/index.js\");\n\nvar EC = __webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\").ec;\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js\");\n\nvar parseKeys = __webpack_require__(/*! parse-asn1 */ \"./node_modules/parse-asn1/index.js\");\n\nvar curves = __webpack_require__(/*! ./curves.json */ \"./node_modules/browserify-sign/browser/curves.json\");\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type');\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type');\n    return dsaSign(hash, priv, hashType);\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type');\n  }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n\n  while (hash.length + pad.length + 1 < len) pad.push(0xff);\n\n  pad.push(0x00);\n  var i = -1;\n\n  while (++i < hash.length) pad.push(hash[i]);\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'));\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n  return Buffer.from(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r);\n  if (s[0] & 0x80) s = [0].concat(s);\n  var total = r.length + s.length + 4;\n  var res = [0x30, total, 0x02, r.length];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return {\n    k: k,\n    v: v\n  };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) bits.ishrn(shift);\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = Buffer.alloc(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;\n\n//# sourceURL=webpack://test/./node_modules/browserify-sign/browser/sign.js?");

/***/ }),

/***/ "./node_modules/browserify-sign/browser/verify.js":
/*!********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/verify.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js\");\n\nvar EC = __webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\").ec;\n\nvar parseKeys = __webpack_require__(/*! parse-asn1 */ \"./node_modules/parse-asn1/index.js\");\n\nvar curves = __webpack_require__(/*! ./curves.json */ \"./node_modules/browserify-sign/browser/curves.json\");\n\nfunction verify(sig, hash, key, signType, tag) {\n  var pub = parseKeys(key);\n\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type');\n    return ecVerify(sig, hash, pub);\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type');\n    return dsaVerify(sig, hash, pub);\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type');\n  }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = pub.modulus.byteLength();\n  var pad = [1];\n  var padNum = 0;\n\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff);\n    padNum++;\n  }\n\n  pad.push(0x00);\n  var i = -1;\n\n  while (++i < hash.length) {\n    pad.push(hash[i]);\n  }\n\n  pad = Buffer.from(pad);\n  var red = BN.mont(pub.modulus);\n  sig = new BN(sig).toRed(red);\n  sig = sig.redPow(new BN(pub.publicExponent));\n  sig = Buffer.from(sig.fromRed().toArray());\n  var out = padNum < 8 ? 1 : 0;\n  len = Math.min(sig.length, pad.length);\n  if (sig.length !== pad.length) out = 1;\n  i = -1;\n\n  while (++i < len) out |= sig[i] ^ pad[i];\n\n  return out === 0;\n}\n\nfunction ecVerify(sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')];\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'));\n  var curve = new EC(curveId);\n  var pubkey = pub.data.subjectPrivateKey.data;\n  return curve.verify(hash, sig, pubkey);\n}\n\nfunction dsaVerify(sig, hash, pub) {\n  var p = pub.data.p;\n  var q = pub.data.q;\n  var g = pub.data.g;\n  var y = pub.data.pub_key;\n  var unpacked = parseKeys.signature.decode(sig, 'der');\n  var s = unpacked.s;\n  var r = unpacked.r;\n  checkValue(s, q);\n  checkValue(r, q);\n  var montp = BN.mont(p);\n  var w = s.invm(q);\n  var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);\n  return v.cmp(r) === 0;\n}\n\nfunction checkValue(b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig');\n  if (b.cmp(q) >= q) throw new Error('invalid sig');\n}\n\nmodule.exports = verify;\n\n//# sourceURL=webpack://test/./node_modules/browserify-sign/browser/verify.js?");

/***/ }),

/***/ "./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js":
/*!*******************************************************************!*\
  !*** ./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = __webpack_require__(/*! buffer */ \"?7a28\").Buffer;\n    }\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this._strip();\n  };\n\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index); // '0' - '9'\n\n    if (c >= 48 && c <= 57) {\n      return c - 48; // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55; // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // 24-bits chunks\n\n\n    var off = 0;\n    var j = 0;\n    var w;\n\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        b = c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move(dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move(dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype._strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  }; // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n\n\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate(ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position++] = word & 0xff;\n\n      if (position < res.length) {\n        res[position++] = word >> 8 & 0xff;\n      }\n\n      if (position < res.length) {\n        res[position++] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position--] = word & 0xff;\n\n      if (position >= 0) {\n        res[position--] = word >> 8 & 0xff;\n      }\n\n      if (position >= 0) {\n        res[position--] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = num.words[off] >>> wbit & 0x01;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q._strip();\n    }\n\n    a._strip(); // Denormalize\n\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  }; // WARNING: DEPRECATED\n\n\n  BN.prototype.modn = function modn(num) {\n    return this.modrn(num);\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n//# sourceURL=webpack://test/./node_modules/browserify-sign/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/buffer-xor/index.js":
/*!******************************************!*\
  !*** ./node_modules/buffer-xor/index.js ***!
  \******************************************/
/***/ ((module) => {

eval("module.exports = function xor(a, b) {\n  var length = Math.min(a.length, b.length);\n  var buffer = new Buffer(length);\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i];\n  }\n\n  return buffer;\n};\n\n//# sourceURL=webpack://test/./node_modules/buffer-xor/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\");\n\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\");\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nvar K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\n\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function () {\n        return 42;\n      }\n    };\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\n\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  } // Return an augmented `Uint8Array` instance\n\n\n  var buf = new Uint8Array(length);\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n\n    return allocUnsafe(arg);\n  }\n\n  return from(arg, encodingOrOffset, length);\n} // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\n\nif (typeof Symbol !== 'undefined' && Symbol.species != null && Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  });\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value);\n  }\n\n  if (value == null) {\n    throw TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n\n  var valueOf = value.valueOf && value.valueOf();\n\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n\n  var b = fromObject(value);\n  if (b) return b;\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n}; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\n\n\nBuffer.prototype.__proto__ = Uint8Array.prototype;\nBuffer.__proto__ = Uint8Array;\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\n\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n\n  return createBuffer(size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\n\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\n\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n\n  return buf;\n}\n\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n\n  return buf;\n}\n\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n\n  var buf;\n\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  } // Return an augmented `Uint8Array` instance\n\n\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\n\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n\n    if (buf.length === 0) {\n      return buf;\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\n\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf);\n    }\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n\n  var len = string.length;\n  var mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  var strLen = string.length;\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n  newBuf.__proto__ = Buffer.prototype;\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    var len = bytes.length;\n\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n  str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n} // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\n\n\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\n\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n}\n\n//# sourceURL=webpack://test/./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/call-bind/callBound.js":
/*!*********************************************!*\
  !*** ./node_modules/call-bind/callBound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar callBind = __webpack_require__(/*! ./ */ \"./node_modules/call-bind/index.js\");\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n  var intrinsic = GetIntrinsic(name, !!allowMissing);\n\n  if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n    return callBind(intrinsic);\n  }\n\n  return intrinsic;\n};\n\n//# sourceURL=webpack://test/./node_modules/call-bind/callBound.js?");

/***/ }),

/***/ "./node_modules/call-bind/index.js":
/*!*****************************************!*\
  !*** ./node_modules/call-bind/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n  try {\n    $defineProperty({}, 'a', {\n      value: 1\n    });\n  } catch (e) {\n    // IE 8 has a broken defineProperty\n    $defineProperty = null;\n  }\n}\n\nmodule.exports = function callBind(originalFunction) {\n  var func = $reflectApply(bind, $call, arguments);\n\n  if ($gOPD && $defineProperty) {\n    var desc = $gOPD(func, 'length');\n\n    if (desc.configurable) {\n      // original length, plus the receiver, minus any additional arguments (after the receiver)\n      $defineProperty(func, 'length', {\n        value: 1 + $max(0, originalFunction.length - (arguments.length - 1))\n      });\n    }\n  }\n\n  return func;\n};\n\nvar applyBind = function applyBind() {\n  return $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n  $defineProperty(module.exports, 'apply', {\n    value: applyBind\n  });\n} else {\n  module.exports.apply = applyBind;\n}\n\n//# sourceURL=webpack://test/./node_modules/call-bind/index.js?");

/***/ }),

/***/ "./node_modules/cipher-base/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cipher-base/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar Transform = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\").Transform;\n\nvar StringDecoder = __webpack_require__(/*! string_decoder */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nfunction CipherBase(hashMode) {\n  Transform.call(this);\n  this.hashMode = typeof hashMode === 'string';\n\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest;\n  } else {\n    this.final = this._finalOrDigest;\n  }\n\n  if (this._final) {\n    this.__final = this._final;\n    this._final = null;\n  }\n\n  this._decoder = null;\n  this._encoding = null;\n}\n\ninherits(CipherBase, Transform);\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc);\n  }\n\n  var outData = this._update(data);\n\n  if (this.hashMode) return this;\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc);\n  }\n\n  return outData;\n};\n\nCipherBase.prototype.setAutoPadding = function () {};\n\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state');\n};\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state');\n};\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err;\n\n  try {\n    if (this.hashMode) {\n      this._update(data);\n    } else {\n      this.push(this._update(data));\n    }\n  } catch (e) {\n    err = e;\n  } finally {\n    next(err);\n  }\n};\n\nCipherBase.prototype._flush = function (done) {\n  var err;\n\n  try {\n    this.push(this.__final());\n  } catch (e) {\n    err = e;\n  }\n\n  done(err);\n};\n\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0);\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true);\n  }\n\n  return outData;\n};\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc);\n    this._encoding = enc;\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings');\n\n  var out = this._decoder.write(value);\n\n  if (fin) {\n    out += this._decoder.end();\n  }\n\n  return out;\n};\n\nmodule.exports = CipherBase;\n\n//# sourceURL=webpack://test/./node_modules/cipher-base/index.js?");

/***/ }),

/***/ "./node_modules/create-ecdh/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-ecdh/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var elliptic = __webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nmodule.exports = function createECDH(curve) {\n  return new ECDH(curve);\n};\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n};\naliases.p224 = aliases.secp224r1;\naliases.p256 = aliases.secp256r1 = aliases.prime256v1;\naliases.p192 = aliases.secp192r1 = aliases.prime192v1;\naliases.p384 = aliases.secp384r1;\naliases.p521 = aliases.secp521r1;\n\nfunction ECDH(curve) {\n  this.curveType = aliases[curve];\n\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    };\n  }\n\n  this.curve = new elliptic.ec(this.curveType.name); // eslint-disable-line new-cap\n\n  this.keys = void 0;\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair();\n  return this.getPublicKey(enc, format);\n};\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8';\n\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc);\n  }\n\n  var otherPub = this.curve.keyFromPublic(other).getPublic();\n  var out = otherPub.mul(this.keys.getPrivate()).getX();\n  return formatReturnValue(out, enc, this.curveType.byteLength);\n};\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true);\n\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7;\n    } else {\n      key[0] = 6;\n    }\n  }\n\n  return formatReturnValue(key, enc);\n};\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc);\n};\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n\n  this.keys._importPublic(pub);\n\n  return this;\n};\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n\n  var _priv = new BN(priv);\n\n  _priv = _priv.toString(16);\n  this.keys = this.curve.genKeyPair();\n\n  this.keys._importPrivate(_priv);\n\n  return this;\n};\n\nfunction formatReturnValue(bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray();\n  }\n\n  var buf = new Buffer(bn);\n\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length);\n    zeros.fill(0);\n    buf = Buffer.concat([zeros, buf]);\n  }\n\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n\n//# sourceURL=webpack://test/./node_modules/create-ecdh/browser.js?");

/***/ }),

/***/ "./node_modules/create-hash/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hash/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar MD5 = __webpack_require__(/*! md5.js */ \"./node_modules/md5.js/index.js\");\n\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"./node_modules/ripemd160/index.js\");\n\nvar sha = __webpack_require__(/*! sha.js */ \"./node_modules/sha.js/index.js\");\n\nvar Base = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nfunction Hash(hash) {\n  Base.call(this, 'digest');\n  this._hash = hash;\n}\n\ninherits(Hash, Base);\n\nHash.prototype._update = function (data) {\n  this._hash.update(data);\n};\n\nHash.prototype._final = function () {\n  return this._hash.digest();\n};\n\nmodule.exports = function createHash(alg) {\n  alg = alg.toLowerCase();\n  if (alg === 'md5') return new MD5();\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160();\n  return new Hash(sha(alg));\n};\n\n//# sourceURL=webpack://test/./node_modules/create-hash/browser.js?");

/***/ }),

/***/ "./node_modules/create-hash/md5.js":
/*!*****************************************!*\
  !*** ./node_modules/create-hash/md5.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var MD5 = __webpack_require__(/*! md5.js */ \"./node_modules/md5.js/index.js\");\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest();\n};\n\n//# sourceURL=webpack://test/./node_modules/create-hash/md5.js?");

/***/ }),

/***/ "./node_modules/create-hmac/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hmac/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Legacy = __webpack_require__(/*! ./legacy */ \"./node_modules/create-hmac/legacy.js\");\n\nvar Base = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar md5 = __webpack_require__(/*! create-hash/md5 */ \"./node_modules/create-hash/md5.js\");\n\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"./node_modules/ripemd160/index.js\");\n\nvar sha = __webpack_require__(/*! sha.js */ \"./node_modules/sha.js/index.js\");\n\nvar ZEROS = Buffer.alloc(128);\n\nfunction Hmac(alg, key) {\n  Base.call(this, 'digest');\n\n  if (typeof key === 'string') {\n    key = Buffer.from(key);\n  }\n\n  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n  this._alg = alg;\n  this._key = key;\n\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);\n    key = hash.update(key).digest();\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize);\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize);\n  var opad = this._opad = Buffer.allocUnsafe(blocksize);\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg);\n\n  this._hash.update(ipad);\n}\n\ninherits(Hmac, Base);\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data);\n};\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest();\n\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg);\n  return hash.update(this._opad).update(h).digest();\n};\n\nmodule.exports = function createHmac(alg, key) {\n  alg = alg.toLowerCase();\n\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key);\n  }\n\n  if (alg === 'md5') {\n    return new Legacy(md5, key);\n  }\n\n  return new Hmac(alg, key);\n};\n\n//# sourceURL=webpack://test/./node_modules/create-hmac/browser.js?");

/***/ }),

/***/ "./node_modules/create-hmac/legacy.js":
/*!********************************************!*\
  !*** ./node_modules/create-hmac/legacy.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar Base = __webpack_require__(/*! cipher-base */ \"./node_modules/cipher-base/index.js\");\n\nvar ZEROS = Buffer.alloc(128);\nvar blocksize = 64;\n\nfunction Hmac(alg, key) {\n  Base.call(this, 'digest');\n\n  if (typeof key === 'string') {\n    key = Buffer.from(key);\n  }\n\n  this._alg = alg;\n  this._key = key;\n\n  if (key.length > blocksize) {\n    key = alg(key);\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize);\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize);\n  var opad = this._opad = Buffer.allocUnsafe(blocksize);\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n\n  this._hash = [ipad];\n}\n\ninherits(Hmac, Base);\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data);\n};\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash));\n\n  return this._alg(Buffer.concat([this._opad, h]));\n};\n\nmodule.exports = Hmac;\n\n//# sourceURL=webpack://test/./node_modules/create-hmac/legacy.js?");

/***/ }),

/***/ "./node_modules/crypto-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-browserify/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\nexports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\nexports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ \"./node_modules/create-hmac/browser.js\");\n\nvar algos = __webpack_require__(/*! browserify-sign/algos */ \"./node_modules/browserify-sign/algos.js\");\n\nvar algoKeys = Object.keys(algos);\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys);\n\nexports.getHashes = function () {\n  return hashes;\n};\n\nvar p = __webpack_require__(/*! pbkdf2 */ \"./node_modules/pbkdf2/browser.js\");\n\nexports.pbkdf2 = p.pbkdf2;\nexports.pbkdf2Sync = p.pbkdf2Sync;\n\nvar aes = __webpack_require__(/*! browserify-cipher */ \"./node_modules/browserify-cipher/browser.js\");\n\nexports.Cipher = aes.Cipher;\nexports.createCipher = aes.createCipher;\nexports.Cipheriv = aes.Cipheriv;\nexports.createCipheriv = aes.createCipheriv;\nexports.Decipher = aes.Decipher;\nexports.createDecipher = aes.createDecipher;\nexports.Decipheriv = aes.Decipheriv;\nexports.createDecipheriv = aes.createDecipheriv;\nexports.getCiphers = aes.getCiphers;\nexports.listCiphers = aes.listCiphers;\n\nvar dh = __webpack_require__(/*! diffie-hellman */ \"./node_modules/diffie-hellman/browser.js\");\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup;\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;\nexports.getDiffieHellman = dh.getDiffieHellman;\nexports.createDiffieHellman = dh.createDiffieHellman;\nexports.DiffieHellman = dh.DiffieHellman;\n\nvar sign = __webpack_require__(/*! browserify-sign */ \"./node_modules/browserify-sign/browser/index.js\");\n\nexports.createSign = sign.createSign;\nexports.Sign = sign.Sign;\nexports.createVerify = sign.createVerify;\nexports.Verify = sign.Verify;\nexports.createECDH = __webpack_require__(/*! create-ecdh */ \"./node_modules/create-ecdh/browser.js\");\n\nvar publicEncrypt = __webpack_require__(/*! public-encrypt */ \"./node_modules/public-encrypt/browser.js\");\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt;\nexports.privateEncrypt = publicEncrypt.privateEncrypt;\nexports.publicDecrypt = publicEncrypt.publicDecrypt;\nexports.privateDecrypt = publicEncrypt.privateDecrypt; // the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = __webpack_require__(/*! randomfill */ \"./node_modules/randomfill/browser.js\");\n\nexports.randomFill = rf.randomFill;\nexports.randomFillSync = rf.randomFillSync;\n\nexports.createCredentials = function () {\n  throw new Error(['sorry, createCredentials is not implemented yet', 'we accept pull requests', 'https://github.com/crypto-browserify/crypto-browserify'].join('\\n'));\n};\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n};\n\n//# sourceURL=webpack://test/./node_modules/crypto-browserify/index.js?");

/***/ }),

/***/ "./node_modules/define-properties/index.js":
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar keys = __webpack_require__(/*! object-keys */ \"./node_modules/object-keys/index.js\");\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n  return typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n  var obj = {};\n\n  try {\n    origDefineProperty(obj, 'x', {\n      enumerable: false,\n      value: obj\n    }); // eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\n    for (var _ in obj) {\n      // jscs:ignore disallowUnusedVariables\n      return false;\n    }\n\n    return obj.x === obj;\n  } catch (e) {\n    /* this is IE 8. */\n    return false;\n  }\n};\n\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n  if (name in object && (!isFunction(predicate) || !predicate())) {\n    return;\n  }\n\n  if (supportsDescriptors) {\n    origDefineProperty(object, name, {\n      configurable: true,\n      enumerable: false,\n      value: value,\n      writable: true\n    });\n  } else {\n    object[name] = value;\n  }\n};\n\nvar defineProperties = function (object, map) {\n  var predicates = arguments.length > 2 ? arguments[2] : {};\n  var props = keys(map);\n\n  if (hasSymbols) {\n    props = concat.call(props, Object.getOwnPropertySymbols(map));\n  }\n\n  for (var i = 0; i < props.length; i += 1) {\n    defineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n  }\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\nmodule.exports = defineProperties;\n\n//# sourceURL=webpack://test/./node_modules/define-properties/index.js?");

/***/ }),

/***/ "./node_modules/des.js/lib/des.js":
/*!****************************************!*\
  !*** ./node_modules/des.js/lib/des.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.utils = __webpack_require__(/*! ./des/utils */ \"./node_modules/des.js/lib/des/utils.js\");\nexports.Cipher = __webpack_require__(/*! ./des/cipher */ \"./node_modules/des.js/lib/des/cipher.js\");\nexports.DES = __webpack_require__(/*! ./des/des */ \"./node_modules/des.js/lib/des/des.js\");\nexports.CBC = __webpack_require__(/*! ./des/cbc */ \"./node_modules/des.js/lib/des/cbc.js\");\nexports.EDE = __webpack_require__(/*! ./des/ede */ \"./node_modules/des.js/lib/des/ede.js\");\n\n//# sourceURL=webpack://test/./node_modules/des.js/lib/des.js?");

/***/ }),

/***/ "./node_modules/des.js/lib/des/cbc.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/cbc.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n  this.iv = new Array(8);\n\n  for (var i = 0; i < this.iv.length; i++) this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n\n    this._cbcInit();\n  }\n\n  inherits(CBC, Base);\n  var keys = Object.keys(proto);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n  var iv = state.iv;\n\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++) iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++) iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++) out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++) iv[i] = inp[inOff + i];\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/des.js/lib/des/cbc.js?");

/***/ }),

/***/ "./node_modules/des.js/lib/des/cipher.js":
/*!***********************************************!*\
  !*** ./node_modules/des.js/lib/des/cipher.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nfunction Cipher(options) {\n  this.options = options;\n  this.type = this.options.type;\n  this.blockSize = 8;\n\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\n\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {// Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0) return [];\n  if (this.type === 'decrypt') return this._updateDecrypt(data);else return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n\n  for (var i = 0; i < min; i++) this.buffer[this.bufferOff + i] = data[off + i];\n\n  this.bufferOff += min; // Shift next\n\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n  var count = (this.bufferOff + data.length) / this.blockSize | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n    if (this.bufferOff === this.buffer.length) outputOff += this._flushBuffer(out, outputOff);\n  } // Write blocks\n\n\n  var max = data.length - (data.length - inputOff) % this.blockSize;\n\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n\n    outputOff += this.blockSize;\n  } // Queue rest\n\n\n  for (; inputOff < data.length; inputOff++, this.bufferOff++) this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize); // TODO(indutny): optimize it, this is far from optimal\n\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  } // Buffer rest of the input\n\n\n  inputOff += this._buffer(data, inputOff);\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer) first = this.update(buffer);\n  var last;\n  if (this.type === 'encrypt') last = this._finalEncrypt();else last = this._finalDecrypt();\n  if (first) return first.concat(last);else return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0) return false;\n\n  while (off < buffer.length) buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff)) return [];\n  var out = new Array(this.blockSize);\n\n  this._update(this.buffer, 0, out, 0);\n\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n\n//# sourceURL=webpack://test/./node_modules/des.js/lib/des/cipher.js?");

/***/ }),

/***/ "./node_modules/des.js/lib/des/des.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/des.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/des.js/lib/des/utils.js\");\n\nvar Cipher = __webpack_require__(/*! ./cipher */ \"./node_modules/des.js/lib/des/cipher.js\");\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n  var state = new DESState();\n  this._desState = state;\n  this.deriveKeys(state, options.key);\n}\n\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4); // Initial Permutation\n\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n  if (this.type === 'encrypt') this._encrypt(state, l, r, state.tmp, 0);else this._decrypt(state, l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n\n  for (var i = off; i < buffer.length; i++) buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n\n  for (var i = buffer.length - pad; i < buffer.length; i++) assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart; // Apply f() x16 times\n\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1]; // f(r, k)\n\n    utils.expand(r, state.tmp, 0);\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  } // Reverse Initial Permutation\n\n\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart; // Apply f() x16 times\n\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1]; // f(r, k)\n\n    utils.expand(l, state.tmp, 0);\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  } // Reverse Initial Permutation\n\n\n  utils.rip(l, r, out, off);\n};\n\n//# sourceURL=webpack://test/./node_modules/des.js/lib/des/des.js?");

/***/ }),

/***/ "./node_modules/des.js/lib/des/ede.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/ede.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Cipher = __webpack_require__(/*! ./cipher */ \"./node_modules/des.js/lib/des/cipher.js\");\n\nvar DES = __webpack_require__(/*! ./des */ \"./node_modules/des.js/lib/des/des.js\");\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [DES.create({\n      type: 'encrypt',\n      key: k1\n    }), DES.create({\n      type: 'decrypt',\n      key: k2\n    }), DES.create({\n      type: 'encrypt',\n      key: k3\n    })];\n  } else {\n    this.ciphers = [DES.create({\n      type: 'decrypt',\n      key: k3\n    }), DES.create({\n      type: 'encrypt',\n      key: k2\n    }), DES.create({\n      type: 'decrypt',\n      key: k1\n    })];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\n\ninherits(EDE, Cipher);\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n\n  state.ciphers[1]._update(out, outOff, out, outOff);\n\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n\n//# sourceURL=webpack://test/./node_modules/des.js/lib/des/ede.js?");

/***/ }),

/***/ "./node_modules/des.js/lib/des/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/des.js/lib/des/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res = bytes[0 + off] << 24 | bytes[1 + off] << 16 | bytes[2 + off] << 8 | bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = value >>> 16 & 0xff;\n  bytes[2 + off] = value >>> 8 & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inR >>> j + i & 1;\n    }\n\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inL >>> j + i & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= inR >>> j + i & 1;\n    }\n\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= inL >>> j + i & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= inR >>> j + i & 1;\n      outL <<= 1;\n      outL |= inL >>> j + i & 1;\n    }\n  }\n\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= inR >>> j + i & 1;\n      outR <<= 1;\n      outR |= inL >>> j + i & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0; // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inR >> j + i & 1;\n    }\n\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= inL >> j + i & 1;\n    }\n  }\n\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= inR >> j + i & 1;\n  } // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n\n\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= inR >> j + i & 1;\n    }\n\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= inL >> j + i & 1;\n    }\n  }\n\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= inL >> j + i & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return num << shift & 0xfffffff | num >>> 28 - shift;\n};\n\nvar pc2table = [// inL => outL\n14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, // inR => outR\n15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n  var len = pc2table.length >>> 1;\n\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= inL >>> pc2table[i] & 0x1;\n  }\n\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= inR >>> pc2table[i] & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n  outL = (r & 1) << 5 | r >>> 27;\n\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= r >>> i & 0x3f;\n  }\n\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= r >>> i & 0x3f;\n    outR <<= 6;\n  }\n\n  outR |= (r & 0x1f) << 1 | r >>> 31;\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n\n  for (var i = 0; i < 4; i++) {\n    var b = inL >>> 18 - i * 6 & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n    out <<= 4;\n    out |= sb;\n  }\n\n  for (var i = 0; i < 4; i++) {\n    var b = inR >>> 18 - i * 6 & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n    out <<= 4;\n    out |= sb;\n  }\n\n  return out >>> 0;\n};\n\nvar permuteTable = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];\n\nexports.permute = function permute(num) {\n  var out = 0;\n\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= num >>> permuteTable[i] & 0x1;\n  }\n\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n\n  while (str.length < size) str = '0' + str;\n\n  var out = [];\n\n  for (var i = 0; i < size; i += group) out.push(str.slice(i, i + group));\n\n  return out.join(' ');\n};\n\n//# sourceURL=webpack://test/./node_modules/des.js/lib/des/utils.js?");

/***/ }),

/***/ "./node_modules/diffie-hellman/browser.js":
/*!************************************************!*\
  !*** ./node_modules/diffie-hellman/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ \"./node_modules/diffie-hellman/lib/generatePrime.js\");\n\nvar primes = __webpack_require__(/*! ./lib/primes.json */ \"./node_modules/diffie-hellman/lib/primes.json\");\n\nvar DH = __webpack_require__(/*! ./lib/dh */ \"./node_modules/diffie-hellman/lib/dh.js\");\n\nfunction getDiffieHellman(mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex');\n  var gen = new Buffer(primes[mod].gen, 'hex');\n  return new DH(prime, gen);\n}\n\nvar ENCODINGS = {\n  'binary': true,\n  'hex': true,\n  'base64': true\n};\n\nfunction createDiffieHellman(prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator);\n  }\n\n  enc = enc || 'binary';\n  genc = genc || 'binary';\n  generator = generator || new Buffer([2]);\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc);\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true);\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc);\n  }\n\n  return new DH(prime, generator, true);\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;\n\n//# sourceURL=webpack://test/./node_modules/diffie-hellman/browser.js?");

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/dh.js":
/*!***********************************************!*\
  !*** ./node_modules/diffie-hellman/lib/dh.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar MillerRabin = __webpack_require__(/*! miller-rabin */ \"./node_modules/miller-rabin/lib/mr.js\");\n\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\n\nvar primes = __webpack_require__(/*! ./generatePrime */ \"./node_modules/diffie-hellman/lib/generatePrime.js\");\n\nvar randomBytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\n\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\n\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n\n  var error = 0;\n\n  if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n\n    primeCache[hex] = error;\n    return error;\n  }\n\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n\n  var rem;\n\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n\n      break;\n\n    case '05':\n      rem = prime.mod(TEN);\n\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n\n      break;\n\n    default:\n      error += 4;\n  }\n\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\n\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n\n    return this._primeCode;\n  }\n});\n\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n\n//# sourceURL=webpack://test/./node_modules/diffie-hellman/lib/dh.js?");

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/generatePrime.js":
/*!**********************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/generatePrime.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var randomBytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\n\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar TWENTYFOUR = new BN(24);\n\nvar MillerRabin = __webpack_require__(/*! miller-rabin */ \"./node_modules/miller-rabin/lib/mr.js\");\n\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null) return primes;\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n\n    for (var j = 0; j < i && res[j] <= sqrt; j++) if (k % res[j] === 0) break;\n\n    if (i !== j && res[j] <= sqrt) continue;\n    res[i++] = k;\n  }\n\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++) if (p.modn(primes[i]) === 0) {\n    if (p.cmpn(primes[i]) === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n\n  gen = new BN(gen);\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n\n    n2 = num.shrn(1);\n\n    if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n}\n\n//# sourceURL=webpack://test/./node_modules/diffie-hellman/lib/generatePrime.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic.js":
/*!***********************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar elliptic = exports;\nelliptic.version = __webpack_require__(/*! ../package.json */ \"./node_modules/elliptic/package.json\").version;\nelliptic.utils = __webpack_require__(/*! ./elliptic/utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\nelliptic.rand = __webpack_require__(/*! brorand */ \"./node_modules/brorand/index.js\");\nelliptic.curve = __webpack_require__(/*! ./elliptic/curve */ \"./node_modules/elliptic/lib/elliptic/curve/index.js\");\nelliptic.curves = __webpack_require__(/*! ./elliptic/curves */ \"./node_modules/elliptic/lib/elliptic/curves.js\"); // Protocols\n\nelliptic.ec = __webpack_require__(/*! ./elliptic/ec */ \"./node_modules/elliptic/lib/elliptic/ec/index.js\");\nelliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ \"./node_modules/elliptic/lib/elliptic/eddsa/index.js\");\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p); // Useful for many curves\n\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n  var j;\n  var nafW;\n\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n\n    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n  var i;\n  var j;\n  var p;\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq()\n/*other*/\n{\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/curve/base.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!*************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Base = __webpack_require__(/*! ./base */ \"./node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n  Base.call(this, 'edwards', conf);\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\n\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC) return num;else return this.c.redMul(num);\n}; // Just for compatibility with Short curve\n\n\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red) y = y.toRed(this.red); // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd) throw new Error('invalid point');else return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');\n  if (x.fromRed().isOdd() !== odd) x = x.redNeg();\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity()) return true; // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\n  point.normalize();\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one; // Use extended coordinates\n\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n  // A = X1^2\n  var a = this.x.redSqr(); // B = Y1^2\n\n  var b = this.y.redSqr(); // C = 2 * Z1^2\n\n  var c = this.z.redSqr();\n  c = c.redIAdd(c); // D = a * A\n\n  var d = this.curve._mulA(a); // E = (X1 + Y1)^2 - A - B\n\n\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b); // G = D + B\n\n  var g = d.redAdd(b); // F = G - C\n\n  var f = g.redSub(c); // H = D - B\n\n  var h = d.redSub(b); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr(); // C = X1^2\n\n  var c = this.x.redSqr(); // D = Y1^2\n\n  var d = this.y.redSqr();\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c); // F = E + D\n\n    var f = e.redAdd(d);\n\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two)); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F^2 - 2 * F\n\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr(); // J = F - 2 * H\n\n      j = f.redSub(h).redISub(h); // X3 = (B-C-D)*J\n\n      nx = b.redSub(c).redISub(d).redMul(j); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F * J\n\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d); // H = (c * Z1)^2\n\n    h = this.curve._mulC(this.z).redSqr(); // J = E - 2 * H\n\n    j = e.redSub(h).redSub(h); // X3 = c * (B - E) * J\n\n    nx = this.curve._mulC(b.redISub(e)).redMul(j); // Y3 = c * E * (C - D)\n\n    ny = this.curve._mulC(e).redMul(c.redISub(d)); // Z3 = E * J\n\n    nz = e.redMul(j);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this; // Double in extended coordinates\n\n  if (this.curve.extended) return this._extDbl();else return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x)); // B = (Y1 + X1) * (Y2 + X2)\n\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x)); // C = T1 * k * T2\n\n  var c = this.t.redMul(this.curve.dd).redMul(p.t); // D = Z1 * 2 * Z2\n\n  var d = this.z.redMul(p.z.redAdd(p.z)); // E = B - A\n\n  var e = b.redSub(a); // F = D - C\n\n  var f = d.redSub(c); // G = D + C\n\n  var g = d.redAdd(c); // H = B + A\n\n  var h = b.redAdd(a); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z); // B = A^2\n\n  var b = a.redSqr(); // C = X1 * X2\n\n  var c = this.x.redMul(p.x); // D = Y1 * Y2\n\n  var d = this.y.redMul(p.y); // E = d * C * D\n\n  var e = this.curve.d.redMul(c).redMul(d); // F = B - E\n\n  var f = b.redSub(e); // G = B + E\n\n  var g = b.redAdd(e); // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c))); // Z3 = F * G\n\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c)); // Z3 = c * F * G\n\n    nz = this.curve._mulC(f).redMul(g);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity()) return p;\n  if (p.isInfinity()) return this;\n  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne) return this; // Normalize coordinates\n\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t) this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n}; // Compatibility with BaseCurve\n\n\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/curve/edwards.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar curve = exports;\ncurve.base = __webpack_require__(/*! ./base */ \"./node_modules/elliptic/lib/elliptic/curve/base.js\");\ncurve.short = __webpack_require__(/*! ./short */ \"./node_modules/elliptic/lib/elliptic/curve/short.js\");\ncurve.mont = __webpack_require__(/*! ./mont */ \"./node_modules/elliptic/lib/elliptic/curve/mont.js\");\ncurve.edwards = __webpack_require__(/*! ./edwards */ \"./node_modules/elliptic/lib/elliptic/curve/edwards.js\");\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/curve/index.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Base = __webpack_require__(/*! ./base */ \"./node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\n\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {// No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z); // AA = A^2\n\n  var aa = a.redSqr(); // B = X1 - Z1\n\n  var b = this.x.redSub(this.z); // BB = B^2\n\n  var bb = b.redSqr(); // C = AA - BB\n\n  var c = aa.redSub(bb); // X3 = AA * BB\n\n  var nx = aa.redMul(bb); // Z3 = C * (BB + A24 * C)\n\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z); // B = X2 - Z2\n\n  var b = this.x.redSub(this.z); // C = X3 + Z3\n\n  var c = p.x.redAdd(p.z); // D = X3 - Z3\n\n  var d = p.x.redSub(p.z); // DA = D * A\n\n  var da = d.redMul(a); // CB = C * B\n\n  var cb = c.redMul(b); // X5 = Z1 * (DA + CB)^2\n\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr()); // Z5 = X1 * (DA - CB)^2\n\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n\n  var b = this.curve.point(null, null); // (N / 2) * Q\n\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c); // N * Q = 2 * ((N / 2) * Q + Q))\n\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c); // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\n      a = a.dbl();\n    }\n  }\n\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n  return this.x.fromRed();\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/curve/mont.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/short.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Base = __webpack_require__(/*! ./base */ \"./node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/curve/short.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curves.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curves.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar curves = exports;\n\nvar hash = __webpack_require__(/*! hash.js */ \"./node_modules/hash.js/lib/hash.js\");\n\nvar curve = __webpack_require__(/*! ./curve */ \"./node_modules/elliptic/lib/elliptic/curve/index.js\");\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short') this.curve = new curve.short(options);else if (options.type === 'edwards') this.curve = new curve.edwards(options);else this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\n\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n});\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n});\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n});\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n});\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n});\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['9']\n});\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n  '6666666666666666666666666666666666666666666666666666666666666658']\n});\nvar pre;\n\ntry {\n  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ \"./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js\");\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [{\n    a: '3086d221a7d46bcde86c90e49284eb15',\n    b: '-e4437ed6010e88286f547fa90abfe4c3'\n  }, {\n    a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n    b: '3086d221a7d46bcde86c90e49284eb15'\n  }],\n  gRed: false,\n  g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n});\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/curves.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/index.js":
/*!********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar HmacDRBG = __webpack_require__(/*! hmac-drbg */ \"./node_modules/hmac-drbg/lib/hmac-drbg.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar curves = __webpack_require__(/*! ../curves */ \"./node_modules/elliptic/lib/elliptic/curves.js\");\n\nvar rand = __webpack_require__(/*! brorand */ \"./node_modules/brorand/index.js\");\n\nvar assert = utils.assert;\n\nvar KeyPair = __webpack_require__(/*! ./key */ \"./node_modules/elliptic/lib/elliptic/ec/key.js\");\n\nvar Signature = __webpack_require__(/*! ./signature */ \"./node_modules/elliptic/lib/elliptic/ec/signature.js\");\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options), 'Unknown curve ' + options);\n    options = curves[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof curves.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex'); // Perform primitive values validation\n\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null) return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/ec/index.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/key.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/ec/key.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf; // Indefinite length or overflow\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  } // Leading zeroes\n\n\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/ec/signature.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hash = __webpack_require__(/*! hash.js */ \"./node_modules/hash.js/lib/hash.js\");\n\nvar curves = __webpack_require__(/*! ../curves */ \"./node_modules/elliptic/lib/elliptic/curves.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\n\nvar KeyPair = __webpack_require__(/*! ./key */ \"./node_modules/elliptic/lib/elliptic/eddsa/key.js\");\n\nvar Signature = __webpack_require__(/*! ./signature */ \"./node_modules/elliptic/lib/elliptic/eddsa/signature.js\");\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n  if (!(this instanceof EDDSA)) return new EDDSA(curve);\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\n\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({\n    R: R,\n    S: S,\n    Rencoded: Rencoded\n  });\n};\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\n\n\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n\n  for (var i = 0; i < arguments.length; i++) hash.update(arguments[i]);\n\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature) return sig;\n  return new Signature(this, sig);\n};\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\n\n\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/eddsa/index.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!*********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\n\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(eddsa, {\n    pub: pub\n  });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair) return secret;\n  return new KeyPair(eddsa, {\n    secret: secret\n  });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n  return a;\n});\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/eddsa/key.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!***************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\n\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n  if (typeof sig !== 'object') sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n  if (sig.S instanceof BN) this._S = sig.S;\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/eddsa/signature.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!*********************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("module.exports = {\n  doubles: {\n    step: 4,\n    points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]\n  },\n  naf: {\n    wnd: 7,\n    points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js?");

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = exports;\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar minAssert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ \"./node_modules/minimalistic-crypto-utils/lib/utils.js\");\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode; // Represent num in a w-NAF form\n\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n  var ws = 1 << w + 1;\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\n\nutils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\nfunction getJSF(k1, k2) {\n  var jsf = [[], []];\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = k1.andln(3) + d1 & 3;\n    var m24 = k2.andln(3) + d2 & 3;\n    if (m14 === 3) m14 = -1;\n    if (m24 === 3) m24 = -1;\n    var u1;\n\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = k1.andln(7) + d1 & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n    }\n\n    jsf[0].push(u1);\n    var u2;\n\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = k2.andln(7) + d2 & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n    }\n\n    jsf[1].push(u2); // Second phase\n\n    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\n\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n  };\n}\n\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n}\n\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\n\nutils.intFromLE = intFromLE;\n\n//# sourceURL=webpack://test/./node_modules/elliptic/lib/elliptic/utils.js?");

/***/ }),

/***/ "./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');\n\nif ($gOPD) {\n  try {\n    $gOPD([], 'length');\n  } catch (e) {\n    // IE 8 has a broken gOPD\n    $gOPD = null;\n  }\n}\n\nmodule.exports = $gOPD;\n\n//# sourceURL=webpack://test/./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js?");

/***/ }),

/***/ "./node_modules/es6-object-assign/index.js":
/*!*************************************************!*\
  !*** ./node_modules/es6-object-assign/index.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n\n//# sourceURL=webpack://test/./node_modules/es6-object-assign/index.js?");

/***/ }),

/***/ "./node_modules/eth-lib/lib/account.js":
/*!*********************************************!*\
  !*** ./node_modules/eth-lib/lib/account.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Bytes = __webpack_require__(/*! ./bytes */ \"./node_modules/eth-lib/lib/bytes.js\");\n\nconst Nat = __webpack_require__(/*! ./nat */ \"./node_modules/eth-lib/lib/nat.js\");\n\nconst elliptic = __webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\");\n\nconst rlp = __webpack_require__(/*! ./rlp */ \"./node_modules/eth-lib/lib/rlp.js\");\n\nconst secp256k1 = new elliptic.ec(\"secp256k1\"); // eslint-disable-line\n\nconst {\n  keccak256,\n  keccak256s\n} = __webpack_require__(/*! ./hash */ \"./node_modules/eth-lib/lib/hash.js\");\n\nconst create = entropy => {\n  const innerHex = keccak256(Bytes.concat(Bytes.random(32), entropy || Bytes.random(32)));\n  const middleHex = Bytes.concat(Bytes.concat(Bytes.random(32), innerHex), Bytes.random(32));\n  const outerHex = keccak256(middleHex);\n  return fromPrivate(outerHex);\n};\n\nconst toChecksum = address => {\n  const addressHash = keccak256s(address.slice(2));\n  let checksumAddress = \"0x\";\n\n  for (let i = 0; i < 40; i++) checksumAddress += parseInt(addressHash[i + 2], 16) > 7 ? address[i + 2].toUpperCase() : address[i + 2];\n\n  return checksumAddress;\n};\n\nconst fromPrivate = privateKey => {\n  const buffer = new Buffer(privateKey.slice(2), \"hex\");\n  const ecKey = secp256k1.keyFromPrivate(buffer);\n  const publicKey = \"0x\" + ecKey.getPublic(false, 'hex').slice(2);\n  const publicHash = keccak256(publicKey);\n  const address = toChecksum(\"0x\" + publicHash.slice(-40));\n  return {\n    address: address,\n    privateKey: privateKey\n  };\n};\n\nconst encodeSignature = ([v, r, s]) => Bytes.flatten([r, s, v]);\n\nconst decodeSignature = hex => [Bytes.slice(64, Bytes.length(hex), hex), Bytes.slice(0, 32, hex), Bytes.slice(32, 64, hex)];\n\nconst makeSigner = addToV => (hash, privateKey) => {\n  const signature = secp256k1.keyFromPrivate(new Buffer(privateKey.slice(2), \"hex\")).sign(new Buffer(hash.slice(2), \"hex\"), {\n    canonical: true\n  });\n  return encodeSignature([Nat.fromString(Bytes.fromNumber(addToV + signature.recoveryParam)), Bytes.pad(32, Bytes.fromNat(\"0x\" + signature.r.toString(16))), Bytes.pad(32, Bytes.fromNat(\"0x\" + signature.s.toString(16)))]);\n};\n\nconst sign = makeSigner(27); // v=27|28 instead of 0|1...\n\nconst recover = (hash, signature) => {\n  const vals = decodeSignature(signature);\n  const vrs = {\n    v: Bytes.toNumber(vals[0]),\n    r: vals[1].slice(2),\n    s: vals[2].slice(2)\n  };\n  const ecPublicKey = secp256k1.recoverPubKey(new Buffer(hash.slice(2), \"hex\"), vrs, vrs.v < 2 ? vrs.v : 1 - vrs.v % 2); // because odd vals mean v=0... sadly that means v=0 means v=1... I hate that\n\n  const publicKey = \"0x\" + ecPublicKey.encode(\"hex\", false).slice(2);\n  const publicHash = keccak256(publicKey);\n  const address = toChecksum(\"0x\" + publicHash.slice(-40));\n  return address;\n};\n\nmodule.exports = {\n  create,\n  toChecksum,\n  fromPrivate,\n  sign,\n  makeSigner,\n  recover,\n  encodeSignature,\n  decodeSignature\n};\n\n//# sourceURL=webpack://test/./node_modules/eth-lib/lib/account.js?");

/***/ }),

/***/ "./node_modules/eth-lib/lib/array.js":
/*!*******************************************!*\
  !*** ./node_modules/eth-lib/lib/array.js ***!
  \*******************************************/
/***/ ((module) => {

eval("const generate = (num, fn) => {\n  let a = [];\n\n  for (var i = 0; i < num; ++i) a.push(fn(i));\n\n  return a;\n};\n\nconst replicate = (num, val) => generate(num, () => val);\n\nconst concat = (a, b) => a.concat(b);\n\nconst flatten = a => {\n  let r = [];\n\n  for (let j = 0, J = a.length; j < J; ++j) for (let i = 0, I = a[j].length; i < I; ++i) r.push(a[j][i]);\n\n  return r;\n};\n\nconst chunksOf = (n, a) => {\n  let b = [];\n\n  for (let i = 0, l = a.length; i < l; i += n) b.push(a.slice(i, i + n));\n\n  return b;\n};\n\nmodule.exports = {\n  generate,\n  replicate,\n  concat,\n  flatten,\n  chunksOf\n};\n\n//# sourceURL=webpack://test/./node_modules/eth-lib/lib/array.js?");

/***/ }),

/***/ "./node_modules/eth-lib/lib/bytes.js":
/*!*******************************************!*\
  !*** ./node_modules/eth-lib/lib/bytes.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const A = __webpack_require__(/*! ./array.js */ \"./node_modules/eth-lib/lib/array.js\");\n\nconst at = (bytes, index) => parseInt(bytes.slice(index * 2 + 2, index * 2 + 4), 16);\n\nconst random = bytes => {\n  let rnd;\n  if (typeof window !== \"undefined\" && window.crypto && window.crypto.getRandomValues) rnd = window.crypto.getRandomValues(new Uint8Array(bytes));else if (true) rnd = __webpack_require__(/*! crypto */ \"./node_modules/crypto-browserify/index.js\").randomBytes(bytes);else {}\n  let hex = \"0x\";\n\n  for (let i = 0; i < bytes; ++i) hex += (\"00\" + rnd[i].toString(16)).slice(-2);\n\n  return hex;\n};\n\nconst length = a => (a.length - 2) / 2;\n\nconst flatten = a => \"0x\" + a.reduce((r, s) => r + s.slice(2), \"\");\n\nconst slice = (i, j, bs) => \"0x\" + bs.slice(i * 2 + 2, j * 2 + 2);\n\nconst reverse = hex => {\n  let rev = \"0x\";\n\n  for (let i = 0, l = length(hex); i < l; ++i) {\n    rev += hex.slice((l - i) * 2, (l - i + 1) * 2);\n  }\n\n  return rev;\n};\n\nconst pad = (l, hex) => hex.length === l * 2 + 2 ? hex : pad(l, \"0x\" + \"0\" + hex.slice(2));\n\nconst padRight = (l, hex) => hex.length === l * 2 + 2 ? hex : padRight(l, hex + \"0\");\n\nconst toArray = hex => {\n  let arr = [];\n\n  for (let i = 2, l = hex.length; i < l; i += 2) arr.push(parseInt(hex.slice(i, i + 2), 16));\n\n  return arr;\n};\n\nconst fromArray = arr => {\n  let hex = \"0x\";\n\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    let b = arr[i];\n    hex += (b < 16 ? \"0\" : \"\") + b.toString(16);\n  }\n\n  return hex;\n};\n\nconst toUint8Array = hex => new Uint8Array(toArray(hex));\n\nconst fromUint8Array = arr => fromArray([].slice.call(arr, 0));\n\nconst fromNumber = num => {\n  let hex = num.toString(16);\n  return hex.length % 2 === 0 ? \"0x\" + hex : \"0x0\" + hex;\n};\n\nconst toNumber = hex => parseInt(hex.slice(2), 16);\n\nconst concat = (a, b) => a.concat(b.slice(2));\n\nconst fromNat = bn => bn === \"0x0\" ? \"0x\" : bn.length % 2 === 0 ? bn : \"0x0\" + bn.slice(2);\n\nconst toNat = bn => bn[2] === \"0\" ? \"0x\" + bn.slice(3) : bn;\n\nconst fromAscii = ascii => {\n  let hex = \"0x\";\n\n  for (let i = 0; i < ascii.length; ++i) hex += (\"00\" + ascii.charCodeAt(i).toString(16)).slice(-2);\n\n  return hex;\n};\n\nconst toAscii = hex => {\n  let ascii = \"\";\n\n  for (let i = 2; i < hex.length; i += 2) ascii += String.fromCharCode(parseInt(hex.slice(i, i + 2), 16));\n\n  return ascii;\n}; // From https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\n\n\nconst fromString = s => {\n  const makeByte = uint8 => {\n    const b = uint8.toString(16);\n    return b.length < 2 ? \"0\" + b : b;\n  };\n\n  let bytes = \"0x\";\n\n  for (let ci = 0; ci != s.length; ci++) {\n    let c = s.charCodeAt(ci);\n\n    if (c < 128) {\n      bytes += makeByte(c);\n      continue;\n    }\n\n    if (c < 2048) {\n      bytes += makeByte(c >> 6 | 192);\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci == s.length) return null;\n        let c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) return null;\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes += makeByte(c >> 18 | 240);\n        bytes += makeByte(c >> 12 & 63 | 128);\n      } else {\n        // c <= 0xffff\n        bytes += makeByte(c >> 12 | 224);\n      }\n\n      bytes += makeByte(c >> 6 & 63 | 128);\n    }\n\n    bytes += makeByte(c & 63 | 128);\n  }\n\n  return bytes;\n};\n\nconst toString = bytes => {\n  let s = '';\n  let i = 0;\n  let l = length(bytes);\n\n  while (i < l) {\n    let c = at(bytes, i++);\n\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= l) return null;\n        c = (c & 31) << 6 | at(bytes, i) & 63;\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= l) return null;\n        c = (c & 15) << 12 | (at(bytes, i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= l) return null;\n        c = (c & 7) << 18 | (at(bytes, i) & 63) << 12 | (at(bytes, ++i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else return null;\n\n      ++i;\n    }\n\n    if (c <= 0xffff) s += String.fromCharCode(c);else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode(c >> 10 | 0xd800);\n      s += String.fromCharCode(c & 0x3FF | 0xdc00);\n    } else return null;\n  }\n\n  return s;\n};\n\nmodule.exports = {\n  random,\n  length,\n  concat,\n  flatten,\n  slice,\n  reverse,\n  pad,\n  padRight,\n  fromAscii,\n  toAscii,\n  fromString,\n  toString,\n  fromNumber,\n  toNumber,\n  fromNat,\n  toNat,\n  fromArray,\n  toArray,\n  fromUint8Array,\n  toUint8Array\n};\n\n//# sourceURL=webpack://test/./node_modules/eth-lib/lib/bytes.js?");

/***/ }),

/***/ "./node_modules/eth-lib/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/eth-lib/lib/hash.js ***!
  \******************************************/
/***/ ((module) => {

eval("// This was ported from https://github.com/emn178/js-sha3, with some minor\n// modifications and pruning. It is licensed under MIT:\n//\n// Copyright 2015-2016 Chen, Yi-Cyuan\n//  \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nconst HEX_CHARS = '0123456789abcdef'.split('');\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\nconst SHIFT = [0, 8, 16, 24];\nconst RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nconst Keccak = bits => ({\n  blocks: [],\n  reset: true,\n  block: 0,\n  start: 0,\n  blockCount: 1600 - (bits << 1) >> 5,\n  outputBlocks: bits >> 5,\n  s: (s => [].concat(s, s, s, s, s))([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n});\n\nconst update = (state, message) => {\n  var length = message.length,\n      blocks = state.blocks,\n      byteCount = state.blockCount << 2,\n      blockCount = state.blockCount,\n      outputBlocks = state.outputBlocks,\n      s = state.s,\n      index = 0,\n      i,\n      code; // update\n\n  while (index < length) {\n    if (state.reset) {\n      state.reset = false;\n      blocks[0] = state.block;\n\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n\n    if (typeof message !== \"string\") {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n\n    state.lastByteIndex = i;\n\n    if (i >= byteCount) {\n      state.start = i - byteCount;\n      state.block = blocks[blockCount];\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n      state.reset = true;\n    } else {\n      state.start = i;\n    }\n  } // finalize\n\n\n  i = state.lastByteIndex;\n  blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n\n  if (state.lastByteIndex === byteCount) {\n    blocks[0] = blocks[blockCount];\n\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n\n  blocks[blockCount - 1] |= 0x80000000;\n\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n\n  f(s); // toString\n\n  var hex = '',\n      i = 0,\n      j = 0,\n      block;\n\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n    }\n\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n\n  return \"0x\" + hex;\n};\n\nconst f = s => {\n  var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n    h = c8 ^ (c2 << 1 | c3 >>> 31);\n    l = c9 ^ (c3 << 1 | c2 >>> 31);\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ (c4 << 1 | c5 >>> 31);\n    l = c1 ^ (c5 << 1 | c4 >>> 31);\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ (c6 << 1 | c7 >>> 31);\n    l = c3 ^ (c7 << 1 | c6 >>> 31);\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ (c8 << 1 | c9 >>> 31);\n    l = c5 ^ (c9 << 1 | c8 >>> 31);\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ (c0 << 1 | c1 >>> 31);\n    l = c7 ^ (c1 << 1 | c0 >>> 31);\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n    b0 = s[0];\n    b1 = s[1];\n    b32 = s[11] << 4 | s[10] >>> 28;\n    b33 = s[10] << 4 | s[11] >>> 28;\n    b14 = s[20] << 3 | s[21] >>> 29;\n    b15 = s[21] << 3 | s[20] >>> 29;\n    b46 = s[31] << 9 | s[30] >>> 23;\n    b47 = s[30] << 9 | s[31] >>> 23;\n    b28 = s[40] << 18 | s[41] >>> 14;\n    b29 = s[41] << 18 | s[40] >>> 14;\n    b20 = s[2] << 1 | s[3] >>> 31;\n    b21 = s[3] << 1 | s[2] >>> 31;\n    b2 = s[13] << 12 | s[12] >>> 20;\n    b3 = s[12] << 12 | s[13] >>> 20;\n    b34 = s[22] << 10 | s[23] >>> 22;\n    b35 = s[23] << 10 | s[22] >>> 22;\n    b16 = s[33] << 13 | s[32] >>> 19;\n    b17 = s[32] << 13 | s[33] >>> 19;\n    b48 = s[42] << 2 | s[43] >>> 30;\n    b49 = s[43] << 2 | s[42] >>> 30;\n    b40 = s[5] << 30 | s[4] >>> 2;\n    b41 = s[4] << 30 | s[5] >>> 2;\n    b22 = s[14] << 6 | s[15] >>> 26;\n    b23 = s[15] << 6 | s[14] >>> 26;\n    b4 = s[25] << 11 | s[24] >>> 21;\n    b5 = s[24] << 11 | s[25] >>> 21;\n    b36 = s[34] << 15 | s[35] >>> 17;\n    b37 = s[35] << 15 | s[34] >>> 17;\n    b18 = s[45] << 29 | s[44] >>> 3;\n    b19 = s[44] << 29 | s[45] >>> 3;\n    b10 = s[6] << 28 | s[7] >>> 4;\n    b11 = s[7] << 28 | s[6] >>> 4;\n    b42 = s[17] << 23 | s[16] >>> 9;\n    b43 = s[16] << 23 | s[17] >>> 9;\n    b24 = s[26] << 25 | s[27] >>> 7;\n    b25 = s[27] << 25 | s[26] >>> 7;\n    b6 = s[36] << 21 | s[37] >>> 11;\n    b7 = s[37] << 21 | s[36] >>> 11;\n    b38 = s[47] << 24 | s[46] >>> 8;\n    b39 = s[46] << 24 | s[47] >>> 8;\n    b30 = s[8] << 27 | s[9] >>> 5;\n    b31 = s[9] << 27 | s[8] >>> 5;\n    b12 = s[18] << 20 | s[19] >>> 12;\n    b13 = s[19] << 20 | s[18] >>> 12;\n    b44 = s[29] << 7 | s[28] >>> 25;\n    b45 = s[28] << 7 | s[29] >>> 25;\n    b26 = s[38] << 8 | s[39] >>> 24;\n    b27 = s[39] << 8 | s[38] >>> 24;\n    b8 = s[48] << 14 | s[49] >>> 18;\n    b9 = s[49] << 14 | s[48] >>> 18;\n    s[0] = b0 ^ ~b2 & b4;\n    s[1] = b1 ^ ~b3 & b5;\n    s[10] = b10 ^ ~b12 & b14;\n    s[11] = b11 ^ ~b13 & b15;\n    s[20] = b20 ^ ~b22 & b24;\n    s[21] = b21 ^ ~b23 & b25;\n    s[30] = b30 ^ ~b32 & b34;\n    s[31] = b31 ^ ~b33 & b35;\n    s[40] = b40 ^ ~b42 & b44;\n    s[41] = b41 ^ ~b43 & b45;\n    s[2] = b2 ^ ~b4 & b6;\n    s[3] = b3 ^ ~b5 & b7;\n    s[12] = b12 ^ ~b14 & b16;\n    s[13] = b13 ^ ~b15 & b17;\n    s[22] = b22 ^ ~b24 & b26;\n    s[23] = b23 ^ ~b25 & b27;\n    s[32] = b32 ^ ~b34 & b36;\n    s[33] = b33 ^ ~b35 & b37;\n    s[42] = b42 ^ ~b44 & b46;\n    s[43] = b43 ^ ~b45 & b47;\n    s[4] = b4 ^ ~b6 & b8;\n    s[5] = b5 ^ ~b7 & b9;\n    s[14] = b14 ^ ~b16 & b18;\n    s[15] = b15 ^ ~b17 & b19;\n    s[24] = b24 ^ ~b26 & b28;\n    s[25] = b25 ^ ~b27 & b29;\n    s[34] = b34 ^ ~b36 & b38;\n    s[35] = b35 ^ ~b37 & b39;\n    s[44] = b44 ^ ~b46 & b48;\n    s[45] = b45 ^ ~b47 & b49;\n    s[6] = b6 ^ ~b8 & b0;\n    s[7] = b7 ^ ~b9 & b1;\n    s[16] = b16 ^ ~b18 & b10;\n    s[17] = b17 ^ ~b19 & b11;\n    s[26] = b26 ^ ~b28 & b20;\n    s[27] = b27 ^ ~b29 & b21;\n    s[36] = b36 ^ ~b38 & b30;\n    s[37] = b37 ^ ~b39 & b31;\n    s[46] = b46 ^ ~b48 & b40;\n    s[47] = b47 ^ ~b49 & b41;\n    s[8] = b8 ^ ~b0 & b2;\n    s[9] = b9 ^ ~b1 & b3;\n    s[18] = b18 ^ ~b10 & b12;\n    s[19] = b19 ^ ~b11 & b13;\n    s[28] = b28 ^ ~b20 & b22;\n    s[29] = b29 ^ ~b21 & b23;\n    s[38] = b38 ^ ~b30 & b32;\n    s[39] = b39 ^ ~b31 & b33;\n    s[48] = b48 ^ ~b40 & b42;\n    s[49] = b49 ^ ~b41 & b43;\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nconst keccak = bits => str => {\n  var msg;\n\n  if (str.slice(0, 2) === \"0x\") {\n    msg = [];\n\n    for (var i = 2, l = str.length; i < l; i += 2) msg.push(parseInt(str.slice(i, i + 2), 16));\n  } else {\n    msg = str;\n  }\n\n  return update(Keccak(bits, bits), msg);\n};\n\nmodule.exports = {\n  keccak256: keccak(256),\n  keccak512: keccak(512),\n  keccak256s: keccak(256),\n  keccak512s: keccak(512)\n};\n\n//# sourceURL=webpack://test/./node_modules/eth-lib/lib/hash.js?");

/***/ }),

/***/ "./node_modules/eth-lib/lib/nat.js":
/*!*****************************************!*\
  !*** ./node_modules/eth-lib/lib/nat.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nconst Bytes = __webpack_require__(/*! ./bytes */ \"./node_modules/eth-lib/lib/bytes.js\");\n\nconst fromBN = bn => \"0x\" + bn.toString(\"hex\");\n\nconst toBN = str => new BN(str.slice(2), 16);\n\nconst fromString = str => {\n  const bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\n\nconst toEther = wei => toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n\nconst fromEther = eth => mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n\nconst toString = a => toBN(a).toString(10);\n\nconst fromNumber = a => typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n\nconst toNumber = a => toBN(a).toNumber();\n\nconst toUint256 = a => Bytes.pad(32, a);\n\nconst bin = method => (a, b) => fromBN(toBN(a)[method](toBN(b)));\n\nconst add = bin(\"add\");\nconst mul = bin(\"mul\");\nconst div = bin(\"div\");\nconst sub = bin(\"sub\");\nmodule.exports = {\n  toString,\n  fromString,\n  toNumber,\n  fromNumber,\n  toEther,\n  fromEther,\n  toUint256,\n  add,\n  mul,\n  div,\n  sub\n};\n\n//# sourceURL=webpack://test/./node_modules/eth-lib/lib/nat.js?");

/***/ }),

/***/ "./node_modules/eth-lib/lib/rlp.js":
/*!*****************************************!*\
  !*** ./node_modules/eth-lib/lib/rlp.js ***!
  \*****************************************/
/***/ ((module) => {

eval("// The RLP format\n// Serialization and deserialization for the BytesTree type, under the following grammar:\n// | First byte | Meaning                                                                    |\n// | ---------- | -------------------------------------------------------------------------- |\n// | 0   to 127 | HEX(leaf)                                                                  |\n// | 128 to 183 | HEX(length_of_leaf + 128) + HEX(leaf)                                      |\n// | 184 to 191 | HEX(length_of_length_of_leaf + 128 + 55) + HEX(length_of_leaf) + HEX(leaf) |\n// | 192 to 247 | HEX(length_of_node + 192) + HEX(node)                                      |\n// | 248 to 255 | HEX(length_of_length_of_node + 128 + 55) + HEX(length_of_node) + HEX(node) |\nconst encode = tree => {\n  const padEven = str => str.length % 2 === 0 ? str : \"0\" + str;\n\n  const uint = num => padEven(num.toString(16));\n\n  const length = (len, add) => len < 56 ? uint(add + len) : uint(add + uint(len).length / 2 + 55) + uint(len);\n\n  const dataTree = tree => {\n    if (typeof tree === \"string\") {\n      const hex = tree.slice(2);\n      const pre = hex.length != 2 || hex >= \"80\" ? length(hex.length / 2, 128) : \"\";\n      return pre + hex;\n    } else {\n      const hex = tree.map(dataTree).join(\"\");\n      const pre = length(hex.length / 2, 192);\n      return pre + hex;\n    }\n  };\n\n  return \"0x\" + dataTree(tree);\n};\n\nconst decode = hex => {\n  let i = 2;\n\n  const parseTree = () => {\n    if (i >= hex.length) throw \"\";\n    const head = hex.slice(i, i + 2);\n    return head < \"80\" ? (i += 2, \"0x\" + head) : head < \"c0\" ? parseHex() : parseList();\n  };\n\n  const parseLength = () => {\n    const len = parseInt(hex.slice(i, i += 2), 16) % 64;\n    return len < 56 ? len : parseInt(hex.slice(i, i += (len - 55) * 2), 16);\n  };\n\n  const parseHex = () => {\n    const len = parseLength();\n    return \"0x\" + hex.slice(i, i += len * 2);\n  };\n\n  const parseList = () => {\n    const lim = parseLength() * 2 + i;\n    let list = [];\n\n    while (i < lim) list.push(parseTree());\n\n    return list;\n  };\n\n  try {\n    return parseTree();\n  } catch (e) {\n    return [];\n  }\n};\n\nmodule.exports = {\n  encode,\n  decode\n};\n\n//# sourceURL=webpack://test/./node_modules/eth-lib/lib/rlp.js?");

/***/ }),

/***/ "./node_modules/ethereum-bloom-filters/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/ethereum-bloom-filters/dist/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/ethereum-bloom-filters/dist/utils.js\");\n/**\r\n * Returns true if the bloom is a valid bloom\r\n * @param bloom The bloom\r\n */\n\n\nfunction isBloom(bloom) {\n  if (typeof bloom !== 'string') {\n    return false;\n  }\n\n  if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n    return false;\n  }\n\n  if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n    return true;\n  }\n\n  return false;\n}\n\nexports.isBloom = isBloom;\n/**\r\n * Returns true if the value is part of the given bloom\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param value The value\r\n */\n\nfunction isInBloom(bloom, value) {\n  if (typeof value === 'object' && value.constructor === Uint8Array) {\n    value = utils_1.bytesToHex(value);\n  }\n\n  const hash = utils_1.keccak256(value).replace('0x', '');\n\n  for (let i = 0; i < 12; i += 4) {\n    // calculate bit position in bloom filter that must be active\n    const bitpos = (parseInt(hash.substr(i, 2), 16) << 8) + parseInt(hash.substr(i + 2, 2), 16) & 2047; // test if bitpos in bloom is active\n\n    const code = codePointToInt(bloom.charCodeAt(bloom.length - 1 - Math.floor(bitpos / 4)));\n    const offset = 1 << bitpos % 4;\n\n    if ((code & offset) !== offset) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.isInBloom = isInBloom;\n/**\r\n * Code points to int\r\n * @param codePoint The code point\r\n */\n\nfunction codePointToInt(codePoint) {\n  if (codePoint >= 48 && codePoint <= 57) {\n    /* ['0'..'9'] -> [0..9] */\n    return codePoint - 48;\n  }\n\n  if (codePoint >= 65 && codePoint <= 70) {\n    /* ['A'..'F'] -> [10..15] */\n    return codePoint - 55;\n  }\n\n  if (codePoint >= 97 && codePoint <= 102) {\n    /* ['a'..'f'] -> [10..15] */\n    return codePoint - 87;\n  }\n\n  throw new Error('invalid bloom');\n}\n/**\r\n * Returns true if the ethereum users address is part of the given bloom.\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param address the address to test\r\n */\n\n\nfunction isUserEthereumAddressInBloom(bloom, ethereumAddress) {\n  if (!isBloom(bloom)) {\n    throw new Error('Invalid bloom given');\n  }\n\n  if (!isAddress(ethereumAddress)) {\n    throw new Error(`Invalid ethereum address given: \"${ethereumAddress}\"`);\n  } // you have to pad the ethereum address to 32 bytes\n  // else the bloom filter does not work\n  // this is only if your matching the USERS\n  // ethereum address. Contract address do not need this\n  // hence why we have 2 methods\n  // (0x is not in the 2nd parameter of padleft so 64 chars is fine)\n\n\n  const address = utils_1.padLeft(ethereumAddress, 64);\n  return isInBloom(bloom, address);\n}\n\nexports.isUserEthereumAddressInBloom = isUserEthereumAddressInBloom;\n/**\r\n * Returns true if the contract address is part of the given bloom.\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param contractAddress the contract address to test\r\n */\n\nfunction isContractAddressInBloom(bloom, contractAddress) {\n  if (!isBloom(bloom)) {\n    throw new Error('Invalid bloom given');\n  }\n\n  if (!isAddress(contractAddress)) {\n    throw new Error(`Invalid contract address given: \"${contractAddress}\"`);\n  }\n\n  return isInBloom(bloom, contractAddress);\n}\n\nexports.isContractAddressInBloom = isContractAddressInBloom;\n/**\r\n * Returns true if the topic is part of the given bloom.\r\n * note: false positives are possible.\r\n * @param bloom encoded bloom\r\n * @param topic the topic encoded hex\r\n */\n\nfunction isTopicInBloom(bloom, topic) {\n  if (!isBloom(bloom)) {\n    throw new Error('Invalid bloom given');\n  }\n\n  if (!isTopic(topic)) {\n    throw new Error('Invalid topic');\n  }\n\n  return isInBloom(bloom, topic);\n}\n\nexports.isTopicInBloom = isTopicInBloom;\n/**\r\n * Checks if its a valid topic\r\n * @param topic encoded hex topic\r\n */\n\nfunction isTopic(topic) {\n  if (typeof topic !== 'string') {\n    return false;\n  }\n\n  if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n    return false;\n  } else if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n    return true;\n  }\n\n  return false;\n}\n\nexports.isTopic = isTopic;\n/**\r\n * Is valid address\r\n * @param address The address\r\n */\n\nfunction isAddress(address) {\n  if (typeof address !== 'string') {\n    return false;\n  }\n\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    return true;\n  }\n\n  if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    return true;\n  }\n\n  return false;\n}\n\nexports.isAddress = isAddress;\n\n//# sourceURL=webpack://test/./node_modules/ethereum-bloom-filters/dist/index.js?");

/***/ }),

/***/ "./node_modules/ethereum-bloom-filters/dist/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/ethereum-bloom-filters/dist/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nconst sha3 = __webpack_require__(/*! js-sha3 */ \"./node_modules/ethereum-bloom-filters/node_modules/js-sha3/src/sha3.js\");\n/**\r\n * Keccak256 hash\r\n * @param data The data\r\n */\n\n\nfunction keccak256(data) {\n  return '0x' + sha3.keccak_256(toByteArray(data));\n}\n\nexports.keccak256 = keccak256;\n/**\r\n * Adding padding to string on the left\r\n * @param value The value\r\n * @param chars The chars\r\n */\n\nexports.padLeft = (value, chars) => {\n  const hasPrefix = /^0x/i.test(value) || typeof value === 'number';\n  value = value.toString().replace(/^0x/i, '');\n  const padding = chars - value.length + 1 >= 0 ? chars - value.length + 1 : 0;\n  return (hasPrefix ? '0x' : '') + new Array(padding).join('0') + value;\n};\n/**\r\n * Convert bytes to hex\r\n * @param bytes The bytes\r\n */\n\n\nfunction bytesToHex(bytes) {\n  const hex = [];\n\n  for (let i = 0; i < bytes.length; i++) {\n    hex.push((bytes[i] >>> 4).toString(16));\n    hex.push((bytes[i] & 0xf).toString(16));\n  }\n\n  return `0x${hex.join('').replace(/^0+/, '')}`;\n}\n\nexports.bytesToHex = bytesToHex;\n/**\r\n * To byte array\r\n * @param value The value\r\n */\n\nfunction toByteArray(value) {\n  if (value == null) {\n    throw new Error('cannot convert null value to array');\n  }\n\n  if (typeof value === 'string') {\n    const match = value.match(/^(0x)?[0-9a-fA-F]*$/);\n\n    if (!match) {\n      throw new Error('invalid hexidecimal string');\n    }\n\n    if (match[1] !== '0x') {\n      throw new Error('hex string must have 0x prefix');\n    }\n\n    value = value.substring(2);\n\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n\n    const result = [];\n\n    for (let i = 0; i < value.length; i += 2) {\n      result.push(parseInt(value.substr(i, 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isByteArray(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  throw new Error('invalid arrayify value');\n}\n\nexports.toByteArray = toByteArray;\n/**\r\n * Is byte array\r\n * @param value The value\r\n */\n\nfunction isByteArray(value) {\n  if (!value || // tslint:disable-next-line: radix\n  parseInt(String(value.length)) != value.length || typeof value === 'string') {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i]; // tslint:disable-next-line: radix\n\n    if (v < 0 || v >= 256 || parseInt(String(v)) != v) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * Add slice to array\r\n * @param array The array\r\n */\n\n\nfunction addSlice(array) {\n  if (array.slice !== undefined) {\n    return array;\n  }\n\n  array.slice = () => {\n    const args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n  };\n\n  return array;\n}\n\n//# sourceURL=webpack://test/./node_modules/ethereum-bloom-filters/dist/utils.js?");

/***/ }),

/***/ "./node_modules/ethereum-bloom-filters/node_modules/js-sha3/src/sha3.js":
/*!******************************************************************************!*\
  !*** ./node_modules/ethereum-bloom-filters/node_modules/js-sha3/src/sha3.js ***!
  \******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n  if (NODE_JS) {\n    root = __webpack_require__.g;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [{\n    name: 'keccak',\n    padding: KECCAK_PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'sha3',\n    padding: PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'shake',\n    padding: SHAKE_PADDING,\n    bits: SHAKE_BITS,\n    createMethod: createShakeMethod\n  }, {\n    name: 'cshake',\n    padding: CSHAKE_PADDING,\n    bits: SHAKE_BITS,\n    createMethod: createCshakeMethod\n  }, {\n    name: 'kmac',\n    padding: CSHAKE_PADDING,\n    bits: SHAKE_BITS,\n    createMethod: createKmacMethod\n  }];\n  var methods = {},\n      methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = 1600 - (bits << 1) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n\n    var notString,\n        type = typeof message;\n\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n\n      notString = true;\n    }\n\n    var blocks = this.blocks,\n        byteCount = this.byteCount,\n        length = message.length,\n        blockCount = this.blockCount,\n        index = 0,\n        s = this.s,\n        i,\n        code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255,\n        n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString,\n        type = typeof str;\n\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n\n      notString = true;\n    }\n\n    var bytes = 0,\n        length = str.length;\n\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);\n          bytes += 4;\n        }\n      }\n    }\n\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n\n    this.finalized = true;\n    var blocks = this.blocks,\n        i = this.lastByteIndex,\n        blockCount = this.blockCount,\n        s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n\n    blocks[blockCount - 1] |= 0x80000000;\n\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var hex = '',\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n      }\n\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n      }\n    }\n\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n\n    if (extraBytes) {\n      buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n\n    var array = new Uint32Array(buffer);\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var array = [],\n        offset,\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = block >> 8 & 0xFF;\n        array[offset + 2] = block >> 16 & 0xFF;\n        array[offset + 3] = block >> 24 & 0xFF;\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n\n      if (extraBytes > 1) {\n        array[offset + 1] = block >> 8 & 0xFF;\n      }\n\n      if (extraBytes > 2) {\n        array[offset + 2] = block >> 16 & 0xFF;\n      }\n    }\n\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n      h = c8 ^ (c2 << 1 | c3 >>> 31);\n      l = c9 ^ (c3 << 1 | c2 >>> 31);\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ (c4 << 1 | c5 >>> 31);\n      l = c1 ^ (c5 << 1 | c4 >>> 31);\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ (c6 << 1 | c7 >>> 31);\n      l = c3 ^ (c7 << 1 | c6 >>> 31);\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ (c8 << 1 | c9 >>> 31);\n      l = c5 ^ (c9 << 1 | c8 >>> 31);\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ (c0 << 1 | c1 >>> 31);\n      l = c7 ^ (c1 << 1 | c0 >>> 31);\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n      b0 = s[0];\n      b1 = s[1];\n      b32 = s[11] << 4 | s[10] >>> 28;\n      b33 = s[10] << 4 | s[11] >>> 28;\n      b14 = s[20] << 3 | s[21] >>> 29;\n      b15 = s[21] << 3 | s[20] >>> 29;\n      b46 = s[31] << 9 | s[30] >>> 23;\n      b47 = s[30] << 9 | s[31] >>> 23;\n      b28 = s[40] << 18 | s[41] >>> 14;\n      b29 = s[41] << 18 | s[40] >>> 14;\n      b20 = s[2] << 1 | s[3] >>> 31;\n      b21 = s[3] << 1 | s[2] >>> 31;\n      b2 = s[13] << 12 | s[12] >>> 20;\n      b3 = s[12] << 12 | s[13] >>> 20;\n      b34 = s[22] << 10 | s[23] >>> 22;\n      b35 = s[23] << 10 | s[22] >>> 22;\n      b16 = s[33] << 13 | s[32] >>> 19;\n      b17 = s[32] << 13 | s[33] >>> 19;\n      b48 = s[42] << 2 | s[43] >>> 30;\n      b49 = s[43] << 2 | s[42] >>> 30;\n      b40 = s[5] << 30 | s[4] >>> 2;\n      b41 = s[4] << 30 | s[5] >>> 2;\n      b22 = s[14] << 6 | s[15] >>> 26;\n      b23 = s[15] << 6 | s[14] >>> 26;\n      b4 = s[25] << 11 | s[24] >>> 21;\n      b5 = s[24] << 11 | s[25] >>> 21;\n      b36 = s[34] << 15 | s[35] >>> 17;\n      b37 = s[35] << 15 | s[34] >>> 17;\n      b18 = s[45] << 29 | s[44] >>> 3;\n      b19 = s[44] << 29 | s[45] >>> 3;\n      b10 = s[6] << 28 | s[7] >>> 4;\n      b11 = s[7] << 28 | s[6] >>> 4;\n      b42 = s[17] << 23 | s[16] >>> 9;\n      b43 = s[16] << 23 | s[17] >>> 9;\n      b24 = s[26] << 25 | s[27] >>> 7;\n      b25 = s[27] << 25 | s[26] >>> 7;\n      b6 = s[36] << 21 | s[37] >>> 11;\n      b7 = s[37] << 21 | s[36] >>> 11;\n      b38 = s[47] << 24 | s[46] >>> 8;\n      b39 = s[46] << 24 | s[47] >>> 8;\n      b30 = s[8] << 27 | s[9] >>> 5;\n      b31 = s[9] << 27 | s[8] >>> 5;\n      b12 = s[18] << 20 | s[19] >>> 12;\n      b13 = s[19] << 20 | s[18] >>> 12;\n      b44 = s[29] << 7 | s[28] >>> 25;\n      b45 = s[28] << 7 | s[29] >>> 25;\n      b26 = s[38] << 8 | s[39] >>> 24;\n      b27 = s[39] << 8 | s[38] >>> 24;\n      b8 = s[48] << 14 | s[49] >>> 18;\n      b9 = s[49] << 14 | s[48] >>> 18;\n      s[0] = b0 ^ ~b2 & b4;\n      s[1] = b1 ^ ~b3 & b5;\n      s[10] = b10 ^ ~b12 & b14;\n      s[11] = b11 ^ ~b13 & b15;\n      s[20] = b20 ^ ~b22 & b24;\n      s[21] = b21 ^ ~b23 & b25;\n      s[30] = b30 ^ ~b32 & b34;\n      s[31] = b31 ^ ~b33 & b35;\n      s[40] = b40 ^ ~b42 & b44;\n      s[41] = b41 ^ ~b43 & b45;\n      s[2] = b2 ^ ~b4 & b6;\n      s[3] = b3 ^ ~b5 & b7;\n      s[12] = b12 ^ ~b14 & b16;\n      s[13] = b13 ^ ~b15 & b17;\n      s[22] = b22 ^ ~b24 & b26;\n      s[23] = b23 ^ ~b25 & b27;\n      s[32] = b32 ^ ~b34 & b36;\n      s[33] = b33 ^ ~b35 & b37;\n      s[42] = b42 ^ ~b44 & b46;\n      s[43] = b43 ^ ~b45 & b47;\n      s[4] = b4 ^ ~b6 & b8;\n      s[5] = b5 ^ ~b7 & b9;\n      s[14] = b14 ^ ~b16 & b18;\n      s[15] = b15 ^ ~b17 & b19;\n      s[24] = b24 ^ ~b26 & b28;\n      s[25] = b25 ^ ~b27 & b29;\n      s[34] = b34 ^ ~b36 & b38;\n      s[35] = b35 ^ ~b37 & b39;\n      s[44] = b44 ^ ~b46 & b48;\n      s[45] = b45 ^ ~b47 & b49;\n      s[6] = b6 ^ ~b8 & b0;\n      s[7] = b7 ^ ~b9 & b1;\n      s[16] = b16 ^ ~b18 & b10;\n      s[17] = b17 ^ ~b19 & b11;\n      s[26] = b26 ^ ~b28 & b20;\n      s[27] = b27 ^ ~b29 & b21;\n      s[36] = b36 ^ ~b38 & b30;\n      s[37] = b37 ^ ~b39 & b31;\n      s[46] = b46 ^ ~b48 & b40;\n      s[47] = b47 ^ ~b49 & b41;\n      s[8] = b8 ^ ~b0 & b2;\n      s[9] = b9 ^ ~b1 & b3;\n      s[18] = b18 ^ ~b10 & b12;\n      s[19] = b19 ^ ~b11 & b13;\n      s[28] = b28 ^ ~b20 & b22;\n      s[29] = b29 ^ ~b21 & b23;\n      s[38] = b38 ^ ~b30 & b32;\n      s[39] = b39 ^ ~b31 & b33;\n      s[48] = b48 ^ ~b40 & b42;\n      s[49] = b49 ^ ~b41 & b43;\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return methods;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n\n//# sourceURL=webpack://test/./node_modules/ethereum-bloom-filters/node_modules/js-sha3/src/sha3.js?");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/hash-utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/hash-utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nfunction createHashFunction(hashConstructor) {\n  return function (msg) {\n    var hash = hashConstructor();\n    hash.update(msg);\n    return Buffer.from(hash.digest());\n  };\n}\n\nexports.createHashFunction = createHashFunction;\n\n//# sourceURL=webpack://test/./node_modules/ethereum-cryptography/hash-utils.js?");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/keccak.js":
/*!******************************************************!*\
  !*** ./node_modules/ethereum-cryptography/keccak.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar hash_utils_1 = __webpack_require__(/*! ./hash-utils */ \"./node_modules/ethereum-cryptography/hash-utils.js\");\n\nvar createKeccakHash = __webpack_require__(/*! keccak */ \"./node_modules/keccak/js.js\");\n\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak512\");\n});\n\n//# sourceURL=webpack://test/./node_modules/ethereum-cryptography/keccak.js?");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/random.js":
/*!******************************************************!*\
  !*** ./node_modules/ethereum-cryptography/random.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar randombytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\n\nfunction getRandomBytes(bytes) {\n  return new Promise(function (resolve, reject) {\n    randombytes(bytes, function (err, resp) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexports.getRandomBytes = getRandomBytes;\n\nfunction getRandomBytesSync(bytes) {\n  return randombytes(bytes);\n}\n\nexports.getRandomBytesSync = getRandomBytesSync;\n\n//# sourceURL=webpack://test/./node_modules/ethereum-cryptography/random.js?");

/***/ }),

/***/ "./node_modules/ethereum-cryptography/secp256k1.js":
/*!*********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/secp256k1.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar secp256k1_1 = __webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\");\n\nvar random_1 = __webpack_require__(/*! ./random */ \"./node_modules/ethereum-cryptography/random.js\");\n\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nfunction createPrivateKey() {\n  return __awaiter(this, void 0, void 0, function () {\n    var pk;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (false) {}\n          return [4\n          /*yield*/\n          , random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n\n        case 1:\n          pk = _a.sent();\n\n          if (secp256k1_1.privateKeyVerify(pk)) {\n            return [2\n            /*return*/\n            , pk];\n          }\n\n          return [3\n          /*break*/\n          , 0];\n\n        case 2:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.createPrivateKey = createPrivateKey;\n\nfunction createPrivateKeySync() {\n  while (true) {\n    var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n\n    if (secp256k1_1.privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexports.createPrivateKeySync = createPrivateKeySync;\n\n__export(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\n\n//# sourceURL=webpack://test/./node_modules/ethereum-cryptography/secp256k1.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/account.js":
/*!******************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/account.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.isZeroAddress = exports.zeroAddress = exports.importPublic = exports.privateToAddress = exports.privateToPublic = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isValidAddress = exports.Account = void 0;\n\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\n\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js\"));\n\nconst rlp = __importStar(__webpack_require__(/*! rlp */ \"./node_modules/rlp/dist/index.js\"));\n\nconst secp256k1_1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\n\nconst ethjs_util_1 = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\n\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/ethereumjs-util/dist/constants.js\");\n\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-util/dist/bytes.js\");\n\nconst hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/ethereumjs-util/dist/hash.js\");\n\nconst helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/ethereumjs-util/dist/helpers.js\");\n\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/ethereumjs-util/dist/types.js\");\n\nclass Account {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(nonce = new bn_js_1.default(0), balance = new bn_js_1.default(0), stateRoot = constants_1.KECCAK256_RLP, codeHash = constants_1.KECCAK256_NULL) {\n    this.nonce = nonce;\n    this.balance = balance;\n    this.stateRoot = stateRoot;\n    this.codeHash = codeHash;\n\n    this._validate();\n  }\n\n  static fromAccountData(accountData) {\n    const {\n      nonce,\n      balance,\n      stateRoot,\n      codeHash\n    } = accountData;\n    return new Account(nonce ? new bn_js_1.default(bytes_1.toBuffer(nonce)) : undefined, balance ? new bn_js_1.default(bytes_1.toBuffer(balance)) : undefined, stateRoot ? bytes_1.toBuffer(stateRoot) : undefined, codeHash ? bytes_1.toBuffer(codeHash) : undefined);\n  }\n\n  static fromRlpSerializedAccount(serialized) {\n    const values = rlp.decode(serialized);\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array');\n    }\n\n    return this.fromValuesArray(values);\n  }\n\n  static fromValuesArray(values) {\n    const [nonce, balance, stateRoot, codeHash] = values;\n    return new Account(new bn_js_1.default(nonce), new bn_js_1.default(balance), stateRoot, codeHash);\n  }\n\n  _validate() {\n    if (this.nonce.lt(new bn_js_1.default(0))) {\n      throw new Error('nonce must be greater than zero');\n    }\n\n    if (this.balance.lt(new bn_js_1.default(0))) {\n      throw new Error('balance must be greater than zero');\n    }\n\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32');\n    }\n\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32');\n    }\n  }\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n\n\n  raw() {\n    return [types_1.bnToRlp(this.nonce), types_1.bnToRlp(this.balance), this.stateRoot, this.codeHash];\n  }\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n\n\n  serialize() {\n    return rlp.encode(this.raw());\n  }\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n\n\n  isContract() {\n    return !this.codeHash.equals(constants_1.KECCAK256_NULL);\n  }\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n\n\n  isEmpty() {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(constants_1.KECCAK256_NULL);\n  }\n\n}\n\nexports.Account = Account;\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\n\nexports.isValidAddress = function (hexAddress) {\n  try {\n    helpers_1.assertIsString(hexAddress);\n  } catch (e) {\n    return false;\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\n\n\nexports.toChecksumAddress = function (hexAddress, eip1191ChainId) {\n  helpers_1.assertIsHexString(hexAddress);\n  const address = ethjs_util_1.stripHexPrefix(hexAddress).toLowerCase();\n  let prefix = '';\n\n  if (eip1191ChainId) {\n    const chainId = types_1.toType(eip1191ChainId, types_1.TypeOutput.BN);\n    prefix = chainId.toString() + '0x';\n  }\n\n  const hash = hash_1.keccakFromString(prefix + address).toString('hex');\n  let ret = '0x';\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\n\n\nexports.isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n  return exports.isValidAddress(hexAddress) && exports.toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\n\n\nexports.generateAddress = function (from, nonce) {\n  helpers_1.assertIsBuffer(from);\n  helpers_1.assertIsBuffer(nonce);\n  const nonceBN = new bn_js_1.default(nonce);\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return hash_1.rlphash([from, null]).slice(-20);\n  } // Only take the lower 160bits of the hash\n\n\n  return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\n\n\nexports.generateAddress2 = function (from, salt, initCode) {\n  helpers_1.assertIsBuffer(from);\n  helpers_1.assertIsBuffer(salt);\n  helpers_1.assertIsBuffer(initCode);\n  assert_1.default(from.length === 20);\n  assert_1.default(salt.length === 32);\n  const address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, hash_1.keccak256(initCode)]));\n  return address.slice(-20);\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\n\n\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1_1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\n\n\nexports.isValidPublic = function (publicKey, sanitize = false) {\n  helpers_1.assertIsBuffer(publicKey);\n\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1_1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1_1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\n\n\nexports.pubToAddress = function (pubKey, sanitize = false) {\n  helpers_1.assertIsBuffer(pubKey);\n\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(secp256k1_1.publicKeyConvert(pubKey, false).slice(1));\n  }\n\n  assert_1.default(pubKey.length === 64); // Only take the lower 160bits of the hash\n\n  return hash_1.keccak(pubKey).slice(-20);\n};\n\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\n\nexports.privateToPublic = function (privateKey) {\n  helpers_1.assertIsBuffer(privateKey); // skip the type flag and use the X, Y points\n\n  return Buffer.from(secp256k1_1.publicKeyCreate(privateKey, false)).slice(1);\n};\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\n\n\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Converts a public key to the Ethereum format.\n */\n\n\nexports.importPublic = function (publicKey) {\n  helpers_1.assertIsBuffer(publicKey);\n\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(secp256k1_1.publicKeyConvert(publicKey, false).slice(1));\n  }\n\n  return publicKey;\n};\n/**\n * Returns the zero address.\n */\n\n\nexports.zeroAddress = function () {\n  const addressLength = 20;\n  const addr = bytes_1.zeros(addressLength);\n  return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if a given address is the zero address.\n */\n\n\nexports.isZeroAddress = function (hexAddress) {\n  try {\n    helpers_1.assertIsString(hexAddress);\n  } catch (e) {\n    return false;\n  }\n\n  const zeroAddr = exports.zeroAddress();\n  return zeroAddr === hexAddress;\n};\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/account.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/address.js":
/*!******************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/address.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Address = void 0;\n\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\n\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js\"));\n\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-util/dist/bytes.js\");\n\nconst account_1 = __webpack_require__(/*! ./account */ \"./node_modules/ethereumjs-util/dist/account.js\");\n\nclass Address {\n  constructor(buf) {\n    assert_1.default(buf.length === 20, 'Invalid address length');\n    this.buf = buf;\n  }\n  /**\n   * Returns the zero address.\n   */\n\n\n  static zero() {\n    return new Address(bytes_1.zeros(20));\n  }\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n\n\n  static fromString(str) {\n    assert_1.default(account_1.isValidAddress(str), 'Invalid address');\n    return new Address(bytes_1.toBuffer(str));\n  }\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n\n\n  static fromPublicKey(pubKey) {\n    assert_1.default(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n    const buf = account_1.pubToAddress(pubKey);\n    return new Address(buf);\n  }\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n\n\n  static fromPrivateKey(privateKey) {\n    assert_1.default(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n    const buf = account_1.privateToAddress(privateKey);\n    return new Address(buf);\n  }\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n\n\n  static generate(from, nonce) {\n    assert_1.default(bn_js_1.default.isBN(nonce));\n    return new Address(account_1.generateAddress(from.buf, nonce.toArrayLike(Buffer)));\n  }\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n\n\n  static generate2(from, salt, initCode) {\n    assert_1.default(Buffer.isBuffer(salt));\n    assert_1.default(Buffer.isBuffer(initCode));\n    return new Address(account_1.generateAddress2(from.buf, salt, initCode));\n  }\n  /**\n   * Is address equal to another.\n   */\n\n\n  equals(address) {\n    return this.buf.equals(address.buf);\n  }\n  /**\n   * Is address zero.\n   */\n\n\n  isZero() {\n    return this.equals(Address.zero());\n  }\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n\n\n  isPrecompileOrSystemAddress() {\n    const addressBN = new bn_js_1.default(this.buf);\n    const rangeMin = new bn_js_1.default(0);\n    const rangeMax = new bn_js_1.default('ffff', 'hex');\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax);\n  }\n  /**\n   * Returns hex encoding of address.\n   */\n\n\n  toString() {\n    return '0x' + this.buf.toString('hex');\n  }\n  /**\n   * Returns Buffer representation of address.\n   */\n\n\n  toBuffer() {\n    return Buffer.from(this.buf);\n  }\n\n}\n\nexports.Address = Address;\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/address.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/bytes.js":
/*!****************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/bytes.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = void 0;\n\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js\"));\n\nconst ethjs_util_1 = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\n\nconst helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/ethereumjs-util/dist/helpers.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\n\n\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\n\n\nconst setLength = function (msg, length, right) {\n  const buf = exports.zeros(length);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\n\n\nexports.setLengthLeft = function (msg, length) {\n  helpers_1.assertIsBuffer(msg);\n  return setLength(msg, length, false);\n};\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\n\n\nexports.setLengthRight = function (msg, length) {\n  helpers_1.assertIsBuffer(msg);\n  return setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\n\n\nconst stripZeros = function (a) {\n  let first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\n\n\nexports.unpadBuffer = function (a) {\n  helpers_1.assertIsBuffer(a);\n  return stripZeros(a);\n};\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\n\n\nexports.unpadArray = function (a) {\n  helpers_1.assertIsArray(a);\n  return stripZeros(a);\n};\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\n\n\nexports.unpadHexString = function (a) {\n  helpers_1.assertIsHexString(a);\n  a = ethjs_util_1.stripHexPrefix(a);\n  return stripZeros(a);\n};\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\n\n\nexports.toBuffer = function (v) {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0);\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v);\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v);\n  }\n\n  if (typeof v === 'string') {\n    if (!ethjs_util_1.isHexString(v)) {\n      throw new Error(`Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`);\n    }\n\n    return Buffer.from(ethjs_util_1.padToEven(ethjs_util_1.stripHexPrefix(v)), 'hex');\n  }\n\n  if (typeof v === 'number') {\n    return ethjs_util_1.intToBuffer(v);\n  }\n\n  if (bn_js_1.default.isBN(v)) {\n    return v.toArrayLike(Buffer);\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray());\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer());\n  }\n\n  throw new Error('invalid type');\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\n\n\nexports.bufferToInt = function (buf) {\n  return new bn_js_1.default(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\n\n\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\n\n\nexports.fromSigned = function (num) {\n  return new bn_js_1.default(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\n\n\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\n\n\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return ethjs_util_1.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\n\n\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`;\n  } else if (ba instanceof Array) {\n    const array = [];\n\n    for (let i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n\n    return array;\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/bytes.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/constants.js":
/*!********************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/constants.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\n\nconst Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer;\n\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js\"));\n/**\n * The max integer that this VM can handle\n */\n\n\nexports.MAX_INTEGER = new bn_js_1.default('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\n\nexports.TWO_POW256 = new bn_js_1.default('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/constants.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/externals.js":
/*!********************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/externals.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.rlp = exports.BN = void 0;\n\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js\"));\n\nexports.BN = bn_js_1.default;\n\nconst rlp = __importStar(__webpack_require__(/*! rlp */ \"./node_modules/rlp/dist/index.js\"));\n\nexports.rlp = rlp;\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/externals.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/hash.js":
/*!***************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/hash.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.rlphash = exports.ripemd160FromArray = exports.ripemd160FromString = exports.ripemd160 = exports.sha256FromArray = exports.sha256FromString = exports.sha256 = exports.keccakFromArray = exports.keccakFromHexString = exports.keccakFromString = exports.keccak256 = exports.keccak = void 0;\n\nconst keccak_1 = __webpack_require__(/*! ethereum-cryptography/keccak */ \"./node_modules/ethereum-cryptography/keccak.js\");\n\nconst createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\n\nconst rlp = __importStar(__webpack_require__(/*! rlp */ \"./node_modules/rlp/dist/index.js\"));\n\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-util/dist/bytes.js\");\n\nconst helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/ethereumjs-util/dist/helpers.js\");\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\n\n\nexports.keccak = function (a, bits = 256) {\n  helpers_1.assertIsBuffer(a);\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak_1.keccak224(a);\n      }\n\n    case 256:\n      {\n        return keccak_1.keccak256(a);\n      }\n\n    case 384:\n      {\n        return keccak_1.keccak384(a);\n      }\n\n    case 512:\n      {\n        return keccak_1.keccak512(a);\n      }\n\n    default:\n      {\n        throw new Error(`Invald algorithm: keccak${bits}`);\n      }\n  }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\n\n\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\n\n\nexports.keccakFromString = function (a, bits = 256) {\n  helpers_1.assertIsString(a);\n  const buf = Buffer.from(a, 'utf8');\n  return exports.keccak(buf, bits);\n};\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\n\n\nexports.keccakFromHexString = function (a, bits = 256) {\n  helpers_1.assertIsHexString(a);\n  return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\n\n\nexports.keccakFromArray = function (a, bits = 256) {\n  helpers_1.assertIsArray(a);\n  return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\n\n\nconst _sha256 = function (a) {\n  a = bytes_1.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\n\n\nexports.sha256 = function (a) {\n  helpers_1.assertIsBuffer(a);\n  return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\n\n\nexports.sha256FromString = function (a) {\n  helpers_1.assertIsString(a);\n  return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\n\n\nexports.sha256FromArray = function (a) {\n  helpers_1.assertIsArray(a);\n  return _sha256(a);\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\n\n\nconst _ripemd160 = function (a, padded) {\n  a = bytes_1.toBuffer(a);\n  const hash = createHash('rmd160').update(a).digest();\n\n  if (padded === true) {\n    return bytes_1.setLengthLeft(hash, 32);\n  } else {\n    return hash;\n  }\n};\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\n\n\nexports.ripemd160 = function (a, padded) {\n  helpers_1.assertIsBuffer(a);\n  return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\n\n\nexports.ripemd160FromString = function (a, padded) {\n  helpers_1.assertIsString(a);\n  return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\n\n\nexports.ripemd160FromArray = function (a, padded) {\n  helpers_1.assertIsArray(a);\n  return _ripemd160(a, padded);\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\n\n\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/hash.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/helpers.js":
/*!******************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/helpers.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\n\nconst ethjs_util_1 = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\n\n\nexports.assertIsHexString = function (input) {\n  if (!ethjs_util_1.isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`;\n    throw new Error(msg);\n  }\n};\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\n\n\nexports.assertIsBuffer = function (input) {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`;\n    throw new Error(msg);\n  }\n};\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\n\n\nexports.assertIsArray = function (input) {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`;\n    throw new Error(msg);\n  }\n};\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\n\n\nexports.assertIsString = function (input) {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`;\n    throw new Error(msg);\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/helpers.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n})); /// <reference path=\"./@types/ethjs-util/index.ts\"/>\n\n/**\n * Constants\n */\n\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/ethereumjs-util/dist/constants.js\"), exports);\n/**\n * Account class and helper functions\n */\n\n\n__exportStar(__webpack_require__(/*! ./account */ \"./node_modules/ethereumjs-util/dist/account.js\"), exports);\n/**\n * Address type\n */\n\n\n__exportStar(__webpack_require__(/*! ./address */ \"./node_modules/ethereumjs-util/dist/address.js\"), exports);\n/**\n * Hash functions\n */\n\n\n__exportStar(__webpack_require__(/*! ./hash */ \"./node_modules/ethereumjs-util/dist/hash.js\"), exports);\n/**\n * ECDSA signature\n */\n\n\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/ethereumjs-util/dist/signature.js\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n\n\n__exportStar(__webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-util/dist/bytes.js\"), exports);\n/**\n * Function for definining properties on an object\n */\n\n\n__exportStar(__webpack_require__(/*! ./object */ \"./node_modules/ethereumjs-util/dist/object.js\"), exports);\n/**\n * External exports (BN, rlp, secp256k1)\n */\n\n\n__exportStar(__webpack_require__(/*! ./externals */ \"./node_modules/ethereumjs-util/dist/externals.js\"), exports);\n/**\n * Helpful TypeScript types\n */\n\n\n__exportStar(__webpack_require__(/*! ./types */ \"./node_modules/ethereumjs-util/dist/types.js\"), exports);\n/**\n * Export ethjs-util methods\n */\n\n\n__exportStar(__webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\"), exports);\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/index.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/object.js":
/*!*****************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/object.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.defineProperties = void 0;\n\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"./node_modules/assert/build/assert.js\"));\n\nconst ethjsUtil = __importStar(__webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\"));\n\nconst rlp = __importStar(__webpack_require__(/*! rlp */ \"./node_modules/rlp/dist/index.js\"));\n\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-util/dist/bytes.js\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\n\n\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = []; // attach the `toJSON`\n\n  self.toJSON = function (label = false) {\n    if (label) {\n      const obj = {};\n\n      self._fields.forEach(field => {\n        obj[field] = `0x${self[field].toString('hex')}`;\n      });\n\n      return obj;\n    }\n\n    return bytes_1.baToJSON(self.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach((field, i) => {\n    self._fields.push(field.name);\n\n    function getter() {\n      return self.raw[i];\n    }\n\n    function setter(v) {\n      v = bytes_1.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = bytes_1.unpadBuffer(v);\n        assert_1.default(field.length >= v.length, `The field ${field.name} must not have more ${field.length} bytes`);\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert_1.default(field.length === v.length, `The field ${field.name} must have byte length of ${field.length}`);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    } // attach alias\n\n\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  }); // if the constuctor is passed data\n\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      } // make sure all the items are buffers\n\n\n      data.forEach((d, i) => {\n        self[self._fields[i]] = bytes_1.toBuffer(d);\n      });\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data);\n      fields.forEach(field => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/object.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/signature.js":
/*!********************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/signature.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\n\nconst secp256k1_1 = __webpack_require__(/*! ethereum-cryptography/secp256k1 */ \"./node_modules/ethereum-cryptography/secp256k1.js\");\n\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js\"));\n\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-util/dist/bytes.js\");\n\nconst hash_1 = __webpack_require__(/*! ./hash */ \"./node_modules/ethereumjs-util/dist/hash.js\");\n\nconst helpers_1 = __webpack_require__(/*! ./helpers */ \"./node_modules/ethereumjs-util/dist/helpers.js\");\n\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/ethereumjs-util/dist/types.js\");\n\nfunction ecsign(msgHash, privateKey, chainId) {\n  const {\n    signature,\n    recid: recovery\n  } = secp256k1_1.ecdsaSign(msgHash, privateKey);\n  const r = Buffer.from(signature.slice(0, 32));\n  const s = Buffer.from(signature.slice(32, 64));\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27;\n    return {\n      r,\n      s,\n      v\n    };\n  }\n\n  const chainIdBN = types_1.toType(chainId, types_1.TypeOutput.BN);\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer);\n  return {\n    r,\n    s,\n    v\n  };\n}\n\nexports.ecsign = ecsign;\n\nfunction calculateSigRecovery(v, chainId) {\n  const vBN = types_1.toType(v, types_1.TypeOutput.BN);\n\n  if (!chainId) {\n    return vBN.subn(27);\n  }\n\n  const chainIdBN = types_1.toType(chainId, types_1.TypeOutput.BN);\n  return vBN.sub(chainIdBN.muln(2).addn(35));\n}\n\nfunction isValidSigRecovery(recovery) {\n  const rec = new bn_js_1.default(recovery);\n  return rec.eqn(0) || rec.eqn(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\n\n\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n  const signature = Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32)], 64);\n  const recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  }\n\n  const senderPubKey = secp256k1_1.ecdsaRecover(signature, recovery.toNumber(), msgHash);\n  return Buffer.from(secp256k1_1.publicKeyConvert(senderPubKey, false).slice(1));\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\n\n\nexports.toRpcSig = function (v, r, s, chainId) {\n  const recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  } // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n\n\n  return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\n\n\nexports.fromRpcSig = function (sig) {\n  const buf = bytes_1.toBuffer(sig);\n\n  if (buf.length < 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  let v = bytes_1.bufferToInt(buf.slice(64)); // support both versions of `eth_sign` responses\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: buf.slice(0, 32),\n    s: buf.slice(32, 64)\n  };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\n\n\nexports.isValidSignature = function (v, r, s, homesteadOrLater = true, chainId) {\n  const SECP256K1_N_DIV_2 = new bn_js_1.default('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  const SECP256K1_N = new bn_js_1.default('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false;\n  }\n\n  const rBN = new bn_js_1.default(r);\n  const sBN = new bn_js_1.default(s);\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\n\n\nexports.hashPersonalMessage = function (message) {\n  helpers_1.assertIsBuffer(message);\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length.toString()}`, 'utf-8');\n  return hash_1.keccak(Buffer.concat([prefix, message]));\n};\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/signature.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/dist/types.js":
/*!****************************************************!*\
  !*** ./node_modules/ethereumjs-util/dist/types.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToHex = void 0;\n\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js\"));\n\nconst ethjs_util_1 = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\n\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"./node_modules/ethereumjs-util/dist/bytes.js\");\n/**\n * Convert BN to 0x-prefixed hex string.\n */\n\n\nfunction bnToHex(value) {\n  return `0x${value.toString(16)}`;\n}\n\nexports.bnToHex = bnToHex;\n/**\n * Convert value from BN to RLP (unpadded buffer)\n * @param value value to convert\n */\n\nfunction bnToRlp(value) {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return bytes_1.unpadBuffer(value.toArrayLike(Buffer));\n}\n\nexports.bnToRlp = bnToRlp;\n/**\n * Type output options\n */\n\nvar TypeOutput;\n\n(function (TypeOutput) {\n  TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n  TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n  TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n  TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\n/**\n * Convert an input to a specified type\n * @param input value to convert\n * @param outputType type to output\n */\n\n\nfunction toType(input, outputType) {\n  if (typeof input === 'string' && !ethjs_util_1.isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n  }\n\n  input = bytes_1.toBuffer(input);\n\n  if (outputType === TypeOutput.Buffer) {\n    return input;\n  } else if (outputType === TypeOutput.BN) {\n    return new bn_js_1.default(input);\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new bn_js_1.default(input);\n    const max = new bn_js_1.default(Number.MAX_SAFE_INTEGER.toString());\n\n    if (bn.gt(max)) {\n      throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n    }\n\n    return bn.toNumber();\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${input.toString('hex')}`;\n  }\n}\n\nexports.toType = toType;\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/dist/types.js?");

/***/ }),

/***/ "./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js":
/*!*******************************************************************!*\
  !*** ./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = __webpack_require__(/*! buffer */ \"?4a58\").Buffer;\n    }\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this._strip();\n  };\n\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index); // '0' - '9'\n\n    if (c >= 48 && c <= 57) {\n      return c - 48; // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55; // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // 24-bits chunks\n\n\n    var off = 0;\n    var j = 0;\n    var w;\n\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        b = c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa; // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move(dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move(dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype._strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  }; // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n\n\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate(ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position++] = word & 0xff;\n\n      if (position < res.length) {\n        res[position++] = word >> 8 & 0xff;\n      }\n\n      if (position < res.length) {\n        res[position++] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = this.words[i] << shift | carry;\n      res[position--] = word & 0xff;\n\n      if (position >= 0) {\n        res[position--] = word >> 8 & 0xff;\n      }\n\n      if (position >= 0) {\n        res[position--] = word >> 16 & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = word >> 24 & 0xff;\n        }\n\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = num.words[off] >>> wbit & 0x01;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q._strip();\n    }\n\n    a._strip(); // Denormalize\n\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  }; // WARNING: DEPRECATED\n\n\n  BN.prototype.modn = function modn(num) {\n    return this.modrn(num);\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n//# sourceURL=webpack://test/./node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/ethjs-unit/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/ethjs-unit/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js\");\n\nvar numberToBN = __webpack_require__(/*! number-to-bn */ \"./node_modules/number-to-bn/src/index.js\");\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1); // complete ethereum unit map\n\nvar unitMap = {\n  'noether': '0',\n  // eslint-disable-line\n  'wei': '1',\n  // eslint-disable-line\n  'kwei': '1000',\n  // eslint-disable-line\n  'Kwei': '1000',\n  // eslint-disable-line\n  'babbage': '1000',\n  // eslint-disable-line\n  'femtoether': '1000',\n  // eslint-disable-line\n  'mwei': '1000000',\n  // eslint-disable-line\n  'Mwei': '1000000',\n  // eslint-disable-line\n  'lovelace': '1000000',\n  // eslint-disable-line\n  'picoether': '1000000',\n  // eslint-disable-line\n  'gwei': '1000000000',\n  // eslint-disable-line\n  'Gwei': '1000000000',\n  // eslint-disable-line\n  'shannon': '1000000000',\n  // eslint-disable-line\n  'nanoether': '1000000000',\n  // eslint-disable-line\n  'nano': '1000000000',\n  // eslint-disable-line\n  'szabo': '1000000000000',\n  // eslint-disable-line\n  'microether': '1000000000000',\n  // eslint-disable-line\n  'micro': '1000000000000',\n  // eslint-disable-line\n  'finney': '1000000000000000',\n  // eslint-disable-line\n  'milliether': '1000000000000000',\n  // eslint-disable-line\n  'milli': '1000000000000000',\n  // eslint-disable-line\n  'ether': '1000000000000000000',\n  // eslint-disable-line\n  'kether': '1000000000000000000000',\n  // eslint-disable-line\n  'grand': '1000000000000000000000',\n  // eslint-disable-line\n  'mether': '1000000000000000000000000',\n  // eslint-disable-line\n  'gether': '1000000000000000000000000000',\n  // eslint-disable-line\n  'tether': '1000000000000000000000000000000'\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\n\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n\n  var negative = wei.lt(zero); // eslint-disable-line\n\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1; // Is it negative?\n\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  } // Split it into a whole and fractional part\n\n\n  var comps = ether.split('.'); // eslint-disable-line\n\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n\n  if (!fraction) {\n    fraction = '0';\n  }\n\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};\n\n//# sourceURL=webpack://test/./node_modules/ethjs-unit/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js":
/*!**************************************************************!*\
  !*** ./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n//# sourceURL=webpack://test/./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/ethjs-util/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/ethjs-util/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"./node_modules/is-hex-prefixed/src/index.js\");\n\nvar stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ \"./node_modules/strip-hex-prefix/src/index.js\");\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\n\n\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\n\n\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\n\n\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\n\n\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\n\n\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n  return bufferValue.toString('utf8');\n}\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\n\n\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n\n    result.push(value);\n  }\n\n  return result;\n}\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\n\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};\n\n//# sourceURL=webpack://test/./node_modules/ethjs-util/lib/index.js?");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter;\nmodule.exports.once = once; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function () {\n    return defaultMaxListeners;\n  },\n  set: function (arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = _getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) copy[i] = arr[i];\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n\n      resolve([].slice.call(arguments));\n    }\n\n    ;\n    eventTargetAgnosticAddListener(emitter, name, resolver, {\n      once: true\n    });\n\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, {\n        once: true\n      });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n//# sourceURL=webpack://test/./node_modules/events/events.js?");

/***/ }),

/***/ "./node_modules/evp_bytestokey/index.js":
/*!**********************************************!*\
  !*** ./node_modules/evp_bytestokey/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar MD5 = __webpack_require__(/*! md5.js */ \"./node_modules/md5.js/index.js\");\n/* eslint-disable camelcase */\n\n\nfunction EVP_BytesToKey(password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary');\n\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary');\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length');\n  }\n\n  var keyLen = keyBits / 8;\n  var key = Buffer.alloc(keyLen);\n  var iv = Buffer.alloc(ivLen || 0);\n  var tmp = Buffer.alloc(0);\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5();\n    hash.update(tmp);\n    hash.update(password);\n    if (salt) hash.update(salt);\n    tmp = hash.digest();\n    var used = 0;\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen;\n      used = Math.min(keyLen, tmp.length);\n      tmp.copy(key, keyStart, 0, used);\n      keyLen -= used;\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen;\n      var length = Math.min(ivLen, tmp.length - used);\n      tmp.copy(iv, ivStart, used, used + length);\n      ivLen -= length;\n    }\n  }\n\n  tmp.fill(0);\n  return {\n    key: key,\n    iv: iv\n  };\n}\n\nmodule.exports = EVP_BytesToKey;\n\n//# sourceURL=webpack://test/./node_modules/evp_bytestokey/index.js?");

/***/ }),

/***/ "./node_modules/foreach/index.js":
/*!***************************************!*\
  !*** ./node_modules/foreach/index.js ***!
  \***************************************/
/***/ ((module) => {

eval("var hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach(obj, fn, ctx) {\n  if (toString.call(fn) !== '[object Function]') {\n    throw new TypeError('iterator must be a function');\n  }\n\n  var l = obj.length;\n\n  if (l === +l) {\n    for (var i = 0; i < l; i++) {\n      fn.call(ctx, obj[i], i, obj);\n    }\n  } else {\n    for (var k in obj) {\n      if (hasOwn.call(obj, k)) {\n        fn.call(ctx, obj[k], k, obj);\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/foreach/index.js?");

/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n  var target = this;\n\n  if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + target);\n  }\n\n  var args = slice.call(arguments, 1);\n  var bound;\n\n  var binder = function () {\n    if (this instanceof bound) {\n      var result = target.apply(this, args.concat(slice.call(arguments)));\n\n      if (Object(result) === result) {\n        return result;\n      }\n\n      return this;\n    } else {\n      return target.apply(that, args.concat(slice.call(arguments)));\n    }\n  };\n\n  var boundLength = Math.max(0, target.length - args.length);\n  var boundArgs = [];\n\n  for (var i = 0; i < boundLength; i++) {\n    boundArgs.push('$' + i);\n  }\n\n  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n  if (target.prototype) {\n    var Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    bound.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return bound;\n};\n\n//# sourceURL=webpack://test/./node_modules/function-bind/implementation.js?");

/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/function-bind/implementation.js\");\n\nmodule.exports = Function.prototype.bind || implementation;\n\n//# sourceURL=webpack://test/./node_modules/function-bind/index.js?");

/***/ }),

/***/ "./node_modules/get-intrinsic/index.js":
/*!*********************************************!*\
  !*** ./node_modules/get-intrinsic/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar undefined;\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError; // eslint-disable-next-line consistent-return\n\nvar getEvalledConstructor = function (expressionSyntax) {\n  try {\n    return $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n  } catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\n\nif ($gOPD) {\n  try {\n    $gOPD({}, '');\n  } catch (e) {\n    $gOPD = null; // this is IE 8, which has a broken gOPD\n  }\n}\n\nvar throwTypeError = function () {\n  throw new $TypeError();\n};\n\nvar ThrowTypeError = $gOPD ? function () {\n  try {\n    // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n    arguments.callee; // IE 8 does not throw here\n\n    return throwTypeError;\n  } catch (calleeThrows) {\n    try {\n      // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n      return $gOPD(arguments, 'callee').get;\n    } catch (gOPDthrows) {\n      return throwTypeError;\n    }\n  }\n}() : throwTypeError;\n\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/has-symbols/index.js\")();\n\nvar getProto = Object.getPrototypeOf || function (x) {\n  return x.__proto__;\n}; // eslint-disable-line no-proto\n\n\nvar needsEval = {};\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\nvar INTRINSICS = {\n  '%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n  '%Array%': Array,\n  '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n  '%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n  '%AsyncFromSyncIteratorPrototype%': undefined,\n  '%AsyncFunction%': needsEval,\n  '%AsyncGenerator%': needsEval,\n  '%AsyncGeneratorFunction%': needsEval,\n  '%AsyncIteratorPrototype%': needsEval,\n  '%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n  '%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n  '%Boolean%': Boolean,\n  '%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n  '%Date%': Date,\n  '%decodeURI%': decodeURI,\n  '%decodeURIComponent%': decodeURIComponent,\n  '%encodeURI%': encodeURI,\n  '%encodeURIComponent%': encodeURIComponent,\n  '%Error%': Error,\n  '%eval%': eval,\n  // eslint-disable-line no-eval\n  '%EvalError%': EvalError,\n  '%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n  '%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n  '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n  '%Function%': $Function,\n  '%GeneratorFunction%': needsEval,\n  '%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n  '%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n  '%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n  '%isFinite%': isFinite,\n  '%isNaN%': isNaN,\n  '%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n  '%JSON%': typeof JSON === 'object' ? JSON : undefined,\n  '%Map%': typeof Map === 'undefined' ? undefined : Map,\n  '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n  '%Math%': Math,\n  '%Number%': Number,\n  '%Object%': Object,\n  '%parseFloat%': parseFloat,\n  '%parseInt%': parseInt,\n  '%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n  '%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n  '%RangeError%': RangeError,\n  '%ReferenceError%': ReferenceError,\n  '%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n  '%RegExp%': RegExp,\n  '%Set%': typeof Set === 'undefined' ? undefined : Set,\n  '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n  '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n  '%String%': String,\n  '%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n  '%Symbol%': hasSymbols ? Symbol : undefined,\n  '%SyntaxError%': $SyntaxError,\n  '%ThrowTypeError%': ThrowTypeError,\n  '%TypedArray%': TypedArray,\n  '%TypeError%': $TypeError,\n  '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n  '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n  '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n  '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n  '%URIError%': URIError,\n  '%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n  '%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n  '%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n  var value;\n\n  if (name === '%AsyncFunction%') {\n    value = getEvalledConstructor('async function () {}');\n  } else if (name === '%GeneratorFunction%') {\n    value = getEvalledConstructor('function* () {}');\n  } else if (name === '%AsyncGeneratorFunction%') {\n    value = getEvalledConstructor('async function* () {}');\n  } else if (name === '%AsyncGenerator%') {\n    var fn = doEval('%AsyncGeneratorFunction%');\n\n    if (fn) {\n      value = fn.prototype;\n    }\n  } else if (name === '%AsyncIteratorPrototype%') {\n    var gen = doEval('%AsyncGenerator%');\n\n    if (gen) {\n      value = getProto(gen.prototype);\n    }\n  }\n\n  INTRINSICS[name] = value;\n  return value;\n};\n\nvar LEGACY_ALIASES = {\n  '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n  '%ArrayPrototype%': ['Array', 'prototype'],\n  '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n  '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n  '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n  '%ArrayProto_values%': ['Array', 'prototype', 'values'],\n  '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n  '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n  '%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n  '%BooleanPrototype%': ['Boolean', 'prototype'],\n  '%DataViewPrototype%': ['DataView', 'prototype'],\n  '%DatePrototype%': ['Date', 'prototype'],\n  '%ErrorPrototype%': ['Error', 'prototype'],\n  '%EvalErrorPrototype%': ['EvalError', 'prototype'],\n  '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n  '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n  '%FunctionPrototype%': ['Function', 'prototype'],\n  '%Generator%': ['GeneratorFunction', 'prototype'],\n  '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n  '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n  '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n  '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n  '%JSONParse%': ['JSON', 'parse'],\n  '%JSONStringify%': ['JSON', 'stringify'],\n  '%MapPrototype%': ['Map', 'prototype'],\n  '%NumberPrototype%': ['Number', 'prototype'],\n  '%ObjectPrototype%': ['Object', 'prototype'],\n  '%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n  '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n  '%PromisePrototype%': ['Promise', 'prototype'],\n  '%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n  '%Promise_all%': ['Promise', 'all'],\n  '%Promise_reject%': ['Promise', 'reject'],\n  '%Promise_resolve%': ['Promise', 'resolve'],\n  '%RangeErrorPrototype%': ['RangeError', 'prototype'],\n  '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n  '%RegExpPrototype%': ['RegExp', 'prototype'],\n  '%SetPrototype%': ['Set', 'prototype'],\n  '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n  '%StringPrototype%': ['String', 'prototype'],\n  '%SymbolPrototype%': ['Symbol', 'prototype'],\n  '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n  '%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n  '%TypeErrorPrototype%': ['TypeError', 'prototype'],\n  '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n  '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n  '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n  '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n  '%URIErrorPrototype%': ['URIError', 'prototype'],\n  '%WeakMapPrototype%': ['WeakMap', 'prototype'],\n  '%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\n\nvar hasOwn = __webpack_require__(/*! has */ \"./node_modules/has/src/index.js\");\n\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\n\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/** Used to match backslashes in property paths. */\n\nvar stringToPath = function stringToPath(string) {\n  var first = $strSlice(string, 0, 1);\n  var last = $strSlice(string, -1);\n\n  if (first === '%' && last !== '%') {\n    throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n  } else if (last === '%' && first !== '%') {\n    throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n  }\n\n  var result = [];\n  $replace(string, rePropName, function (match, number, quote, subString) {\n    result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n  });\n  return result;\n};\n/* end adaptation */\n\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n  var intrinsicName = name;\n  var alias;\n\n  if (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n    alias = LEGACY_ALIASES[intrinsicName];\n    intrinsicName = '%' + alias[0] + '%';\n  }\n\n  if (hasOwn(INTRINSICS, intrinsicName)) {\n    var value = INTRINSICS[intrinsicName];\n\n    if (value === needsEval) {\n      value = doEval(intrinsicName);\n    }\n\n    if (typeof value === 'undefined' && !allowMissing) {\n      throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n    }\n\n    return {\n      alias: alias,\n      name: intrinsicName,\n      value: value\n    };\n  }\n\n  throw new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new $TypeError('intrinsic name must be a non-empty string');\n  }\n\n  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n    throw new $TypeError('\"allowMissing\" argument must be a boolean');\n  }\n\n  var parts = stringToPath(name);\n  var intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n  var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n  var intrinsicRealName = intrinsic.name;\n  var value = intrinsic.value;\n  var skipFurtherCaching = false;\n  var alias = intrinsic.alias;\n\n  if (alias) {\n    intrinsicBaseName = alias[0];\n    $spliceApply(parts, $concat([0, 1], alias));\n  }\n\n  for (var i = 1, isOwn = true; i < parts.length; i += 1) {\n    var part = parts[i];\n    var first = $strSlice(part, 0, 1);\n    var last = $strSlice(part, -1);\n\n    if ((first === '\"' || first === \"'\" || first === '`' || last === '\"' || last === \"'\" || last === '`') && first !== last) {\n      throw new $SyntaxError('property names with quotes must have matching quotes');\n    }\n\n    if (part === 'constructor' || !isOwn) {\n      skipFurtherCaching = true;\n    }\n\n    intrinsicBaseName += '.' + part;\n    intrinsicRealName = '%' + intrinsicBaseName + '%';\n\n    if (hasOwn(INTRINSICS, intrinsicRealName)) {\n      value = INTRINSICS[intrinsicRealName];\n    } else if (value != null) {\n      if (!(part in value)) {\n        if (!allowMissing) {\n          throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n        }\n\n        return void undefined;\n      }\n\n      if ($gOPD && i + 1 >= parts.length) {\n        var desc = $gOPD(value, part);\n        isOwn = !!desc; // By convention, when a data property is converted to an accessor\n        // property to emulate a data property that does not suffer from\n        // the override mistake, that accessor's getter is marked with\n        // an `originalValue` property. Here, when we detect this, we\n        // uphold the illusion by pretending to see that original data\n        // property, i.e., returning the value rather than the getter\n        // itself.\n\n        if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n          value = desc.get;\n        } else {\n          value = value[part];\n        }\n      } else {\n        isOwn = hasOwn(value, part);\n        value = value[part];\n      }\n\n      if (isOwn && !skipFurtherCaching) {\n        INTRINSICS[intrinsicRealName] = value;\n      }\n    }\n  }\n\n  return value;\n};\n\n//# sourceURL=webpack://test/./node_modules/get-intrinsic/index.js?");

/***/ }),

/***/ "./node_modules/global/window.js":
/*!***************************************!*\
  !*** ./node_modules/global/window.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof __webpack_require__.g !== \"undefined\") {\n  win = __webpack_require__.g;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;\n\n//# sourceURL=webpack://test/./node_modules/global/window.js?");

/***/ }),

/***/ "./node_modules/google-protobuf/google-protobuf.js":
/*!*********************************************************!*\
  !*** ./node_modules/google-protobuf/google-protobuf.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("var $jscomp = $jscomp || {};\n$jscomp.scope = {};\n\n$jscomp.findInternal = function (a, b, c) {\n  a instanceof String && (a = String(a));\n\n  for (var d = a.length, e = 0; e < d; e++) {\n    var f = a[e];\n    if (b.call(c, f, e, a)) return {\n      i: e,\n      v: f\n    };\n  }\n\n  return {\n    i: -1,\n    v: void 0\n  };\n};\n\n$jscomp.ASSUME_ES5 = !1;\n$jscomp.ASSUME_NO_NATIVE_MAP = !1;\n$jscomp.ASSUME_NO_NATIVE_SET = !1;\n$jscomp.SIMPLE_FROUND_POLYFILL = !1;\n$jscomp.defineProperty = $jscomp.ASSUME_ES5 || \"function\" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {\n  a != Array.prototype && a != Object.prototype && (a[b] = c.value);\n};\n\n$jscomp.getGlobal = function (a) {\n  return \"undefined\" != typeof window && window === a ? a : \"undefined\" != typeof __webpack_require__.g && null != __webpack_require__.g ? __webpack_require__.g : a;\n};\n\n$jscomp.global = $jscomp.getGlobal(this);\n\n$jscomp.polyfill = function (a, b, c, d) {\n  if (b) {\n    c = $jscomp.global;\n    a = a.split(\".\");\n\n    for (d = 0; d < a.length - 1; d++) {\n      var e = a[d];\n      e in c || (c[e] = {});\n      c = c[e];\n    }\n\n    a = a[a.length - 1];\n    d = c[a];\n    b = b(d);\n    b != d && null != b && $jscomp.defineProperty(c, a, {\n      configurable: !0,\n      writable: !0,\n      value: b\n    });\n  }\n};\n\n$jscomp.polyfill(\"Array.prototype.findIndex\", function (a) {\n  return a ? a : function (a, c) {\n    return $jscomp.findInternal(this, a, c).i;\n  };\n}, \"es6\", \"es3\");\n\n$jscomp.checkStringArgs = function (a, b, c) {\n  if (null == a) throw new TypeError(\"The 'this' value for String.prototype.\" + c + \" must not be null or undefined\");\n  if (b instanceof RegExp) throw new TypeError(\"First argument to String.prototype.\" + c + \" must not be a regular expression\");\n  return a + \"\";\n};\n\n$jscomp.polyfill(\"String.prototype.startsWith\", function (a) {\n  return a ? a : function (a, c) {\n    var b = $jscomp.checkStringArgs(this, a, \"startsWith\");\n    a += \"\";\n    var e = b.length,\n        f = a.length;\n    c = Math.max(0, Math.min(c | 0, b.length));\n\n    for (var g = 0; g < f && c < e;) if (b[c++] != a[g++]) return !1;\n\n    return g >= f;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"String.prototype.endsWith\", function (a) {\n  return a ? a : function (a, c) {\n    var b = $jscomp.checkStringArgs(this, a, \"endsWith\");\n    a += \"\";\n    void 0 === c && (c = b.length);\n    c = Math.max(0, Math.min(c | 0, b.length));\n\n    for (var e = a.length; 0 < e && 0 < c;) if (b[--c] != a[--e]) return !1;\n\n    return 0 >= e;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"String.prototype.repeat\", function (a) {\n  return a ? a : function (a) {\n    var b = $jscomp.checkStringArgs(this, null, \"repeat\");\n    if (0 > a || 1342177279 < a) throw new RangeError(\"Invalid count value\");\n    a |= 0;\n\n    for (var d = \"\"; a;) if (a & 1 && (d += b), a >>>= 1) b += b;\n\n    return d;\n  };\n}, \"es6\", \"es3\");\n$jscomp.polyfill(\"Array.prototype.find\", function (a) {\n  return a ? a : function (a, c) {\n    return $jscomp.findInternal(this, a, c).v;\n  };\n}, \"es6\", \"es3\");\nvar COMPILED = !0,\n    goog = goog || {};\ngoog.global = this;\n\ngoog.isDef = function (a) {\n  return void 0 !== a;\n};\n\ngoog.isString = function (a) {\n  return \"string\" == typeof a;\n};\n\ngoog.isBoolean = function (a) {\n  return \"boolean\" == typeof a;\n};\n\ngoog.isNumber = function (a) {\n  return \"number\" == typeof a;\n};\n\ngoog.exportPath_ = function (a, b, c) {\n  a = a.split(\".\");\n  c = c || goog.global;\n  a[0] in c || \"undefined\" == typeof c.execScript || c.execScript(\"var \" + a[0]);\n\n  for (var d; a.length && (d = a.shift());) !a.length && goog.isDef(b) ? c[d] = b : c = c[d] && c[d] !== Object.prototype[d] ? c[d] : c[d] = {};\n};\n\ngoog.define = function (a, b) {\n  if (!COMPILED) {\n    var c = goog.global.CLOSURE_UNCOMPILED_DEFINES,\n        d = goog.global.CLOSURE_DEFINES;\n    c && void 0 === c.nodeType && Object.prototype.hasOwnProperty.call(c, a) ? b = c[a] : d && void 0 === d.nodeType && Object.prototype.hasOwnProperty.call(d, a) && (b = d[a]);\n  }\n\n  goog.exportPath_(a, b);\n  return b;\n};\n\ngoog.DEBUG = !0;\ngoog.LOCALE = \"en\";\ngoog.TRUSTED_SITE = !0;\ngoog.STRICT_MODE_COMPATIBLE = !1;\ngoog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;\n\ngoog.provide = function (a) {\n  if (goog.isInModuleLoader_()) throw Error(\"goog.provide cannot be used within a module.\");\n  if (!COMPILED && goog.isProvided_(a)) throw Error('Namespace \"' + a + '\" already declared.');\n  goog.constructNamespace_(a);\n};\n\ngoog.constructNamespace_ = function (a, b) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[a];\n\n    for (var c = a; (c = c.substring(0, c.lastIndexOf(\".\"))) && !goog.getObjectByName(c);) goog.implicitNamespaces_[c] = !0;\n  }\n\n  goog.exportPath_(a, b);\n};\n\ngoog.getScriptNonce = function (a) {\n  if (a && a != goog.global) return goog.getScriptNonce_(a.document);\n  null === goog.cspNonce_ && (goog.cspNonce_ = goog.getScriptNonce_(goog.global.document));\n  return goog.cspNonce_;\n};\n\ngoog.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\ngoog.cspNonce_ = null;\n\ngoog.getScriptNonce_ = function (a) {\n  return (a = a.querySelector && a.querySelector(\"script[nonce]\")) && (a = a.nonce || a.getAttribute(\"nonce\")) && goog.NONCE_PATTERN_.test(a) ? a : \"\";\n};\n\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\ngoog.module = function (a) {\n  if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) throw Error(\"Invalid module identifier\");\n  if (!goog.isInGoogModuleLoader_()) throw Error(\"Module \" + a + \" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");\n  if (goog.moduleLoaderState_.moduleName) throw Error(\"goog.module may only be called once per module.\");\n  goog.moduleLoaderState_.moduleName = a;\n\n  if (!COMPILED) {\n    if (goog.isProvided_(a)) throw Error('Namespace \"' + a + '\" already declared.');\n    delete goog.implicitNamespaces_[a];\n  }\n};\n\ngoog.module.get = function (a) {\n  return goog.module.getInternal_(a);\n};\n\ngoog.module.getInternal_ = function (a) {\n  if (!COMPILED) {\n    if (a in goog.loadedModules_) return goog.loadedModules_[a].exports;\n    if (!goog.implicitNamespaces_[a]) return a = goog.getObjectByName(a), null != a ? a : null;\n  }\n\n  return null;\n};\n\ngoog.ModuleType = {\n  ES6: \"es6\",\n  GOOG: \"goog\"\n};\ngoog.moduleLoaderState_ = null;\n\ngoog.isInModuleLoader_ = function () {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\ngoog.isInGoogModuleLoader_ = function () {\n  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\ngoog.isInEs6ModuleLoader_ = function () {\n  if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6) return !0;\n  var a = goog.global.$jscomp;\n  return a ? \"function\" != typeof a.getCurrentModulePath ? !1 : !!a.getCurrentModulePath() : !1;\n};\n\ngoog.module.declareLegacyNamespace = function () {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");\n  goog.moduleLoaderState_.declareLegacyNamespace = !0;\n};\n\ngoog.declareModuleId = function (a) {\n  if (!COMPILED) {\n    if (!goog.isInEs6ModuleLoader_()) throw Error(\"goog.declareModuleId may only be called from within an ES6 module\");\n    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) throw Error(\"goog.declareModuleId may only be called once per module.\");\n    if (a in goog.loadedModules_) throw Error('Module with namespace \"' + a + '\" already exists.');\n  }\n\n  if (goog.moduleLoaderState_) goog.moduleLoaderState_.moduleName = a;else {\n    var b = goog.global.$jscomp;\n    if (!b || \"function\" != typeof b.getCurrentModulePath) throw Error('Module with namespace \"' + a + '\" has been loaded incorrectly.');\n    b = b.require(b.getCurrentModulePath());\n    goog.loadedModules_[a] = {\n      exports: b,\n      type: goog.ModuleType.ES6,\n      moduleId: a\n    };\n  }\n};\n\ngoog.module.declareNamespace = goog.declareModuleId;\n\ngoog.setTestOnly = function (a) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) throw a = a || \"\", Error(\"Importing test-only code into non-debug environment\" + (a ? \": \" + a : \".\"));\n};\n\ngoog.forwardDeclare = function (a) {};\n\nCOMPILED || (goog.isProvided_ = function (a) {\n  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));\n}, goog.implicitNamespaces_ = {\n  \"goog.module\": !0\n});\n\ngoog.getObjectByName = function (a, b) {\n  a = a.split(\".\");\n  b = b || goog.global;\n\n  for (var c = 0; c < a.length; c++) if (b = b[a[c]], !goog.isDefAndNotNull(b)) return null;\n\n  return b;\n};\n\ngoog.globalize = function (a, b) {\n  b = b || goog.global;\n\n  for (var c in a) b[c] = a[c];\n};\n\ngoog.addDependency = function (a, b, c, d) {\n  !COMPILED && goog.DEPENDENCIES_ENABLED && goog.debugLoader_.addDependency(a, b, c, d);\n};\n\ngoog.ENABLE_DEBUG_LOADER = !0;\n\ngoog.logToConsole_ = function (a) {\n  goog.global.console && goog.global.console.error(a);\n};\n\ngoog.require = function (a) {\n  if (!COMPILED) {\n    goog.ENABLE_DEBUG_LOADER && goog.debugLoader_.requested(a);\n\n    if (goog.isProvided_(a)) {\n      if (goog.isInModuleLoader_()) return goog.module.getInternal_(a);\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var b = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n\n      try {\n        goog.debugLoader_.load_(a);\n      } finally {\n        goog.moduleLoaderState_ = b;\n      }\n    }\n\n    return null;\n  }\n};\n\ngoog.requireType = function (a) {\n  return {};\n};\n\ngoog.basePath = \"\";\n\ngoog.nullFunction = function () {};\n\ngoog.abstractMethod = function () {\n  throw Error(\"unimplemented abstract method\");\n};\n\ngoog.addSingletonGetter = function (a) {\n  a.instance_ = void 0;\n\n  a.getInstance = function () {\n    if (a.instance_) return a.instance_;\n    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);\n    return a.instance_ = new a();\n  };\n};\n\ngoog.instantiatedSingletons_ = [];\ngoog.LOAD_MODULE_USING_EVAL = !0;\ngoog.SEAL_MODULE_EXPORTS = goog.DEBUG;\ngoog.loadedModules_ = {};\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\ngoog.TRANSPILE = \"detect\";\ngoog.ASSUME_ES_MODULES_TRANSPILED = !1;\ngoog.TRANSPILE_TO_LANGUAGE = \"\";\ngoog.TRANSPILER = \"transpile.js\";\ngoog.hasBadLetScoping = null;\n\ngoog.useSafari10Workaround = function () {\n  if (null == goog.hasBadLetScoping) {\n    try {\n      var a = !eval('\"use strict\";let x = 1; function f() { return typeof x; };f() == \"number\";');\n    } catch (b) {\n      a = !1;\n    }\n\n    goog.hasBadLetScoping = a;\n  }\n\n  return goog.hasBadLetScoping;\n};\n\ngoog.workaroundSafari10EvalBug = function (a) {\n  return \"(function(){\" + a + \"\\n;})();\\n\";\n};\n\ngoog.loadModule = function (a) {\n  var b = goog.moduleLoaderState_;\n\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: \"\",\n      declareLegacyNamespace: !1,\n      type: goog.ModuleType.GOOG\n    };\n    if (goog.isFunction(a)) var c = a.call(void 0, {});else if (goog.isString(a)) goog.useSafari10Workaround() && (a = goog.workaroundSafari10EvalBug(a)), c = goog.loadModuleFromSource_.call(void 0, a);else throw Error(\"Invalid module definition\");\n    var d = goog.moduleLoaderState_.moduleName;\n    if (goog.isString(d) && d) goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && \"object\" == typeof c && null != c && Object.seal(c), goog.loadedModules_[d] = {\n      exports: c,\n      type: goog.ModuleType.GOOG,\n      moduleId: goog.moduleLoaderState_.moduleName\n    };else throw Error('Invalid module name \"' + d + '\"');\n  } finally {\n    goog.moduleLoaderState_ = b;\n  }\n};\n\ngoog.loadModuleFromSource_ = function (a) {\n  eval(a);\n  return {};\n};\n\ngoog.normalizePath_ = function (a) {\n  a = a.split(\"/\");\n\n  for (var b = 0; b < a.length;) \".\" == a[b] ? a.splice(b, 1) : b && \"..\" == a[b] && a[b - 1] && \"..\" != a[b - 1] ? a.splice(--b, 2) : b++;\n\n  return a.join(\"/\");\n};\n\ngoog.loadFileSync_ = function (a) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) return goog.global.CLOSURE_LOAD_FILE_SYNC(a);\n\n  try {\n    var b = new goog.global.XMLHttpRequest();\n    b.open(\"get\", a, !1);\n    b.send();\n    return 0 == b.status || 200 == b.status ? b.responseText : null;\n  } catch (c) {\n    return null;\n  }\n};\n\ngoog.transpile_ = function (a, b, c) {\n  var d = goog.global.$jscomp;\n  d || (goog.global.$jscomp = d = {});\n  var e = d.transpile;\n\n  if (!e) {\n    var f = goog.basePath + goog.TRANSPILER,\n        g = goog.loadFileSync_(f);\n\n    if (g) {\n      (function () {\n        eval(g + \"\\n//# sourceURL=\" + f);\n      }).call(goog.global);\n      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) throw Error('The transpiler did not properly export the \"transpile\" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));\n      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;\n      d = goog.global.$jscomp;\n      e = d.transpile;\n    }\n  }\n\n  e || (e = d.transpile = function (a, b) {\n    goog.logToConsole_(b + \" requires transpilation but no transpiler was found.\");\n    return a;\n  });\n  return e(a, b, c);\n};\n\ngoog.typeOf = function (a) {\n  var b = typeof a;\n  if (\"object\" == b) {\n    if (a) {\n      if (a instanceof Array) return \"array\";\n      if (a instanceof Object) return b;\n      var c = Object.prototype.toString.call(a);\n      if (\"[object Window]\" == c) return \"object\";\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) return \"array\";\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) return \"function\";\n    } else return \"null\";\n  } else if (\"function\" == b && \"undefined\" == typeof a.call) return \"object\";\n  return b;\n};\n\ngoog.isNull = function (a) {\n  return null === a;\n};\n\ngoog.isDefAndNotNull = function (a) {\n  return null != a;\n};\n\ngoog.isArray = function (a) {\n  return \"array\" == goog.typeOf(a);\n};\n\ngoog.isArrayLike = function (a) {\n  var b = goog.typeOf(a);\n  return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\n};\n\ngoog.isDateLike = function (a) {\n  return goog.isObject(a) && \"function\" == typeof a.getFullYear;\n};\n\ngoog.isFunction = function (a) {\n  return \"function\" == goog.typeOf(a);\n};\n\ngoog.isObject = function (a) {\n  var b = typeof a;\n  return \"object\" == b && null != a || \"function\" == b;\n};\n\ngoog.getUid = function (a) {\n  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\ngoog.hasUid = function (a) {\n  return !!a[goog.UID_PROPERTY_];\n};\n\ngoog.removeUid = function (a) {\n  null !== a && \"removeAttribute\" in a && a.removeAttribute(goog.UID_PROPERTY_);\n\n  try {\n    delete a[goog.UID_PROPERTY_];\n  } catch (b) {}\n};\n\ngoog.UID_PROPERTY_ = \"closure_uid_\" + (1E9 * Math.random() >>> 0);\ngoog.uidCounter_ = 0;\ngoog.getHashCode = goog.getUid;\ngoog.removeHashCode = goog.removeUid;\n\ngoog.cloneObject = function (a) {\n  var b = goog.typeOf(a);\n\n  if (\"object\" == b || \"array\" == b) {\n    if (\"function\" === typeof a.clone) return a.clone();\n    b = \"array\" == b ? [] : {};\n\n    for (var c in a) b[c] = goog.cloneObject(a[c]);\n\n    return b;\n  }\n\n  return a;\n};\n\ngoog.bindNative_ = function (a, b, c) {\n  return a.call.apply(a.bind, arguments);\n};\n\ngoog.bindJs_ = function (a, b, c) {\n  if (!a) throw Error();\n\n  if (2 < arguments.length) {\n    var d = Array.prototype.slice.call(arguments, 2);\n    return function () {\n      var c = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(c, d);\n      return a.apply(b, c);\n    };\n  }\n\n  return function () {\n    return a.apply(b, arguments);\n  };\n};\n\ngoog.bind = function (a, b, c) {\n  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;\n  return goog.bind.apply(null, arguments);\n};\n\ngoog.partial = function (a, b) {\n  var c = Array.prototype.slice.call(arguments, 1);\n  return function () {\n    var b = c.slice();\n    b.push.apply(b, arguments);\n    return a.apply(this, b);\n  };\n};\n\ngoog.mixin = function (a, b) {\n  for (var c in b) a[c] = b[c];\n};\n\ngoog.now = goog.TRUSTED_SITE && Date.now || function () {\n  return +new Date();\n};\n\ngoog.globalEval = function (a) {\n  if (goog.global.execScript) goog.global.execScript(a, \"JavaScript\");else if (goog.global.eval) {\n    if (null == goog.evalWorksForGlobals_) {\n      try {\n        goog.global.eval(\"var _evalTest_ = 1;\");\n      } catch (d) {}\n\n      if (\"undefined\" != typeof goog.global._evalTest_) {\n        try {\n          delete goog.global._evalTest_;\n        } catch (d) {}\n\n        goog.evalWorksForGlobals_ = !0;\n      } else goog.evalWorksForGlobals_ = !1;\n    }\n\n    if (goog.evalWorksForGlobals_) goog.global.eval(a);else {\n      var b = goog.global.document,\n          c = b.createElement(\"SCRIPT\");\n      c.type = \"text/javascript\";\n      c.defer = !1;\n      c.appendChild(b.createTextNode(a));\n      b.head.appendChild(c);\n      b.head.removeChild(c);\n    }\n  } else throw Error(\"goog.globalEval not available\");\n};\n\ngoog.evalWorksForGlobals_ = null;\n\ngoog.getCssName = function (a, b) {\n  if (\".\" == String(a).charAt(0)) throw Error('className passed in goog.getCssName must not start with \".\". You passed: ' + a);\n\n  var c = function (a) {\n    return goog.cssNameMapping_[a] || a;\n  },\n      d = function (a) {\n    a = a.split(\"-\");\n\n    for (var b = [], d = 0; d < a.length; d++) b.push(c(a[d]));\n\n    return b.join(\"-\");\n  };\n\n  d = goog.cssNameMapping_ ? \"BY_WHOLE\" == goog.cssNameMappingStyle_ ? c : d : function (a) {\n    return a;\n  };\n  a = b ? a + \"-\" + d(b) : d(a);\n  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(a) : a;\n};\n\ngoog.setCssNameMapping = function (a, b) {\n  goog.cssNameMapping_ = a;\n  goog.cssNameMappingStyle_ = b;\n};\n\n!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);\n\ngoog.getMsg = function (a, b) {\n  b && (a = a.replace(/\\{\\$([^}]+)}/g, function (a, d) {\n    return null != b && d in b ? b[d] : a;\n  }));\n  return a;\n};\n\ngoog.getMsgWithFallback = function (a, b) {\n  return a;\n};\n\ngoog.exportSymbol = function (a, b, c) {\n  goog.exportPath_(a, b, c);\n};\n\ngoog.exportProperty = function (a, b, c) {\n  a[b] = c;\n};\n\ngoog.inherits = function (a, b) {\n  function c() {}\n\n  c.prototype = b.prototype;\n  a.superClass_ = b.prototype;\n  a.prototype = new c();\n  a.prototype.constructor = a;\n\n  a.base = function (a, c, f) {\n    for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++) d[e - 2] = arguments[e];\n\n    return b.prototype[c].apply(a, d);\n  };\n};\n\ngoog.base = function (a, b, c) {\n  var d = arguments.callee.caller;\n  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");\n\n  if (\"undefined\" !== typeof d.superClass_) {\n    for (var e = Array(arguments.length - 1), f = 1; f < arguments.length; f++) e[f - 1] = arguments[f];\n\n    return d.superClass_.constructor.apply(a, e);\n  }\n\n  if (\"string\" != typeof b && \"symbol\" != typeof b) throw Error(\"method names provided to goog.base must be a string or a symbol\");\n  e = Array(arguments.length - 2);\n\n  for (f = 2; f < arguments.length; f++) e[f - 2] = arguments[f];\n\n  f = !1;\n\n  for (var g = a.constructor; g; g = g.superClass_ && g.superClass_.constructor) if (g.prototype[b] === d) f = !0;else if (f) return g.prototype[b].apply(a, e);\n\n  if (a[b] === d) return a.constructor.prototype[b].apply(a, e);\n  throw Error(\"goog.base called from a method of one name to a method of a different name\");\n};\n\ngoog.scope = function (a) {\n  if (goog.isInModuleLoader_()) throw Error(\"goog.scope is not supported within a module.\");\n  a.call(goog.global);\n};\n\nCOMPILED || (goog.global.COMPILED = COMPILED);\n\ngoog.defineClass = function (a, b) {\n  var c = b.constructor,\n      d = b.statics;\n  c && c != Object.prototype.constructor || (c = function () {\n    throw Error(\"cannot instantiate an interface (no constructor defined).\");\n  });\n  c = goog.defineClass.createSealingConstructor_(c, a);\n  a && goog.inherits(c, a);\n  delete b.constructor;\n  delete b.statics;\n  goog.defineClass.applyProperties_(c.prototype, b);\n  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));\n  return c;\n};\n\ngoog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;\n\ngoog.defineClass.createSealingConstructor_ = function (a, b) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) return a;\n\n  var c = !goog.defineClass.isUnsealable_(b),\n      d = function () {\n    var b = a.apply(this, arguments) || this;\n    b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];\n    this.constructor === d && c && Object.seal instanceof Function && Object.seal(b);\n    return b;\n  };\n\n  return d;\n};\n\ngoog.defineClass.isUnsealable_ = function (a) {\n  return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];\n};\n\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\n\ngoog.defineClass.applyProperties_ = function (a, b) {\n  for (var c in b) Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\n\n  for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++) c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\n};\n\ngoog.tagUnsealableClass = function (a) {\n  !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);\n};\n\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = \"goog_defineClass_legacy_unsealable\";\n!COMPILED && goog.DEPENDENCIES_ENABLED && (goog.inHtmlDocument_ = function () {\n  var a = goog.global.document;\n  return null != a && \"write\" in a;\n}, goog.isDocumentLoading_ = function () {\n  var a = goog.global.document;\n  return a.attachEvent ? \"complete\" != a.readyState : \"loading\" == a.readyState;\n}, goog.findBasePath_ = function () {\n  if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) goog.basePath = goog.global.CLOSURE_BASE_PATH;else if (goog.inHtmlDocument_()) {\n    var a = goog.global.document,\n        b = a.currentScript;\n    a = b ? [b] : a.getElementsByTagName(\"SCRIPT\");\n\n    for (b = a.length - 1; 0 <= b; --b) {\n      var c = a[b].src,\n          d = c.lastIndexOf(\"?\");\n      d = -1 == d ? c.length : d;\n\n      if (\"base.js\" == c.substr(d - 7, 7)) {\n        goog.basePath = c.substr(0, d - 7);\n        break;\n      }\n    }\n  }\n}, goog.findBasePath_(), goog.Transpiler = function () {\n  this.requiresTranspilation_ = null;\n  this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;\n}, goog.Transpiler.prototype.createRequiresTranspilation_ = function () {\n  function a(a, b) {\n    e ? d[a] = !0 : b() ? (c = a, d[a] = !1) : e = d[a] = !0;\n  }\n\n  function b(a) {\n    try {\n      return !!eval(a);\n    } catch (h) {\n      return !1;\n    }\n  }\n\n  var c = \"es3\",\n      d = {\n    es3: !1\n  },\n      e = !1,\n      f = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : \"\";\n  a(\"es5\", function () {\n    return b(\"[1,].length==1\");\n  });\n  a(\"es6\", function () {\n    return f.match(/Edge\\/(\\d+)(\\.\\d)*/i) ? !1 : b('(()=>{\"use strict\";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');\n  });\n  a(\"es6-impl\", function () {\n    return !0;\n  });\n  a(\"es7\", function () {\n    return b(\"2 ** 2 == 4\");\n  });\n  a(\"es8\", function () {\n    return b(\"async () => 1, true\");\n  });\n  a(\"es9\", function () {\n    return b(\"({...rest} = {}), true\");\n  });\n  a(\"es_next\", function () {\n    return !1;\n  });\n  return {\n    target: c,\n    map: d\n  };\n}, goog.Transpiler.prototype.needsTranspile = function (a, b) {\n  if (\"always\" == goog.TRANSPILE) return !0;\n  if (\"never\" == goog.TRANSPILE) return !1;\n\n  if (!this.requiresTranspilation_) {\n    var c = this.createRequiresTranspilation_();\n    this.requiresTranspilation_ = c.map;\n    this.transpilationTarget_ = this.transpilationTarget_ || c.target;\n  }\n\n  if (a in this.requiresTranspilation_) return this.requiresTranspilation_[a] ? !0 : !goog.inHtmlDocument_() || \"es6\" != b || \"noModule\" in goog.global.document.createElement(\"script\") ? !1 : !0;\n  throw Error(\"Unknown language mode: \" + a);\n}, goog.Transpiler.prototype.transpile = function (a, b) {\n  return goog.transpile_(a, b, this.transpilationTarget_);\n}, goog.transpiler_ = new goog.Transpiler(), goog.protectScriptTag_ = function (a) {\n  return a.replace(/<\\/(SCRIPT)/ig, \"\\\\x3c/$1\");\n}, goog.DebugLoader_ = function () {\n  this.dependencies_ = {};\n  this.idToPath_ = {};\n  this.written_ = {};\n  this.loadingDeps_ = [];\n  this.depsToLoad_ = [];\n  this.paused_ = !1;\n  this.factory_ = new goog.DependencyFactory(goog.transpiler_);\n  this.deferredCallbacks_ = {};\n  this.deferredQueue_ = [];\n}, goog.DebugLoader_.prototype.bootstrap = function (a, b) {\n  function c() {\n    d && (goog.global.setTimeout(d, 0), d = null);\n  }\n\n  var d = b;\n\n  if (a.length) {\n    b = [];\n\n    for (var e = 0; e < a.length; e++) {\n      var f = this.getPathFromDeps_(a[e]);\n      if (!f) throw Error(\"Unregonized namespace: \" + a[e]);\n      b.push(this.dependencies_[f]);\n    }\n\n    f = goog.require;\n    var g = 0;\n\n    for (e = 0; e < a.length; e++) f(a[e]), b[e].onLoad(function () {\n      ++g == a.length && c();\n    });\n  } else c();\n}, goog.DebugLoader_.prototype.loadClosureDeps = function () {\n  this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + \"deps.js\"), \"deps.js\", [], [], {}, !1));\n  this.loadDeps_();\n}, goog.DebugLoader_.prototype.requested = function (a, b) {\n  (a = this.getPathFromDeps_(a)) && (b || this.areDepsLoaded_(this.dependencies_[a].requires)) && (b = this.deferredCallbacks_[a]) && (delete this.deferredCallbacks_[a], b());\n}, goog.DebugLoader_.prototype.setDependencyFactory = function (a) {\n  this.factory_ = a;\n}, goog.DebugLoader_.prototype.load_ = function (a) {\n  if (this.getPathFromDeps_(a)) {\n    var b = this,\n        c = [],\n        d = function (a) {\n      var e = b.getPathFromDeps_(a);\n      if (!e) throw Error(\"Bad dependency path or symbol: \" + a);\n\n      if (!b.written_[e]) {\n        b.written_[e] = !0;\n        a = b.dependencies_[e];\n\n        for (e = 0; e < a.requires.length; e++) goog.isProvided_(a.requires[e]) || d(a.requires[e]);\n\n        c.push(a);\n      }\n    };\n\n    d(a);\n    a = !!this.depsToLoad_.length;\n    this.depsToLoad_ = this.depsToLoad_.concat(c);\n    this.paused_ || a || this.loadDeps_();\n  } else throw a = \"goog.require could not find: \" + a, goog.logToConsole_(a), Error(a);\n}, goog.DebugLoader_.prototype.loadDeps_ = function () {\n  for (var a = this, b = this.paused_; this.depsToLoad_.length && !b;) (function () {\n    var c = !1,\n        d = a.depsToLoad_.shift(),\n        e = !1;\n    a.loading_(d);\n    var f = {\n      pause: function () {\n        if (c) throw Error(\"Cannot call pause after the call to load.\");\n        b = !0;\n      },\n      resume: function () {\n        c ? a.resume_() : b = !1;\n      },\n      loaded: function () {\n        if (e) throw Error(\"Double call to loaded.\");\n        e = !0;\n        a.loaded_(d);\n      },\n      pending: function () {\n        for (var b = [], c = 0; c < a.loadingDeps_.length; c++) b.push(a.loadingDeps_[c]);\n\n        return b;\n      },\n      setModuleState: function (a) {\n        goog.moduleLoaderState_ = {\n          type: a,\n          moduleName: \"\",\n          declareLegacyNamespace: !1\n        };\n      },\n      registerEs6ModuleExports: function (a, b, c) {\n        c && (goog.loadedModules_[c] = {\n          exports: b,\n          type: goog.ModuleType.ES6,\n          moduleId: c || \"\"\n        });\n      },\n      registerGoogModuleExports: function (a, b) {\n        goog.loadedModules_[a] = {\n          exports: b,\n          type: goog.ModuleType.GOOG,\n          moduleId: a\n        };\n      },\n      clearModuleState: function () {\n        goog.moduleLoaderState_ = null;\n      },\n      defer: function (b) {\n        if (c) throw Error(\"Cannot register with defer after the call to load.\");\n        a.defer_(d, b);\n      },\n      areDepsLoaded: function () {\n        return a.areDepsLoaded_(d.requires);\n      }\n    };\n\n    try {\n      d.load(f);\n    } finally {\n      c = !0;\n    }\n  })();\n\n  b && this.pause_();\n}, goog.DebugLoader_.prototype.pause_ = function () {\n  this.paused_ = !0;\n}, goog.DebugLoader_.prototype.resume_ = function () {\n  this.paused_ && (this.paused_ = !1, this.loadDeps_());\n}, goog.DebugLoader_.prototype.loading_ = function (a) {\n  this.loadingDeps_.push(a);\n}, goog.DebugLoader_.prototype.loaded_ = function (a) {\n  for (var b = 0; b < this.loadingDeps_.length; b++) if (this.loadingDeps_[b] == a) {\n    this.loadingDeps_.splice(b, 1);\n    break;\n  }\n\n  for (b = 0; b < this.deferredQueue_.length; b++) if (this.deferredQueue_[b] == a.path) {\n    this.deferredQueue_.splice(b, 1);\n    break;\n  }\n\n  if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) for (; this.deferredQueue_.length;) this.requested(this.deferredQueue_.shift(), !0);\n  a.loaded();\n}, goog.DebugLoader_.prototype.areDepsLoaded_ = function (a) {\n  for (var b = 0; b < a.length; b++) {\n    var c = this.getPathFromDeps_(a[b]);\n    if (!c || !(c in this.deferredCallbacks_ || goog.isProvided_(a[b]))) return !1;\n  }\n\n  return !0;\n}, goog.DebugLoader_.prototype.getPathFromDeps_ = function (a) {\n  return a in this.idToPath_ ? this.idToPath_[a] : a in this.dependencies_ ? a : null;\n}, goog.DebugLoader_.prototype.defer_ = function (a, b) {\n  this.deferredCallbacks_[a.path] = b;\n  this.deferredQueue_.push(a.path);\n}, goog.LoadController = function () {}, goog.LoadController.prototype.pause = function () {}, goog.LoadController.prototype.resume = function () {}, goog.LoadController.prototype.loaded = function () {}, goog.LoadController.prototype.pending = function () {}, goog.LoadController.prototype.registerEs6ModuleExports = function (a, b, c) {}, goog.LoadController.prototype.setModuleState = function (a) {}, goog.LoadController.prototype.clearModuleState = function () {}, goog.LoadController.prototype.defer = function (a) {}, goog.LoadController.prototype.areDepsLoaded = function () {}, goog.Dependency = function (a, b, c, d, e) {\n  this.path = a;\n  this.relativePath = b;\n  this.provides = c;\n  this.requires = d;\n  this.loadFlags = e;\n  this.loaded_ = !1;\n  this.loadCallbacks_ = [];\n}, goog.Dependency.prototype.getPathName = function () {\n  var a = this.path,\n      b = a.indexOf(\"://\");\n  0 <= b && (a = a.substring(b + 3), b = a.indexOf(\"/\"), 0 <= b && (a = a.substring(b + 1)));\n  return a;\n}, goog.Dependency.prototype.onLoad = function (a) {\n  this.loaded_ ? a() : this.loadCallbacks_.push(a);\n}, goog.Dependency.prototype.loaded = function () {\n  this.loaded_ = !0;\n  var a = this.loadCallbacks_;\n  this.loadCallbacks_ = [];\n\n  for (var b = 0; b < a.length; b++) a[b]();\n}, goog.Dependency.defer_ = !1, goog.Dependency.callbackMap_ = {}, goog.Dependency.registerCallback_ = function (a) {\n  var b = Math.random().toString(32);\n  goog.Dependency.callbackMap_[b] = a;\n  return b;\n}, goog.Dependency.unregisterCallback_ = function (a) {\n  delete goog.Dependency.callbackMap_[a];\n}, goog.Dependency.callback_ = function (a, b) {\n  if (a in goog.Dependency.callbackMap_) {\n    for (var c = goog.Dependency.callbackMap_[a], d = [], e = 1; e < arguments.length; e++) d.push(arguments[e]);\n\n    c.apply(void 0, d);\n  } else throw Error(\"Callback key \" + a + \" does not exist (was base.js loaded more than once?).\");\n}, goog.Dependency.prototype.load = function (a) {\n  if (goog.global.CLOSURE_IMPORT_SCRIPT) goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();else if (goog.inHtmlDocument_()) {\n    var b = goog.global.document;\n\n    if (\"complete\" == b.readyState && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      if (/\\bdeps.js$/.test(this.path)) {\n        a.loaded();\n        return;\n      }\n\n      throw Error('Cannot write \"' + this.path + '\" after document load');\n    }\n\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {\n      var c = goog.Dependency.registerCallback_(function (b) {\n        goog.DebugLoader_.IS_OLD_IE_ && \"complete\" != b.readyState || (goog.Dependency.unregisterCallback_(c), a.loaded());\n      }),\n          d = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ? ' nonce=\"' + goog.getScriptNonce() + '\"' : \"\";\n      b.write('<script src=\"' + this.path + '\" ' + (goog.DebugLoader_.IS_OLD_IE_ ? \"onreadystatechange\" : \"onload\") + \"=\\\"goog.Dependency.callback_('\" + c + '\\', this)\" type=\"text/javascript\" ' + (goog.Dependency.defer_ ? \"defer\" : \"\") + d + \">\\x3c/script>\");\n    } else {\n      var e = b.createElement(\"script\");\n      e.defer = goog.Dependency.defer_;\n      e.async = !1;\n      e.type = \"text/javascript\";\n      (d = goog.getScriptNonce()) && e.setAttribute(\"nonce\", d);\n      goog.DebugLoader_.IS_OLD_IE_ ? (a.pause(), e.onreadystatechange = function () {\n        if (\"loaded\" == e.readyState || \"complete\" == e.readyState) a.loaded(), a.resume();\n      }) : e.onload = function () {\n        e.onload = null;\n        a.loaded();\n      };\n      e.src = this.path;\n      b.head.appendChild(e);\n    }\n  } else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"), \"deps.js\" == this.relativePath ? (goog.logToConsole_(\"Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true.\"), a.loaded()) : a.pause();\n}, goog.Es6ModuleDependency = function (a, b, c, d, e) {\n  goog.Dependency.call(this, a, b, c, d, e);\n}, goog.inherits(goog.Es6ModuleDependency, goog.Dependency), goog.Es6ModuleDependency.prototype.load = function (a) {\n  function b(a, b) {\n    b ? d.write('<script type=\"module\" crossorigin>' + b + \"\\x3c/script>\") : d.write('<script type=\"module\" crossorigin src=\"' + a + '\">\\x3c/script>');\n  }\n\n  function c(a, b) {\n    var c = d.createElement(\"script\");\n    c.defer = !0;\n    c.async = !1;\n    c.type = \"module\";\n    c.setAttribute(\"crossorigin\", !0);\n    var e = goog.getScriptNonce();\n    e && c.setAttribute(\"nonce\", e);\n    b ? c.textContent = b : c.src = a;\n    d.head.appendChild(c);\n  }\n\n  if (goog.global.CLOSURE_IMPORT_SCRIPT) goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();else if (goog.inHtmlDocument_()) {\n    var d = goog.global.document,\n        e = this;\n\n    if (goog.isDocumentLoading_()) {\n      var f = b;\n      goog.Dependency.defer_ = !0;\n    } else f = c;\n\n    var g = goog.Dependency.registerCallback_(function () {\n      goog.Dependency.unregisterCallback_(g);\n      a.setModuleState(goog.ModuleType.ES6);\n    });\n    f(void 0, 'goog.Dependency.callback_(\"' + g + '\")');\n    f(this.path, void 0);\n    var h = goog.Dependency.registerCallback_(function (b) {\n      goog.Dependency.unregisterCallback_(h);\n      a.registerEs6ModuleExports(e.path, b, goog.moduleLoaderState_.moduleName);\n    });\n    f(void 0, 'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' + h + '\", m)');\n    var k = goog.Dependency.registerCallback_(function () {\n      goog.Dependency.unregisterCallback_(k);\n      a.clearModuleState();\n      a.loaded();\n    });\n    f(void 0, 'goog.Dependency.callback_(\"' + k + '\")');\n  } else goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"), a.pause();\n}, goog.TransformedDependency = function (a, b, c, d, e) {\n  goog.Dependency.call(this, a, b, c, d, e);\n  this.contents_ = null;\n  this.lazyFetch_ = !goog.inHtmlDocument_() || !(\"noModule\" in goog.global.document.createElement(\"script\"));\n}, goog.inherits(goog.TransformedDependency, goog.Dependency), goog.TransformedDependency.prototype.load = function (a) {\n  function b() {\n    e.contents_ = goog.loadFileSync_(e.path);\n    e.contents_ && (e.contents_ = e.transform(e.contents_), e.contents_ && (e.contents_ += \"\\n//# sourceURL=\" + e.path));\n  }\n\n  function c() {\n    e.lazyFetch_ && b();\n\n    if (e.contents_) {\n      f && a.setModuleState(goog.ModuleType.ES6);\n\n      try {\n        var c = e.contents_;\n        e.contents_ = null;\n        goog.globalEval(c);\n        if (f) var d = goog.moduleLoaderState_.moduleName;\n      } finally {\n        f && a.clearModuleState();\n      }\n\n      f && goog.global.$jscomp.require.ensure([e.getPathName()], function () {\n        a.registerEs6ModuleExports(e.path, goog.global.$jscomp.require(e.getPathName()), d);\n      });\n      a.loaded();\n    }\n  }\n\n  function d() {\n    var a = goog.global.document,\n        b = goog.Dependency.registerCallback_(function () {\n      goog.Dependency.unregisterCallback_(b);\n      c();\n    });\n    a.write('<script type=\"text/javascript\">' + goog.protectScriptTag_('goog.Dependency.callback_(\"' + b + '\");') + \"\\x3c/script>\");\n  }\n\n  var e = this;\n  if (goog.global.CLOSURE_IMPORT_SCRIPT) b(), this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT(\"\", this.contents_) ? (this.contents_ = null, a.loaded()) : a.pause();else {\n    var f = this.loadFlags.module == goog.ModuleType.ES6;\n    this.lazyFetch_ || b();\n    var g = 1 < a.pending().length,\n        h = g && goog.DebugLoader_.IS_OLD_IE_;\n    g = goog.Dependency.defer_ && (g || goog.isDocumentLoading_());\n    if (h || g) a.defer(function () {\n      c();\n    });else {\n      var k = goog.global.document;\n      h = goog.inHtmlDocument_() && \"ActiveXObject\" in goog.global;\n\n      if (f && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !h) {\n        goog.Dependency.defer_ = !0;\n        a.pause();\n        var l = k.onreadystatechange;\n\n        k.onreadystatechange = function () {\n          \"interactive\" == k.readyState && (k.onreadystatechange = l, c(), a.resume());\n          goog.isFunction(l) && l.apply(void 0, arguments);\n        };\n      } else !goog.DebugLoader_.IS_OLD_IE_ && goog.inHtmlDocument_() && goog.isDocumentLoading_() ? d() : c();\n    }\n  }\n}, goog.TransformedDependency.prototype.transform = function (a) {}, goog.TranspiledDependency = function (a, b, c, d, e, f) {\n  goog.TransformedDependency.call(this, a, b, c, d, e);\n  this.transpiler = f;\n}, goog.inherits(goog.TranspiledDependency, goog.TransformedDependency), goog.TranspiledDependency.prototype.transform = function (a) {\n  return this.transpiler.transpile(a, this.getPathName());\n}, goog.PreTranspiledEs6ModuleDependency = function (a, b, c, d, e) {\n  goog.TransformedDependency.call(this, a, b, c, d, e);\n}, goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency), goog.PreTranspiledEs6ModuleDependency.prototype.transform = function (a) {\n  return a;\n}, goog.GoogModuleDependency = function (a, b, c, d, e, f, g) {\n  goog.TransformedDependency.call(this, a, b, c, d, e);\n  this.needsTranspile_ = f;\n  this.transpiler_ = g;\n}, goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency), goog.GoogModuleDependency.prototype.transform = function (a) {\n  this.needsTranspile_ && (a = this.transpiler_.transpile(a, this.getPathName()));\n  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? \"goog.loadModule(\" + goog.global.JSON.stringify(a + \"\\n//# sourceURL=\" + this.path + \"\\n\") + \");\" : 'goog.loadModule(function(exports) {\"use strict\";' + a + \"\\n;return exports});\\n//# sourceURL=\" + this.path + \"\\n\";\n}, goog.DebugLoader_.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.DebugLoader_.prototype.addDependency = function (a, b, c, d) {\n  b = b || [];\n  a = a.replace(/\\\\/g, \"/\");\n  var e = goog.normalizePath_(goog.basePath + a);\n  d && \"boolean\" !== typeof d || (d = d ? {\n    module: goog.ModuleType.GOOG\n  } : {});\n  c = this.factory_.createDependency(e, a, b, c, d, goog.transpiler_.needsTranspile(d.lang || \"es3\", d.module));\n  this.dependencies_[e] = c;\n\n  for (c = 0; c < b.length; c++) this.idToPath_[b[c]] = e;\n\n  this.idToPath_[a] = e;\n}, goog.DependencyFactory = function (a) {\n  this.transpiler = a;\n}, goog.DependencyFactory.prototype.createDependency = function (a, b, c, d, e, f) {\n  return e.module == goog.ModuleType.GOOG ? new goog.GoogModuleDependency(a, b, c, d, e, f, this.transpiler) : f ? new goog.TranspiledDependency(a, b, c, d, e, this.transpiler) : e.module == goog.ModuleType.ES6 ? \"never\" == goog.TRANSPILE && goog.ASSUME_ES_MODULES_TRANSPILED ? new goog.PreTranspiledEs6ModuleDependency(a, b, c, d, e) : new goog.Es6ModuleDependency(a, b, c, d, e) : new goog.Dependency(a, b, c, d, e);\n}, goog.debugLoader_ = new goog.DebugLoader_(), goog.loadClosureDeps = function () {\n  goog.debugLoader_.loadClosureDeps();\n}, goog.setDependencyFactory = function (a) {\n  goog.debugLoader_.setDependencyFactory(a);\n}, goog.global.CLOSURE_NO_DEPS || goog.debugLoader_.loadClosureDeps(), goog.bootstrap = function (a, b) {\n  goog.debugLoader_.bootstrap(a, b);\n});\nvar jspb = {\n  BinaryConstants: {},\n  ConstBinaryMessage: function () {},\n  BinaryMessage: function () {}\n};\njspb.BinaryConstants.FieldType = {\n  INVALID: -1,\n  DOUBLE: 1,\n  FLOAT: 2,\n  INT64: 3,\n  UINT64: 4,\n  INT32: 5,\n  FIXED64: 6,\n  FIXED32: 7,\n  BOOL: 8,\n  STRING: 9,\n  GROUP: 10,\n  MESSAGE: 11,\n  BYTES: 12,\n  UINT32: 13,\n  ENUM: 14,\n  SFIXED32: 15,\n  SFIXED64: 16,\n  SINT32: 17,\n  SINT64: 18,\n  FHASH64: 30,\n  VHASH64: 31\n};\njspb.BinaryConstants.WireType = {\n  INVALID: -1,\n  VARINT: 0,\n  FIXED64: 1,\n  DELIMITED: 2,\n  START_GROUP: 3,\n  END_GROUP: 4,\n  FIXED32: 5\n};\n\njspb.BinaryConstants.FieldTypeToWireType = function (a) {\n  var b = jspb.BinaryConstants.FieldType,\n      c = jspb.BinaryConstants.WireType;\n\n  switch (a) {\n    case b.INT32:\n    case b.INT64:\n    case b.UINT32:\n    case b.UINT64:\n    case b.SINT32:\n    case b.SINT64:\n    case b.BOOL:\n    case b.ENUM:\n    case b.VHASH64:\n      return c.VARINT;\n\n    case b.DOUBLE:\n    case b.FIXED64:\n    case b.SFIXED64:\n    case b.FHASH64:\n      return c.FIXED64;\n\n    case b.STRING:\n    case b.MESSAGE:\n    case b.BYTES:\n      return c.DELIMITED;\n\n    case b.FLOAT:\n    case b.FIXED32:\n    case b.SFIXED32:\n      return c.FIXED32;\n\n    default:\n      return c.INVALID;\n  }\n};\n\njspb.BinaryConstants.INVALID_FIELD_NUMBER = -1;\njspb.BinaryConstants.FLOAT32_EPS = 1.401298464324817E-45;\njspb.BinaryConstants.FLOAT32_MIN = 1.1754943508222875E-38;\njspb.BinaryConstants.FLOAT32_MAX = 3.4028234663852886E38;\njspb.BinaryConstants.FLOAT64_EPS = 4.9E-324;\njspb.BinaryConstants.FLOAT64_MIN = 2.2250738585072014E-308;\njspb.BinaryConstants.FLOAT64_MAX = 1.7976931348623157E308;\njspb.BinaryConstants.TWO_TO_20 = 1048576;\njspb.BinaryConstants.TWO_TO_23 = 8388608;\njspb.BinaryConstants.TWO_TO_31 = 2147483648;\njspb.BinaryConstants.TWO_TO_32 = 4294967296;\njspb.BinaryConstants.TWO_TO_52 = 4503599627370496;\njspb.BinaryConstants.TWO_TO_63 = 0x7fffffffffffffff;\njspb.BinaryConstants.TWO_TO_64 = 1.8446744073709552E19;\njspb.BinaryConstants.ZERO_HASH = \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\ngoog.dom = {};\ngoog.dom.NodeType = {\n  ELEMENT: 1,\n  ATTRIBUTE: 2,\n  TEXT: 3,\n  CDATA_SECTION: 4,\n  ENTITY_REFERENCE: 5,\n  ENTITY: 6,\n  PROCESSING_INSTRUCTION: 7,\n  COMMENT: 8,\n  DOCUMENT: 9,\n  DOCUMENT_TYPE: 10,\n  DOCUMENT_FRAGMENT: 11,\n  NOTATION: 12\n};\ngoog.debug = {};\n\ngoog.debug.Error = function (a) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, goog.debug.Error);else {\n    var b = Error().stack;\n    b && (this.stack = b);\n  }\n  a && (this.message = String(a));\n  this.reportErrorToServer = !0;\n};\n\ngoog.inherits(goog.debug.Error, Error);\ngoog.debug.Error.prototype.name = \"CustomError\";\ngoog.asserts = {};\ngoog.asserts.ENABLE_ASSERTS = goog.DEBUG;\n\ngoog.asserts.AssertionError = function (a, b) {\n  goog.debug.Error.call(this, goog.asserts.subs_(a, b));\n  this.messagePattern = a;\n};\n\ngoog.inherits(goog.asserts.AssertionError, goog.debug.Error);\ngoog.asserts.AssertionError.prototype.name = \"AssertionError\";\n\ngoog.asserts.DEFAULT_ERROR_HANDLER = function (a) {\n  throw a;\n};\n\ngoog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;\n\ngoog.asserts.subs_ = function (a, b) {\n  a = a.split(\"%s\");\n\n  for (var c = \"\", d = a.length - 1, e = 0; e < d; e++) c += a[e] + (e < b.length ? b[e] : \"%s\");\n\n  return c + a[d];\n};\n\ngoog.asserts.doAssertFailure_ = function (a, b, c, d) {\n  var e = \"Assertion failed\";\n\n  if (c) {\n    e += \": \" + c;\n    var f = d;\n  } else a && (e += \": \" + a, f = b);\n\n  a = new goog.asserts.AssertionError(\"\" + e, f || []);\n  goog.asserts.errorHandler_(a);\n};\n\ngoog.asserts.setErrorHandler = function (a) {\n  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);\n};\n\ngoog.asserts.assert = function (a, b, c) {\n  goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_(\"\", null, b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.fail = function (a, b) {\n  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1)));\n};\n\ngoog.asserts.assertNumber = function (a, b, c) {\n  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertString = function (a, b, c) {\n  goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertFunction = function (a, b, c) {\n  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertObject = function (a, b, c) {\n  goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertArray = function (a, b, c) {\n  goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertBoolean = function (a, b, c) {\n  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertElement = function (a, b, c) {\n  !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertInstanceof = function (a, b, c, d) {\n  !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));\n  return a;\n};\n\ngoog.asserts.assertFinite = function (a, b, c) {\n  !goog.asserts.ENABLE_ASSERTS || \"number\" == typeof a && isFinite(a) || goog.asserts.doAssertFailure_(\"Expected %s to be a finite number but it is not.\", [a], b, Array.prototype.slice.call(arguments, 2));\n  return a;\n};\n\ngoog.asserts.assertObjectPrototypeIsIntact = function () {\n  for (var a in Object.prototype) goog.asserts.fail(a + \" should not be enumerable in Object.prototype.\");\n};\n\ngoog.asserts.getType_ = function (a) {\n  return a instanceof Function ? a.displayName || a.name || \"unknown type name\" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? \"null\" : typeof a;\n};\n\ngoog.array = {};\ngoog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;\ngoog.array.ASSUME_NATIVE_FUNCTIONS = !1;\n\ngoog.array.peek = function (a) {\n  return a[a.length - 1];\n};\n\ngoog.array.last = goog.array.peek;\ngoog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  return Array.prototype.indexOf.call(a, b, c);\n} : function (a, b, c) {\n  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;\n  if (goog.isString(a)) return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;\n\n  for (; c < a.length; c++) if (c in a && a[c] === b) return c;\n\n  return -1;\n};\ngoog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);\n} : function (a, b, c) {\n  c = null == c ? a.length - 1 : c;\n  0 > c && (c = Math.max(0, a.length + c));\n  if (goog.isString(a)) return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;\n\n  for (; 0 <= c; c--) if (c in a && a[c] === b) return c;\n\n  return -1;\n};\ngoog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  Array.prototype.forEach.call(a, b, c);\n} : function (a, b, c) {\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) f in e && b.call(c, e[f], f, a);\n};\n\ngoog.array.forEachRight = function (a, b, c) {\n  var d = a.length,\n      e = goog.isString(a) ? a.split(\"\") : a;\n\n  for (--d; 0 <= d; --d) d in e && b.call(c, e[d], d, a);\n};\n\ngoog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  return Array.prototype.filter.call(a, b, c);\n} : function (a, b, c) {\n  for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split(\"\") : a, h = 0; h < d; h++) if (h in g) {\n    var k = g[h];\n    b.call(c, k, h, a) && (e[f++] = k);\n  }\n\n  return e;\n};\ngoog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  return Array.prototype.map.call(a, b, c);\n} : function (a, b, c) {\n  for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split(\"\") : a, g = 0; g < d; g++) g in f && (e[g] = b.call(c, f[g], g, a));\n\n  return e;\n};\ngoog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function (a, b, c, d) {\n  goog.asserts.assert(null != a.length);\n  d && (b = goog.bind(b, d));\n  return Array.prototype.reduce.call(a, b, c);\n} : function (a, b, c, d) {\n  var e = c;\n  goog.array.forEach(a, function (c, g) {\n    e = b.call(d, e, c, g, a);\n  });\n  return e;\n};\ngoog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function (a, b, c, d) {\n  goog.asserts.assert(null != a.length);\n  goog.asserts.assert(null != b);\n  d && (b = goog.bind(b, d));\n  return Array.prototype.reduceRight.call(a, b, c);\n} : function (a, b, c, d) {\n  var e = c;\n  goog.array.forEachRight(a, function (c, g) {\n    e = b.call(d, e, c, g, a);\n  });\n  return e;\n};\ngoog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  return Array.prototype.some.call(a, b, c);\n} : function (a, b, c) {\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) if (f in e && b.call(c, e[f], f, a)) return !0;\n\n  return !1;\n};\ngoog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  return Array.prototype.every.call(a, b, c);\n} : function (a, b, c) {\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) if (f in e && !b.call(c, e[f], f, a)) return !1;\n\n  return !0;\n};\n\ngoog.array.count = function (a, b, c) {\n  var d = 0;\n  goog.array.forEach(a, function (a, f, g) {\n    b.call(c, a, f, g) && ++d;\n  }, c);\n  return d;\n};\n\ngoog.array.find = function (a, b, c) {\n  b = goog.array.findIndex(a, b, c);\n  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\n};\n\ngoog.array.findIndex = function (a, b, c) {\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) if (f in e && b.call(c, e[f], f, a)) return f;\n\n  return -1;\n};\n\ngoog.array.findRight = function (a, b, c) {\n  b = goog.array.findIndexRight(a, b, c);\n  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\n};\n\ngoog.array.findIndexRight = function (a, b, c) {\n  var d = a.length,\n      e = goog.isString(a) ? a.split(\"\") : a;\n\n  for (--d; 0 <= d; d--) if (d in e && b.call(c, e[d], d, a)) return d;\n\n  return -1;\n};\n\ngoog.array.contains = function (a, b) {\n  return 0 <= goog.array.indexOf(a, b);\n};\n\ngoog.array.isEmpty = function (a) {\n  return 0 == a.length;\n};\n\ngoog.array.clear = function (a) {\n  if (!goog.isArray(a)) for (var b = a.length - 1; 0 <= b; b--) delete a[b];\n  a.length = 0;\n};\n\ngoog.array.insert = function (a, b) {\n  goog.array.contains(a, b) || a.push(b);\n};\n\ngoog.array.insertAt = function (a, b, c) {\n  goog.array.splice(a, c, 0, b);\n};\n\ngoog.array.insertArrayAt = function (a, b, c) {\n  goog.partial(goog.array.splice, a, c, 0).apply(null, b);\n};\n\ngoog.array.insertBefore = function (a, b, c) {\n  var d;\n  2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);\n};\n\ngoog.array.remove = function (a, b) {\n  b = goog.array.indexOf(a, b);\n  var c;\n  (c = 0 <= b) && goog.array.removeAt(a, b);\n  return c;\n};\n\ngoog.array.removeLast = function (a, b) {\n  b = goog.array.lastIndexOf(a, b);\n  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;\n};\n\ngoog.array.removeAt = function (a, b) {\n  goog.asserts.assert(null != a.length);\n  return 1 == Array.prototype.splice.call(a, b, 1).length;\n};\n\ngoog.array.removeIf = function (a, b, c) {\n  b = goog.array.findIndex(a, b, c);\n  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;\n};\n\ngoog.array.removeAllIf = function (a, b, c) {\n  var d = 0;\n  goog.array.forEachRight(a, function (e, f) {\n    b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;\n  });\n  return d;\n};\n\ngoog.array.concat = function (a) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\ngoog.array.join = function (a) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\ngoog.array.toArray = function (a) {\n  var b = a.length;\n\n  if (0 < b) {\n    for (var c = Array(b), d = 0; d < b; d++) c[d] = a[d];\n\n    return c;\n  }\n\n  return [];\n};\n\ngoog.array.clone = goog.array.toArray;\n\ngoog.array.extend = function (a, b) {\n  for (var c = 1; c < arguments.length; c++) {\n    var d = arguments[c];\n\n    if (goog.isArrayLike(d)) {\n      var e = a.length || 0,\n          f = d.length || 0;\n      a.length = e + f;\n\n      for (var g = 0; g < f; g++) a[e + g] = d[g];\n    } else a.push(d);\n  }\n};\n\ngoog.array.splice = function (a, b, c, d) {\n  goog.asserts.assert(null != a.length);\n  return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));\n};\n\ngoog.array.slice = function (a, b, c) {\n  goog.asserts.assert(null != a.length);\n  return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);\n};\n\ngoog.array.removeDuplicates = function (a, b, c) {\n  b = b || a;\n\n  var d = function (a) {\n    return goog.isObject(a) ? \"o\" + goog.getUid(a) : (typeof a).charAt(0) + a;\n  };\n\n  c = c || d;\n  d = {};\n\n  for (var e = 0, f = 0; f < a.length;) {\n    var g = a[f++],\n        h = c(g);\n    Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);\n  }\n\n  b.length = e;\n};\n\ngoog.array.binarySearch = function (a, b, c) {\n  return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);\n};\n\ngoog.array.binarySelect = function (a, b, c) {\n  return goog.array.binarySearch_(a, b, !0, void 0, c);\n};\n\ngoog.array.binarySearch_ = function (a, b, c, d, e) {\n  for (var f = 0, g = a.length, h; f < g;) {\n    var k = f + g >> 1;\n    var l = c ? b.call(e, a[k], k, a) : b(d, a[k]);\n    0 < l ? f = k + 1 : (g = k, h = !l);\n  }\n\n  return h ? f : ~f;\n};\n\ngoog.array.sort = function (a, b) {\n  a.sort(b || goog.array.defaultCompare);\n};\n\ngoog.array.stableSort = function (a, b) {\n  for (var c = Array(a.length), d = 0; d < a.length; d++) c[d] = {\n    index: d,\n    value: a[d]\n  };\n\n  var e = b || goog.array.defaultCompare;\n  goog.array.sort(c, function (a, b) {\n    return e(a.value, b.value) || a.index - b.index;\n  });\n\n  for (d = 0; d < a.length; d++) a[d] = c[d].value;\n};\n\ngoog.array.sortByKey = function (a, b, c) {\n  var d = c || goog.array.defaultCompare;\n  goog.array.sort(a, function (a, c) {\n    return d(b(a), b(c));\n  });\n};\n\ngoog.array.sortObjectsByKey = function (a, b, c) {\n  goog.array.sortByKey(a, function (a) {\n    return a[b];\n  }, c);\n};\n\ngoog.array.isSorted = function (a, b, c) {\n  b = b || goog.array.defaultCompare;\n\n  for (var d = 1; d < a.length; d++) {\n    var e = b(a[d - 1], a[d]);\n    if (0 < e || 0 == e && c) return !1;\n  }\n\n  return !0;\n};\n\ngoog.array.equals = function (a, b, c) {\n  if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) return !1;\n  var d = a.length;\n  c = c || goog.array.defaultCompareEquality;\n\n  for (var e = 0; e < d; e++) if (!c(a[e], b[e])) return !1;\n\n  return !0;\n};\n\ngoog.array.compare3 = function (a, b, c) {\n  c = c || goog.array.defaultCompare;\n\n  for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {\n    var f = c(a[e], b[e]);\n    if (0 != f) return f;\n  }\n\n  return goog.array.defaultCompare(a.length, b.length);\n};\n\ngoog.array.defaultCompare = function (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n};\n\ngoog.array.inverseDefaultCompare = function (a, b) {\n  return -goog.array.defaultCompare(a, b);\n};\n\ngoog.array.defaultCompareEquality = function (a, b) {\n  return a === b;\n};\n\ngoog.array.binaryInsert = function (a, b, c) {\n  c = goog.array.binarySearch(a, b, c);\n  return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;\n};\n\ngoog.array.binaryRemove = function (a, b, c) {\n  b = goog.array.binarySearch(a, b, c);\n  return 0 <= b ? goog.array.removeAt(a, b) : !1;\n};\n\ngoog.array.bucket = function (a, b, c) {\n  for (var d = {}, e = 0; e < a.length; e++) {\n    var f = a[e],\n        g = b.call(c, f, e, a);\n    goog.isDef(g) && (d[g] || (d[g] = [])).push(f);\n  }\n\n  return d;\n};\n\ngoog.array.toObject = function (a, b, c) {\n  var d = {};\n  goog.array.forEach(a, function (e, f) {\n    d[b.call(c, e, f, a)] = e;\n  });\n  return d;\n};\n\ngoog.array.range = function (a, b, c) {\n  var d = [],\n      e = 0,\n      f = a;\n  c = c || 1;\n  void 0 !== b && (e = a, f = b);\n  if (0 > c * (f - e)) return [];\n  if (0 < c) for (a = e; a < f; a += c) d.push(a);else for (a = e; a > f; a += c) d.push(a);\n  return d;\n};\n\ngoog.array.repeat = function (a, b) {\n  for (var c = [], d = 0; d < b; d++) c[d] = a;\n\n  return c;\n};\n\ngoog.array.flatten = function (a) {\n  for (var b = [], c = 0; c < arguments.length; c++) {\n    var d = arguments[c];\n    if (goog.isArray(d)) for (var e = 0; e < d.length; e += 8192) {\n      var f = goog.array.slice(d, e, e + 8192);\n      f = goog.array.flatten.apply(null, f);\n\n      for (var g = 0; g < f.length; g++) b.push(f[g]);\n    } else b.push(d);\n  }\n\n  return b;\n};\n\ngoog.array.rotate = function (a, b) {\n  goog.asserts.assert(null != a.length);\n  a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));\n  return a;\n};\n\ngoog.array.moveItem = function (a, b, c) {\n  goog.asserts.assert(0 <= b && b < a.length);\n  goog.asserts.assert(0 <= c && c < a.length);\n  b = Array.prototype.splice.call(a, b, 1);\n  Array.prototype.splice.call(a, c, 0, b[0]);\n};\n\ngoog.array.zip = function (a) {\n  if (!arguments.length) return [];\n\n  for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++) arguments[d].length < c && (c = arguments[d].length);\n\n  for (d = 0; d < c; d++) {\n    for (var e = [], f = 0; f < arguments.length; f++) e.push(arguments[f][d]);\n\n    b.push(e);\n  }\n\n  return b;\n};\n\ngoog.array.shuffle = function (a, b) {\n  b = b || Math.random;\n\n  for (var c = a.length - 1; 0 < c; c--) {\n    var d = Math.floor(b() * (c + 1)),\n        e = a[c];\n    a[c] = a[d];\n    a[d] = e;\n  }\n};\n\ngoog.array.copyByIndex = function (a, b) {\n  var c = [];\n  goog.array.forEach(b, function (b) {\n    c.push(a[b]);\n  });\n  return c;\n};\n\ngoog.array.concatMap = function (a, b, c) {\n  return goog.array.concat.apply([], goog.array.map(a, b, c));\n};\n\ngoog.crypt = {};\n\ngoog.crypt.stringToByteArray = function (a) {\n  for (var b = [], c = 0, d = 0; d < a.length; d++) {\n    var e = a.charCodeAt(d);\n    255 < e && (b[c++] = e & 255, e >>= 8);\n    b[c++] = e;\n  }\n\n  return b;\n};\n\ngoog.crypt.byteArrayToString = function (a) {\n  if (8192 >= a.length) return String.fromCharCode.apply(null, a);\n\n  for (var b = \"\", c = 0; c < a.length; c += 8192) {\n    var d = goog.array.slice(a, c, c + 8192);\n    b += String.fromCharCode.apply(null, d);\n  }\n\n  return b;\n};\n\ngoog.crypt.byteArrayToHex = function (a, b) {\n  return goog.array.map(a, function (a) {\n    a = a.toString(16);\n    return 1 < a.length ? a : \"0\" + a;\n  }).join(b || \"\");\n};\n\ngoog.crypt.hexToByteArray = function (a) {\n  goog.asserts.assert(0 == a.length % 2, \"Key string length must be multiple of 2\");\n\n  for (var b = [], c = 0; c < a.length; c += 2) b.push(parseInt(a.substring(c, c + 2), 16));\n\n  return b;\n};\n\ngoog.crypt.stringToUtf8ByteArray = function (a) {\n  for (var b = [], c = 0, d = 0; d < a.length; d++) {\n    var e = a.charCodeAt(d);\n    128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);\n  }\n\n  return b;\n};\n\ngoog.crypt.utf8ByteArrayToString = function (a) {\n  for (var b = [], c = 0, d = 0; c < a.length;) {\n    var e = a[c++];\n    if (128 > e) b[d++] = String.fromCharCode(e);else if (191 < e && 224 > e) {\n      var f = a[c++];\n      b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);\n    } else if (239 < e && 365 > e) {\n      f = a[c++];\n      var g = a[c++],\n          h = a[c++];\n      e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;\n      b[d++] = String.fromCharCode(55296 + (e >> 10));\n      b[d++] = String.fromCharCode(56320 + (e & 1023));\n    } else f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);\n  }\n\n  return b.join(\"\");\n};\n\ngoog.crypt.xorByteArray = function (a, b) {\n  goog.asserts.assert(a.length == b.length, \"XOR array lengths must match\");\n\n  for (var c = [], d = 0; d < a.length; d++) c.push(a[d] ^ b[d]);\n\n  return c;\n};\n\ngoog.string = {};\ngoog.string.internal = {};\n\ngoog.string.internal.startsWith = function (a, b) {\n  return 0 == a.lastIndexOf(b, 0);\n};\n\ngoog.string.internal.endsWith = function (a, b) {\n  var c = a.length - b.length;\n  return 0 <= c && a.indexOf(b, c) == c;\n};\n\ngoog.string.internal.caseInsensitiveStartsWith = function (a, b) {\n  return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(0, b.length));\n};\n\ngoog.string.internal.caseInsensitiveEndsWith = function (a, b) {\n  return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));\n};\n\ngoog.string.internal.caseInsensitiveEquals = function (a, b) {\n  return a.toLowerCase() == b.toLowerCase();\n};\n\ngoog.string.internal.isEmptyOrWhitespace = function (a) {\n  return /^[\\s\\xa0]*$/.test(a);\n};\n\ngoog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function (a) {\n  return a.trim();\n} : function (a) {\n  return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1];\n};\n\ngoog.string.internal.caseInsensitiveCompare = function (a, b) {\n  a = String(a).toLowerCase();\n  b = String(b).toLowerCase();\n  return a < b ? -1 : a == b ? 0 : 1;\n};\n\ngoog.string.internal.newLineToBr = function (a, b) {\n  return a.replace(/(\\r\\n|\\r|\\n)/g, b ? \"<br />\" : \"<br>\");\n};\n\ngoog.string.internal.htmlEscape = function (a, b) {\n  if (b) a = a.replace(goog.string.internal.AMP_RE_, \"&amp;\").replace(goog.string.internal.LT_RE_, \"&lt;\").replace(goog.string.internal.GT_RE_, \"&gt;\").replace(goog.string.internal.QUOT_RE_, \"&quot;\").replace(goog.string.internal.SINGLE_QUOTE_RE_, \"&#39;\").replace(goog.string.internal.NULL_RE_, \"&#0;\");else {\n    if (!goog.string.internal.ALL_RE_.test(a)) return a;\n    -1 != a.indexOf(\"&\") && (a = a.replace(goog.string.internal.AMP_RE_, \"&amp;\"));\n    -1 != a.indexOf(\"<\") && (a = a.replace(goog.string.internal.LT_RE_, \"&lt;\"));\n    -1 != a.indexOf(\">\") && (a = a.replace(goog.string.internal.GT_RE_, \"&gt;\"));\n    -1 != a.indexOf('\"') && (a = a.replace(goog.string.internal.QUOT_RE_, \"&quot;\"));\n    -1 != a.indexOf(\"'\") && (a = a.replace(goog.string.internal.SINGLE_QUOTE_RE_, \"&#39;\"));\n    -1 != a.indexOf(\"\\x00\") && (a = a.replace(goog.string.internal.NULL_RE_, \"&#0;\"));\n  }\n  return a;\n};\n\ngoog.string.internal.AMP_RE_ = /&/g;\ngoog.string.internal.LT_RE_ = /</g;\ngoog.string.internal.GT_RE_ = />/g;\ngoog.string.internal.QUOT_RE_ = /\"/g;\ngoog.string.internal.SINGLE_QUOTE_RE_ = /'/g;\ngoog.string.internal.NULL_RE_ = /\\x00/g;\ngoog.string.internal.ALL_RE_ = /[\\x00&<>\"']/;\n\ngoog.string.internal.whitespaceEscape = function (a, b) {\n  return goog.string.internal.newLineToBr(a.replace(/  /g, \" &#160;\"), b);\n};\n\ngoog.string.internal.contains = function (a, b) {\n  return -1 != a.indexOf(b);\n};\n\ngoog.string.internal.caseInsensitiveContains = function (a, b) {\n  return goog.string.internal.contains(a.toLowerCase(), b.toLowerCase());\n};\n\ngoog.string.internal.compareVersions = function (a, b) {\n  var c = 0;\n  a = goog.string.internal.trim(String(a)).split(\".\");\n  b = goog.string.internal.trim(String(b)).split(\".\");\n\n  for (var d = Math.max(a.length, b.length), e = 0; 0 == c && e < d; e++) {\n    var f = a[e] || \"\",\n        g = b[e] || \"\";\n\n    do {\n      f = /(\\d*)(\\D*)(.*)/.exec(f) || [\"\", \"\", \"\", \"\"];\n      g = /(\\d*)(\\D*)(.*)/.exec(g) || [\"\", \"\", \"\", \"\"];\n      if (0 == f[0].length && 0 == g[0].length) break;\n      c = 0 == f[1].length ? 0 : parseInt(f[1], 10);\n      var h = 0 == g[1].length ? 0 : parseInt(g[1], 10);\n      c = goog.string.internal.compareElements_(c, h) || goog.string.internal.compareElements_(0 == f[2].length, 0 == g[2].length) || goog.string.internal.compareElements_(f[2], g[2]);\n      f = f[3];\n      g = g[3];\n    } while (0 == c);\n  }\n\n  return c;\n};\n\ngoog.string.internal.compareElements_ = function (a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n};\n\ngoog.string.DETECT_DOUBLE_ESCAPING = !1;\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;\ngoog.string.Unicode = {\n  NBSP: \"\\u00a0\"\n};\ngoog.string.startsWith = goog.string.internal.startsWith;\ngoog.string.endsWith = goog.string.internal.endsWith;\ngoog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;\ngoog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;\ngoog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;\n\ngoog.string.subs = function (a, b) {\n  for (var c = a.split(\"%s\"), d = \"\", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) d += c.shift() + e.shift();\n\n  return d + c.join(\"%s\");\n};\n\ngoog.string.collapseWhitespace = function (a) {\n  return a.replace(/[\\s\\xa0]+/g, \" \").replace(/^\\s+|\\s+$/g, \"\");\n};\n\ngoog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;\n\ngoog.string.isEmptyString = function (a) {\n  return 0 == a.length;\n};\n\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\n\ngoog.string.isEmptyOrWhitespaceSafe = function (a) {\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));\n};\n\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\n\ngoog.string.isBreakingWhitespace = function (a) {\n  return !/[^\\t\\n\\r ]/.test(a);\n};\n\ngoog.string.isAlpha = function (a) {\n  return !/[^a-zA-Z]/.test(a);\n};\n\ngoog.string.isNumeric = function (a) {\n  return !/[^0-9]/.test(a);\n};\n\ngoog.string.isAlphaNumeric = function (a) {\n  return !/[^a-zA-Z0-9]/.test(a);\n};\n\ngoog.string.isSpace = function (a) {\n  return \" \" == a;\n};\n\ngoog.string.isUnicodeChar = function (a) {\n  return 1 == a.length && \" \" <= a && \"~\" >= a || \"\\u0080\" <= a && \"\\ufffd\" >= a;\n};\n\ngoog.string.stripNewlines = function (a) {\n  return a.replace(/(\\r\\n|\\r|\\n)+/g, \" \");\n};\n\ngoog.string.canonicalizeNewlines = function (a) {\n  return a.replace(/(\\r\\n|\\r|\\n)/g, \"\\n\");\n};\n\ngoog.string.normalizeWhitespace = function (a) {\n  return a.replace(/\\xa0|\\s/g, \" \");\n};\n\ngoog.string.normalizeSpaces = function (a) {\n  return a.replace(/\\xa0|[ \\t]+/g, \" \");\n};\n\ngoog.string.collapseBreakingSpaces = function (a) {\n  return a.replace(/[\\t\\r\\n ]+/g, \" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, \"\");\n};\n\ngoog.string.trim = goog.string.internal.trim;\n\ngoog.string.trimLeft = function (a) {\n  return a.replace(/^[\\s\\xa0]+/, \"\");\n};\n\ngoog.string.trimRight = function (a) {\n  return a.replace(/[\\s\\xa0]+$/, \"\");\n};\n\ngoog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;\n\ngoog.string.numberAwareCompare_ = function (a, b, c) {\n  if (a == b) return 0;\n  if (!a) return -1;\n  if (!b) return 1;\n\n  for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {\n    c = d[g];\n    var h = e[g];\n    if (c != h) return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;\n  }\n\n  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;\n};\n\ngoog.string.intAwareCompare = function (a, b) {\n  return goog.string.numberAwareCompare_(a, b, /\\d+|\\D+/g);\n};\n\ngoog.string.floatAwareCompare = function (a, b) {\n  return goog.string.numberAwareCompare_(a, b, /\\d+|\\.\\d+|\\D+/g);\n};\n\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\n\ngoog.string.urlEncode = function (a) {\n  return encodeURIComponent(String(a));\n};\n\ngoog.string.urlDecode = function (a) {\n  return decodeURIComponent(a.replace(/\\+/g, \" \"));\n};\n\ngoog.string.newLineToBr = goog.string.internal.newLineToBr;\n\ngoog.string.htmlEscape = function (a, b) {\n  a = goog.string.internal.htmlEscape(a, b);\n  goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, \"&#101;\"));\n  return a;\n};\n\ngoog.string.E_RE_ = /e/g;\n\ngoog.string.unescapeEntities = function (a) {\n  return goog.string.contains(a, \"&\") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && \"document\" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;\n};\n\ngoog.string.unescapeEntitiesWithDocument = function (a, b) {\n  return goog.string.contains(a, \"&\") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;\n};\n\ngoog.string.unescapeEntitiesUsingDom_ = function (a, b) {\n  var c = {\n    \"&amp;\": \"&\",\n    \"&lt;\": \"<\",\n    \"&gt;\": \">\",\n    \"&quot;\": '\"'\n  };\n  var d = b ? b.createElement(\"div\") : goog.global.document.createElement(\"div\");\n  return a.replace(goog.string.HTML_ENTITY_PATTERN_, function (a, b) {\n    var e = c[a];\n    if (e) return e;\n    \"#\" == b.charAt(0) && (b = Number(\"0\" + b.substr(1)), isNaN(b) || (e = String.fromCharCode(b)));\n    e || (d.innerHTML = a + \" \", e = d.firstChild.nodeValue.slice(0, -1));\n    return c[a] = e;\n  });\n};\n\ngoog.string.unescapePureXmlEntities_ = function (a) {\n  return a.replace(/&([^;]+);/g, function (a, c) {\n    switch (c) {\n      case \"amp\":\n        return \"&\";\n\n      case \"lt\":\n        return \"<\";\n\n      case \"gt\":\n        return \">\";\n\n      case \"quot\":\n        return '\"';\n\n      default:\n        return \"#\" != c.charAt(0) || (c = Number(\"0\" + c.substr(1)), isNaN(c)) ? a : String.fromCharCode(c);\n    }\n  });\n};\n\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\n\ngoog.string.whitespaceEscape = function (a, b) {\n  return goog.string.newLineToBr(a.replace(/  /g, \" &#160;\"), b);\n};\n\ngoog.string.preserveSpaces = function (a) {\n  return a.replace(/(^|[\\n ]) /g, \"$1\" + goog.string.Unicode.NBSP);\n};\n\ngoog.string.stripQuotes = function (a, b) {\n  for (var c = b.length, d = 0; d < c; d++) {\n    var e = 1 == c ? b : b.charAt(d);\n    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) return a.substring(1, a.length - 1);\n  }\n\n  return a;\n};\n\ngoog.string.truncate = function (a, b, c) {\n  c && (a = goog.string.unescapeEntities(a));\n  a.length > b && (a = a.substring(0, b - 3) + \"...\");\n  c && (a = goog.string.htmlEscape(a));\n  return a;\n};\n\ngoog.string.truncateMiddle = function (a, b, c, d) {\n  c && (a = goog.string.unescapeEntities(a));\n\n  if (d && a.length > b) {\n    d > b && (d = b);\n    var e = a.length - d;\n    a = a.substring(0, b - d) + \"...\" + a.substring(e);\n  } else a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + \"...\" + a.substring(e));\n\n  c && (a = goog.string.htmlEscape(a));\n  return a;\n};\n\ngoog.string.specialEscapeChars_ = {\n  \"\\x00\": \"\\\\0\",\n  \"\\b\": \"\\\\b\",\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\\t\": \"\\\\t\",\n  \"\\x0B\": \"\\\\x0B\",\n  '\"': '\\\\\"',\n  \"\\\\\": \"\\\\\\\\\",\n  \"<\": \"<\"\n};\ngoog.string.jsEscapeCache_ = {\n  \"'\": \"\\\\'\"\n};\n\ngoog.string.quote = function (a) {\n  a = String(a);\n\n  for (var b = ['\"'], c = 0; c < a.length; c++) {\n    var d = a.charAt(c),\n        e = d.charCodeAt(0);\n    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));\n  }\n\n  b.push('\"');\n  return b.join(\"\");\n};\n\ngoog.string.escapeString = function (a) {\n  for (var b = [], c = 0; c < a.length; c++) b[c] = goog.string.escapeChar(a.charAt(c));\n\n  return b.join(\"\");\n};\n\ngoog.string.escapeChar = function (a) {\n  if (a in goog.string.jsEscapeCache_) return goog.string.jsEscapeCache_[a];\n  if (a in goog.string.specialEscapeChars_) return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];\n  var b = a.charCodeAt(0);\n  if (31 < b && 127 > b) var c = a;else {\n    if (256 > b) {\n      if (c = \"\\\\x\", 16 > b || 256 < b) c += \"0\";\n    } else c = \"\\\\u\", 4096 > b && (c += \"0\");\n\n    c += b.toString(16).toUpperCase();\n  }\n  return goog.string.jsEscapeCache_[a] = c;\n};\n\ngoog.string.contains = goog.string.internal.contains;\ngoog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;\n\ngoog.string.countOf = function (a, b) {\n  return a && b ? a.split(b).length - 1 : 0;\n};\n\ngoog.string.removeAt = function (a, b, c) {\n  var d = a;\n  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));\n  return d;\n};\n\ngoog.string.remove = function (a, b) {\n  return a.replace(b, \"\");\n};\n\ngoog.string.removeAll = function (a, b) {\n  b = new RegExp(goog.string.regExpEscape(b), \"g\");\n  return a.replace(b, \"\");\n};\n\ngoog.string.replaceAll = function (a, b, c) {\n  b = new RegExp(goog.string.regExpEscape(b), \"g\");\n  return a.replace(b, c.replace(/\\$/g, \"$$$$\"));\n};\n\ngoog.string.regExpEscape = function (a) {\n  return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, \"\\\\$1\").replace(/\\x08/g, \"\\\\x08\");\n};\n\ngoog.string.repeat = String.prototype.repeat ? function (a, b) {\n  return a.repeat(b);\n} : function (a, b) {\n  return Array(b + 1).join(a);\n};\n\ngoog.string.padNumber = function (a, b, c) {\n  a = goog.isDef(c) ? a.toFixed(c) : String(a);\n  c = a.indexOf(\".\");\n  -1 == c && (c = a.length);\n  return goog.string.repeat(\"0\", Math.max(0, b - c)) + a;\n};\n\ngoog.string.makeSafe = function (a) {\n  return null == a ? \"\" : String(a);\n};\n\ngoog.string.buildString = function (a) {\n  return Array.prototype.join.call(arguments, \"\");\n};\n\ngoog.string.getRandomString = function () {\n  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);\n};\n\ngoog.string.compareVersions = goog.string.internal.compareVersions;\n\ngoog.string.hashCode = function (a) {\n  for (var b = 0, c = 0; c < a.length; ++c) b = 31 * b + a.charCodeAt(c) >>> 0;\n\n  return b;\n};\n\ngoog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;\n\ngoog.string.createUniqueString = function () {\n  return \"goog_\" + goog.string.uniqueStringCounter_++;\n};\n\ngoog.string.toNumber = function (a) {\n  var b = Number(a);\n  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;\n};\n\ngoog.string.isLowerCamelCase = function (a) {\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(a);\n};\n\ngoog.string.isUpperCamelCase = function (a) {\n  return /^([A-Z][a-z]*)+$/.test(a);\n};\n\ngoog.string.toCamelCase = function (a) {\n  return String(a).replace(/\\-([a-z])/g, function (a, c) {\n    return c.toUpperCase();\n  });\n};\n\ngoog.string.toSelectorCase = function (a) {\n  return String(a).replace(/([A-Z])/g, \"-$1\").toLowerCase();\n};\n\ngoog.string.toTitleCase = function (a, b) {\n  b = goog.isString(b) ? goog.string.regExpEscape(b) : \"\\\\s\";\n  return a.replace(new RegExp(\"(^\" + (b ? \"|[\" + b + \"]+\" : \"\") + \")([a-z])\", \"g\"), function (a, b, e) {\n    return b + e.toUpperCase();\n  });\n};\n\ngoog.string.capitalize = function (a) {\n  return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();\n};\n\ngoog.string.parseInt = function (a) {\n  isFinite(a) && (a = String(a));\n  return goog.isString(a) ? /^\\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;\n};\n\ngoog.string.splitLimit = function (a, b, c) {\n  a = a.split(b);\n\n  for (var d = []; 0 < c && a.length;) d.push(a.shift()), c--;\n\n  a.length && d.push(a.join(b));\n  return d;\n};\n\ngoog.string.lastComponent = function (a, b) {\n  if (b) \"string\" == typeof b && (b = [b]);else return a;\n\n  for (var c = -1, d = 0; d < b.length; d++) if (\"\" != b[d]) {\n    var e = a.lastIndexOf(b[d]);\n    e > c && (c = e);\n  }\n\n  return -1 == c ? a : a.slice(c + 1);\n};\n\ngoog.string.editDistance = function (a, b) {\n  var c = [],\n      d = [];\n  if (a == b) return 0;\n  if (!a.length || !b.length) return Math.max(a.length, b.length);\n\n  for (var e = 0; e < b.length + 1; e++) c[e] = e;\n\n  for (e = 0; e < a.length; e++) {\n    d[0] = e + 1;\n\n    for (var f = 0; f < b.length; f++) d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));\n\n    for (f = 0; f < c.length; f++) c[f] = d[f];\n  }\n\n  return d[b.length];\n};\n\ngoog.labs = {};\ngoog.labs.userAgent = {};\ngoog.labs.userAgent.util = {};\n\ngoog.labs.userAgent.util.getNativeUserAgentString_ = function () {\n  var a = goog.labs.userAgent.util.getNavigator_();\n  return a && (a = a.userAgent) ? a : \"\";\n};\n\ngoog.labs.userAgent.util.getNavigator_ = function () {\n  return goog.global.navigator;\n};\n\ngoog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();\n\ngoog.labs.userAgent.util.setUserAgent = function (a) {\n  goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();\n};\n\ngoog.labs.userAgent.util.getUserAgent = function () {\n  return goog.labs.userAgent.util.userAgent_;\n};\n\ngoog.labs.userAgent.util.matchUserAgent = function (a) {\n  var b = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.internal.contains(b, a);\n};\n\ngoog.labs.userAgent.util.matchUserAgentIgnoreCase = function (a) {\n  var b = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.internal.caseInsensitiveContains(b, a);\n};\n\ngoog.labs.userAgent.util.extractVersionTuples = function (a) {\n  for (var b = /(\\w[\\w ]+)\\/([^\\s]+)\\s*(?:\\((.*?)\\))?/g, c = [], d; d = b.exec(a);) c.push([d[1], d[2], d[3] || void 0]);\n\n  return c;\n};\n\ngoog.labs.userAgent.platform = {};\n\ngoog.labs.userAgent.platform.isAndroid = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Android\");\n};\n\ngoog.labs.userAgent.platform.isIpod = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"iPod\");\n};\n\ngoog.labs.userAgent.platform.isIphone = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"iPhone\") && !goog.labs.userAgent.util.matchUserAgent(\"iPod\") && !goog.labs.userAgent.util.matchUserAgent(\"iPad\");\n};\n\ngoog.labs.userAgent.platform.isIpad = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"iPad\");\n};\n\ngoog.labs.userAgent.platform.isIos = function () {\n  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();\n};\n\ngoog.labs.userAgent.platform.isMacintosh = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Macintosh\");\n};\n\ngoog.labs.userAgent.platform.isLinux = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Linux\");\n};\n\ngoog.labs.userAgent.platform.isWindows = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Windows\");\n};\n\ngoog.labs.userAgent.platform.isChromeOS = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"CrOS\");\n};\n\ngoog.labs.userAgent.platform.isChromecast = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"CrKey\");\n};\n\ngoog.labs.userAgent.platform.isKaiOS = function () {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"KaiOS\");\n};\n\ngoog.labs.userAgent.platform.isGo2Phone = function () {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"GAFP\");\n};\n\ngoog.labs.userAgent.platform.getVersion = function () {\n  var a = goog.labs.userAgent.util.getUserAgent(),\n      b = \"\";\n  goog.labs.userAgent.platform.isWindows() ? (b = /Windows (?:NT|Phone) ([0-9.]+)/, b = (a = b.exec(a)) ? a[1] : \"0.0\") : goog.labs.userAgent.platform.isIos() ? (b = /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/, b = (a = b.exec(a)) && a[1].replace(/_/g, \".\")) : goog.labs.userAgent.platform.isMacintosh() ? (b = /Mac OS X ([0-9_.]+)/, b = (a = b.exec(a)) ? a[1].replace(/_/g, \".\") : \"10\") : goog.labs.userAgent.platform.isAndroid() ? (b = /Android\\s+([^\\);]+)(\\)|;)/, b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isChromeOS() && (b = /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/, b = (a = b.exec(a)) && a[1]);\n  return b || \"\";\n};\n\ngoog.labs.userAgent.platform.isVersionOrHigher = function (a) {\n  return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a);\n};\n\ngoog.object = {};\n\ngoog.object.is = function (a, b) {\n  return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;\n};\n\ngoog.object.forEach = function (a, b, c) {\n  for (var d in a) b.call(c, a[d], d, a);\n};\n\ngoog.object.filter = function (a, b, c) {\n  var d = {},\n      e;\n\n  for (e in a) b.call(c, a[e], e, a) && (d[e] = a[e]);\n\n  return d;\n};\n\ngoog.object.map = function (a, b, c) {\n  var d = {},\n      e;\n\n  for (e in a) d[e] = b.call(c, a[e], e, a);\n\n  return d;\n};\n\ngoog.object.some = function (a, b, c) {\n  for (var d in a) if (b.call(c, a[d], d, a)) return !0;\n\n  return !1;\n};\n\ngoog.object.every = function (a, b, c) {\n  for (var d in a) if (!b.call(c, a[d], d, a)) return !1;\n\n  return !0;\n};\n\ngoog.object.getCount = function (a) {\n  var b = 0,\n      c;\n\n  for (c in a) b++;\n\n  return b;\n};\n\ngoog.object.getAnyKey = function (a) {\n  for (var b in a) return b;\n};\n\ngoog.object.getAnyValue = function (a) {\n  for (var b in a) return a[b];\n};\n\ngoog.object.contains = function (a, b) {\n  return goog.object.containsValue(a, b);\n};\n\ngoog.object.getValues = function (a) {\n  var b = [],\n      c = 0,\n      d;\n\n  for (d in a) b[c++] = a[d];\n\n  return b;\n};\n\ngoog.object.getKeys = function (a) {\n  var b = [],\n      c = 0,\n      d;\n\n  for (d in a) b[c++] = d;\n\n  return b;\n};\n\ngoog.object.getValueByKeys = function (a, b) {\n  var c = goog.isArrayLike(b),\n      d = c ? b : arguments;\n\n  for (c = c ? 0 : 1; c < d.length; c++) {\n    if (null == a) return;\n    a = a[d[c]];\n  }\n\n  return a;\n};\n\ngoog.object.containsKey = function (a, b) {\n  return null !== a && b in a;\n};\n\ngoog.object.containsValue = function (a, b) {\n  for (var c in a) if (a[c] == b) return !0;\n\n  return !1;\n};\n\ngoog.object.findKey = function (a, b, c) {\n  for (var d in a) if (b.call(c, a[d], d, a)) return d;\n};\n\ngoog.object.findValue = function (a, b, c) {\n  return (b = goog.object.findKey(a, b, c)) && a[b];\n};\n\ngoog.object.isEmpty = function (a) {\n  for (var b in a) return !1;\n\n  return !0;\n};\n\ngoog.object.clear = function (a) {\n  for (var b in a) delete a[b];\n};\n\ngoog.object.remove = function (a, b) {\n  var c;\n  (c = b in a) && delete a[b];\n  return c;\n};\n\ngoog.object.add = function (a, b, c) {\n  if (null !== a && b in a) throw Error('The object already contains the key \"' + b + '\"');\n  goog.object.set(a, b, c);\n};\n\ngoog.object.get = function (a, b, c) {\n  return null !== a && b in a ? a[b] : c;\n};\n\ngoog.object.set = function (a, b, c) {\n  a[b] = c;\n};\n\ngoog.object.setIfUndefined = function (a, b, c) {\n  return b in a ? a[b] : a[b] = c;\n};\n\ngoog.object.setWithReturnValueIfNotSet = function (a, b, c) {\n  if (b in a) return a[b];\n  c = c();\n  return a[b] = c;\n};\n\ngoog.object.equals = function (a, b) {\n  for (var c in a) if (!(c in b) || a[c] !== b[c]) return !1;\n\n  for (c in b) if (!(c in a)) return !1;\n\n  return !0;\n};\n\ngoog.object.clone = function (a) {\n  var b = {},\n      c;\n\n  for (c in a) b[c] = a[c];\n\n  return b;\n};\n\ngoog.object.unsafeClone = function (a) {\n  var b = goog.typeOf(a);\n\n  if (\"object\" == b || \"array\" == b) {\n    if (goog.isFunction(a.clone)) return a.clone();\n    b = \"array\" == b ? [] : {};\n\n    for (var c in a) b[c] = goog.object.unsafeClone(a[c]);\n\n    return b;\n  }\n\n  return a;\n};\n\ngoog.object.transpose = function (a) {\n  var b = {},\n      c;\n\n  for (c in a) b[a[c]] = c;\n\n  return b;\n};\n\ngoog.object.PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\n\ngoog.object.extend = function (a, b) {\n  for (var c, d, e = 1; e < arguments.length; e++) {\n    d = arguments[e];\n\n    for (c in d) a[c] = d[c];\n\n    for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++) c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\n  }\n};\n\ngoog.object.create = function (a) {\n  var b = arguments.length;\n  if (1 == b && goog.isArray(arguments[0])) return goog.object.create.apply(null, arguments[0]);\n  if (b % 2) throw Error(\"Uneven number of arguments\");\n\n  for (var c = {}, d = 0; d < b; d += 2) c[arguments[d]] = arguments[d + 1];\n\n  return c;\n};\n\ngoog.object.createSet = function (a) {\n  var b = arguments.length;\n  if (1 == b && goog.isArray(arguments[0])) return goog.object.createSet.apply(null, arguments[0]);\n\n  for (var c = {}, d = 0; d < b; d++) c[arguments[d]] = !0;\n\n  return c;\n};\n\ngoog.object.createImmutableView = function (a) {\n  var b = a;\n  Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));\n  return b;\n};\n\ngoog.object.isImmutableView = function (a) {\n  return !!Object.isFrozen && Object.isFrozen(a);\n};\n\ngoog.object.getAllPropertyNames = function (a, b, c) {\n  if (!a) return [];\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) return goog.object.getKeys(a);\n\n  for (var d = {}; a && (a !== Object.prototype || b) && (a !== Function.prototype || c);) {\n    for (var e = Object.getOwnPropertyNames(a), f = 0; f < e.length; f++) d[e[f]] = !0;\n\n    a = Object.getPrototypeOf(a);\n  }\n\n  return goog.object.getKeys(d);\n};\n\ngoog.labs.userAgent.browser = {};\n\ngoog.labs.userAgent.browser.matchOpera_ = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Opera\");\n};\n\ngoog.labs.userAgent.browser.matchIE_ = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Trident\") || goog.labs.userAgent.util.matchUserAgent(\"MSIE\");\n};\n\ngoog.labs.userAgent.browser.matchEdge_ = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Edge\");\n};\n\ngoog.labs.userAgent.browser.matchFirefox_ = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Firefox\") || goog.labs.userAgent.util.matchUserAgent(\"FxiOS\");\n};\n\ngoog.labs.userAgent.browser.matchSafari_ = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Safari\") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent(\"Android\"));\n};\n\ngoog.labs.userAgent.browser.matchCoast_ = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Coast\");\n};\n\ngoog.labs.userAgent.browser.matchIosWebview_ = function () {\n  return (goog.labs.userAgent.util.matchUserAgent(\"iPad\") || goog.labs.userAgent.util.matchUserAgent(\"iPhone\")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent(\"AppleWebKit\");\n};\n\ngoog.labs.userAgent.browser.matchChrome_ = function () {\n  return (goog.labs.userAgent.util.matchUserAgent(\"Chrome\") || goog.labs.userAgent.util.matchUserAgent(\"CriOS\")) && !goog.labs.userAgent.browser.matchEdge_();\n};\n\ngoog.labs.userAgent.browser.matchAndroidBrowser_ = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Android\") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());\n};\n\ngoog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;\ngoog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;\ngoog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;\ngoog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;\ngoog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;\ngoog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;\ngoog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;\ngoog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;\ngoog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;\n\ngoog.labs.userAgent.browser.isSilk = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Silk\");\n};\n\ngoog.labs.userAgent.browser.getVersion = function () {\n  function a(a) {\n    a = goog.array.find(a, d);\n    return c[a] || \"\";\n  }\n\n  var b = goog.labs.userAgent.util.getUserAgent();\n  if (goog.labs.userAgent.browser.isIE()) return goog.labs.userAgent.browser.getIEVersion_(b);\n  b = goog.labs.userAgent.util.extractVersionTuples(b);\n  var c = {};\n  goog.array.forEach(b, function (a) {\n    c[a[0]] = a[1];\n  });\n  var d = goog.partial(goog.object.containsKey, c);\n  return goog.labs.userAgent.browser.isOpera() ? a([\"Version\", \"Opera\"]) : goog.labs.userAgent.browser.isEdge() ? a([\"Edge\"]) : goog.labs.userAgent.browser.isChrome() ? a([\"Chrome\", \"CriOS\"]) : (b = b[2]) && b[1] || \"\";\n};\n\ngoog.labs.userAgent.browser.isVersionOrHigher = function (a) {\n  return 0 <= goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), a);\n};\n\ngoog.labs.userAgent.browser.getIEVersion_ = function (a) {\n  var b = /rv: *([\\d\\.]*)/.exec(a);\n  if (b && b[1]) return b[1];\n  b = \"\";\n  var c = /MSIE +([\\d\\.]+)/.exec(a);\n  if (c && c[1]) if (a = /Trident\\/(\\d.\\d)/.exec(a), \"7.0\" == c[1]) {\n    if (a && a[1]) switch (a[1]) {\n      case \"4.0\":\n        b = \"8.0\";\n        break;\n\n      case \"5.0\":\n        b = \"9.0\";\n        break;\n\n      case \"6.0\":\n        b = \"10.0\";\n        break;\n\n      case \"7.0\":\n        b = \"11.0\";\n    } else b = \"7.0\";\n  } else b = c[1];\n  return b;\n};\n\ngoog.reflect = {};\n\ngoog.reflect.object = function (a, b) {\n  return b;\n};\n\ngoog.reflect.objectProperty = function (a, b) {\n  return a;\n};\n\ngoog.reflect.sinkValue = function (a) {\n  goog.reflect.sinkValue[\" \"](a);\n  return a;\n};\n\ngoog.reflect.sinkValue[\" \"] = goog.nullFunction;\n\ngoog.reflect.canAccessProperty = function (a, b) {\n  try {\n    return goog.reflect.sinkValue(a[b]), !0;\n  } catch (c) {}\n\n  return !1;\n};\n\ngoog.reflect.cache = function (a, b, c, d) {\n  d = d ? d(b) : b;\n  return Object.prototype.hasOwnProperty.call(a, d) ? a[d] : a[d] = c(b);\n};\n\ngoog.labs.userAgent.engine = {};\n\ngoog.labs.userAgent.engine.isPresto = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Presto\");\n};\n\ngoog.labs.userAgent.engine.isTrident = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Trident\") || goog.labs.userAgent.util.matchUserAgent(\"MSIE\");\n};\n\ngoog.labs.userAgent.engine.isEdge = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Edge\");\n};\n\ngoog.labs.userAgent.engine.isWebKit = function () {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"WebKit\") && !goog.labs.userAgent.engine.isEdge();\n};\n\ngoog.labs.userAgent.engine.isGecko = function () {\n  return goog.labs.userAgent.util.matchUserAgent(\"Gecko\") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();\n};\n\ngoog.labs.userAgent.engine.getVersion = function () {\n  var a = goog.labs.userAgent.util.getUserAgent();\n\n  if (a) {\n    a = goog.labs.userAgent.util.extractVersionTuples(a);\n    var b = goog.labs.userAgent.engine.getEngineTuple_(a);\n    if (b) return \"Gecko\" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, \"Firefox\") : b[1];\n    a = a[0];\n    var c;\n    if (a && (c = a[2]) && (c = /Trident\\/([^\\s;]+)/.exec(c))) return c[1];\n  }\n\n  return \"\";\n};\n\ngoog.labs.userAgent.engine.getEngineTuple_ = function (a) {\n  if (!goog.labs.userAgent.engine.isEdge()) return a[1];\n\n  for (var b = 0; b < a.length; b++) {\n    var c = a[b];\n    if (\"Edge\" == c[0]) return c;\n  }\n};\n\ngoog.labs.userAgent.engine.isVersionOrHigher = function (a) {\n  return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a);\n};\n\ngoog.labs.userAgent.engine.getVersionForKey_ = function (a, b) {\n  return (a = goog.array.find(a, function (a) {\n    return b == a[0];\n  })) && a[1] || \"\";\n};\n\ngoog.userAgent = {};\ngoog.userAgent.ASSUME_IE = !1;\ngoog.userAgent.ASSUME_EDGE = !1;\ngoog.userAgent.ASSUME_GECKO = !1;\ngoog.userAgent.ASSUME_WEBKIT = !1;\ngoog.userAgent.ASSUME_MOBILE_WEBKIT = !1;\ngoog.userAgent.ASSUME_OPERA = !1;\ngoog.userAgent.ASSUME_ANY_VERSION = !1;\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;\n\ngoog.userAgent.getUserAgentString = function () {\n  return goog.labs.userAgent.util.getUserAgent();\n};\n\ngoog.userAgent.getNavigatorTyped = function () {\n  return goog.global.navigator || null;\n};\n\ngoog.userAgent.getNavigator = function () {\n  return goog.userAgent.getNavigatorTyped();\n};\n\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();\n\ngoog.userAgent.isMobile_ = function () {\n  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent(\"Mobile\");\n};\n\ngoog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\n\ngoog.userAgent.determinePlatform_ = function () {\n  var a = goog.userAgent.getNavigatorTyped();\n  return a && a.platform || \"\";\n};\n\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\ngoog.userAgent.ASSUME_MAC = !1;\ngoog.userAgent.ASSUME_WINDOWS = !1;\ngoog.userAgent.ASSUME_LINUX = !1;\ngoog.userAgent.ASSUME_X11 = !1;\ngoog.userAgent.ASSUME_ANDROID = !1;\ngoog.userAgent.ASSUME_IPHONE = !1;\ngoog.userAgent.ASSUME_IPAD = !1;\ngoog.userAgent.ASSUME_IPOD = !1;\ngoog.userAgent.ASSUME_KAIOS = !1;\ngoog.userAgent.ASSUME_GO2PHONE = !1;\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();\n\ngoog.userAgent.isLegacyLinux_ = function () {\n  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();\n};\n\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();\n\ngoog.userAgent.isX11_ = function () {\n  var a = goog.userAgent.getNavigatorTyped();\n  return !!a && goog.string.contains(a.appVersion || \"\", \"X11\");\n};\n\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();\ngoog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : goog.labs.userAgent.platform.isKaiOS();\ngoog.userAgent.GO2PHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_GO2PHONE : goog.labs.userAgent.platform.isGo2Phone();\n\ngoog.userAgent.determineVersion_ = function () {\n  var a = \"\",\n      b = goog.userAgent.getVersionRegexResult_();\n  b && (a = b ? b[1] : \"\");\n  return goog.userAgent.IE && (b = goog.userAgent.getDocumentMode_(), null != b && b > parseFloat(a)) ? String(b) : a;\n};\n\ngoog.userAgent.getVersionRegexResult_ = function () {\n  var a = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) return /rv:([^\\);]+)(\\)|;)/.exec(a);\n  if (goog.userAgent.EDGE) return /Edge\\/([\\d\\.]+)/.exec(a);\n  if (goog.userAgent.IE) return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);\n  if (goog.userAgent.WEBKIT) return /WebKit\\/(\\S+)/.exec(a);\n  if (goog.userAgent.OPERA) return /(?:Version)[ \\/]?(\\S+)/.exec(a);\n};\n\ngoog.userAgent.getDocumentMode_ = function () {\n  var a = goog.global.document;\n  return a ? a.documentMode : void 0;\n};\n\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\n\ngoog.userAgent.compare = function (a, b) {\n  return goog.string.compareVersions(a, b);\n};\n\ngoog.userAgent.isVersionOrHigherCache_ = {};\n\ngoog.userAgent.isVersionOrHigher = function (a) {\n  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, a, function () {\n    return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a);\n  });\n};\n\ngoog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;\n\ngoog.userAgent.isDocumentModeOrHigher = function (a) {\n  return Number(goog.userAgent.DOCUMENT_MODE) >= a;\n};\n\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\n\ngoog.userAgent.DOCUMENT_MODE = function () {\n  var a = goog.global.document,\n      b = goog.userAgent.getDocumentMode_();\n  if (a && goog.userAgent.IE) return b || (\"CSS1Compat\" == a.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5);\n}();\n\ngoog.userAgent.product = {};\ngoog.userAgent.product.ASSUME_FIREFOX = !1;\ngoog.userAgent.product.ASSUME_IPHONE = !1;\ngoog.userAgent.product.ASSUME_IPAD = !1;\ngoog.userAgent.product.ASSUME_ANDROID = !1;\ngoog.userAgent.product.ASSUME_CHROME = !1;\ngoog.userAgent.product.ASSUME_SAFARI = !1;\ngoog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;\ngoog.userAgent.product.OPERA = goog.userAgent.OPERA;\ngoog.userAgent.product.IE = goog.userAgent.IE;\ngoog.userAgent.product.EDGE = goog.userAgent.EDGE;\ngoog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();\n\ngoog.userAgent.product.isIphoneOrIpod_ = function () {\n  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();\n};\n\ngoog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();\ngoog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();\ngoog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();\ngoog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();\n\ngoog.userAgent.product.isSafariDesktop_ = function () {\n  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();\n};\n\ngoog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();\ngoog.crypt.base64 = {};\ngoog.crypt.base64.byteToCharMap_ = null;\ngoog.crypt.base64.charToByteMap_ = null;\ngoog.crypt.base64.byteToCharMapWebSafe_ = null;\ngoog.crypt.base64.ENCODED_VALS_BASE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\ngoog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + \"+/=\";\ngoog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + \"-_.\";\ngoog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;\ngoog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || \"function\" == typeof goog.global.btoa;\ngoog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && \"function\" == typeof goog.global.atob;\n\ngoog.crypt.base64.encodeByteArray = function (a, b) {\n  goog.asserts.assert(goog.isArrayLike(a), \"encodeByteArray takes an array as a parameter\");\n  goog.crypt.base64.init_();\n  b = b ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;\n\n  for (var c = [], d = 0; d < a.length; d += 3) {\n    var e = a[d],\n        f = d + 1 < a.length,\n        g = f ? a[d + 1] : 0,\n        h = d + 2 < a.length,\n        k = h ? a[d + 2] : 0,\n        l = e >> 2;\n    e = (e & 3) << 4 | g >> 4;\n    g = (g & 15) << 2 | k >> 6;\n    k &= 63;\n    h || (k = 64, f || (g = 64));\n    c.push(b[l], b[e], b[g], b[k]);\n  }\n\n  return c.join(\"\");\n};\n\ngoog.crypt.base64.encodeString = function (a, b) {\n  return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b ? goog.global.btoa(a) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a), b);\n};\n\ngoog.crypt.base64.decodeString = function (a, b) {\n  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b) return goog.global.atob(a);\n  var c = \"\";\n  goog.crypt.base64.decodeStringInternal_(a, function (a) {\n    c += String.fromCharCode(a);\n  });\n  return c;\n};\n\ngoog.crypt.base64.decodeStringToByteArray = function (a, b) {\n  var c = [];\n  goog.crypt.base64.decodeStringInternal_(a, function (a) {\n    c.push(a);\n  });\n  return c;\n};\n\ngoog.crypt.base64.decodeStringToUint8Array = function (a) {\n  goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher(\"10\"), \"Browser does not support typed arrays\");\n  var b = a.length,\n      c = 0;\n  \"=\" === a[b - 2] ? c = 2 : \"=\" === a[b - 1] && (c = 1);\n  var d = new Uint8Array(Math.ceil(3 * b / 4) - c),\n      e = 0;\n  goog.crypt.base64.decodeStringInternal_(a, function (a) {\n    d[e++] = a;\n  });\n  return d.subarray(0, e);\n};\n\ngoog.crypt.base64.decodeStringInternal_ = function (a, b) {\n  function c(b) {\n    for (; d < a.length;) {\n      var c = a.charAt(d++),\n          e = goog.crypt.base64.charToByteMap_[c];\n      if (null != e) return e;\n      if (!goog.string.isEmptyOrWhitespace(c)) throw Error(\"Unknown base64 encoding at char: \" + c);\n    }\n\n    return b;\n  }\n\n  goog.crypt.base64.init_();\n\n  for (var d = 0;;) {\n    var e = c(-1),\n        f = c(0),\n        g = c(64),\n        h = c(64);\n    if (64 === h && -1 === e) break;\n    b(e << 2 | f >> 4);\n    64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));\n  }\n};\n\ngoog.crypt.base64.init_ = function () {\n  if (!goog.crypt.base64.byteToCharMap_) {\n    goog.crypt.base64.byteToCharMap_ = {};\n    goog.crypt.base64.charToByteMap_ = {};\n    goog.crypt.base64.byteToCharMapWebSafe_ = {};\n\n    for (var a = 0; a < goog.crypt.base64.ENCODED_VALS.length; a++) goog.crypt.base64.byteToCharMap_[a] = goog.crypt.base64.ENCODED_VALS.charAt(a), goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]] = a, goog.crypt.base64.byteToCharMapWebSafe_[a] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a), a >= goog.crypt.base64.ENCODED_VALS_BASE.length && (goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)] = a);\n  }\n};\n\njspb.utils = {};\njspb.utils.split64Low = 0;\njspb.utils.split64High = 0;\n\njspb.utils.splitUint64 = function (a) {\n  var b = a >>> 0;\n  a = Math.floor((a - b) / jspb.BinaryConstants.TWO_TO_32) >>> 0;\n  jspb.utils.split64Low = b;\n  jspb.utils.split64High = a;\n};\n\njspb.utils.splitInt64 = function (a) {\n  var b = 0 > a;\n  a = Math.abs(a);\n  var c = a >>> 0;\n  a = Math.floor((a - c) / jspb.BinaryConstants.TWO_TO_32);\n  a >>>= 0;\n  b && (a = ~a >>> 0, c = (~c >>> 0) + 1, 4294967295 < c && (c = 0, a++, 4294967295 < a && (a = 0)));\n  jspb.utils.split64Low = c;\n  jspb.utils.split64High = a;\n};\n\njspb.utils.splitZigzag64 = function (a) {\n  var b = 0 > a;\n  a = 2 * Math.abs(a);\n  jspb.utils.splitUint64(a);\n  a = jspb.utils.split64Low;\n  var c = jspb.utils.split64High;\n  b && (0 == a ? 0 == c ? c = a = 4294967295 : (c--, a = 4294967295) : a--);\n  jspb.utils.split64Low = a;\n  jspb.utils.split64High = c;\n};\n\njspb.utils.splitFloat32 = function (a) {\n  var b = 0 > a ? 1 : 0;\n  a = b ? -a : a;\n  if (0 === a) 0 < 1 / a ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648);else if (isNaN(a)) jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647;else if (a > jspb.BinaryConstants.FLOAT32_MAX) jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | 2139095040) >>> 0;else if (a < jspb.BinaryConstants.FLOAT32_MIN) a = Math.round(a / Math.pow(2, -149)), jspb.utils.split64High = 0, jspb.utils.split64Low = (b << 31 | a) >>> 0;else {\n    var c = Math.floor(Math.log(a) / Math.LN2);\n    a *= Math.pow(2, -c);\n    a = Math.round(a * jspb.BinaryConstants.TWO_TO_23) & 8388607;\n    jspb.utils.split64High = 0;\n    jspb.utils.split64Low = (b << 31 | c + 127 << 23 | a) >>> 0;\n  }\n};\n\njspb.utils.splitFloat64 = function (a) {\n  var b = 0 > a ? 1 : 0;\n  a = b ? -a : a;\n  if (0 === a) jspb.utils.split64High = 0 < 1 / a ? 0 : 2147483648, jspb.utils.split64Low = 0;else if (isNaN(a)) jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295;else if (a > jspb.BinaryConstants.FLOAT64_MAX) jspb.utils.split64High = (b << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0;else if (a < jspb.BinaryConstants.FLOAT64_MIN) {\n    var c = a / Math.pow(2, -1074);\n    a = c / jspb.BinaryConstants.TWO_TO_32;\n    jspb.utils.split64High = (b << 31 | a) >>> 0;\n    jspb.utils.split64Low = c >>> 0;\n  } else {\n    var d = Math.floor(Math.log(a) / Math.LN2);\n    1024 == d && (d = 1023);\n    c = a * Math.pow(2, -d);\n    a = c * jspb.BinaryConstants.TWO_TO_20 & 1048575;\n    c = c * jspb.BinaryConstants.TWO_TO_52 >>> 0;\n    jspb.utils.split64High = (b << 31 | d + 1023 << 20 | a) >>> 0;\n    jspb.utils.split64Low = c;\n  }\n};\n\njspb.utils.splitHash64 = function (a) {\n  var b = a.charCodeAt(0),\n      c = a.charCodeAt(1),\n      d = a.charCodeAt(2),\n      e = a.charCodeAt(3),\n      f = a.charCodeAt(4),\n      g = a.charCodeAt(5),\n      h = a.charCodeAt(6);\n  a = a.charCodeAt(7);\n  jspb.utils.split64Low = b + (c << 8) + (d << 16) + (e << 24) >>> 0;\n  jspb.utils.split64High = f + (g << 8) + (h << 16) + (a << 24) >>> 0;\n};\n\njspb.utils.joinUint64 = function (a, b) {\n  return b * jspb.BinaryConstants.TWO_TO_32 + a;\n};\n\njspb.utils.joinInt64 = function (a, b) {\n  var c = b & 2147483648;\n  c && (a = ~a + 1 >>> 0, b = ~b >>> 0, 0 == a && (b = b + 1 >>> 0));\n  a = jspb.utils.joinUint64(a, b);\n  return c ? -a : a;\n};\n\njspb.utils.joinZigzag64 = function (a, b) {\n  var c = a & 1;\n  a = (a >>> 1 | b << 31) >>> 0;\n  b >>>= 1;\n  c && (a = a + 1 >>> 0, 0 == a && (b = b + 1 >>> 0));\n  a = jspb.utils.joinUint64(a, b);\n  return c ? -a : a;\n};\n\njspb.utils.joinFloat32 = function (a, b) {\n  b = 2 * (a >> 31) + 1;\n  var c = a >>> 23 & 255;\n  a &= 8388607;\n  return 255 == c ? a ? NaN : Infinity * b : 0 == c ? b * Math.pow(2, -149) * a : b * Math.pow(2, c - 150) * (a + Math.pow(2, 23));\n};\n\njspb.utils.joinFloat64 = function (a, b) {\n  var c = 2 * (b >> 31) + 1,\n      d = b >>> 20 & 2047;\n  a = jspb.BinaryConstants.TWO_TO_32 * (b & 1048575) + a;\n  return 2047 == d ? a ? NaN : Infinity * c : 0 == d ? c * Math.pow(2, -1074) * a : c * Math.pow(2, d - 1075) * (a + jspb.BinaryConstants.TWO_TO_52);\n};\n\njspb.utils.joinHash64 = function (a, b) {\n  return String.fromCharCode(a >>> 0 & 255, a >>> 8 & 255, a >>> 16 & 255, a >>> 24 & 255, b >>> 0 & 255, b >>> 8 & 255, b >>> 16 & 255, b >>> 24 & 255);\n};\n\njspb.utils.DIGITS = \"0123456789abcdef\".split(\"\");\n\njspb.utils.joinUnsignedDecimalString = function (a, b) {\n  function c(a) {\n    for (var b = 1E7, c = 0; 7 > c; c++) {\n      b /= 10;\n      var d = a / b % 10 >>> 0;\n      if (0 != d || f) f = !0, g += e[d];\n    }\n  }\n\n  if (2097151 >= b) return \"\" + (jspb.BinaryConstants.TWO_TO_32 * b + a);\n  var d = (a >>> 24 | b << 8) >>> 0 & 16777215;\n  b = b >> 16 & 65535;\n  a = (a & 16777215) + 6777216 * d + 6710656 * b;\n  d += 8147497 * b;\n  b *= 2;\n  1E7 <= a && (d += Math.floor(a / 1E7), a %= 1E7);\n  1E7 <= d && (b += Math.floor(d / 1E7), d %= 1E7);\n  var e = jspb.utils.DIGITS,\n      f = !1,\n      g = \"\";\n  (b || f) && c(b);\n  (d || f) && c(d);\n  (a || f) && c(a);\n  return g;\n};\n\njspb.utils.joinSignedDecimalString = function (a, b) {\n  var c = b & 2147483648;\n  c && (a = ~a + 1 >>> 0, b = ~b + (0 == a ? 1 : 0) >>> 0);\n  a = jspb.utils.joinUnsignedDecimalString(a, b);\n  return c ? \"-\" + a : a;\n};\n\njspb.utils.hash64ToDecimalString = function (a, b) {\n  jspb.utils.splitHash64(a);\n  a = jspb.utils.split64Low;\n  var c = jspb.utils.split64High;\n  return b ? jspb.utils.joinSignedDecimalString(a, c) : jspb.utils.joinUnsignedDecimalString(a, c);\n};\n\njspb.utils.hash64ArrayToDecimalStrings = function (a, b) {\n  for (var c = Array(a.length), d = 0; d < a.length; d++) c[d] = jspb.utils.hash64ToDecimalString(a[d], b);\n\n  return c;\n};\n\njspb.utils.decimalStringToHash64 = function (a) {\n  function b(a, b) {\n    for (var c = 0; 8 > c && (1 !== a || 0 < b); c++) b = a * e[c] + b, e[c] = b & 255, b >>>= 8;\n  }\n\n  function c() {\n    for (var a = 0; 8 > a; a++) e[a] = ~e[a] & 255;\n  }\n\n  goog.asserts.assert(0 < a.length);\n  var d = !1;\n  \"-\" === a[0] && (d = !0, a = a.slice(1));\n\n  for (var e = [0, 0, 0, 0, 0, 0, 0, 0], f = 0; f < a.length; f++) b(10, jspb.utils.DIGITS.indexOf(a[f]));\n\n  d && (c(), b(1, 1));\n  return goog.crypt.byteArrayToString(e);\n};\n\njspb.utils.splitDecimalString = function (a) {\n  jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));\n};\n\njspb.utils.hash64ToHexString = function (a) {\n  var b = Array(18);\n  b[0] = \"0\";\n  b[1] = \"x\";\n\n  for (var c = 0; 8 > c; c++) {\n    var d = a.charCodeAt(7 - c);\n    b[2 * c + 2] = jspb.utils.DIGITS[d >> 4];\n    b[2 * c + 3] = jspb.utils.DIGITS[d & 15];\n  }\n\n  return b.join(\"\");\n};\n\njspb.utils.hexStringToHash64 = function (a) {\n  a = a.toLowerCase();\n  goog.asserts.assert(18 == a.length);\n  goog.asserts.assert(\"0\" == a[0]);\n  goog.asserts.assert(\"x\" == a[1]);\n\n  for (var b = \"\", c = 0; 8 > c; c++) {\n    var d = jspb.utils.DIGITS.indexOf(a[2 * c + 2]),\n        e = jspb.utils.DIGITS.indexOf(a[2 * c + 3]);\n    b = String.fromCharCode(16 * d + e) + b;\n  }\n\n  return b;\n};\n\njspb.utils.hash64ToNumber = function (a, b) {\n  jspb.utils.splitHash64(a);\n  a = jspb.utils.split64Low;\n  var c = jspb.utils.split64High;\n  return b ? jspb.utils.joinInt64(a, c) : jspb.utils.joinUint64(a, c);\n};\n\njspb.utils.numberToHash64 = function (a) {\n  jspb.utils.splitInt64(a);\n  return jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High);\n};\n\njspb.utils.countVarints = function (a, b, c) {\n  for (var d = 0, e = b; e < c; e++) d += a[e] >> 7;\n\n  return c - b - d;\n};\n\njspb.utils.countVarintFields = function (a, b, c, d) {\n  var e = 0;\n  d = 8 * d + jspb.BinaryConstants.WireType.VARINT;\n  if (128 > d) for (; b < c && a[b++] == d;) for (e++;;) {\n    var f = a[b++];\n    if (0 == (f & 128)) break;\n  } else for (; b < c;) {\n    for (f = d; 128 < f;) {\n      if (a[b] != (f & 127 | 128)) return e;\n      b++;\n      f >>= 7;\n    }\n\n    if (a[b++] != f) break;\n\n    for (e++; f = a[b++], 0 != (f & 128););\n  }\n  return e;\n};\n\njspb.utils.countFixedFields_ = function (a, b, c, d, e) {\n  var f = 0;\n  if (128 > d) for (; b < c && a[b++] == d;) f++, b += e;else for (; b < c;) {\n    for (var g = d; 128 < g;) {\n      if (a[b++] != (g & 127 | 128)) return f;\n      g >>= 7;\n    }\n\n    if (a[b++] != g) break;\n    f++;\n    b += e;\n  }\n  return f;\n};\n\njspb.utils.countFixed32Fields = function (a, b, c, d) {\n  return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED32, 4);\n};\n\njspb.utils.countFixed64Fields = function (a, b, c, d) {\n  return jspb.utils.countFixedFields_(a, b, c, 8 * d + jspb.BinaryConstants.WireType.FIXED64, 8);\n};\n\njspb.utils.countDelimitedFields = function (a, b, c, d) {\n  var e = 0;\n\n  for (d = 8 * d + jspb.BinaryConstants.WireType.DELIMITED; b < c;) {\n    for (var f = d; 128 < f;) {\n      if (a[b++] != (f & 127 | 128)) return e;\n      f >>= 7;\n    }\n\n    if (a[b++] != f) break;\n    e++;\n\n    for (var g = 0, h = 1; f = a[b++], g += (f & 127) * h, h *= 128, 0 != (f & 128););\n\n    b += g;\n  }\n\n  return e;\n};\n\njspb.utils.debugBytesToTextFormat = function (a) {\n  var b = '\"';\n\n  if (a) {\n    a = jspb.utils.byteSourceToUint8Array(a);\n\n    for (var c = 0; c < a.length; c++) b += \"\\\\x\", 16 > a[c] && (b += \"0\"), b += a[c].toString(16);\n  }\n\n  return b + '\"';\n};\n\njspb.utils.debugScalarToTextFormat = function (a) {\n  return goog.isString(a) ? goog.string.quote(a) : a.toString();\n};\n\njspb.utils.stringToByteArray = function (a) {\n  for (var b = new Uint8Array(a.length), c = 0; c < a.length; c++) {\n    var d = a.charCodeAt(c);\n    if (255 < d) throw Error(\"Conversion error: string contains codepoint outside of byte range\");\n    b[c] = d;\n  }\n\n  return b;\n};\n\njspb.utils.byteSourceToUint8Array = function (a) {\n  if (a.constructor === Uint8Array) return a;\n  if (a.constructor === ArrayBuffer || \"undefined\" != typeof Buffer && a.constructor === Buffer || a.constructor === Array) return new Uint8Array(a);\n  if (a.constructor === String) return goog.crypt.base64.decodeStringToUint8Array(a);\n  goog.asserts.fail(\"Type not convertible to Uint8Array.\");\n  return new Uint8Array(0);\n};\n\njspb.BinaryIterator = function (a, b, c) {\n  this.elements_ = this.nextMethod_ = this.decoder_ = null;\n  this.cursor_ = 0;\n  this.nextValue_ = null;\n  this.atEnd_ = !0;\n  this.init_(a, b, c);\n};\n\njspb.BinaryIterator.prototype.init_ = function (a, b, c) {\n  a && b && (this.decoder_ = a, this.nextMethod_ = b);\n  this.elements_ = c || null;\n  this.cursor_ = 0;\n  this.nextValue_ = null;\n  this.atEnd_ = !this.decoder_ && !this.elements_;\n  this.next();\n};\n\njspb.BinaryIterator.instanceCache_ = [];\n\njspb.BinaryIterator.alloc = function (a, b, c) {\n  if (jspb.BinaryIterator.instanceCache_.length) {\n    var d = jspb.BinaryIterator.instanceCache_.pop();\n    d.init_(a, b, c);\n    return d;\n  }\n\n  return new jspb.BinaryIterator(a, b, c);\n};\n\njspb.BinaryIterator.prototype.free = function () {\n  this.clear();\n  100 > jspb.BinaryIterator.instanceCache_.length && jspb.BinaryIterator.instanceCache_.push(this);\n};\n\njspb.BinaryIterator.prototype.clear = function () {\n  this.decoder_ && this.decoder_.free();\n  this.elements_ = this.nextMethod_ = this.decoder_ = null;\n  this.cursor_ = 0;\n  this.nextValue_ = null;\n  this.atEnd_ = !0;\n};\n\njspb.BinaryIterator.prototype.get = function () {\n  return this.nextValue_;\n};\n\njspb.BinaryIterator.prototype.atEnd = function () {\n  return this.atEnd_;\n};\n\njspb.BinaryIterator.prototype.next = function () {\n  var a = this.nextValue_;\n  this.decoder_ ? this.decoder_.atEnd() ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.nextMethod_.call(this.decoder_) : this.elements_ && (this.cursor_ == this.elements_.length ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.elements_[this.cursor_++]);\n  return a;\n};\n\njspb.BinaryDecoder = function (a, b, c) {\n  this.bytes_ = null;\n  this.tempHigh_ = this.tempLow_ = this.cursor_ = this.end_ = this.start_ = 0;\n  this.error_ = !1;\n  a && this.setBlock(a, b, c);\n};\n\njspb.BinaryDecoder.instanceCache_ = [];\n\njspb.BinaryDecoder.alloc = function (a, b, c) {\n  if (jspb.BinaryDecoder.instanceCache_.length) {\n    var d = jspb.BinaryDecoder.instanceCache_.pop();\n    a && d.setBlock(a, b, c);\n    return d;\n  }\n\n  return new jspb.BinaryDecoder(a, b, c);\n};\n\njspb.BinaryDecoder.prototype.free = function () {\n  this.clear();\n  100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this);\n};\n\njspb.BinaryDecoder.prototype.clone = function () {\n  return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_);\n};\n\njspb.BinaryDecoder.prototype.clear = function () {\n  this.bytes_ = null;\n  this.cursor_ = this.end_ = this.start_ = 0;\n  this.error_ = !1;\n};\n\njspb.BinaryDecoder.prototype.getBuffer = function () {\n  return this.bytes_;\n};\n\njspb.BinaryDecoder.prototype.setBlock = function (a, b, c) {\n  this.bytes_ = jspb.utils.byteSourceToUint8Array(a);\n  this.start_ = goog.isDef(b) ? b : 0;\n  this.end_ = goog.isDef(c) ? this.start_ + c : this.bytes_.length;\n  this.cursor_ = this.start_;\n};\n\njspb.BinaryDecoder.prototype.getEnd = function () {\n  return this.end_;\n};\n\njspb.BinaryDecoder.prototype.setEnd = function (a) {\n  this.end_ = a;\n};\n\njspb.BinaryDecoder.prototype.reset = function () {\n  this.cursor_ = this.start_;\n};\n\njspb.BinaryDecoder.prototype.getCursor = function () {\n  return this.cursor_;\n};\n\njspb.BinaryDecoder.prototype.setCursor = function (a) {\n  this.cursor_ = a;\n};\n\njspb.BinaryDecoder.prototype.advance = function (a) {\n  this.cursor_ += a;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n};\n\njspb.BinaryDecoder.prototype.atEnd = function () {\n  return this.cursor_ == this.end_;\n};\n\njspb.BinaryDecoder.prototype.pastEnd = function () {\n  return this.cursor_ > this.end_;\n};\n\njspb.BinaryDecoder.prototype.getError = function () {\n  return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_;\n};\n\njspb.BinaryDecoder.prototype.readSplitVarint64_ = function () {\n  for (var a, b = 0, c, d = 0; 4 > d; d++) if (a = this.bytes_[this.cursor_++], b |= (a & 127) << 7 * d, 128 > a) {\n    this.tempLow_ = b >>> 0;\n    this.tempHigh_ = 0;\n    return;\n  }\n\n  a = this.bytes_[this.cursor_++];\n  b |= (a & 127) << 28;\n  c = 0 | (a & 127) >> 4;\n  if (128 > a) this.tempLow_ = b >>> 0, this.tempHigh_ = c >>> 0;else {\n    for (d = 0; 5 > d; d++) if (a = this.bytes_[this.cursor_++], c |= (a & 127) << 7 * d + 3, 128 > a) {\n      this.tempLow_ = b >>> 0;\n      this.tempHigh_ = c >>> 0;\n      return;\n    }\n\n    goog.asserts.fail(\"Failed to read varint, encoding is invalid.\");\n    this.error_ = !0;\n  }\n};\n\njspb.BinaryDecoder.prototype.skipVarint = function () {\n  for (; this.bytes_[this.cursor_] & 128;) this.cursor_++;\n\n  this.cursor_++;\n};\n\njspb.BinaryDecoder.prototype.unskipVarint = function (a) {\n  for (; 128 < a;) this.cursor_--, a >>>= 7;\n\n  this.cursor_--;\n};\n\njspb.BinaryDecoder.prototype.readUnsignedVarint32 = function () {\n  var a = this.bytes_;\n  var b = a[this.cursor_ + 0];\n  var c = b & 127;\n  if (128 > b) return this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), c;\n  b = a[this.cursor_ + 1];\n  c |= (b & 127) << 7;\n  if (128 > b) return this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), c;\n  b = a[this.cursor_ + 2];\n  c |= (b & 127) << 14;\n  if (128 > b) return this.cursor_ += 3, goog.asserts.assert(this.cursor_ <= this.end_), c;\n  b = a[this.cursor_ + 3];\n  c |= (b & 127) << 21;\n  if (128 > b) return this.cursor_ += 4, goog.asserts.assert(this.cursor_ <= this.end_), c;\n  b = a[this.cursor_ + 4];\n  c |= (b & 15) << 28;\n  if (128 > b) return this.cursor_ += 5, goog.asserts.assert(this.cursor_ <= this.end_), c >>> 0;\n  this.cursor_ += 5;\n  128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && 128 <= a[this.cursor_++] && goog.asserts.assert(!1);\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return c;\n};\n\njspb.BinaryDecoder.prototype.readSignedVarint32 = jspb.BinaryDecoder.prototype.readUnsignedVarint32;\n\njspb.BinaryDecoder.prototype.readUnsignedVarint32String = function () {\n  return this.readUnsignedVarint32().toString();\n};\n\njspb.BinaryDecoder.prototype.readSignedVarint32String = function () {\n  return this.readSignedVarint32().toString();\n};\n\njspb.BinaryDecoder.prototype.readZigzagVarint32 = function () {\n  var a = this.readUnsignedVarint32();\n  return a >>> 1 ^ -(a & 1);\n};\n\njspb.BinaryDecoder.prototype.readUnsignedVarint64 = function () {\n  this.readSplitVarint64_();\n  return jspb.utils.joinUint64(this.tempLow_, this.tempHigh_);\n};\n\njspb.BinaryDecoder.prototype.readUnsignedVarint64String = function () {\n  this.readSplitVarint64_();\n  return jspb.utils.joinUnsignedDecimalString(this.tempLow_, this.tempHigh_);\n};\n\njspb.BinaryDecoder.prototype.readSignedVarint64 = function () {\n  this.readSplitVarint64_();\n  return jspb.utils.joinInt64(this.tempLow_, this.tempHigh_);\n};\n\njspb.BinaryDecoder.prototype.readSignedVarint64String = function () {\n  this.readSplitVarint64_();\n  return jspb.utils.joinSignedDecimalString(this.tempLow_, this.tempHigh_);\n};\n\njspb.BinaryDecoder.prototype.readZigzagVarint64 = function () {\n  this.readSplitVarint64_();\n  return jspb.utils.joinZigzag64(this.tempLow_, this.tempHigh_);\n};\n\njspb.BinaryDecoder.prototype.readZigzagVarint64String = function () {\n  return this.readZigzagVarint64().toString();\n};\n\njspb.BinaryDecoder.prototype.readUint8 = function () {\n  var a = this.bytes_[this.cursor_ + 0];\n  this.cursor_ += 1;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return a;\n};\n\njspb.BinaryDecoder.prototype.readUint16 = function () {\n  var a = this.bytes_[this.cursor_ + 0],\n      b = this.bytes_[this.cursor_ + 1];\n  this.cursor_ += 2;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return a << 0 | b << 8;\n};\n\njspb.BinaryDecoder.prototype.readUint32 = function () {\n  var a = this.bytes_[this.cursor_ + 0],\n      b = this.bytes_[this.cursor_ + 1],\n      c = this.bytes_[this.cursor_ + 2],\n      d = this.bytes_[this.cursor_ + 3];\n  this.cursor_ += 4;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return (a << 0 | b << 8 | c << 16 | d << 24) >>> 0;\n};\n\njspb.BinaryDecoder.prototype.readUint64 = function () {\n  var a = this.readUint32(),\n      b = this.readUint32();\n  return jspb.utils.joinUint64(a, b);\n};\n\njspb.BinaryDecoder.prototype.readUint64String = function () {\n  var a = this.readUint32(),\n      b = this.readUint32();\n  return jspb.utils.joinUnsignedDecimalString(a, b);\n};\n\njspb.BinaryDecoder.prototype.readInt8 = function () {\n  var a = this.bytes_[this.cursor_ + 0];\n  this.cursor_ += 1;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return a << 24 >> 24;\n};\n\njspb.BinaryDecoder.prototype.readInt16 = function () {\n  var a = this.bytes_[this.cursor_ + 0],\n      b = this.bytes_[this.cursor_ + 1];\n  this.cursor_ += 2;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return (a << 0 | b << 8) << 16 >> 16;\n};\n\njspb.BinaryDecoder.prototype.readInt32 = function () {\n  var a = this.bytes_[this.cursor_ + 0],\n      b = this.bytes_[this.cursor_ + 1],\n      c = this.bytes_[this.cursor_ + 2],\n      d = this.bytes_[this.cursor_ + 3];\n  this.cursor_ += 4;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return a << 0 | b << 8 | c << 16 | d << 24;\n};\n\njspb.BinaryDecoder.prototype.readInt64 = function () {\n  var a = this.readUint32(),\n      b = this.readUint32();\n  return jspb.utils.joinInt64(a, b);\n};\n\njspb.BinaryDecoder.prototype.readInt64String = function () {\n  var a = this.readUint32(),\n      b = this.readUint32();\n  return jspb.utils.joinSignedDecimalString(a, b);\n};\n\njspb.BinaryDecoder.prototype.readFloat = function () {\n  var a = this.readUint32();\n  return jspb.utils.joinFloat32(a, 0);\n};\n\njspb.BinaryDecoder.prototype.readDouble = function () {\n  var a = this.readUint32(),\n      b = this.readUint32();\n  return jspb.utils.joinFloat64(a, b);\n};\n\njspb.BinaryDecoder.prototype.readBool = function () {\n  return !!this.bytes_[this.cursor_++];\n};\n\njspb.BinaryDecoder.prototype.readEnum = function () {\n  return this.readSignedVarint32();\n};\n\njspb.BinaryDecoder.prototype.readString = function (a) {\n  var b = this.bytes_,\n      c = this.cursor_;\n  a = c + a;\n\n  for (var d = [], e = \"\"; c < a;) {\n    var f = b[c++];\n    if (128 > f) d.push(f);else if (192 > f) continue;else if (224 > f) {\n      var g = b[c++];\n      d.push((f & 31) << 6 | g & 63);\n    } else if (240 > f) {\n      g = b[c++];\n      var h = b[c++];\n      d.push((f & 15) << 12 | (g & 63) << 6 | h & 63);\n    } else if (248 > f) {\n      g = b[c++];\n      h = b[c++];\n      var k = b[c++];\n      f = (f & 7) << 18 | (g & 63) << 12 | (h & 63) << 6 | k & 63;\n      f -= 65536;\n      d.push((f >> 10 & 1023) + 55296, (f & 1023) + 56320);\n    }\n    8192 <= d.length && (e += String.fromCharCode.apply(null, d), d.length = 0);\n  }\n\n  e += goog.crypt.byteArrayToString(d);\n  this.cursor_ = c;\n  return e;\n};\n\njspb.BinaryDecoder.prototype.readStringWithLength = function () {\n  var a = this.readUnsignedVarint32();\n  return this.readString(a);\n};\n\njspb.BinaryDecoder.prototype.readBytes = function (a) {\n  if (0 > a || this.cursor_ + a > this.bytes_.length) return this.error_ = !0, goog.asserts.fail(\"Invalid byte length!\"), new Uint8Array(0);\n  var b = this.bytes_.subarray(this.cursor_, this.cursor_ + a);\n  this.cursor_ += a;\n  goog.asserts.assert(this.cursor_ <= this.end_);\n  return b;\n};\n\njspb.BinaryDecoder.prototype.readVarintHash64 = function () {\n  this.readSplitVarint64_();\n  return jspb.utils.joinHash64(this.tempLow_, this.tempHigh_);\n};\n\njspb.BinaryDecoder.prototype.readFixedHash64 = function () {\n  var a = this.bytes_,\n      b = this.cursor_,\n      c = a[b + 0],\n      d = a[b + 1],\n      e = a[b + 2],\n      f = a[b + 3],\n      g = a[b + 4],\n      h = a[b + 5],\n      k = a[b + 6];\n  a = a[b + 7];\n  this.cursor_ += 8;\n  return String.fromCharCode(c, d, e, f, g, h, k, a);\n};\n\njspb.BinaryReader = function (a, b, c) {\n  this.decoder_ = jspb.BinaryDecoder.alloc(a, b, c);\n  this.fieldCursor_ = this.decoder_.getCursor();\n  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\n  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\n  this.error_ = !1;\n  this.readCallbacks_ = null;\n};\n\njspb.BinaryReader.instanceCache_ = [];\n\njspb.BinaryReader.alloc = function (a, b, c) {\n  if (jspb.BinaryReader.instanceCache_.length) {\n    var d = jspb.BinaryReader.instanceCache_.pop();\n    a && d.decoder_.setBlock(a, b, c);\n    return d;\n  }\n\n  return new jspb.BinaryReader(a, b, c);\n};\n\njspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc;\n\njspb.BinaryReader.prototype.free = function () {\n  this.decoder_.clear();\n  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\n  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\n  this.error_ = !1;\n  this.readCallbacks_ = null;\n  100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this);\n};\n\njspb.BinaryReader.prototype.getFieldCursor = function () {\n  return this.fieldCursor_;\n};\n\njspb.BinaryReader.prototype.getCursor = function () {\n  return this.decoder_.getCursor();\n};\n\njspb.BinaryReader.prototype.getBuffer = function () {\n  return this.decoder_.getBuffer();\n};\n\njspb.BinaryReader.prototype.getFieldNumber = function () {\n  return this.nextField_;\n};\n\njspb.BinaryReader.prototype.getWireType = function () {\n  return this.nextWireType_;\n};\n\njspb.BinaryReader.prototype.isEndGroup = function () {\n  return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP;\n};\n\njspb.BinaryReader.prototype.getError = function () {\n  return this.error_ || this.decoder_.getError();\n};\n\njspb.BinaryReader.prototype.setBlock = function (a, b, c) {\n  this.decoder_.setBlock(a, b, c);\n  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\n  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\n};\n\njspb.BinaryReader.prototype.reset = function () {\n  this.decoder_.reset();\n  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;\n  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;\n};\n\njspb.BinaryReader.prototype.advance = function (a) {\n  this.decoder_.advance(a);\n};\n\njspb.BinaryReader.prototype.nextField = function () {\n  if (this.decoder_.atEnd()) return !1;\n  if (this.getError()) return goog.asserts.fail(\"Decoder hit an error\"), !1;\n  this.fieldCursor_ = this.decoder_.getCursor();\n  var a = this.decoder_.readUnsignedVarint32(),\n      b = a >>> 3;\n  a &= 7;\n  if (a != jspb.BinaryConstants.WireType.VARINT && a != jspb.BinaryConstants.WireType.FIXED32 && a != jspb.BinaryConstants.WireType.FIXED64 && a != jspb.BinaryConstants.WireType.DELIMITED && a != jspb.BinaryConstants.WireType.START_GROUP && a != jspb.BinaryConstants.WireType.END_GROUP) return goog.asserts.fail(\"Invalid wire type: %s (at position %s)\", a, this.fieldCursor_), this.error_ = !0, !1;\n  this.nextField_ = b;\n  this.nextWireType_ = a;\n  return !0;\n};\n\njspb.BinaryReader.prototype.unskipHeader = function () {\n  this.decoder_.unskipVarint(this.nextField_ << 3 | this.nextWireType_);\n};\n\njspb.BinaryReader.prototype.skipMatchingFields = function () {\n  var a = this.nextField_;\n\n  for (this.unskipHeader(); this.nextField() && this.getFieldNumber() == a;) this.skipField();\n\n  this.decoder_.atEnd() || this.unskipHeader();\n};\n\njspb.BinaryReader.prototype.skipVarintField = function () {\n  this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (goog.asserts.fail(\"Invalid wire type for skipVarintField\"), this.skipField()) : this.decoder_.skipVarint();\n};\n\njspb.BinaryReader.prototype.skipDelimitedField = function () {\n  if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED) goog.asserts.fail(\"Invalid wire type for skipDelimitedField\"), this.skipField();else {\n    var a = this.decoder_.readUnsignedVarint32();\n    this.decoder_.advance(a);\n  }\n};\n\njspb.BinaryReader.prototype.skipFixed32Field = function () {\n  this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (goog.asserts.fail(\"Invalid wire type for skipFixed32Field\"), this.skipField()) : this.decoder_.advance(4);\n};\n\njspb.BinaryReader.prototype.skipFixed64Field = function () {\n  this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (goog.asserts.fail(\"Invalid wire type for skipFixed64Field\"), this.skipField()) : this.decoder_.advance(8);\n};\n\njspb.BinaryReader.prototype.skipGroup = function () {\n  var a = this.nextField_;\n\n  do {\n    if (!this.nextField()) {\n      goog.asserts.fail(\"Unmatched start-group tag: stream EOF\");\n      this.error_ = !0;\n      break;\n    }\n\n    if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP) {\n      this.nextField_ != a && (goog.asserts.fail(\"Unmatched end-group tag\"), this.error_ = !0);\n      break;\n    }\n\n    this.skipField();\n  } while (1);\n};\n\njspb.BinaryReader.prototype.skipField = function () {\n  switch (this.nextWireType_) {\n    case jspb.BinaryConstants.WireType.VARINT:\n      this.skipVarintField();\n      break;\n\n    case jspb.BinaryConstants.WireType.FIXED64:\n      this.skipFixed64Field();\n      break;\n\n    case jspb.BinaryConstants.WireType.DELIMITED:\n      this.skipDelimitedField();\n      break;\n\n    case jspb.BinaryConstants.WireType.FIXED32:\n      this.skipFixed32Field();\n      break;\n\n    case jspb.BinaryConstants.WireType.START_GROUP:\n      this.skipGroup();\n      break;\n\n    default:\n      goog.asserts.fail(\"Invalid wire encoding for field.\");\n  }\n};\n\njspb.BinaryReader.prototype.registerReadCallback = function (a, b) {\n  goog.isNull(this.readCallbacks_) && (this.readCallbacks_ = {});\n  goog.asserts.assert(!this.readCallbacks_[a]);\n  this.readCallbacks_[a] = b;\n};\n\njspb.BinaryReader.prototype.runReadCallback = function (a) {\n  goog.asserts.assert(!goog.isNull(this.readCallbacks_));\n  a = this.readCallbacks_[a];\n  goog.asserts.assert(a);\n  return a(this);\n};\n\njspb.BinaryReader.prototype.readAny = function (a) {\n  this.nextWireType_ = jspb.BinaryConstants.FieldTypeToWireType(a);\n  var b = jspb.BinaryConstants.FieldType;\n\n  switch (a) {\n    case b.DOUBLE:\n      return this.readDouble();\n\n    case b.FLOAT:\n      return this.readFloat();\n\n    case b.INT64:\n      return this.readInt64();\n\n    case b.UINT64:\n      return this.readUint64();\n\n    case b.INT32:\n      return this.readInt32();\n\n    case b.FIXED64:\n      return this.readFixed64();\n\n    case b.FIXED32:\n      return this.readFixed32();\n\n    case b.BOOL:\n      return this.readBool();\n\n    case b.STRING:\n      return this.readString();\n\n    case b.GROUP:\n      goog.asserts.fail(\"Group field type not supported in readAny()\");\n\n    case b.MESSAGE:\n      goog.asserts.fail(\"Message field type not supported in readAny()\");\n\n    case b.BYTES:\n      return this.readBytes();\n\n    case b.UINT32:\n      return this.readUint32();\n\n    case b.ENUM:\n      return this.readEnum();\n\n    case b.SFIXED32:\n      return this.readSfixed32();\n\n    case b.SFIXED64:\n      return this.readSfixed64();\n\n    case b.SINT32:\n      return this.readSint32();\n\n    case b.SINT64:\n      return this.readSint64();\n\n    case b.FHASH64:\n      return this.readFixedHash64();\n\n    case b.VHASH64:\n      return this.readVarintHash64();\n\n    default:\n      goog.asserts.fail(\"Invalid field type in readAny()\");\n  }\n\n  return 0;\n};\n\njspb.BinaryReader.prototype.readMessage = function (a, b) {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\n  var c = this.decoder_.getEnd(),\n      d = this.decoder_.readUnsignedVarint32();\n  d = this.decoder_.getCursor() + d;\n  this.decoder_.setEnd(d);\n  b(a, this);\n  this.decoder_.setCursor(d);\n  this.decoder_.setEnd(c);\n};\n\njspb.BinaryReader.prototype.readGroup = function (a, b, c) {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP);\n  goog.asserts.assert(this.nextField_ == a);\n  c(b, this);\n  this.error_ || this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP || (goog.asserts.fail(\"Group submessage did not end with an END_GROUP tag\"), this.error_ = !0);\n};\n\njspb.BinaryReader.prototype.getFieldDecoder = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\n  var a = this.decoder_.readUnsignedVarint32(),\n      b = this.decoder_.getCursor(),\n      c = b + a;\n  a = jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(), b, a);\n  this.decoder_.setCursor(c);\n  return a;\n};\n\njspb.BinaryReader.prototype.readInt32 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readSignedVarint32();\n};\n\njspb.BinaryReader.prototype.readInt32String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readSignedVarint32String();\n};\n\njspb.BinaryReader.prototype.readInt64 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readSignedVarint64();\n};\n\njspb.BinaryReader.prototype.readInt64String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readSignedVarint64String();\n};\n\njspb.BinaryReader.prototype.readUint32 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readUnsignedVarint32();\n};\n\njspb.BinaryReader.prototype.readUint32String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readUnsignedVarint32String();\n};\n\njspb.BinaryReader.prototype.readUint64 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readUnsignedVarint64();\n};\n\njspb.BinaryReader.prototype.readUint64String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readUnsignedVarint64String();\n};\n\njspb.BinaryReader.prototype.readSint32 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readZigzagVarint32();\n};\n\njspb.BinaryReader.prototype.readSint64 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readZigzagVarint64();\n};\n\njspb.BinaryReader.prototype.readSint64String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readZigzagVarint64String();\n};\n\njspb.BinaryReader.prototype.readFixed32 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\n  return this.decoder_.readUint32();\n};\n\njspb.BinaryReader.prototype.readFixed64 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\n  return this.decoder_.readUint64();\n};\n\njspb.BinaryReader.prototype.readFixed64String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\n  return this.decoder_.readUint64String();\n};\n\njspb.BinaryReader.prototype.readSfixed32 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\n  return this.decoder_.readInt32();\n};\n\njspb.BinaryReader.prototype.readSfixed32String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\n  return this.decoder_.readInt32().toString();\n};\n\njspb.BinaryReader.prototype.readSfixed64 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\n  return this.decoder_.readInt64();\n};\n\njspb.BinaryReader.prototype.readSfixed64String = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\n  return this.decoder_.readInt64String();\n};\n\njspb.BinaryReader.prototype.readFloat = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED32);\n  return this.decoder_.readFloat();\n};\n\njspb.BinaryReader.prototype.readDouble = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\n  return this.decoder_.readDouble();\n};\n\njspb.BinaryReader.prototype.readBool = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return !!this.decoder_.readUnsignedVarint32();\n};\n\njspb.BinaryReader.prototype.readEnum = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readSignedVarint64();\n};\n\njspb.BinaryReader.prototype.readString = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\n  var a = this.decoder_.readUnsignedVarint32();\n  return this.decoder_.readString(a);\n};\n\njspb.BinaryReader.prototype.readBytes = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\n  var a = this.decoder_.readUnsignedVarint32();\n  return this.decoder_.readBytes(a);\n};\n\njspb.BinaryReader.prototype.readVarintHash64 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);\n  return this.decoder_.readVarintHash64();\n};\n\njspb.BinaryReader.prototype.readFixedHash64 = function () {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.FIXED64);\n  return this.decoder_.readFixedHash64();\n};\n\njspb.BinaryReader.prototype.readPackedField_ = function (a) {\n  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);\n  var b = this.decoder_.readUnsignedVarint32();\n  b = this.decoder_.getCursor() + b;\n\n  for (var c = []; this.decoder_.getCursor() < b;) c.push(a.call(this.decoder_));\n\n  return c;\n};\n\njspb.BinaryReader.prototype.readPackedInt32 = function () {\n  return this.readPackedField_(this.decoder_.readSignedVarint32);\n};\n\njspb.BinaryReader.prototype.readPackedInt32String = function () {\n  return this.readPackedField_(this.decoder_.readSignedVarint32String);\n};\n\njspb.BinaryReader.prototype.readPackedInt64 = function () {\n  return this.readPackedField_(this.decoder_.readSignedVarint64);\n};\n\njspb.BinaryReader.prototype.readPackedInt64String = function () {\n  return this.readPackedField_(this.decoder_.readSignedVarint64String);\n};\n\njspb.BinaryReader.prototype.readPackedUint32 = function () {\n  return this.readPackedField_(this.decoder_.readUnsignedVarint32);\n};\n\njspb.BinaryReader.prototype.readPackedUint32String = function () {\n  return this.readPackedField_(this.decoder_.readUnsignedVarint32String);\n};\n\njspb.BinaryReader.prototype.readPackedUint64 = function () {\n  return this.readPackedField_(this.decoder_.readUnsignedVarint64);\n};\n\njspb.BinaryReader.prototype.readPackedUint64String = function () {\n  return this.readPackedField_(this.decoder_.readUnsignedVarint64String);\n};\n\njspb.BinaryReader.prototype.readPackedSint32 = function () {\n  return this.readPackedField_(this.decoder_.readZigzagVarint32);\n};\n\njspb.BinaryReader.prototype.readPackedSint64 = function () {\n  return this.readPackedField_(this.decoder_.readZigzagVarint64);\n};\n\njspb.BinaryReader.prototype.readPackedSint64String = function () {\n  return this.readPackedField_(this.decoder_.readZigzagVarint64String);\n};\n\njspb.BinaryReader.prototype.readPackedFixed32 = function () {\n  return this.readPackedField_(this.decoder_.readUint32);\n};\n\njspb.BinaryReader.prototype.readPackedFixed64 = function () {\n  return this.readPackedField_(this.decoder_.readUint64);\n};\n\njspb.BinaryReader.prototype.readPackedFixed64String = function () {\n  return this.readPackedField_(this.decoder_.readUint64String);\n};\n\njspb.BinaryReader.prototype.readPackedSfixed32 = function () {\n  return this.readPackedField_(this.decoder_.readInt32);\n};\n\njspb.BinaryReader.prototype.readPackedSfixed64 = function () {\n  return this.readPackedField_(this.decoder_.readInt64);\n};\n\njspb.BinaryReader.prototype.readPackedSfixed64String = function () {\n  return this.readPackedField_(this.decoder_.readInt64String);\n};\n\njspb.BinaryReader.prototype.readPackedFloat = function () {\n  return this.readPackedField_(this.decoder_.readFloat);\n};\n\njspb.BinaryReader.prototype.readPackedDouble = function () {\n  return this.readPackedField_(this.decoder_.readDouble);\n};\n\njspb.BinaryReader.prototype.readPackedBool = function () {\n  return this.readPackedField_(this.decoder_.readBool);\n};\n\njspb.BinaryReader.prototype.readPackedEnum = function () {\n  return this.readPackedField_(this.decoder_.readEnum);\n};\n\njspb.BinaryReader.prototype.readPackedVarintHash64 = function () {\n  return this.readPackedField_(this.decoder_.readVarintHash64);\n};\n\njspb.BinaryReader.prototype.readPackedFixedHash64 = function () {\n  return this.readPackedField_(this.decoder_.readFixedHash64);\n};\n\njspb.Map = function (a, b) {\n  this.arr_ = a;\n  this.valueCtor_ = b;\n  this.map_ = {};\n  this.arrClean = !0;\n  0 < this.arr_.length && this.loadFromArray_();\n};\n\njspb.Map.prototype.loadFromArray_ = function () {\n  for (var a = 0; a < this.arr_.length; a++) {\n    var b = this.arr_[a],\n        c = b[0];\n    this.map_[c.toString()] = new jspb.Map.Entry_(c, b[1]);\n  }\n\n  this.arrClean = !0;\n};\n\njspb.Map.prototype.toArray = function () {\n  if (this.arrClean) {\n    if (this.valueCtor_) {\n      var a = this.map_,\n          b;\n\n      for (b in a) if (Object.prototype.hasOwnProperty.call(a, b)) {\n        var c = a[b].valueWrapper;\n        c && c.toArray();\n      }\n    }\n  } else {\n    this.arr_.length = 0;\n    a = this.stringKeys_();\n    a.sort();\n\n    for (b = 0; b < a.length; b++) {\n      var d = this.map_[a[b]];\n      (c = d.valueWrapper) && c.toArray();\n      this.arr_.push([d.key, d.value]);\n    }\n\n    this.arrClean = !0;\n  }\n\n  return this.arr_;\n};\n\njspb.Map.prototype.toObject = function (a, b) {\n  for (var c = this.toArray(), d = [], e = 0; e < c.length; e++) {\n    var f = this.map_[c[e][0].toString()];\n    this.wrapEntry_(f);\n    var g = f.valueWrapper;\n    g ? (goog.asserts.assert(b), d.push([f.key, b(a, g)])) : d.push([f.key, f.value]);\n  }\n\n  return d;\n};\n\njspb.Map.fromObject = function (a, b, c) {\n  b = new jspb.Map([], b);\n\n  for (var d = 0; d < a.length; d++) {\n    var e = a[d][0],\n        f = c(a[d][1]);\n    b.set(e, f);\n  }\n\n  return b;\n};\n\njspb.Map.ArrayIteratorIterable_ = function (a) {\n  this.idx_ = 0;\n  this.arr_ = a;\n};\n\njspb.Map.ArrayIteratorIterable_.prototype.next = function () {\n  return this.idx_ < this.arr_.length ? {\n    done: !1,\n    value: this.arr_[this.idx_++]\n  } : {\n    done: !0,\n    value: void 0\n  };\n};\n\n\"undefined\" != typeof Symbol && (jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function () {\n  return this;\n});\n\njspb.Map.prototype.getLength = function () {\n  return this.stringKeys_().length;\n};\n\njspb.Map.prototype.clear = function () {\n  this.map_ = {};\n  this.arrClean = !1;\n};\n\njspb.Map.prototype.del = function (a) {\n  a = a.toString();\n  var b = this.map_.hasOwnProperty(a);\n  delete this.map_[a];\n  this.arrClean = !1;\n  return b;\n};\n\njspb.Map.prototype.getEntryList = function () {\n  var a = [],\n      b = this.stringKeys_();\n  b.sort();\n\n  for (var c = 0; c < b.length; c++) {\n    var d = this.map_[b[c]];\n    a.push([d.key, d.value]);\n  }\n\n  return a;\n};\n\njspb.Map.prototype.entries = function () {\n  var a = [],\n      b = this.stringKeys_();\n  b.sort();\n\n  for (var c = 0; c < b.length; c++) {\n    var d = this.map_[b[c]];\n    a.push([d.key, this.wrapEntry_(d)]);\n  }\n\n  return new jspb.Map.ArrayIteratorIterable_(a);\n};\n\njspb.Map.prototype.keys = function () {\n  var a = [],\n      b = this.stringKeys_();\n  b.sort();\n\n  for (var c = 0; c < b.length; c++) a.push(this.map_[b[c]].key);\n\n  return new jspb.Map.ArrayIteratorIterable_(a);\n};\n\njspb.Map.prototype.values = function () {\n  var a = [],\n      b = this.stringKeys_();\n  b.sort();\n\n  for (var c = 0; c < b.length; c++) a.push(this.wrapEntry_(this.map_[b[c]]));\n\n  return new jspb.Map.ArrayIteratorIterable_(a);\n};\n\njspb.Map.prototype.forEach = function (a, b) {\n  var c = this.stringKeys_();\n  c.sort();\n\n  for (var d = 0; d < c.length; d++) {\n    var e = this.map_[c[d]];\n    a.call(b, this.wrapEntry_(e), e.key, this);\n  }\n};\n\njspb.Map.prototype.set = function (a, b) {\n  var c = new jspb.Map.Entry_(a);\n  this.valueCtor_ ? (c.valueWrapper = b, c.value = b.toArray()) : c.value = b;\n  this.map_[a.toString()] = c;\n  this.arrClean = !1;\n  return this;\n};\n\njspb.Map.prototype.wrapEntry_ = function (a) {\n  return this.valueCtor_ ? (a.valueWrapper || (a.valueWrapper = new this.valueCtor_(a.value)), a.valueWrapper) : a.value;\n};\n\njspb.Map.prototype.get = function (a) {\n  if (a = this.map_[a.toString()]) return this.wrapEntry_(a);\n};\n\njspb.Map.prototype.has = function (a) {\n  return a.toString() in this.map_;\n};\n\njspb.Map.prototype.serializeBinary = function (a, b, c, d, e) {\n  var f = this.stringKeys_();\n  f.sort();\n\n  for (var g = 0; g < f.length; g++) {\n    var h = this.map_[f[g]];\n    b.beginSubMessage(a);\n    c.call(b, 1, h.key);\n    this.valueCtor_ ? d.call(b, 2, this.wrapEntry_(h), e) : d.call(b, 2, h.value);\n    b.endSubMessage();\n  }\n};\n\njspb.Map.deserializeBinary = function (a, b, c, d, e, f) {\n  for (var g = void 0; b.nextField() && !b.isEndGroup();) {\n    var h = b.getFieldNumber();\n    1 == h ? f = c.call(b) : 2 == h && (a.valueCtor_ ? (goog.asserts.assert(e), g = new a.valueCtor_(), d.call(b, g, e)) : g = d.call(b));\n  }\n\n  goog.asserts.assert(void 0 != f);\n  goog.asserts.assert(void 0 != g);\n  a.set(f, g);\n};\n\njspb.Map.prototype.stringKeys_ = function () {\n  var a = this.map_,\n      b = [],\n      c;\n\n  for (c in a) Object.prototype.hasOwnProperty.call(a, c) && b.push(c);\n\n  return b;\n};\n\njspb.Map.Entry_ = function (a, b) {\n  this.key = a;\n  this.value = b;\n  this.valueWrapper = void 0;\n};\n\njspb.ExtensionFieldInfo = function (a, b, c, d, e) {\n  this.fieldIndex = a;\n  this.fieldName = b;\n  this.ctor = c;\n  this.toObjectFn = d;\n  this.isRepeated = e;\n};\n\njspb.ExtensionFieldBinaryInfo = function (a, b, c, d, e, f) {\n  this.fieldInfo = a;\n  this.binaryReaderFn = b;\n  this.binaryWriterFn = c;\n  this.binaryMessageSerializeFn = d;\n  this.binaryMessageDeserializeFn = e;\n  this.isPacked = f;\n};\n\njspb.ExtensionFieldInfo.prototype.isMessageType = function () {\n  return !!this.ctor;\n};\n\njspb.Message = function () {};\n\njspb.Message.GENERATE_TO_OBJECT = !0;\njspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE;\njspb.Message.GENERATE_TO_STRING = !0;\njspb.Message.ASSUME_LOCAL_ARRAYS = !1;\njspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS = !0;\njspb.Message.SUPPORTS_UINT8ARRAY_ = \"function\" == typeof Uint8Array;\n\njspb.Message.prototype.getJsPbMessageId = function () {\n  return this.messageId_;\n};\n\njspb.Message.getIndex_ = function (a, b) {\n  return b + a.arrayIndexOffset_;\n};\n\njspb.Message.hiddenES6Property_ = function () {};\n\njspb.Message.getFieldNumber_ = function (a, b) {\n  return b - a.arrayIndexOffset_;\n};\n\njspb.Message.initialize = function (a, b, c, d, e, f) {\n  a.wrappers_ = null;\n  b || (b = c ? [c] : []);\n  a.messageId_ = c ? String(c) : void 0;\n  a.arrayIndexOffset_ = 0 === c ? -1 : 0;\n  a.array = b;\n  jspb.Message.initPivotAndExtensionObject_(a, d);\n  a.convertedPrimitiveFields_ = {};\n  jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS || (a.repeatedFields = e);\n  if (e) for (b = 0; b < e.length; b++) c = e[b], c < a.pivot_ ? (c = jspb.Message.getIndex_(a, c), a.array[c] = a.array[c] || jspb.Message.EMPTY_LIST_SENTINEL_) : (jspb.Message.maybeInitEmptyExtensionObject_(a), a.extensionObject_[c] = a.extensionObject_[c] || jspb.Message.EMPTY_LIST_SENTINEL_);\n  if (f && f.length) for (b = 0; b < f.length; b++) jspb.Message.computeOneofCase(a, f[b]);\n};\n\njspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [];\n\njspb.Message.isArray_ = function (a) {\n  return jspb.Message.ASSUME_LOCAL_ARRAYS ? a instanceof Array : goog.isArray(a);\n};\n\njspb.Message.isExtensionObject_ = function (a) {\n  return null !== a && \"object\" == typeof a && !jspb.Message.isArray_(a) && !(jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array);\n};\n\njspb.Message.initPivotAndExtensionObject_ = function (a, b) {\n  var c = a.array.length,\n      d = -1;\n\n  if (c && (d = c - 1, c = a.array[d], jspb.Message.isExtensionObject_(c))) {\n    a.pivot_ = jspb.Message.getFieldNumber_(a, d);\n    a.extensionObject_ = c;\n    return;\n  }\n\n  -1 < b ? (a.pivot_ = Math.max(b, jspb.Message.getFieldNumber_(a, d + 1)), a.extensionObject_ = null) : a.pivot_ = Number.MAX_VALUE;\n};\n\njspb.Message.maybeInitEmptyExtensionObject_ = function (a) {\n  var b = jspb.Message.getIndex_(a, a.pivot_);\n  a.array[b] || (a.extensionObject_ = a.array[b] = {});\n};\n\njspb.Message.toObjectList = function (a, b, c) {\n  for (var d = [], e = 0; e < a.length; e++) d[e] = b.call(a[e], c, a[e]);\n\n  return d;\n};\n\njspb.Message.toObjectExtension = function (a, b, c, d, e) {\n  for (var f in c) {\n    var g = c[f],\n        h = d.call(a, g);\n\n    if (null != h) {\n      for (var k in g.fieldName) if (g.fieldName.hasOwnProperty(k)) break;\n\n      b[k] = g.toObjectFn ? g.isRepeated ? jspb.Message.toObjectList(h, g.toObjectFn, e) : g.toObjectFn(e, h) : h;\n    }\n  }\n};\n\njspb.Message.serializeBinaryExtensions = function (a, b, c, d) {\n  for (var e in c) {\n    var f = c[e],\n        g = f.fieldInfo;\n    if (!f.binaryWriterFn) throw Error(\"Message extension present that was generated without binary serialization support\");\n    var h = d.call(a, g);\n    if (null != h) if (g.isMessageType()) {\n      if (f.binaryMessageSerializeFn) f.binaryWriterFn.call(b, g.fieldIndex, h, f.binaryMessageSerializeFn);else throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");\n    } else f.binaryWriterFn.call(b, g.fieldIndex, h);\n  }\n};\n\njspb.Message.readBinaryExtension = function (a, b, c, d, e) {\n  var f = c[b.getFieldNumber()];\n\n  if (f) {\n    c = f.fieldInfo;\n    if (!f.binaryReaderFn) throw Error(\"Deserializing extension whose generated code does not support binary format\");\n\n    if (c.isMessageType()) {\n      var g = new c.ctor();\n      f.binaryReaderFn.call(b, g, f.binaryMessageDeserializeFn);\n    } else g = f.binaryReaderFn.call(b);\n\n    c.isRepeated && !f.isPacked ? (b = d.call(a, c)) ? b.push(g) : e.call(a, c, [g]) : e.call(a, c, g);\n  } else b.skipField();\n};\n\njspb.Message.getField = function (a, b) {\n  if (b < a.pivot_) {\n    b = jspb.Message.getIndex_(a, b);\n    var c = a.array[b];\n    return c === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.array[b] = [] : c;\n  }\n\n  if (a.extensionObject_) return c = a.extensionObject_[b], c === jspb.Message.EMPTY_LIST_SENTINEL_ ? a.extensionObject_[b] = [] : c;\n};\n\njspb.Message.getRepeatedField = function (a, b) {\n  return jspb.Message.getField(a, b);\n};\n\njspb.Message.getOptionalFloatingPointField = function (a, b) {\n  a = jspb.Message.getField(a, b);\n  return null == a ? a : +a;\n};\n\njspb.Message.getBooleanField = function (a, b) {\n  a = jspb.Message.getField(a, b);\n  return null == a ? a : !!a;\n};\n\njspb.Message.getRepeatedFloatingPointField = function (a, b) {\n  var c = jspb.Message.getRepeatedField(a, b);\n  a.convertedPrimitiveFields_ || (a.convertedPrimitiveFields_ = {});\n\n  if (!a.convertedPrimitiveFields_[b]) {\n    for (var d = 0; d < c.length; d++) c[d] = +c[d];\n\n    a.convertedPrimitiveFields_[b] = !0;\n  }\n\n  return c;\n};\n\njspb.Message.getRepeatedBooleanField = function (a, b) {\n  var c = jspb.Message.getRepeatedField(a, b);\n  a.convertedPrimitiveFields_ || (a.convertedPrimitiveFields_ = {});\n\n  if (!a.convertedPrimitiveFields_[b]) {\n    for (var d = 0; d < c.length; d++) c[d] = !!c[d];\n\n    a.convertedPrimitiveFields_[b] = !0;\n  }\n\n  return c;\n};\n\njspb.Message.bytesAsB64 = function (a) {\n  if (null == a || goog.isString(a)) return a;\n  if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array) return goog.crypt.base64.encodeByteArray(a);\n  goog.asserts.fail(\"Cannot coerce to b64 string: \" + goog.typeOf(a));\n  return null;\n};\n\njspb.Message.bytesAsU8 = function (a) {\n  if (null == a || a instanceof Uint8Array) return a;\n  if (goog.isString(a)) return goog.crypt.base64.decodeStringToUint8Array(a);\n  goog.asserts.fail(\"Cannot coerce to Uint8Array: \" + goog.typeOf(a));\n  return null;\n};\n\njspb.Message.bytesListAsB64 = function (a) {\n  jspb.Message.assertConsistentTypes_(a);\n  return !a.length || goog.isString(a[0]) ? a : goog.array.map(a, jspb.Message.bytesAsB64);\n};\n\njspb.Message.bytesListAsU8 = function (a) {\n  jspb.Message.assertConsistentTypes_(a);\n  return !a.length || a[0] instanceof Uint8Array ? a : goog.array.map(a, jspb.Message.bytesAsU8);\n};\n\njspb.Message.assertConsistentTypes_ = function (a) {\n  if (goog.DEBUG && a && 1 < a.length) {\n    var b = goog.typeOf(a[0]);\n    goog.array.forEach(a, function (a) {\n      goog.typeOf(a) != b && goog.asserts.fail(\"Inconsistent type in JSPB repeated field array. Got \" + goog.typeOf(a) + \" expected \" + b);\n    });\n  }\n};\n\njspb.Message.getFieldWithDefault = function (a, b, c) {\n  a = jspb.Message.getField(a, b);\n  return null == a ? c : a;\n};\n\njspb.Message.getBooleanFieldWithDefault = function (a, b, c) {\n  a = jspb.Message.getBooleanField(a, b);\n  return null == a ? c : a;\n};\n\njspb.Message.getFloatingPointFieldWithDefault = function (a, b, c) {\n  a = jspb.Message.getOptionalFloatingPointField(a, b);\n  return null == a ? c : a;\n};\n\njspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault;\n\njspb.Message.getMapField = function (a, b, c, d) {\n  a.wrappers_ || (a.wrappers_ = {});\n  if (b in a.wrappers_) return a.wrappers_[b];\n  if (!c) return c = jspb.Message.getField(a, b), c || (c = [], jspb.Message.setField(a, b, c)), a.wrappers_[b] = new jspb.Map(c, d);\n};\n\njspb.Message.setField = function (a, b, c) {\n  b < a.pivot_ ? a.array[jspb.Message.getIndex_(a, b)] = c : (jspb.Message.maybeInitEmptyExtensionObject_(a), a.extensionObject_[b] = c);\n};\n\njspb.Message.setProto3IntField = function (a, b, c) {\n  jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\n};\n\njspb.Message.setProto3FloatField = function (a, b, c) {\n  jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\n};\n\njspb.Message.setProto3BooleanField = function (a, b, c) {\n  jspb.Message.setFieldIgnoringDefault_(a, b, c, !1);\n};\n\njspb.Message.setProto3StringField = function (a, b, c) {\n  jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\n};\n\njspb.Message.setProto3BytesField = function (a, b, c) {\n  jspb.Message.setFieldIgnoringDefault_(a, b, c, \"\");\n};\n\njspb.Message.setProto3EnumField = function (a, b, c) {\n  jspb.Message.setFieldIgnoringDefault_(a, b, c, 0);\n};\n\njspb.Message.setProto3StringIntField = function (a, b, c) {\n  jspb.Message.setFieldIgnoringDefault_(a, b, c, \"0\");\n};\n\njspb.Message.setFieldIgnoringDefault_ = function (a, b, c, d) {\n  c !== d ? jspb.Message.setField(a, b, c) : a.array[jspb.Message.getIndex_(a, b)] = null;\n};\n\njspb.Message.addToRepeatedField = function (a, b, c, d) {\n  a = jspb.Message.getRepeatedField(a, b);\n  void 0 != d ? a.splice(d, 0, c) : a.push(c);\n};\n\njspb.Message.setOneofField = function (a, b, c, d) {\n  (c = jspb.Message.computeOneofCase(a, c)) && c !== b && void 0 !== d && (a.wrappers_ && c in a.wrappers_ && (a.wrappers_[c] = void 0), jspb.Message.setField(a, c, void 0));\n  jspb.Message.setField(a, b, d);\n};\n\njspb.Message.computeOneofCase = function (a, b) {\n  for (var c, d, e = 0; e < b.length; e++) {\n    var f = b[e],\n        g = jspb.Message.getField(a, f);\n    null != g && (c = f, d = g, jspb.Message.setField(a, f, void 0));\n  }\n\n  return c ? (jspb.Message.setField(a, c, d), c) : 0;\n};\n\njspb.Message.getWrapperField = function (a, b, c, d) {\n  a.wrappers_ || (a.wrappers_ = {});\n\n  if (!a.wrappers_[c]) {\n    var e = jspb.Message.getField(a, c);\n    if (d || e) a.wrappers_[c] = new b(e);\n  }\n\n  return a.wrappers_[c];\n};\n\njspb.Message.getRepeatedWrapperField = function (a, b, c) {\n  jspb.Message.wrapRepeatedField_(a, b, c);\n  b = a.wrappers_[c];\n  b == jspb.Message.EMPTY_LIST_SENTINEL_ && (b = a.wrappers_[c] = []);\n  return b;\n};\n\njspb.Message.wrapRepeatedField_ = function (a, b, c) {\n  a.wrappers_ || (a.wrappers_ = {});\n\n  if (!a.wrappers_[c]) {\n    for (var d = jspb.Message.getRepeatedField(a, c), e = [], f = 0; f < d.length; f++) e[f] = new b(d[f]);\n\n    a.wrappers_[c] = e;\n  }\n};\n\njspb.Message.setWrapperField = function (a, b, c) {\n  a.wrappers_ || (a.wrappers_ = {});\n  var d = c ? c.toArray() : c;\n  a.wrappers_[b] = c;\n  jspb.Message.setField(a, b, d);\n};\n\njspb.Message.setOneofWrapperField = function (a, b, c, d) {\n  a.wrappers_ || (a.wrappers_ = {});\n  var e = d ? d.toArray() : d;\n  a.wrappers_[b] = d;\n  jspb.Message.setOneofField(a, b, c, e);\n};\n\njspb.Message.setRepeatedWrapperField = function (a, b, c) {\n  a.wrappers_ || (a.wrappers_ = {});\n  c = c || [];\n\n  for (var d = [], e = 0; e < c.length; e++) d[e] = c[e].toArray();\n\n  a.wrappers_[b] = c;\n  jspb.Message.setField(a, b, d);\n};\n\njspb.Message.addToRepeatedWrapperField = function (a, b, c, d, e) {\n  jspb.Message.wrapRepeatedField_(a, d, b);\n  var f = a.wrappers_[b];\n  f || (f = a.wrappers_[b] = []);\n  c = c ? c : new d();\n  a = jspb.Message.getRepeatedField(a, b);\n  void 0 != e ? (f.splice(e, 0, c), a.splice(e, 0, c.toArray())) : (f.push(c), a.push(c.toArray()));\n  return c;\n};\n\njspb.Message.toMap = function (a, b, c, d) {\n  for (var e = {}, f = 0; f < a.length; f++) e[b.call(a[f])] = c ? c.call(a[f], d, a[f]) : a[f];\n\n  return e;\n};\n\njspb.Message.prototype.syncMapFields_ = function () {\n  if (this.wrappers_) for (var a in this.wrappers_) {\n    var b = this.wrappers_[a];\n    if (goog.isArray(b)) for (var c = 0; c < b.length; c++) b[c] && b[c].toArray();else b && b.toArray();\n  }\n};\n\njspb.Message.prototype.toArray = function () {\n  this.syncMapFields_();\n  return this.array;\n};\n\njspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function () {\n  this.syncMapFields_();\n  return this.array.toString();\n});\n\njspb.Message.prototype.getExtension = function (a) {\n  if (this.extensionObject_) {\n    this.wrappers_ || (this.wrappers_ = {});\n    var b = a.fieldIndex;\n\n    if (a.isRepeated) {\n      if (a.isMessageType()) return this.wrappers_[b] || (this.wrappers_[b] = goog.array.map(this.extensionObject_[b] || [], function (b) {\n        return new a.ctor(b);\n      })), this.wrappers_[b];\n    } else if (a.isMessageType()) return !this.wrappers_[b] && this.extensionObject_[b] && (this.wrappers_[b] = new a.ctor(this.extensionObject_[b])), this.wrappers_[b];\n\n    return this.extensionObject_[b];\n  }\n};\n\njspb.Message.prototype.setExtension = function (a, b) {\n  this.wrappers_ || (this.wrappers_ = {});\n  jspb.Message.maybeInitEmptyExtensionObject_(this);\n  var c = a.fieldIndex;\n  a.isRepeated ? (b = b || [], a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = goog.array.map(b, function (a) {\n    return a.toArray();\n  })) : this.extensionObject_[c] = b) : a.isMessageType() ? (this.wrappers_[c] = b, this.extensionObject_[c] = b ? b.toArray() : b) : this.extensionObject_[c] = b;\n  return this;\n};\n\njspb.Message.difference = function (a, b) {\n  if (!(a instanceof b.constructor)) throw Error(\"Messages have different types.\");\n  var c = a.toArray();\n  b = b.toArray();\n  var d = [],\n      e = 0,\n      f = c.length > b.length ? c.length : b.length;\n  a.getJsPbMessageId() && (d[0] = a.getJsPbMessageId(), e = 1);\n\n  for (; e < f; e++) jspb.Message.compareFields(c[e], b[e]) || (d[e] = b[e]);\n\n  return new a.constructor(d);\n};\n\njspb.Message.equals = function (a, b) {\n  return a == b || !(!a || !b) && a instanceof b.constructor && jspb.Message.compareFields(a.toArray(), b.toArray());\n};\n\njspb.Message.compareExtensions = function (a, b) {\n  a = a || {};\n  b = b || {};\n  var c = {},\n      d;\n\n  for (d in a) c[d] = 0;\n\n  for (d in b) c[d] = 0;\n\n  for (d in c) if (!jspb.Message.compareFields(a[d], b[d])) return !1;\n\n  return !0;\n};\n\njspb.Message.compareFields = function (a, b) {\n  if (a == b) return !0;\n  if (!goog.isObject(a) || !goog.isObject(b)) return goog.isNumber(a) && isNaN(a) || goog.isNumber(b) && isNaN(b) ? String(a) == String(b) : !1;\n  if (a.constructor != b.constructor) return !1;\n\n  if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a.constructor === Uint8Array) {\n    if (a.length != b.length) return !1;\n\n    for (var c = 0; c < a.length; c++) if (a[c] != b[c]) return !1;\n\n    return !0;\n  }\n\n  if (a.constructor === Array) {\n    var d = void 0,\n        e = void 0,\n        f = Math.max(a.length, b.length);\n\n    for (c = 0; c < f; c++) {\n      var g = a[c],\n          h = b[c];\n      g && g.constructor == Object && (goog.asserts.assert(void 0 === d), goog.asserts.assert(c === a.length - 1), d = g, g = void 0);\n      h && h.constructor == Object && (goog.asserts.assert(void 0 === e), goog.asserts.assert(c === b.length - 1), e = h, h = void 0);\n      if (!jspb.Message.compareFields(g, h)) return !1;\n    }\n\n    return d || e ? (d = d || {}, e = e || {}, jspb.Message.compareExtensions(d, e)) : !0;\n  }\n\n  if (a.constructor === Object) return jspb.Message.compareExtensions(a, b);\n  throw Error(\"Invalid type in JSPB array\");\n};\n\njspb.Message.prototype.cloneMessage = function () {\n  return jspb.Message.cloneMessage(this);\n};\n\njspb.Message.prototype.clone = function () {\n  return jspb.Message.cloneMessage(this);\n};\n\njspb.Message.clone = function (a) {\n  return jspb.Message.cloneMessage(a);\n};\n\njspb.Message.cloneMessage = function (a) {\n  return new a.constructor(jspb.Message.clone_(a.toArray()));\n};\n\njspb.Message.copyInto = function (a, b) {\n  goog.asserts.assertInstanceof(a, jspb.Message);\n  goog.asserts.assertInstanceof(b, jspb.Message);\n  goog.asserts.assert(a.constructor == b.constructor, \"Copy source and target message should have the same type.\");\n  a = jspb.Message.clone(a);\n\n  for (var c = b.toArray(), d = a.toArray(), e = c.length = 0; e < d.length; e++) c[e] = d[e];\n\n  b.wrappers_ = a.wrappers_;\n  b.extensionObject_ = a.extensionObject_;\n};\n\njspb.Message.clone_ = function (a) {\n  if (goog.isArray(a)) {\n    for (var b = Array(a.length), c = 0; c < a.length; c++) {\n      var d = a[c];\n      null != d && (b[c] = \"object\" == typeof d ? jspb.Message.clone_(goog.asserts.assert(d)) : d);\n    }\n\n    return b;\n  }\n\n  if (jspb.Message.SUPPORTS_UINT8ARRAY_ && a instanceof Uint8Array) return new Uint8Array(a);\n  b = {};\n\n  for (c in a) d = a[c], null != d && (b[c] = \"object\" == typeof d ? jspb.Message.clone_(goog.asserts.assert(d)) : d);\n\n  return b;\n};\n\njspb.Message.registerMessageType = function (a, b) {\n  jspb.Message.registry_[a] = b;\n  b.messageId = a;\n};\n\njspb.Message.registry_ = {};\njspb.Message.messageSetExtensions = {};\njspb.Message.messageSetExtensionsBinary = {};\njspb.arith = {};\n\njspb.arith.UInt64 = function (a, b) {\n  this.lo = a;\n  this.hi = b;\n};\n\njspb.arith.UInt64.prototype.cmp = function (a) {\n  return this.hi < a.hi || this.hi == a.hi && this.lo < a.lo ? -1 : this.hi == a.hi && this.lo == a.lo ? 0 : 1;\n};\n\njspb.arith.UInt64.prototype.rightShift = function () {\n  return new jspb.arith.UInt64((this.lo >>> 1 | (this.hi & 1) << 31) >>> 0, this.hi >>> 1 >>> 0);\n};\n\njspb.arith.UInt64.prototype.leftShift = function () {\n  return new jspb.arith.UInt64(this.lo << 1 >>> 0, (this.hi << 1 | this.lo >>> 31) >>> 0);\n};\n\njspb.arith.UInt64.prototype.msb = function () {\n  return !!(this.hi & 2147483648);\n};\n\njspb.arith.UInt64.prototype.lsb = function () {\n  return !!(this.lo & 1);\n};\n\njspb.arith.UInt64.prototype.zero = function () {\n  return 0 == this.lo && 0 == this.hi;\n};\n\njspb.arith.UInt64.prototype.add = function (a) {\n  return new jspb.arith.UInt64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0);\n};\n\njspb.arith.UInt64.prototype.sub = function (a) {\n  return new jspb.arith.UInt64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0);\n};\n\njspb.arith.UInt64.mul32x32 = function (a, b) {\n  var c = a & 65535;\n  a >>>= 16;\n  var d = b & 65535,\n      e = b >>> 16;\n  b = c * d + 65536 * (c * e & 65535) + 65536 * (a * d & 65535);\n\n  for (c = a * e + (c * e >>> 16) + (a * d >>> 16); 4294967296 <= b;) b -= 4294967296, c += 1;\n\n  return new jspb.arith.UInt64(b >>> 0, c >>> 0);\n};\n\njspb.arith.UInt64.prototype.mul = function (a) {\n  var b = jspb.arith.UInt64.mul32x32(this.lo, a);\n  a = jspb.arith.UInt64.mul32x32(this.hi, a);\n  a.hi = a.lo;\n  a.lo = 0;\n  return b.add(a);\n};\n\njspb.arith.UInt64.prototype.div = function (a) {\n  if (0 == a) return [];\n  var b = new jspb.arith.UInt64(0, 0),\n      c = new jspb.arith.UInt64(this.lo, this.hi);\n  a = new jspb.arith.UInt64(a, 0);\n\n  for (var d = new jspb.arith.UInt64(1, 0); !a.msb();) a = a.leftShift(), d = d.leftShift();\n\n  for (; !d.zero();) 0 >= a.cmp(c) && (b = b.add(d), c = c.sub(a)), a = a.rightShift(), d = d.rightShift();\n\n  return [b, c];\n};\n\njspb.arith.UInt64.prototype.toString = function () {\n  for (var a = \"\", b = this; !b.zero();) {\n    b = b.div(10);\n    var c = b[0];\n    a = b[1].lo + a;\n    b = c;\n  }\n\n  \"\" == a && (a = \"0\");\n  return a;\n};\n\njspb.arith.UInt64.fromString = function (a) {\n  for (var b = new jspb.arith.UInt64(0, 0), c = new jspb.arith.UInt64(0, 0), d = 0; d < a.length; d++) {\n    if (\"0\" > a[d] || \"9\" < a[d]) return null;\n    var e = parseInt(a[d], 10);\n    c.lo = e;\n    b = b.mul(10).add(c);\n  }\n\n  return b;\n};\n\njspb.arith.UInt64.prototype.clone = function () {\n  return new jspb.arith.UInt64(this.lo, this.hi);\n};\n\njspb.arith.Int64 = function (a, b) {\n  this.lo = a;\n  this.hi = b;\n};\n\njspb.arith.Int64.prototype.add = function (a) {\n  return new jspb.arith.Int64((this.lo + a.lo & 4294967295) >>> 0 >>> 0, ((this.hi + a.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + a.lo ? 1 : 0) >>> 0);\n};\n\njspb.arith.Int64.prototype.sub = function (a) {\n  return new jspb.arith.Int64((this.lo - a.lo & 4294967295) >>> 0 >>> 0, ((this.hi - a.hi & 4294967295) >>> 0) - (0 > this.lo - a.lo ? 1 : 0) >>> 0);\n};\n\njspb.arith.Int64.prototype.clone = function () {\n  return new jspb.arith.Int64(this.lo, this.hi);\n};\n\njspb.arith.Int64.prototype.toString = function () {\n  var a = 0 != (this.hi & 2147483648),\n      b = new jspb.arith.UInt64(this.lo, this.hi);\n  a && (b = new jspb.arith.UInt64(0, 0).sub(b));\n  return (a ? \"-\" : \"\") + b.toString();\n};\n\njspb.arith.Int64.fromString = function (a) {\n  var b = 0 < a.length && \"-\" == a[0];\n  b && (a = a.substring(1));\n  a = jspb.arith.UInt64.fromString(a);\n  if (null === a) return null;\n  b && (a = new jspb.arith.UInt64(0, 0).sub(a));\n  return new jspb.arith.Int64(a.lo, a.hi);\n};\n\njspb.BinaryEncoder = function () {\n  this.buffer_ = [];\n};\n\njspb.BinaryEncoder.prototype.length = function () {\n  return this.buffer_.length;\n};\n\njspb.BinaryEncoder.prototype.end = function () {\n  var a = this.buffer_;\n  this.buffer_ = [];\n  return a;\n};\n\njspb.BinaryEncoder.prototype.writeSplitVarint64 = function (a, b) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(b == Math.floor(b));\n  goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\n\n  for (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32); 0 < b || 127 < a;) this.buffer_.push(a & 127 | 128), a = (a >>> 7 | b << 25) >>> 0, b >>>= 7;\n\n  this.buffer_.push(a);\n};\n\njspb.BinaryEncoder.prototype.writeSplitFixed64 = function (a, b) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(b == Math.floor(b));\n  goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\n  goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32);\n  this.writeUint32(a);\n  this.writeUint32(b);\n};\n\njspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n\n  for (goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32); 127 < a;) this.buffer_.push(a & 127 | 128), a >>>= 7;\n\n  this.buffer_.push(a);\n};\n\njspb.BinaryEncoder.prototype.writeSignedVarint32 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\n  if (0 <= a) this.writeUnsignedVarint32(a);else {\n    for (var b = 0; 9 > b; b++) this.buffer_.push(a & 127 | 128), a >>= 7;\n\n    this.buffer_.push(1);\n  }\n};\n\njspb.BinaryEncoder.prototype.writeUnsignedVarint64 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64);\n  jspb.utils.splitInt64(a);\n  this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeSignedVarint64 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\n  jspb.utils.splitInt64(a);\n  this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeZigzagVarint32 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\n  this.writeUnsignedVarint32((a << 1 ^ a >> 31) >>> 0);\n};\n\njspb.BinaryEncoder.prototype.writeZigzagVarint64 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\n  jspb.utils.splitZigzag64(a);\n  this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeZigzagVarint64String = function (a) {\n  this.writeZigzagVarint64(parseInt(a, 10));\n};\n\njspb.BinaryEncoder.prototype.writeUint8 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(0 <= a && 256 > a);\n  this.buffer_.push(a >>> 0 & 255);\n};\n\njspb.BinaryEncoder.prototype.writeUint16 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(0 <= a && 65536 > a);\n  this.buffer_.push(a >>> 0 & 255);\n  this.buffer_.push(a >>> 8 & 255);\n};\n\njspb.BinaryEncoder.prototype.writeUint32 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_32);\n  this.buffer_.push(a >>> 0 & 255);\n  this.buffer_.push(a >>> 8 & 255);\n  this.buffer_.push(a >>> 16 & 255);\n  this.buffer_.push(a >>> 24 & 255);\n};\n\njspb.BinaryEncoder.prototype.writeUint64 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(0 <= a && a < jspb.BinaryConstants.TWO_TO_64);\n  jspb.utils.splitUint64(a);\n  this.writeUint32(jspb.utils.split64Low);\n  this.writeUint32(jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeInt8 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(-128 <= a && 128 > a);\n  this.buffer_.push(a >>> 0 & 255);\n};\n\njspb.BinaryEncoder.prototype.writeInt16 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(-32768 <= a && 32768 > a);\n  this.buffer_.push(a >>> 0 & 255);\n  this.buffer_.push(a >>> 8 & 255);\n};\n\njspb.BinaryEncoder.prototype.writeInt32 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\n  this.buffer_.push(a >>> 0 & 255);\n  this.buffer_.push(a >>> 8 & 255);\n  this.buffer_.push(a >>> 16 & 255);\n  this.buffer_.push(a >>> 24 & 255);\n};\n\njspb.BinaryEncoder.prototype.writeInt64 = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_63 && a < jspb.BinaryConstants.TWO_TO_63);\n  jspb.utils.splitInt64(a);\n  this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeInt64String = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(+a >= -jspb.BinaryConstants.TWO_TO_63 && +a < jspb.BinaryConstants.TWO_TO_63);\n  jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));\n  this.writeSplitFixed64(jspb.utils.split64Low, jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeFloat = function (a) {\n  goog.asserts.assert(a >= -jspb.BinaryConstants.FLOAT32_MAX && a <= jspb.BinaryConstants.FLOAT32_MAX);\n  jspb.utils.splitFloat32(a);\n  this.writeUint32(jspb.utils.split64Low);\n};\n\njspb.BinaryEncoder.prototype.writeDouble = function (a) {\n  goog.asserts.assert(a >= -jspb.BinaryConstants.FLOAT64_MAX && a <= jspb.BinaryConstants.FLOAT64_MAX);\n  jspb.utils.splitFloat64(a);\n  this.writeUint32(jspb.utils.split64Low);\n  this.writeUint32(jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeBool = function (a) {\n  goog.asserts.assert(goog.isBoolean(a) || goog.isNumber(a));\n  this.buffer_.push(a ? 1 : 0);\n};\n\njspb.BinaryEncoder.prototype.writeEnum = function (a) {\n  goog.asserts.assert(a == Math.floor(a));\n  goog.asserts.assert(a >= -jspb.BinaryConstants.TWO_TO_31 && a < jspb.BinaryConstants.TWO_TO_31);\n  this.writeSignedVarint32(a);\n};\n\njspb.BinaryEncoder.prototype.writeBytes = function (a) {\n  this.buffer_.push.apply(this.buffer_, a);\n};\n\njspb.BinaryEncoder.prototype.writeVarintHash64 = function (a) {\n  jspb.utils.splitHash64(a);\n  this.writeSplitVarint64(jspb.utils.split64Low, jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeFixedHash64 = function (a) {\n  jspb.utils.splitHash64(a);\n  this.writeUint32(jspb.utils.split64Low);\n  this.writeUint32(jspb.utils.split64High);\n};\n\njspb.BinaryEncoder.prototype.writeString = function (a) {\n  for (var b = this.buffer_.length, c = 0; c < a.length; c++) {\n    var d = a.charCodeAt(c);\n    if (128 > d) this.buffer_.push(d);else if (2048 > d) this.buffer_.push(d >> 6 | 192), this.buffer_.push(d & 63 | 128);else if (65536 > d) if (55296 <= d && 56319 >= d && c + 1 < a.length) {\n      var e = a.charCodeAt(c + 1);\n      56320 <= e && 57343 >= e && (d = 1024 * (d - 55296) + e - 56320 + 65536, this.buffer_.push(d >> 18 | 240), this.buffer_.push(d >> 12 & 63 | 128), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 | 128), c++);\n    } else this.buffer_.push(d >> 12 | 224), this.buffer_.push(d >> 6 & 63 | 128), this.buffer_.push(d & 63 | 128);\n  }\n\n  return this.buffer_.length - b;\n};\n\njspb.BinaryWriter = function () {\n  this.blocks_ = [];\n  this.totalLength_ = 0;\n  this.encoder_ = new jspb.BinaryEncoder();\n  this.bookmarks_ = [];\n};\n\njspb.BinaryWriter.prototype.appendUint8Array_ = function (a) {\n  var b = this.encoder_.end();\n  this.blocks_.push(b);\n  this.blocks_.push(a);\n  this.totalLength_ += b.length + a.length;\n};\n\njspb.BinaryWriter.prototype.beginDelimited_ = function (a) {\n  this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED);\n  a = this.encoder_.end();\n  this.blocks_.push(a);\n  this.totalLength_ += a.length;\n  a.push(this.totalLength_);\n  return a;\n};\n\njspb.BinaryWriter.prototype.endDelimited_ = function (a) {\n  var b = a.pop();\n  b = this.totalLength_ + this.encoder_.length() - b;\n\n  for (goog.asserts.assert(0 <= b); 127 < b;) a.push(b & 127 | 128), b >>>= 7, this.totalLength_++;\n\n  a.push(b);\n  this.totalLength_++;\n};\n\njspb.BinaryWriter.prototype.writeSerializedMessage = function (a, b, c) {\n  this.appendUint8Array_(a.subarray(b, c));\n};\n\njspb.BinaryWriter.prototype.maybeWriteSerializedMessage = function (a, b, c) {\n  null != a && null != b && null != c && this.writeSerializedMessage(a, b, c);\n};\n\njspb.BinaryWriter.prototype.reset = function () {\n  this.blocks_ = [];\n  this.encoder_.end();\n  this.totalLength_ = 0;\n  this.bookmarks_ = [];\n};\n\njspb.BinaryWriter.prototype.getResultBuffer = function () {\n  goog.asserts.assert(0 == this.bookmarks_.length);\n\n  for (var a = new Uint8Array(this.totalLength_ + this.encoder_.length()), b = this.blocks_, c = b.length, d = 0, e = 0; e < c; e++) {\n    var f = b[e];\n    a.set(f, d);\n    d += f.length;\n  }\n\n  b = this.encoder_.end();\n  a.set(b, d);\n  d += b.length;\n  goog.asserts.assert(d == a.length);\n  this.blocks_ = [a];\n  return a;\n};\n\njspb.BinaryWriter.prototype.getResultBase64String = function (a) {\n  return goog.crypt.base64.encodeByteArray(this.getResultBuffer(), a);\n};\n\njspb.BinaryWriter.prototype.beginSubMessage = function (a) {\n  this.bookmarks_.push(this.beginDelimited_(a));\n};\n\njspb.BinaryWriter.prototype.endSubMessage = function () {\n  goog.asserts.assert(0 <= this.bookmarks_.length);\n  this.endDelimited_(this.bookmarks_.pop());\n};\n\njspb.BinaryWriter.prototype.writeFieldHeader_ = function (a, b) {\n  goog.asserts.assert(1 <= a && a == Math.floor(a));\n  this.encoder_.writeUnsignedVarint32(8 * a + b);\n};\n\njspb.BinaryWriter.prototype.writeAny = function (a, b, c) {\n  var d = jspb.BinaryConstants.FieldType;\n\n  switch (a) {\n    case d.DOUBLE:\n      this.writeDouble(b, c);\n      break;\n\n    case d.FLOAT:\n      this.writeFloat(b, c);\n      break;\n\n    case d.INT64:\n      this.writeInt64(b, c);\n      break;\n\n    case d.UINT64:\n      this.writeUint64(b, c);\n      break;\n\n    case d.INT32:\n      this.writeInt32(b, c);\n      break;\n\n    case d.FIXED64:\n      this.writeFixed64(b, c);\n      break;\n\n    case d.FIXED32:\n      this.writeFixed32(b, c);\n      break;\n\n    case d.BOOL:\n      this.writeBool(b, c);\n      break;\n\n    case d.STRING:\n      this.writeString(b, c);\n      break;\n\n    case d.GROUP:\n      goog.asserts.fail(\"Group field type not supported in writeAny()\");\n      break;\n\n    case d.MESSAGE:\n      goog.asserts.fail(\"Message field type not supported in writeAny()\");\n      break;\n\n    case d.BYTES:\n      this.writeBytes(b, c);\n      break;\n\n    case d.UINT32:\n      this.writeUint32(b, c);\n      break;\n\n    case d.ENUM:\n      this.writeEnum(b, c);\n      break;\n\n    case d.SFIXED32:\n      this.writeSfixed32(b, c);\n      break;\n\n    case d.SFIXED64:\n      this.writeSfixed64(b, c);\n      break;\n\n    case d.SINT32:\n      this.writeSint32(b, c);\n      break;\n\n    case d.SINT64:\n      this.writeSint64(b, c);\n      break;\n\n    case d.FHASH64:\n      this.writeFixedHash64(b, c);\n      break;\n\n    case d.VHASH64:\n      this.writeVarintHash64(b, c);\n      break;\n\n    default:\n      goog.asserts.fail(\"Invalid field type in writeAny()\");\n  }\n};\n\njspb.BinaryWriter.prototype.writeUnsignedVarint32_ = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint32(b));\n};\n\njspb.BinaryWriter.prototype.writeSignedVarint32_ = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b));\n};\n\njspb.BinaryWriter.prototype.writeUnsignedVarint64_ = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeUnsignedVarint64(b));\n};\n\njspb.BinaryWriter.prototype.writeSignedVarint64_ = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint64(b));\n};\n\njspb.BinaryWriter.prototype.writeZigzagVarint32_ = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint32(b));\n};\n\njspb.BinaryWriter.prototype.writeZigzagVarint64_ = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64(b));\n};\n\njspb.BinaryWriter.prototype.writeZigzagVarint64String_ = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeZigzagVarint64String(b));\n};\n\njspb.BinaryWriter.prototype.writeInt32 = function (a, b) {\n  null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeInt32String = function (a, b) {\n  null != b && (b = parseInt(b, 10), goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeSignedVarint32_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeInt64 = function (a, b) {\n  null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeSignedVarint64_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeInt64String = function (a, b) {\n  null != b && (b = jspb.arith.Int64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b.lo, b.hi));\n};\n\njspb.BinaryWriter.prototype.writeUint32 = function (a, b) {\n  null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeUint32String = function (a, b) {\n  null != b && (b = parseInt(b, 10), goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeUnsignedVarint32_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeUint64 = function (a, b) {\n  null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeUnsignedVarint64_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeUint64String = function (a, b) {\n  null != b && (b = jspb.arith.UInt64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSplitVarint64(b.lo, b.hi));\n};\n\njspb.BinaryWriter.prototype.writeSint32 = function (a, b) {\n  null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeZigzagVarint32_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeSint64 = function (a, b) {\n  null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeSint64String = function (a, b) {\n  null != b && (goog.asserts.assert(+b >= -jspb.BinaryConstants.TWO_TO_63 && +b < jspb.BinaryConstants.TWO_TO_63), this.writeZigzagVarint64String_(a, b));\n};\n\njspb.BinaryWriter.prototype.writeFixed32 = function (a, b) {\n  null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_32), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeUint32(b));\n};\n\njspb.BinaryWriter.prototype.writeFixed64 = function (a, b) {\n  null != b && (goog.asserts.assert(0 <= b && b < jspb.BinaryConstants.TWO_TO_64), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeUint64(b));\n};\n\njspb.BinaryWriter.prototype.writeFixed64String = function (a, b) {\n  null != b && (b = jspb.arith.UInt64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b.lo, b.hi));\n};\n\njspb.BinaryWriter.prototype.writeSfixed32 = function (a, b) {\n  null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeInt32(b));\n};\n\njspb.BinaryWriter.prototype.writeSfixed64 = function (a, b) {\n  null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_63 && b < jspb.BinaryConstants.TWO_TO_63), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeInt64(b));\n};\n\njspb.BinaryWriter.prototype.writeSfixed64String = function (a, b) {\n  null != b && (b = jspb.arith.Int64.fromString(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeSplitFixed64(b.lo, b.hi));\n};\n\njspb.BinaryWriter.prototype.writeFloat = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED32), this.encoder_.writeFloat(b));\n};\n\njspb.BinaryWriter.prototype.writeDouble = function (a, b) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeDouble(b));\n};\n\njspb.BinaryWriter.prototype.writeBool = function (a, b) {\n  null != b && (goog.asserts.assert(goog.isBoolean(b) || goog.isNumber(b)), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeBool(b));\n};\n\njspb.BinaryWriter.prototype.writeEnum = function (a, b) {\n  null != b && (goog.asserts.assert(b >= -jspb.BinaryConstants.TWO_TO_31 && b < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(b));\n};\n\njspb.BinaryWriter.prototype.writeString = function (a, b) {\n  null != b && (a = this.beginDelimited_(a), this.encoder_.writeString(b), this.endDelimited_(a));\n};\n\njspb.BinaryWriter.prototype.writeBytes = function (a, b) {\n  null != b && (b = jspb.utils.byteSourceToUint8Array(b), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(b.length), this.appendUint8Array_(b));\n};\n\njspb.BinaryWriter.prototype.writeMessage = function (a, b, c) {\n  null != b && (a = this.beginDelimited_(a), c(b, this), this.endDelimited_(a));\n};\n\njspb.BinaryWriter.prototype.writeMessageSet = function (a, b, c) {\n  null != b && (this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.START_GROUP), this.writeFieldHeader_(2, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(a), a = this.beginDelimited_(3), c(b, this), this.endDelimited_(a), this.writeFieldHeader_(1, jspb.BinaryConstants.WireType.END_GROUP));\n};\n\njspb.BinaryWriter.prototype.writeGroup = function (a, b, c) {\n  null != b && (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b, this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP));\n};\n\njspb.BinaryWriter.prototype.writeFixedHash64 = function (a, b) {\n  null != b && (goog.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.FIXED64), this.encoder_.writeFixedHash64(b));\n};\n\njspb.BinaryWriter.prototype.writeVarintHash64 = function (a, b) {\n  null != b && (goog.asserts.assert(8 == b.length), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeVarintHash64(b));\n};\n\njspb.BinaryWriter.prototype.writeRepeatedInt32 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeSignedVarint32_(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedInt32String = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeInt32String(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedInt64 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeSignedVarint64_(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedInt64String = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeInt64String(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedUint32 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeUnsignedVarint32_(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedUint32String = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeUint32String(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedUint64 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeUnsignedVarint64_(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedUint64String = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeUint64String(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedSint32 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeZigzagVarint32_(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedSint64 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeZigzagVarint64_(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedSint64String = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeZigzagVarint64String_(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedFixed32 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeFixed32(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedFixed64 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeFixed64(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedFixed64String = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeFixed64String(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedSfixed32 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeSfixed32(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedSfixed64 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeSfixed64(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedSfixed64String = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeSfixed64String(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedFloat = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeFloat(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedDouble = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeDouble(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedBool = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeBool(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedEnum = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeEnum(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedString = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeString(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedBytes = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeBytes(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedMessage = function (a, b, c) {\n  if (null != b) for (var d = 0; d < b.length; d++) {\n    var e = this.beginDelimited_(a);\n    c(b[d], this);\n    this.endDelimited_(e);\n  }\n};\n\njspb.BinaryWriter.prototype.writeRepeatedGroup = function (a, b, c) {\n  if (null != b) for (var d = 0; d < b.length; d++) this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.START_GROUP), c(b[d], this), this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.END_GROUP);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedFixedHash64 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeFixedHash64(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writeRepeatedVarintHash64 = function (a, b) {\n  if (null != b) for (var c = 0; c < b.length; c++) this.writeVarintHash64(a, b[c]);\n};\n\njspb.BinaryWriter.prototype.writePackedInt32 = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeSignedVarint32(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedInt32String = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeSignedVarint32(parseInt(b[c], 10));\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedInt64 = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeSignedVarint64(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedInt64String = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) {\n      var d = jspb.arith.Int64.fromString(b[c]);\n      this.encoder_.writeSplitVarint64(d.lo, d.hi);\n    }\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedUint32 = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeUnsignedVarint32(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedUint32String = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeUnsignedVarint32(parseInt(b[c], 10));\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedUint64 = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeUnsignedVarint64(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedUint64String = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) {\n      var d = jspb.arith.UInt64.fromString(b[c]);\n      this.encoder_.writeSplitVarint64(d.lo, d.hi);\n    }\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedSint32 = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeZigzagVarint32(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedSint64 = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeZigzagVarint64(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedSint64String = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeZigzagVarint64(parseInt(b[c], 10));\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedFixed32 = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b.length), a = 0; a < b.length; a++) this.encoder_.writeUint32(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedFixed64 = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++) this.encoder_.writeUint64(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedFixed64String = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++) {\n    var c = jspb.arith.UInt64.fromString(b[a]);\n    this.encoder_.writeSplitFixed64(c.lo, c.hi);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedSfixed32 = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b.length), a = 0; a < b.length; a++) this.encoder_.writeInt32(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedSfixed64 = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++) this.encoder_.writeInt64(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedSfixed64String = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++) this.encoder_.writeInt64String(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedFloat = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(4 * b.length), a = 0; a < b.length; a++) this.encoder_.writeFloat(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedDouble = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++) this.encoder_.writeDouble(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedBool = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(b.length), a = 0; a < b.length; a++) this.encoder_.writeBool(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedEnum = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeEnum(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.BinaryWriter.prototype.writePackedFixedHash64 = function (a, b) {\n  if (null != b && b.length) for (this.writeFieldHeader_(a, jspb.BinaryConstants.WireType.DELIMITED), this.encoder_.writeUnsignedVarint32(8 * b.length), a = 0; a < b.length; a++) this.encoder_.writeFixedHash64(b[a]);\n};\n\njspb.BinaryWriter.prototype.writePackedVarintHash64 = function (a, b) {\n  if (null != b && b.length) {\n    a = this.beginDelimited_(a);\n\n    for (var c = 0; c < b.length; c++) this.encoder_.writeVarintHash64(b[c]);\n\n    this.endDelimited_(a);\n  }\n};\n\njspb.Export = {};\nexports.Map = jspb.Map;\nexports.Message = jspb.Message;\nexports.BinaryReader = jspb.BinaryReader;\nexports.BinaryWriter = jspb.BinaryWriter;\nexports.ExtensionFieldInfo = jspb.ExtensionFieldInfo;\nexports.ExtensionFieldBinaryInfo = jspb.ExtensionFieldBinaryInfo;\nexports.exportSymbol = goog.exportSymbol;\nexports.inherits = goog.inherits;\nexports.object = {\n  extend: goog.object.extend\n};\nexports.typeOf = goog.typeOf;\n\n//# sourceURL=webpack://test/./node_modules/google-protobuf/google-protobuf.js?");

/***/ }),

/***/ "./node_modules/google-protobuf/google/protobuf/duration_pb.js":
/*!*********************************************************************!*\
  !*** ./node_modules/google-protobuf/google/protobuf/duration_pb.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.google.protobuf.Duration', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.google.protobuf.Duration = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.google.protobuf.Duration, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.google.protobuf.Duration.displayName = 'proto.google.protobuf.Duration';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.google.protobuf.Duration.prototype.toObject = function (opt_includeInstance) {\n    return proto.google.protobuf.Duration.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.google.protobuf.Duration} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.google.protobuf.Duration.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      seconds: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.Duration}\n */\n\n\nproto.google.protobuf.Duration.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.Duration();\n  return proto.google.protobuf.Duration.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.Duration} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.Duration}\n */\n\n\nproto.google.protobuf.Duration.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setSeconds(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setNanos(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.google.protobuf.Duration.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.Duration.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.Duration} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.google.protobuf.Duration.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSeconds();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = message.getNanos();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n};\n/**\n * optional int64 seconds = 1;\n * @return {number}\n */\n\n\nproto.google.protobuf.Duration.prototype.getSeconds = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.google.protobuf.Duration.prototype.setSeconds = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int32 nanos = 2;\n * @return {number}\n */\n\n\nproto.google.protobuf.Duration.prototype.getNanos = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.google.protobuf.Duration.prototype.setNanos = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\ngoog.object.extend(exports, proto.google.protobuf);\n\n//# sourceURL=webpack://test/./node_modules/google-protobuf/google/protobuf/duration_pb.js?");

/***/ }),

/***/ "./node_modules/google-protobuf/google/protobuf/timestamp_pb.js":
/*!**********************************************************************!*\
  !*** ./node_modules/google-protobuf/google/protobuf/timestamp_pb.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.google.protobuf.Timestamp', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.google.protobuf.Timestamp = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.google.protobuf.Timestamp, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.google.protobuf.Timestamp.displayName = 'proto.google.protobuf.Timestamp';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.google.protobuf.Timestamp.prototype.toObject = function (opt_includeInstance) {\n    return proto.google.protobuf.Timestamp.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.google.protobuf.Timestamp} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.google.protobuf.Timestamp.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      seconds: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.Timestamp}\n */\n\n\nproto.google.protobuf.Timestamp.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.Timestamp();\n  return proto.google.protobuf.Timestamp.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.Timestamp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.Timestamp}\n */\n\n\nproto.google.protobuf.Timestamp.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setSeconds(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setNanos(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.google.protobuf.Timestamp.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.Timestamp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.Timestamp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.google.protobuf.Timestamp.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSeconds();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = message.getNanos();\n\n  if (f !== 0) {\n    writer.writeInt32(2, f);\n  }\n};\n/**\n * optional int64 seconds = 1;\n * @return {number}\n */\n\n\nproto.google.protobuf.Timestamp.prototype.getSeconds = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.google.protobuf.Timestamp.prototype.setSeconds = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int32 nanos = 2;\n * @return {number}\n */\n\n\nproto.google.protobuf.Timestamp.prototype.getNanos = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.google.protobuf.Timestamp.prototype.setNanos = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\ngoog.object.extend(exports, proto.google.protobuf);\n/* This code will be inserted into generated code for\n * google/protobuf/timestamp.proto. */\n\n/**\n * Returns a JavaScript 'Date' object corresponding to this Timestamp.\n * @return {!Date}\n */\n\nproto.google.protobuf.Timestamp.prototype.toDate = function () {\n  var seconds = this.getSeconds();\n  var nanos = this.getNanos();\n  return new Date(seconds * 1000 + nanos / 1000000);\n};\n/**\n * Sets the value of this Timestamp object to be the given Date.\n * @param {!Date} value The value to set.\n */\n\n\nproto.google.protobuf.Timestamp.prototype.fromDate = function (value) {\n  this.setSeconds(Math.floor(value.getTime() / 1000));\n  this.setNanos(value.getMilliseconds() * 1000000);\n};\n/**\n * Factory method that returns a Timestamp object with value equal to\n * the given Date.\n * @param {!Date} value The value to set.\n * @return {!proto.google.protobuf.Timestamp}\n */\n\n\nproto.google.protobuf.Timestamp.fromDate = function (value) {\n  var timestamp = new proto.google.protobuf.Timestamp();\n  timestamp.fromDate(value);\n  return timestamp;\n};\n\n//# sourceURL=webpack://test/./node_modules/google-protobuf/google/protobuf/timestamp_pb.js?");

/***/ }),

/***/ "./node_modules/grpc-web/index.js":
/*!****************************************!*\
  !*** ./node_modules/grpc-web/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nfunction aa(a) {\n  var b = 0;\n  return function () {\n    return b < a.length ? {\n      done: !1,\n      value: a[b++]\n    } : {\n      done: !0\n    };\n  };\n}\n\nvar ba = \"function\" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {\n  a != Array.prototype && a != Object.prototype && (a[b] = c.value);\n};\n\nfunction ca(a) {\n  a = [\"object\" == typeof window && window, \"object\" == typeof self && self, \"object\" == typeof __webpack_require__.g && __webpack_require__.g, a];\n\n  for (var b = 0; b < a.length; ++b) {\n    var c = a[b];\n    if (c && c.Math == Math) return c;\n  }\n\n  throw Error(\"Cannot find global object\");\n}\n\nvar da = ca(this);\n\nfunction ea(a, b) {\n  if (b) {\n    var c = da;\n    a = a.split(\".\");\n\n    for (var d = 0; d < a.length - 1; d++) {\n      var f = a[d];\n      f in c || (c[f] = {});\n      c = c[f];\n    }\n\n    a = a[a.length - 1];\n    d = c[a];\n    b = b(d);\n    b != d && null != b && ba(c, a, {\n      configurable: !0,\n      writable: !0,\n      value: b\n    });\n  }\n}\n\nea(\"Object.is\", function (a) {\n  return a ? a : function (b, c) {\n    return b === c ? 0 !== b || 1 / b === 1 / c : b !== b && c !== c;\n  };\n});\nea(\"Array.prototype.includes\", function (a) {\n  return a ? a : function (b, c) {\n    var d = this;\n    d instanceof String && (d = String(d));\n    var f = d.length;\n    c = c || 0;\n\n    for (0 > c && (c = Math.max(c + f, 0)); c < f; c++) {\n      var g = d[c];\n      if (g === b || Object.is(g, b)) return !0;\n    }\n\n    return !1;\n  };\n});\n\nfunction fa(a) {\n  var b = \"undefined\" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];\n  return b ? b.call(a) : {\n    next: aa(a)\n  };\n}\n\nea(\"Promise\", function (a) {\n  function b(e) {\n    this.b = 0;\n    this.c = void 0;\n    this.a = [];\n    var h = this.f();\n\n    try {\n      e(h.resolve, h.reject);\n    } catch (k) {\n      h.reject(k);\n    }\n  }\n\n  function c() {\n    this.a = null;\n  }\n\n  function d(e) {\n    return e instanceof b ? e : new b(function (h) {\n      h(e);\n    });\n  }\n\n  if (a) return a;\n\n  c.prototype.b = function (e) {\n    if (null == this.a) {\n      this.a = [];\n      var h = this;\n      this.c(function () {\n        h.g();\n      });\n    }\n\n    this.a.push(e);\n  };\n\n  var f = da.setTimeout;\n\n  c.prototype.c = function (e) {\n    f(e, 0);\n  };\n\n  c.prototype.g = function () {\n    for (; this.a && this.a.length;) {\n      var e = this.a;\n      this.a = [];\n\n      for (var h = 0; h < e.length; ++h) {\n        var k = e[h];\n        e[h] = null;\n\n        try {\n          k();\n        } catch (l) {\n          this.f(l);\n        }\n      }\n    }\n\n    this.a = null;\n  };\n\n  c.prototype.f = function (e) {\n    this.c(function () {\n      throw e;\n    });\n  };\n\n  b.prototype.f = function () {\n    function e(l) {\n      return function (m) {\n        k || (k = !0, l.call(h, m));\n      };\n    }\n\n    var h = this,\n        k = !1;\n    return {\n      resolve: e(this.m),\n      reject: e(this.g)\n    };\n  };\n\n  b.prototype.m = function (e) {\n    if (e === this) this.g(new TypeError(\"A Promise cannot resolve to itself\"));else if (e instanceof b) this.o(e);else {\n      a: switch (typeof e) {\n        case \"object\":\n          var h = null != e;\n          break a;\n\n        case \"function\":\n          h = !0;\n          break a;\n\n        default:\n          h = !1;\n      }\n\n      h ? this.l(e) : this.h(e);\n    }\n  };\n\n  b.prototype.l = function (e) {\n    var h = void 0;\n\n    try {\n      h = e.then;\n    } catch (k) {\n      this.g(k);\n      return;\n    }\n\n    \"function\" == typeof h ? this.u(h, e) : this.h(e);\n  };\n\n  b.prototype.g = function (e) {\n    this.i(2, e);\n  };\n\n  b.prototype.h = function (e) {\n    this.i(1, e);\n  };\n\n  b.prototype.i = function (e, h) {\n    if (0 != this.b) throw Error(\"Cannot settle(\" + e + \", \" + h + \"): Promise already settled in state\" + this.b);\n    this.b = e;\n    this.c = h;\n    this.j();\n  };\n\n  b.prototype.j = function () {\n    if (null != this.a) {\n      for (var e = 0; e < this.a.length; ++e) g.b(this.a[e]);\n\n      this.a = null;\n    }\n  };\n\n  var g = new c();\n\n  b.prototype.o = function (e) {\n    var h = this.f();\n    e.w(h.resolve, h.reject);\n  };\n\n  b.prototype.u = function (e, h) {\n    var k = this.f();\n\n    try {\n      e.call(h, k.resolve, k.reject);\n    } catch (l) {\n      k.reject(l);\n    }\n  };\n\n  b.prototype.then = function (e, h) {\n    function k(n, v) {\n      return \"function\" == typeof n ? function (x) {\n        try {\n          l(n(x));\n        } catch (F) {\n          m(F);\n        }\n      } : v;\n    }\n\n    var l,\n        m,\n        p = new b(function (n, v) {\n      l = n;\n      m = v;\n    });\n    this.w(k(e, l), k(h, m));\n    return p;\n  };\n\n  b.prototype.catch = function (e) {\n    return this.then(void 0, e);\n  };\n\n  b.prototype.w = function (e, h) {\n    function k() {\n      switch (l.b) {\n        case 1:\n          e(l.c);\n          break;\n\n        case 2:\n          h(l.c);\n          break;\n\n        default:\n          throw Error(\"Unexpected state: \" + l.b);\n      }\n    }\n\n    var l = this;\n    null == this.a ? g.b(k) : this.a.push(k);\n  };\n\n  b.resolve = d;\n\n  b.reject = function (e) {\n    return new b(function (h, k) {\n      k(e);\n    });\n  };\n\n  b.race = function (e) {\n    return new b(function (h, k) {\n      for (var l = fa(e), m = l.next(); !m.done; m = l.next()) d(m.value).w(h, k);\n    });\n  };\n\n  b.all = function (e) {\n    var h = fa(e),\n        k = h.next();\n    return k.done ? d([]) : new b(function (l, m) {\n      function p(x) {\n        return function (F) {\n          n[x] = F;\n          v--;\n          0 == v && l(n);\n        };\n      }\n\n      var n = [],\n          v = 0;\n\n      do n.push(void 0), v++, d(k.value).w(p(n.length - 1), m), k = h.next(); while (!k.done);\n    });\n  };\n\n  return b;\n});\nvar ha = ha || {},\n    q = this || self;\n\nfunction r(a, b) {\n  a = a.split(\".\");\n  b = b || q;\n\n  for (var c = 0; c < a.length; c++) if (b = b[a[c]], null == b) return null;\n\n  return b;\n}\n\nfunction t() {}\n\nfunction ia(a) {\n  var b = typeof a;\n  if (\"object\" == b) {\n    if (a) {\n      if (a instanceof Array) return \"array\";\n      if (a instanceof Object) return b;\n      var c = Object.prototype.toString.call(a);\n      if (\"[object Window]\" == c) return \"object\";\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) return \"array\";\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) return \"function\";\n    } else return \"null\";\n  } else if (\"function\" == b && \"undefined\" == typeof a.call) return \"object\";\n  return b;\n}\n\nfunction u(a) {\n  var b = typeof a;\n  return \"object\" == b && null != a || \"function\" == b;\n}\n\nvar ja = \"closure_uid_\" + (1E9 * Math.random() >>> 0),\n    ka = 0;\n\nfunction la(a, b, c) {\n  return a.call.apply(a.bind, arguments);\n}\n\nfunction ma(a, b, c) {\n  if (!a) throw Error();\n\n  if (2 < arguments.length) {\n    var d = Array.prototype.slice.call(arguments, 2);\n    return function () {\n      var f = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(f, d);\n      return a.apply(b, f);\n    };\n  }\n\n  return function () {\n    return a.apply(b, arguments);\n  };\n}\n\nfunction w(a, b, c) {\n  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? w = la : w = ma;\n  return w.apply(null, arguments);\n}\n\nvar na = Date.now || function () {\n  return +new Date();\n};\n\nfunction y(a, b) {\n  function c() {}\n\n  c.prototype = b.prototype;\n  a.S = b.prototype;\n  a.prototype = new c();\n  a.prototype.constructor = a;\n}\n\n;\n\nfunction oa() {\n  this.a = {};\n}\n\noa.prototype.get = function (a) {\n  return this.a[a];\n};\n\noa.prototype.f = function () {\n  return Object.keys(this.a);\n};\n\nfunction z(a, b, c, d) {\n  this.f = a;\n  this.c = b;\n  this.b = c;\n  this.a = d;\n}\n\nz.prototype.getRequestMessage = function () {\n  return this.f;\n};\n\nz.prototype.getMethodDescriptor = function () {\n  return this.c;\n};\n\nz.prototype.getMetadata = function () {\n  return this.b;\n};\n\nz.prototype.getCallOptions = function () {\n  return this.a;\n};\n\nfunction A(a, b, c, d) {\n  c = void 0 === c ? {} : c;\n  this.c = a;\n  this.a = c;\n  this.b = b;\n  this.f = void 0 === d ? null : d;\n}\n\nA.prototype.getResponseMessage = function () {\n  return this.c;\n};\n\nA.prototype.getMetadata = function () {\n  return this.a;\n};\n\nA.prototype.getMethodDescriptor = function () {\n  return this.b;\n};\n\nA.prototype.getStatus = function () {\n  return this.f;\n};\n\nfunction pa(a, b, c, d, f, g) {\n  this.name = a;\n  this.a = f;\n  this.b = g;\n}\n\nfunction qa(a, b, c) {\n  c = void 0 === c ? {} : c;\n  var d = void 0 === d ? new oa() : d;\n  return new z(b, a, c, d);\n}\n\n;\n\nfunction ra(a, b, c, d) {\n  return d instanceof pa ? d : new pa(a, c, d.b || b.constructor, d.f, d.a, d.c);\n}\n\n;\n\nfunction B(a) {\n  this.a = a;\n}\n\nB.prototype.on = function (a, b) {\n  return \"data\" == a || \"error\" == a ? this : this.a.on(a, b);\n};\n\nB.prototype.removeListener = function (a, b) {\n  return this.a.removeListener(a, b);\n};\n\nB.prototype.cancel = function () {\n  this.a.cancel();\n};\n\nfunction sa(a) {\n  switch (a) {\n    case 0:\n      return \"No Error\";\n\n    case 1:\n      return \"Access denied to content document\";\n\n    case 2:\n      return \"File not found\";\n\n    case 3:\n      return \"Firefox silently errored\";\n\n    case 4:\n      return \"Application custom error\";\n\n    case 5:\n      return \"An exception occurred\";\n\n    case 6:\n      return \"Http response at 400 or 500 level\";\n\n    case 7:\n      return \"Request was aborted\";\n\n    case 8:\n      return \"Request timed out\";\n\n    case 9:\n      return \"The resource is not available offline\";\n\n    default:\n      return \"Unrecognized error code\";\n  }\n}\n\n;\n\nfunction C(a) {\n  if (Error.captureStackTrace) Error.captureStackTrace(this, C);else {\n    var b = Error().stack;\n    b && (this.stack = b);\n  }\n  a && (this.message = String(a));\n}\n\ny(C, Error);\nC.prototype.name = \"CustomError\";\n\nfunction ta(a, b) {\n  a = a.split(\"%s\");\n\n  for (var c = \"\", d = a.length - 1, f = 0; f < d; f++) c += a[f] + (f < b.length ? b[f] : \"%s\");\n\n  C.call(this, c + a[d]);\n}\n\ny(ta, C);\nta.prototype.name = \"AssertionError\";\n\nfunction ua(a, b) {\n  throw new ta(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1));\n}\n\n;\n\nfunction va() {\n  this.j = null;\n  this.i = [];\n  this.l = 0;\n  this.b = wa;\n  this.f = this.a = this.h = 0;\n  this.c = null;\n  this.g = 0;\n}\n\nfunction xa(a, b) {\n  function c(l) {\n    l == ya ? e.h = l : l == D ? e.h = l : za(e, h, k, \"invalid frame byte\");\n    e.b = Aa;\n    e.a = 0;\n    e.f = 0;\n  }\n\n  function d(l) {\n    e.f++;\n    e.a = (e.a << 8) + l;\n    4 == e.f && (e.b = Ba, e.g = 0, \"undefined\" !== typeof Uint8Array ? e.c = new Uint8Array(e.a) : e.c = Array(e.a), 0 == e.a && g());\n  }\n\n  function f(l) {\n    e.c[e.g++] = l;\n    e.g == e.a && g();\n  }\n\n  function g() {\n    var l = {};\n    l[e.h] = e.c;\n    e.i.push(l);\n    e.b = wa;\n  }\n\n  var e = a,\n      h,\n      k = 0;\n\n  for (b instanceof Uint8Array || b instanceof Array ? h = b : h = new Uint8Array(b); k < h.length;) {\n    switch (e.b) {\n      case Ca:\n        za(e, h, k, \"stream already broken\");\n        break;\n\n      case wa:\n        c(h[k]);\n        break;\n\n      case Aa:\n        d(h[k]);\n        break;\n\n      case Ba:\n        f(h[k]);\n        break;\n\n      default:\n        throw Error(\"unexpected parser state: \" + e.b);\n    }\n\n    e.l++;\n    k++;\n  }\n\n  a = e.i;\n  e.i = [];\n  return 0 < a.length ? a : null;\n}\n\nvar wa = 0,\n    Aa = 1,\n    Ba = 2,\n    Ca = 3,\n    ya = 0,\n    D = 128;\n\nfunction za(a, b, c, d) {\n  a.b = Ca;\n  a.j = \"The stream is broken @\" + a.l + \"/\" + c + \". Error: \" + d + \". With input:\\n\" + b;\n  throw Error(a.j);\n}\n\n;\n\nfunction Da(a) {\n  switch (a) {\n    case 200:\n      return 0;\n\n    case 400:\n      return 3;\n\n    case 401:\n      return 16;\n\n    case 403:\n      return 7;\n\n    case 404:\n      return 5;\n\n    case 409:\n      return 10;\n\n    case 412:\n      return 9;\n\n    case 429:\n      return 8;\n\n    case 499:\n      return 1;\n\n    case 500:\n      return 2;\n\n    case 501:\n      return 12;\n\n    case 503:\n      return 14;\n\n    case 504:\n      return 4;\n\n    default:\n      return 2;\n  }\n}\n\n;\nvar Ea = Array.prototype.indexOf ? function (a, b) {\n  return Array.prototype.indexOf.call(a, b, void 0);\n} : function (a, b) {\n  if (\"string\" === typeof a) return \"string\" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);\n\n  for (var c = 0; c < a.length; c++) if (c in a && a[c] === b) return c;\n\n  return -1;\n};\n\nfunction Fa(a) {\n  a: {\n    var b = Ga;\n\n    for (var c = a.length, d = \"string\" === typeof a ? a.split(\"\") : a, f = 0; f < c; f++) if (f in d && b.call(void 0, d[f], f, a)) {\n      b = f;\n      break a;\n    }\n\n    b = -1;\n  }\n\n  return 0 > b ? null : \"string\" === typeof a ? a.charAt(b) : a[b];\n}\n\n;\nvar Ha = String.prototype.trim ? function (a) {\n  return a.trim();\n} : function (a) {\n  return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1];\n};\n\nfunction E(a, b) {\n  return -1 != a.indexOf(b);\n}\n\nfunction Ia(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n;\nvar G;\n\na: {\n  var Ja = q.navigator;\n\n  if (Ja) {\n    var Ka = Ja.userAgent;\n\n    if (Ka) {\n      G = Ka;\n      break a;\n    }\n  }\n\n  G = \"\";\n}\n\n;\n\nfunction La(a, b) {\n  for (var c in a) b.call(void 0, a[c], c, a);\n}\n\nfunction Ma(a, b) {\n  var c = {},\n      d;\n\n  for (d in a) c[d] = b.call(void 0, a[d], d, a);\n\n  return c;\n}\n\nvar Na = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\n\nfunction Oa(a, b) {\n  for (var c, d, f = 1; f < arguments.length; f++) {\n    d = arguments[f];\n\n    for (c in d) a[c] = d[c];\n\n    for (var g = 0; g < Na.length; g++) c = Na[g], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\n  }\n}\n\n;\n\nfunction Pa(a) {\n  var b = 1;\n  a = a.split(\":\");\n\n  for (var c = []; 0 < b && a.length;) c.push(a.shift()), b--;\n\n  a.length && c.push(a.join(\":\"));\n  return c;\n}\n\n;\n\nfunction Qa(a) {\n  Qa[\" \"](a);\n  return a;\n}\n\nQa[\" \"] = t;\n\nfunction Ra(a, b) {\n  var c = Sa;\n  return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);\n}\n\n;\nvar Ta = E(G, \"Opera\"),\n    H = E(G, \"Trident\") || E(G, \"MSIE\"),\n    Ua = E(G, \"Edge\"),\n    Va = E(G, \"Gecko\") && !(E(G.toLowerCase(), \"webkit\") && !E(G, \"Edge\")) && !(E(G, \"Trident\") || E(G, \"MSIE\")) && !E(G, \"Edge\"),\n    Wa = E(G.toLowerCase(), \"webkit\") && !E(G, \"Edge\");\n\nfunction Xa() {\n  var a = q.document;\n  return a ? a.documentMode : void 0;\n}\n\nvar I;\n\na: {\n  var Ya = \"\",\n      Za = function () {\n    var a = G;\n    if (Va) return /rv:([^\\);]+)(\\)|;)/.exec(a);\n    if (Ua) return /Edge\\/([\\d\\.]+)/.exec(a);\n    if (H) return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);\n    if (Wa) return /WebKit\\/(\\S+)/.exec(a);\n    if (Ta) return /(?:Version)[ \\/]?(\\S+)/.exec(a);\n  }();\n\n  Za && (Ya = Za ? Za[1] : \"\");\n\n  if (H) {\n    var $a = Xa();\n\n    if (null != $a && $a > parseFloat(Ya)) {\n      I = String($a);\n      break a;\n    }\n  }\n\n  I = Ya;\n}\n\nvar Sa = {};\n\nfunction ab(a) {\n  return Ra(a, function () {\n    for (var b = 0, c = Ha(String(I)).split(\".\"), d = Ha(String(a)).split(\".\"), f = Math.max(c.length, d.length), g = 0; 0 == b && g < f; g++) {\n      var e = c[g] || \"\",\n          h = d[g] || \"\";\n\n      do {\n        e = /(\\d*)(\\D*)(.*)/.exec(e) || [\"\", \"\", \"\", \"\"];\n        h = /(\\d*)(\\D*)(.*)/.exec(h) || [\"\", \"\", \"\", \"\"];\n        if (0 == e[0].length && 0 == h[0].length) break;\n        b = Ia(0 == e[1].length ? 0 : parseInt(e[1], 10), 0 == h[1].length ? 0 : parseInt(h[1], 10)) || Ia(0 == e[2].length, 0 == h[2].length) || Ia(e[2], h[2]);\n        e = e[3];\n        h = h[3];\n      } while (0 == b);\n    }\n\n    return 0 <= b;\n  });\n}\n\nvar bb;\n\nif (q.document && H) {\n  var cb = Xa();\n  bb = cb ? cb : parseInt(I, 10) || void 0;\n} else bb = void 0;\n\nvar db = bb;\n\nfunction eb() {\n  0 != fb && (Object.prototype.hasOwnProperty.call(this, ja) && this[ja] || (this[ja] = ++ka));\n  this.F = this.F;\n}\n\nvar fb = 0;\neb.prototype.F = !1;\n\nvar gb = Object.freeze || function (a) {\n  return a;\n};\n\nvar hb;\n(hb = !H) || (hb = 9 <= Number(db));\n\nvar ib = hb,\n    jb = H && !ab(\"9\"),\n    kb = function () {\n  if (!q.addEventListener || !Object.defineProperty) return !1;\n  var a = !1,\n      b = Object.defineProperty({}, \"passive\", {\n    get: function () {\n      a = !0;\n    }\n  });\n\n  try {\n    q.addEventListener(\"test\", t, b), q.removeEventListener(\"test\", t, b);\n  } catch (c) {}\n\n  return a;\n}();\n\nfunction J(a, b) {\n  this.type = a;\n  this.a = this.target = b;\n  this.defaultPrevented = !1;\n}\n\nJ.prototype.b = function () {\n  this.defaultPrevented = !0;\n};\n\nfunction K(a, b) {\n  J.call(this, a ? a.type : \"\");\n  this.relatedTarget = this.a = this.target = null;\n  this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;\n  this.key = \"\";\n  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;\n  this.pointerId = 0;\n  this.pointerType = \"\";\n  this.c = null;\n\n  if (a) {\n    var c = this.type = a.type,\n        d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;\n    this.target = a.target || a.srcElement;\n    this.a = b;\n\n    if (b = a.relatedTarget) {\n      if (Va) {\n        a: {\n          try {\n            Qa(b.nodeName);\n            var f = !0;\n            break a;\n          } catch (g) {}\n\n          f = !1;\n        }\n\n        f || (b = null);\n      }\n    } else \"mouseover\" == c ? b = a.fromElement : \"mouseout\" == c && (b = a.toElement);\n\n    this.relatedTarget = b;\n    d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);\n    this.button = a.button;\n    this.key = a.key || \"\";\n    this.ctrlKey = a.ctrlKey;\n    this.altKey = a.altKey;\n    this.shiftKey = a.shiftKey;\n    this.metaKey = a.metaKey;\n    this.pointerId = a.pointerId || 0;\n    this.pointerType = \"string\" === typeof a.pointerType ? a.pointerType : lb[a.pointerType] || \"\";\n    this.c = a;\n    a.defaultPrevented && this.b();\n  }\n}\n\ny(K, J);\nvar lb = gb({\n  2: \"touch\",\n  3: \"pen\",\n  4: \"mouse\"\n});\n\nK.prototype.b = function () {\n  K.S.b.call(this);\n  var a = this.c;\n  if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, jb) try {\n    if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;\n  } catch (b) {}\n};\n\nvar L = \"closure_listenable_\" + (1E6 * Math.random() | 0),\n    mb = 0;\n\nfunction nb(a, b, c, d, f) {\n  this.listener = a;\n  this.proxy = null;\n  this.src = b;\n  this.type = c;\n  this.capture = !!d;\n  this.A = f;\n  this.key = ++mb;\n  this.s = this.v = !1;\n}\n\nfunction ob(a) {\n  a.s = !0;\n  a.listener = null;\n  a.proxy = null;\n  a.src = null;\n  a.A = null;\n}\n\n;\n\nfunction M(a) {\n  this.src = a;\n  this.a = {};\n  this.b = 0;\n}\n\nM.prototype.add = function (a, b, c, d, f) {\n  var g = a.toString();\n  a = this.a[g];\n  a || (a = this.a[g] = [], this.b++);\n  var e = pb(a, b, d, f);\n  -1 < e ? (b = a[e], c || (b.v = !1)) : (b = new nb(b, this.src, g, !!d, f), b.v = c, a.push(b));\n  return b;\n};\n\nfunction qb(a, b) {\n  var c = b.type;\n\n  if (c in a.a) {\n    var d = a.a[c],\n        f = Ea(d, b),\n        g;\n    (g = 0 <= f) && Array.prototype.splice.call(d, f, 1);\n    g && (ob(b), 0 == a.a[c].length && (delete a.a[c], a.b--));\n  }\n}\n\nfunction pb(a, b, c, d) {\n  for (var f = 0; f < a.length; ++f) {\n    var g = a[f];\n    if (!g.s && g.listener == b && g.capture == !!c && g.A == d) return f;\n  }\n\n  return -1;\n}\n\n;\nvar rb = \"closure_lm_\" + (1E6 * Math.random() | 0),\n    sb = {},\n    tb = 0;\n\nfunction ub(a, b, c, d, f) {\n  if (d && d.once) vb(a, b, c, d, f);else if (Array.isArray(b)) for (var g = 0; g < b.length; g++) ub(a, b[g], c, d, f);else c = wb(c), a && a[L] ? a.f.add(String(b), c, !1, u(d) ? !!d.capture : !!d, f) : xb(a, b, c, !1, d, f);\n}\n\nfunction xb(a, b, c, d, f, g) {\n  if (!b) throw Error(\"Invalid event type\");\n  var e = u(f) ? !!f.capture : !!f,\n      h = yb(a);\n  h || (a[rb] = h = new M(a));\n  c = h.add(b, c, d, e, g);\n\n  if (!c.proxy) {\n    d = zb();\n    c.proxy = d;\n    d.src = a;\n    d.listener = c;\n    if (a.addEventListener) kb || (f = e), void 0 === f && (f = !1), a.addEventListener(b.toString(), d, f);else if (a.attachEvent) a.attachEvent(Ab(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");\n    tb++;\n  }\n}\n\nfunction zb() {\n  var a = Bb,\n      b = ib ? function (c) {\n    return a.call(b.src, b.listener, c);\n  } : function (c) {\n    c = a.call(b.src, b.listener, c);\n    if (!c) return c;\n  };\n  return b;\n}\n\nfunction vb(a, b, c, d, f) {\n  if (Array.isArray(b)) for (var g = 0; g < b.length; g++) vb(a, b[g], c, d, f);else c = wb(c), a && a[L] ? a.f.add(String(b), c, !0, u(d) ? !!d.capture : !!d, f) : xb(a, b, c, !0, d, f);\n}\n\nfunction Cb(a, b, c, d, f) {\n  if (Array.isArray(b)) for (var g = 0; g < b.length; g++) Cb(a, b[g], c, d, f);else (d = u(d) ? !!d.capture : !!d, c = wb(c), a && a[L]) ? (a = a.f, b = String(b).toString(), b in a.a && (g = a.a[b], c = pb(g, c, d, f), -1 < c && (ob(g[c]), Array.prototype.splice.call(g, c, 1), 0 == g.length && (delete a.a[b], a.b--)))) : a && (a = yb(a)) && (b = a.a[b.toString()], a = -1, b && (a = pb(b, c, d, f)), (c = -1 < a ? b[a] : null) && Db(c));\n}\n\nfunction Db(a) {\n  if (\"number\" !== typeof a && a && !a.s) {\n    var b = a.src;\n    if (b && b[L]) qb(b.f, a);else {\n      var c = a.type,\n          d = a.proxy;\n      b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(Ab(c), d) : b.addListener && b.removeListener && b.removeListener(d);\n      tb--;\n      (c = yb(b)) ? (qb(c, a), 0 == c.b && (c.src = null, b[rb] = null)) : ob(a);\n    }\n  }\n}\n\nfunction Ab(a) {\n  return a in sb ? sb[a] : sb[a] = \"on\" + a;\n}\n\nfunction Fb(a, b, c, d) {\n  var f = !0;\n  if (a = yb(a)) if (b = a.a[b.toString()]) for (b = b.concat(), a = 0; a < b.length; a++) {\n    var g = b[a];\n    g && g.capture == c && !g.s && (g = Gb(g, d), f = f && !1 !== g);\n  }\n  return f;\n}\n\nfunction Gb(a, b) {\n  var c = a.listener,\n      d = a.A || a.src;\n  a.v && Db(a);\n  return c.call(d, b);\n}\n\nfunction Bb(a, b) {\n  if (a.s) return !0;\n\n  if (!ib) {\n    var c = b || r(\"window.event\");\n    b = new K(c, this);\n    var d = !0;\n\n    if (!(0 > c.keyCode || void 0 != c.returnValue)) {\n      a: {\n        var f = !1;\n        if (0 == c.keyCode) try {\n          c.keyCode = -1;\n          break a;\n        } catch (e) {\n          f = !0;\n        }\n        if (f || void 0 == c.returnValue) c.returnValue = !0;\n      }\n\n      c = [];\n\n      for (f = b.a; f; f = f.parentNode) c.push(f);\n\n      a = a.type;\n\n      for (f = c.length - 1; 0 <= f; f--) {\n        b.a = c[f];\n        var g = Fb(c[f], a, !0, b);\n        d = d && g;\n      }\n\n      for (f = 0; f < c.length; f++) b.a = c[f], g = Fb(c[f], a, !1, b), d = d && g;\n    }\n\n    return d;\n  }\n\n  return Gb(a, new K(b, this));\n}\n\nfunction yb(a) {\n  a = a[rb];\n  return a instanceof M ? a : null;\n}\n\nvar Hb = \"__closure_events_fn_\" + (1E9 * Math.random() >>> 0);\n\nfunction wb(a) {\n  if (\"function\" == ia(a)) return a;\n  a[Hb] || (a[Hb] = function (b) {\n    return a.handleEvent(b);\n  });\n  return a[Hb];\n}\n\n;\n\nfunction N() {\n  eb.call(this);\n  this.f = new M(this);\n  this.N = this;\n}\n\ny(N, eb);\nN.prototype[L] = !0;\n\nN.prototype.addEventListener = function (a, b, c, d) {\n  ub(this, a, b, c, d);\n};\n\nN.prototype.removeEventListener = function (a, b, c, d) {\n  Cb(this, a, b, c, d);\n};\n\nfunction O(a, b) {\n  a = a.N;\n  var c = b.type || b;\n  if (\"string\" === typeof b) b = new J(b, a);else if (b instanceof J) b.target = b.target || a;else {\n    var d = b;\n    b = new J(c, a);\n    Oa(b, d);\n  }\n  a = b.a = a;\n  Ib(a, c, !0, b);\n  Ib(a, c, !1, b);\n}\n\nfunction Ib(a, b, c, d) {\n  if (b = a.f.a[String(b)]) {\n    b = b.concat();\n\n    for (var f = !0, g = 0; g < b.length; ++g) {\n      var e = b[g];\n\n      if (e && !e.s && e.capture == c) {\n        var h = e.listener,\n            k = e.A || e.src;\n        e.v && qb(a.f, e);\n        f = !1 !== h.call(k, d) && f;\n      }\n    }\n  }\n}\n\n;\n\nfunction Jb(a, b, c) {\n  if (\"function\" == ia(a)) c && (a = w(a, c));else if (a && \"function\" == typeof a.handleEvent) a = w(a.handleEvent, a);else throw Error(\"Invalid listener argument\");\n  return 2147483647 < Number(b) ? -1 : q.setTimeout(a, b || 0);\n}\n\n;\n\nfunction Kb(a, b, c) {\n  this.reset(a, b, c, void 0, void 0);\n}\n\nKb.prototype.a = null;\nvar Lb = 0;\n\nKb.prototype.reset = function (a, b, c, d, f) {\n  \"number\" == typeof f || Lb++;\n  d || na();\n  delete this.a;\n};\n\nfunction Mb(a) {\n  this.f = a;\n  this.b = this.c = this.a = null;\n}\n\nfunction Nb(a, b) {\n  this.name = a;\n  this.value = b;\n}\n\nNb.prototype.toString = function () {\n  return this.name;\n};\n\nvar Ob = new Nb(\"SEVERE\", 1E3),\n    Pb = new Nb(\"CONFIG\", 700),\n    Qb = new Nb(\"FINE\", 500);\n\nfunction Rb(a) {\n  if (a.c) return a.c;\n  if (a.a) return Rb(a.a);\n  ua(\"Root logger has no level set.\");\n  return null;\n}\n\nMb.prototype.log = function (a, b, c) {\n  if (a.value >= Rb(this).value) for (\"function\" == ia(b) && (b = b()), a = new Kb(a, String(b), this.f), c && (a.a = c), c = this; c;) c = c.a;\n};\n\nvar Sb = {},\n    Tb = null;\n\nfunction Ub(a) {\n  Tb || (Tb = new Mb(\"\"), Sb[\"\"] = Tb, Tb.c = Pb);\n  var b;\n\n  if (!(b = Sb[a])) {\n    b = new Mb(a);\n    var c = a.lastIndexOf(\".\"),\n        d = a.substr(c + 1);\n    c = Ub(a.substr(0, c));\n    c.b || (c.b = {});\n    c.b[d] = b;\n    b.a = c;\n    Sb[a] = b;\n  }\n\n  return b;\n}\n\n;\n\nfunction P(a, b) {\n  a && a.log(Qb, b, void 0);\n}\n\n;\n\nfunction Vb() {}\n\nVb.prototype.a = null;\n\nfunction Wb(a) {\n  var b;\n  (b = a.a) || (b = {}, Xb(a) && (b[0] = !0, b[1] = !0), b = a.a = b);\n  return b;\n}\n\n;\nvar Yb;\n\nfunction Zb() {}\n\ny(Zb, Vb);\n\nfunction $b(a) {\n  return (a = Xb(a)) ? new ActiveXObject(a) : new XMLHttpRequest();\n}\n\nfunction Xb(a) {\n  if (!a.b && \"undefined\" == typeof XMLHttpRequest && \"undefined\" != typeof ActiveXObject) {\n    for (var b = [\"MSXML2.XMLHTTP.6.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"], c = 0; c < b.length; c++) {\n      var d = b[c];\n\n      try {\n        return new ActiveXObject(d), a.b = d;\n      } catch (f) {}\n    }\n\n    throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");\n  }\n\n  return a.b;\n}\n\nYb = new Zb();\n\nfunction Q(a, b) {\n  this.b = {};\n  this.a = [];\n  this.c = 0;\n  var c = arguments.length;\n\n  if (1 < c) {\n    if (c % 2) throw Error(\"Uneven number of arguments\");\n\n    for (var d = 0; d < c; d += 2) this.set(arguments[d], arguments[d + 1]);\n  } else a && ac(this, a);\n}\n\nQ.prototype.f = function () {\n  bc(this);\n  return this.a.concat();\n};\n\nfunction bc(a) {\n  if (a.c != a.a.length) {\n    for (var b = 0, c = 0; b < a.a.length;) {\n      var d = a.a[b];\n      R(a.b, d) && (a.a[c++] = d);\n      b++;\n    }\n\n    a.a.length = c;\n  }\n\n  if (a.c != a.a.length) {\n    var f = {};\n\n    for (c = b = 0; b < a.a.length;) d = a.a[b], R(f, d) || (a.a[c++] = d, f[d] = 1), b++;\n\n    a.a.length = c;\n  }\n}\n\nQ.prototype.get = function (a, b) {\n  return R(this.b, a) ? this.b[a] : b;\n};\n\nQ.prototype.set = function (a, b) {\n  R(this.b, a) || (this.c++, this.a.push(a));\n  this.b[a] = b;\n};\n\nfunction ac(a, b) {\n  if (b instanceof Q) for (var c = b.f(), d = 0; d < c.length; d++) a.set(c[d], b.get(c[d]));else for (c in b) a.set(c, b[c]);\n}\n\nQ.prototype.forEach = function (a, b) {\n  for (var c = this.f(), d = 0; d < c.length; d++) {\n    var f = c[d],\n        g = this.get(f);\n    a.call(b, g, f, this);\n  }\n};\n\nfunction R(a, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n\n;\nvar cc = /^(?:([^:/?#.]+):)?(?:\\/\\/(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$/;\n\nfunction S(a) {\n  N.call(this);\n  this.headers = new Q();\n  this.D = a || null;\n  this.c = !1;\n  this.C = this.a = null;\n  this.J = this.o = \"\";\n  this.g = 0;\n  this.i = \"\";\n  this.h = this.I = this.m = this.G = !1;\n  this.l = 0;\n  this.u = null;\n  this.j = dc;\n  this.B = this.H = !1;\n}\n\ny(S, N);\nvar dc = \"\",\n    ec = S.prototype,\n    fc = Ub(\"goog.net.XhrIo\");\nec.b = fc;\nvar gc = /^https?$/i,\n    hc = [\"POST\", \"PUT\"];\n\nfunction ic(a, b, c) {\n  if (a.a) throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + a.o + \"; newUri=\" + b);\n  a.o = b;\n  a.i = \"\";\n  a.g = 0;\n  a.J = \"POST\";\n  a.G = !1;\n  a.c = !0;\n  a.a = a.D ? $b(a.D) : $b(Yb);\n  a.C = a.D ? Wb(a.D) : Wb(Yb);\n  a.a.onreadystatechange = w(a.K, a);\n\n  try {\n    P(a.b, T(a, \"Opening Xhr\")), a.I = !0, a.a.open(\"POST\", String(b), !0), a.I = !1;\n  } catch (g) {\n    P(a.b, T(a, \"Error opening Xhr: \" + g.message));\n    jc(a, g);\n    return;\n  }\n\n  b = c || \"\";\n  c = new Q(a.headers);\n  var d = Fa(c.f()),\n      f = q.FormData && b instanceof q.FormData;\n  !(0 <= Ea(hc, \"POST\")) || d || f || c.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n  c.forEach(function (g, e) {\n    this.a.setRequestHeader(e, g);\n  }, a);\n  a.j && (a.a.responseType = a.j);\n  \"withCredentials\" in a.a && a.a.withCredentials !== a.H && (a.a.withCredentials = a.H);\n\n  try {\n    kc(a), 0 < a.l && (a.B = lc(a.a), P(a.b, T(a, \"Will abort after \" + a.l + \"ms if incomplete, xhr2 \" + a.B)), a.B ? (a.a.timeout = a.l, a.a.ontimeout = w(a.L, a)) : a.u = Jb(a.L, a.l, a)), P(a.b, T(a, \"Sending request\")), a.m = !0, a.a.send(b), a.m = !1;\n  } catch (g) {\n    P(a.b, T(a, \"Send error: \" + g.message)), jc(a, g);\n  }\n}\n\nfunction lc(a) {\n  return H && ab(9) && \"number\" === typeof a.timeout && void 0 !== a.ontimeout;\n}\n\nfunction Ga(a) {\n  return \"content-type\" == a.toLowerCase();\n}\n\nS.prototype.L = function () {\n  \"undefined\" != typeof ha && this.a && (this.i = \"Timed out after \" + this.l + \"ms, aborting\", this.g = 8, P(this.b, T(this, this.i)), O(this, \"timeout\"), this.abort(8));\n};\n\nfunction jc(a, b) {\n  a.c = !1;\n  a.a && (a.h = !0, a.a.abort(), a.h = !1);\n  a.i = b;\n  a.g = 5;\n  mc(a);\n  nc(a);\n}\n\nfunction mc(a) {\n  a.G || (a.G = !0, O(a, \"complete\"), O(a, \"error\"));\n}\n\nS.prototype.abort = function (a) {\n  this.a && this.c && (P(this.b, T(this, \"Aborting\")), this.c = !1, this.h = !0, this.a.abort(), this.h = !1, this.g = a || 7, O(this, \"complete\"), O(this, \"abort\"), nc(this));\n};\n\nS.prototype.K = function () {\n  this.F || (this.I || this.m || this.h ? oc(this) : this.O());\n};\n\nS.prototype.O = function () {\n  oc(this);\n};\n\nfunction oc(a) {\n  if (a.c && \"undefined\" != typeof ha) if (a.C[1] && 4 == U(a) && 2 == a.getStatus()) P(a.b, T(a, \"Local request error detected and ignored\"));else if (a.m && 4 == U(a)) Jb(a.K, 0, a);else if (O(a, \"readystatechange\"), 4 == U(a)) {\n    P(a.b, T(a, \"Request complete\"));\n    a.c = !1;\n\n    try {\n      var b = a.getStatus();\n\n      a: switch (b) {\n        case 200:\n        case 201:\n        case 202:\n        case 204:\n        case 206:\n        case 304:\n        case 1223:\n          var c = !0;\n          break a;\n\n        default:\n          c = !1;\n      }\n\n      var d;\n\n      if (!(d = c)) {\n        var f;\n\n        if (f = 0 === b) {\n          var g = String(a.o).match(cc)[1] || null;\n\n          if (!g && q.self && q.self.location) {\n            var e = q.self.location.protocol;\n            g = e.substr(0, e.length - 1);\n          }\n\n          f = !gc.test(g ? g.toLowerCase() : \"\");\n        }\n\n        d = f;\n      }\n\n      if (d) O(a, \"complete\"), O(a, \"success\");else {\n        a.g = 6;\n\n        try {\n          var h = 2 < U(a) ? a.a.statusText : \"\";\n        } catch (k) {\n          P(a.b, \"Can not get status: \" + k.message), h = \"\";\n        }\n\n        a.i = h + \" [\" + a.getStatus() + \"]\";\n        mc(a);\n      }\n    } finally {\n      nc(a);\n    }\n  }\n}\n\nfunction nc(a) {\n  if (a.a) {\n    kc(a);\n    var b = a.a,\n        c = a.C[0] ? t : null;\n    a.a = null;\n    a.C = null;\n    O(a, \"ready\");\n\n    try {\n      b.onreadystatechange = c;\n    } catch (d) {\n      (a = a.b) && a.log(Ob, \"Problem encountered resetting onreadystatechange: \" + d.message, void 0);\n    }\n  }\n}\n\nfunction kc(a) {\n  a.a && a.B && (a.a.ontimeout = null);\n  a.u && (q.clearTimeout(a.u), a.u = null);\n}\n\nfunction U(a) {\n  return a.a ? a.a.readyState : 0;\n}\n\nS.prototype.getStatus = function () {\n  try {\n    return 2 < U(this) ? this.a.status : -1;\n  } catch (a) {\n    return -1;\n  }\n};\n\nfunction pc(a) {\n  try {\n    if (!a.a) return null;\n    if (\"response\" in a.a) return a.a.response;\n\n    switch (a.j) {\n      case dc:\n      case \"text\":\n        return a.a.responseText;\n\n      case \"arraybuffer\":\n        if (\"mozResponseArrayBuffer\" in a.a) return a.a.mozResponseArrayBuffer;\n    }\n\n    var b = a.b;\n    b && b.log(Ob, \"Response type \" + a.j + \" is not supported on this browser\", void 0);\n    return null;\n  } catch (c) {\n    return P(a.b, \"Can not get response: \" + c.message), null;\n  }\n}\n\nfunction qc(a, b) {\n  if (a.a && 4 == U(a)) return a = a.a.getResponseHeader(b), null === a ? void 0 : a;\n}\n\nfunction rc(a) {\n  var b = {};\n  a = (a.a && 4 == U(a) ? a.a.getAllResponseHeaders() || \"\" : \"\").split(\"\\r\\n\");\n\n  for (var c = 0; c < a.length; c++) if (!/^[\\s\\xa0]*$/.test(a[c])) {\n    var d = Pa(a[c]),\n        f = d[0];\n    d = d[1];\n\n    if (\"string\" === typeof d) {\n      d = d.trim();\n      var g = b[f] || [];\n      b[f] = g;\n      g.push(d);\n    }\n  }\n\n  return Ma(b, function (e) {\n    return e.join(\", \");\n  });\n}\n\nfunction T(a, b) {\n  return b + \" [\" + a.J + \" \" + a.o + \" \" + a.getStatus() + \"]\";\n}\n\n;\nvar sc = {},\n    V = null;\n\nfunction tc(a) {\n  var b = a.length,\n      c = 3 * b / 4;\n  c % 3 ? c = Math.floor(c) : E(\"=.\", a[b - 1]) && (c = E(\"=.\", a[b - 2]) ? c - 2 : c - 1);\n  var d = new Uint8Array(c),\n      f = 0;\n  uc(a, function (g) {\n    d[f++] = g;\n  });\n  return d.subarray(0, f);\n}\n\nfunction uc(a, b) {\n  function c(k) {\n    for (; d < a.length;) {\n      var l = a.charAt(d++),\n          m = V[l];\n      if (null != m) return m;\n      if (!/^[\\s\\xa0]*$/.test(l)) throw Error(\"Unknown base64 encoding at char: \" + l);\n    }\n\n    return k;\n  }\n\n  vc();\n\n  for (var d = 0;;) {\n    var f = c(-1),\n        g = c(0),\n        e = c(64),\n        h = c(64);\n    if (64 === h && -1 === f) break;\n    b(f << 2 | g >> 4);\n    64 != e && (b(g << 4 & 240 | e >> 2), 64 != h && b(e << 6 & 192 | h));\n  }\n}\n\nfunction vc() {\n  if (!V) {\n    V = {};\n\n    for (var a = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\"), b = [\"+/=\", \"+/\", \"-_=\", \"-_.\", \"-_\"], c = 0; 5 > c; c++) {\n      var d = a.concat(b[c].split(\"\"));\n      sc[c] = d;\n\n      for (var f = 0; f < d.length; f++) {\n        var g = d[f];\n        void 0 === V[g] && (V[g] = f);\n      }\n    }\n  }\n}\n\n;\nvar wc = [\"content-type\", \"grpc-status\", \"grpc-message\"];\n\nfunction W(a) {\n  this.a = a.T;\n  this.l = null;\n  this.b = [];\n  this.h = [];\n  this.g = [];\n  this.f = [];\n  this.c = [];\n  this.j = !1;\n  this.i = 0;\n  this.m = new va();\n  var b = this;\n  ub(this.a, \"readystatechange\", function () {\n    var c = b.a;\n\n    if (c = c.a ? c.a.getResponseHeader(\"Content-Type\") : null) {\n      c = c.toLowerCase();\n\n      if (0 == c.lastIndexOf(\"application/grpc-web-text\", 0)) {\n        c = b.a;\n\n        try {\n          var d = c.a ? c.a.responseText : \"\";\n        } catch (l) {\n          P(c.b, \"Can not get responseText: \" + l.message), d = \"\";\n        }\n\n        c = d || \"\";\n        d = c.length - c.length % 4;\n        c = c.substr(b.i, d - b.i);\n        if (0 == c.length) return;\n        b.i = d;\n        c = tc(c);\n      } else if (0 == c.lastIndexOf(\"application/grpc\", 0)) c = new Uint8Array(pc(b.a));else {\n        X(b, {\n          code: 2,\n          message: \"Unknown Content-type received.\",\n          metadata: {}\n        });\n        return;\n      }\n\n      d = null;\n\n      try {\n        d = xa(b.m, c);\n      } catch (l) {\n        X(b, {\n          code: 2,\n          message: \"Error in parsing response body\",\n          metadata: {}\n        });\n      }\n\n      if (d) for (c = 0; c < d.length; c++) {\n        if (ya in d[c]) {\n          var f = d[c][ya];\n          if (f) try {\n            var g = b.l(f);\n\n            if (g) {\n              f = b;\n\n              for (var e = g, h = 0; h < f.b.length; h++) f.b[h](e);\n            }\n          } catch (l) {\n            X(b, {\n              code: 2,\n              message: \"Error in response deserializer function.\",\n              metadata: {}\n            });\n          }\n        }\n\n        if (D in d[c] && 0 < d[c][D].length) {\n          f = \"\";\n\n          for (e = 0; e < d[c][D].length; e++) f += String.fromCharCode(d[c][D][e]);\n\n          f = f.trim().split(\"\\r\\n\");\n          e = {};\n\n          for (h = 0; h < f.length; h++) {\n            var k = f[h].indexOf(\":\");\n            e[f[h].substring(0, k).trim()] = f[h].substring(k + 1).trim();\n          }\n\n          f = e;\n          e = 0;\n          h = \"\";\n          \"grpc-status\" in f && (e = f[\"grpc-status\"], delete f[\"grpc-status\"]);\n          \"grpc-message\" in f && (h = f[\"grpc-message\"], delete f[\"grpc-message\"]);\n          X(b, {\n            code: Number(e),\n            message: h,\n            metadata: f\n          });\n        }\n      }\n    }\n  });\n  ub(this.a, \"complete\", function () {\n    var c = b.a.g,\n        d = \"\",\n        f = {},\n        g = rc(b.a);\n    Object.keys(g).forEach(function (h) {\n      wc.includes(h) || (f[h] = g[h]);\n    });\n    xc(b, f);\n\n    if (0 != c) {\n      switch (c) {\n        case 7:\n          var e = 10;\n          break;\n\n        case 8:\n          e = 4;\n          break;\n\n        case 6:\n          e = Da(b.a.getStatus());\n          break;\n\n        default:\n          e = 14;\n      }\n\n      10 == e && b.j || X(b, {\n        code: e,\n        message: sa(c),\n        metadata: {}\n      });\n    } else c = !1, \"grpc-status\" in g && (e = qc(b.a, \"grpc-status\"), \"grpc-message\" in g && (d = qc(b.a, \"grpc-message\")), 0 != Number(e) && (X(b, {\n      code: Number(e),\n      message: d,\n      metadata: g\n    }), c = !0)), c || yc(b);\n  });\n}\n\nW.prototype.on = function (a, b) {\n  \"data\" == a ? this.b.push(b) : \"status\" == a ? this.h.push(b) : \"metadata\" == a ? this.g.push(b) : \"end\" == a ? this.c.push(b) : \"error\" == a && this.f.push(b);\n  return this;\n};\n\nfunction Y(a, b) {\n  b = a.indexOf(b);\n  -1 < b && a.splice(b, 1);\n}\n\nW.prototype.removeListener = function (a, b) {\n  \"data\" == a ? Y(this.b, b) : \"status\" == a ? Y(this.h, b) : \"metadata\" == a ? Y(this.g, b) : \"end\" == a ? Y(this.c, b) : \"error\" == a && Y(this.f, b);\n  return this;\n};\n\nW.prototype.cancel = function () {\n  this.j = !0;\n  this.a.abort();\n};\n\nfunction X(a, b) {\n  if (0 != b.code) for (var c = {\n    code: b.code,\n    message: decodeURIComponent(b.message || \"\"),\n    metadata: b.metadata\n  }, d = 0; d < a.f.length; d++) a.f[d](c);\n  b = {\n    code: b.code,\n    details: decodeURIComponent(b.message || \"\"),\n    metadata: b.metadata\n  };\n\n  for (c = 0; c < a.h.length; c++) a.h[c](b);\n}\n\nfunction xc(a, b) {\n  for (var c = 0; c < a.g.length; c++) a.g[c](b);\n}\n\nfunction yc(a) {\n  for (var b = 0; b < a.c.length; b++) a.c[b]();\n}\n\nW.prototype.cancel = W.prototype.cancel;\nW.prototype.removeListener = W.prototype.removeListener;\nW.prototype.on = W.prototype.on;\n\nfunction zc(a) {\n  var b = \"\";\n  La(a, function (c, d) {\n    b += d;\n    b += \":\";\n    b += c;\n    b += \"\\r\\n\";\n  });\n  return b;\n}\n\n;\n\nfunction Z(a) {\n  this.a = r(\"format\", a) || \"text\";\n  this.f = r(\"suppressCorsPreflight\", a) || !1;\n  this.c = r(\"withCredentials\", a) || !1;\n  this.b = r(\"streamInterceptors\", a) || [];\n  this.g = r(\"unaryInterceptors\", a) || [];\n}\n\nZ.prototype.P = function (a, b, c, d, f) {\n  var g = this;\n  d = ra(a, b, \"unary\", d);\n  var e = a.substr(0, a.length - d.name.length);\n  a = Ac(function (h) {\n    return Bc(g, h, e);\n  }, this.b).call(this, qa(d, b, c));\n  Cc(a, f, !1);\n  return new B(a);\n};\n\nZ.prototype.M = function (a, b, c, d) {\n  var f = this;\n  d = ra(a, b, \"unary\", d);\n  var g = a.substr(0, a.length - d.name.length);\n  return Ac(function (e) {\n    return new Promise(function (h, k) {\n      var l = Bc(f, e, g),\n          m,\n          p,\n          n;\n      Cc(l, function (v, x, F, Eb) {\n        v ? k(v) : x ? n = x : F ? p = F : Eb ? m = Eb : (v = e.getMethodDescriptor(), x = m, x = void 0 === x ? {} : x, h(new A(n, v, x, void 0 === p ? null : p)));\n      }, !0);\n    });\n  }, this.g).call(this, qa(d, b, c)).then(function (e) {\n    return e.getResponseMessage();\n  });\n};\n\nZ.prototype.unaryCall = function (a, b, c, d) {\n  return this.M(a, b, c, d);\n};\n\nZ.prototype.R = function (a, b, c, d) {\n  var f = this;\n  d = ra(a, b, \"server_streaming\", d);\n  var g = a.substr(0, a.length - d.name.length);\n  return Ac(function (e) {\n    return Bc(f, e, g);\n  }, this.b).call(this, qa(d, b, c));\n};\n\nfunction Bc(a, b, c) {\n  var d = b.getMethodDescriptor(),\n      f = c + d.name;\n  c = new S();\n  c.H = a.c;\n  var g = new W({\n    T: c\n  });\n  g.l = d.b;\n  ac(c.headers, b.getMetadata());\n  \"text\" == a.a ? (c.headers.set(\"Content-Type\", \"application/grpc-web-text\"), c.headers.set(\"Accept\", \"application/grpc-web-text\")) : c.headers.set(\"Content-Type\", \"application/grpc-web+proto\");\n  c.headers.set(\"X-User-Agent\", \"grpc-web-javascript/0.1\");\n  c.headers.set(\"X-Grpc-Web\", \"1\");\n\n  if (R(c.headers.b, \"deadline\")) {\n    var e = c.headers.get(\"deadline\");\n    e = Math.round(e - new Date().getTime());\n    var h = c.headers;\n    R(h.b, \"deadline\") && (delete h.b.deadline, h.c--, h.a.length > 2 * h.c && bc(h));\n    Infinity === e && (e = 0);\n    0 < e && c.headers.set(\"grpc-timeout\", e + \"m\");\n  }\n\n  if (a.f) {\n    h = c.headers;\n    bc(h);\n    e = {};\n\n    for (var k = 0; k < h.a.length; k++) {\n      var l = h.a[k];\n      e[l] = h.b[l];\n    }\n\n    h = c.headers;\n    h.b = {};\n    h.a.length = 0;\n    h.c = 0;\n\n    b: {\n      for (m in e) {\n        var m = !1;\n        break b;\n      }\n\n      m = !0;\n    }\n\n    if (!m) if (e = zc(e), \"string\" === typeof f) {\n      if (m = encodeURIComponent(\"$httpHeaders\"), e = null != e ? \"=\" + encodeURIComponent(String(e)) : \"\", m += e) e = f.indexOf(\"#\"), 0 > e && (e = f.length), h = f.indexOf(\"?\"), 0 > h || h > e ? (h = e, k = \"\") : k = f.substring(h + 1, e), f = [f.substr(0, h), k, f.substr(e)], e = f[1], f[1] = m ? e ? e + \"&\" + m : m : e, f = f[0] + (f[1] ? \"?\" + f[1] : \"\") + f[2];\n    } else f.a(\"$httpHeaders\", e);\n  }\n\n  b = (0, d.a)(b.getRequestMessage());\n  d = b.length;\n  m = [0, 0, 0, 0];\n  e = new Uint8Array(5 + d);\n\n  for (h = 3; 0 <= h; h--) m[h] = d % 256, d >>>= 8;\n\n  e.set(new Uint8Array(m), 1);\n  e.set(b, 5);\n  b = e;\n\n  if (\"text\" == a.a) {\n    a = b;\n    var p;\n    void 0 === p && (p = 0);\n    vc();\n    p = sc[p];\n    b = [];\n\n    for (d = 0; d < a.length; d += 3) {\n      l = a[d];\n      var n = (m = d + 1 < a.length) ? a[d + 1] : 0;\n      k = (e = d + 2 < a.length) ? a[d + 2] : 0;\n      h = l >> 2;\n      l = (l & 3) << 4 | n >> 4;\n      n = (n & 15) << 2 | k >> 6;\n      k &= 63;\n      e || (k = 64, m || (n = 64));\n      b.push(p[h], p[l], p[n] || \"\", p[k] || \"\");\n    }\n\n    b = b.join(\"\");\n  } else \"binary\" == a.a && (c.j = \"arraybuffer\");\n\n  ic(c, f, b);\n  return g;\n}\n\nfunction Cc(a, b, c) {\n  var d = null,\n      f = !1;\n  a.on(\"data\", function (g) {\n    d = g;\n  });\n  a.on(\"error\", function (g) {\n    0 == g.code || f || (f = !0, b(g, null));\n  });\n  a.on(\"status\", function (g) {\n    0 == g.code || f ? c && b(null, null, g) : (f = !0, b({\n      code: g.code,\n      message: g.details,\n      metadata: g.metadata\n    }, null));\n  });\n  if (c) a.on(\"metadata\", function (g) {\n    b(null, null, null, g);\n  });\n  a.on(\"end\", function () {\n    f || (null == d ? b({\n      code: 2,\n      message: \"Incomplete response\"\n    }) : b(null, d));\n    c && b(null, null);\n  });\n}\n\nfunction Ac(a, b) {\n  var c = a;\n  b.forEach(function (d) {\n    var f = c;\n\n    c = function (g) {\n      return d.intercept(g, f);\n    };\n  });\n  return c;\n}\n\nZ.prototype.serverStreaming = Z.prototype.R;\nZ.prototype.unaryCall = Z.prototype.unaryCall;\nZ.prototype.thenableCall = Z.prototype.M;\nZ.prototype.rpcCall = Z.prototype.P;\nmodule.exports.AbstractClientBase = {\n  MethodInfo: function (a, b, c, d, f) {\n    this.name = d;\n    this.b = f;\n    this.f = a;\n    this.a = b;\n    this.c = c;\n  }\n};\nmodule.exports.GrpcWebClientBase = Z;\nmodule.exports.StatusCode = {\n  OK: 0,\n  CANCELLED: 1,\n  UNKNOWN: 2,\n  INVALID_ARGUMENT: 3,\n  DEADLINE_EXCEEDED: 4,\n  NOT_FOUND: 5,\n  ALREADY_EXISTS: 6,\n  PERMISSION_DENIED: 7,\n  UNAUTHENTICATED: 16,\n  RESOURCE_EXHAUSTED: 8,\n  FAILED_PRECONDITION: 9,\n  ABORTED: 10,\n  OUT_OF_RANGE: 11,\n  UNIMPLEMENTED: 12,\n  INTERNAL: 13,\n  UNAVAILABLE: 14,\n  DATA_LOSS: 15\n};\nmodule.exports.MethodDescriptor = pa;\nmodule.exports.MethodType = {\n  UNARY: \"unary\",\n  SERVER_STREAMING: \"server_streaming\"\n};\n\n//# sourceURL=webpack://test/./node_modules/grpc-web/index.js?");

/***/ }),

/***/ "./node_modules/has-symbols/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\n\nvar hasSymbolSham = __webpack_require__(/*! ./shams */ \"./node_modules/has-symbols/shams.js\");\n\nmodule.exports = function hasNativeSymbols() {\n  if (typeof origSymbol !== 'function') {\n    return false;\n  }\n\n  if (typeof Symbol !== 'function') {\n    return false;\n  }\n\n  if (typeof origSymbol('foo') !== 'symbol') {\n    return false;\n  }\n\n  if (typeof Symbol('bar') !== 'symbol') {\n    return false;\n  }\n\n  return hasSymbolSham();\n};\n\n//# sourceURL=webpack://test/./node_modules/has-symbols/index.js?");

/***/ }),

/***/ "./node_modules/has-symbols/shams.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\n\nmodule.exports = function hasSymbols() {\n  if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {\n    return false;\n  }\n\n  if (typeof Symbol.iterator === 'symbol') {\n    return true;\n  }\n\n  var obj = {};\n  var sym = Symbol('test');\n  var symObj = Object(sym);\n\n  if (typeof sym === 'string') {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(sym) !== '[object Symbol]') {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {\n    return false;\n  } // temp disabled per https://github.com/ljharb/object.assign/issues/17\n  // if (sym instanceof Symbol) { return false; }\n  // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n  // if (!(symObj instanceof Symbol)) { return false; }\n  // if (typeof Symbol.prototype.toString !== 'function') { return false; }\n  // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\n  var symVal = 42;\n  obj[sym] = symVal;\n\n  for (sym in obj) {\n    return false;\n  } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\n\n  if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {\n    return false;\n  }\n\n  if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {\n    return false;\n  }\n\n  var syms = Object.getOwnPropertySymbols(obj);\n\n  if (syms.length !== 1 || syms[0] !== sym) {\n    return false;\n  }\n\n  if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {\n    return false;\n  }\n\n  if (typeof Object.getOwnPropertyDescriptor === 'function') {\n    var descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\n    if (descriptor.value !== symVal || descriptor.enumerable !== true) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//# sourceURL=webpack://test/./node_modules/has-symbols/shams.js?");

/***/ }),

/***/ "./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n//# sourceURL=webpack://test/./node_modules/has/src/index.js?");

/***/ }),

/***/ "./node_modules/hash-base/index.js":
/*!*****************************************!*\
  !*** ./node_modules/hash-base/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar Transform = __webpack_require__(/*! readable-stream */ \"./node_modules/readable-stream/readable-browser.js\").Transform;\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nfunction throwIfNotStringOrBuffer(val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer');\n  }\n}\n\nfunction HashBase(blockSize) {\n  Transform.call(this);\n  this._block = Buffer.allocUnsafe(blockSize);\n  this._blockSize = blockSize;\n  this._blockOffset = 0;\n  this._length = [0, 0, 0, 0];\n  this._finalized = false;\n}\n\ninherits(HashBase, Transform);\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null;\n\n  try {\n    this.update(chunk, encoding);\n  } catch (err) {\n    error = err;\n  }\n\n  callback(error);\n};\n\nHashBase.prototype._flush = function (callback) {\n  var error = null;\n\n  try {\n    this.push(this.digest());\n  } catch (err) {\n    error = err;\n  }\n\n  callback(error);\n};\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data');\n  if (this._finalized) throw new Error('Digest already called');\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding); // consume data\n\n  var block = this._block;\n  var offset = 0;\n\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++];\n\n    this._update();\n\n    this._blockOffset = 0;\n  }\n\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]; // update length\n\n\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry;\n    carry = this._length[j] / 0x0100000000 | 0;\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry;\n  }\n\n  return this;\n};\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented');\n};\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called');\n  this._finalized = true;\n\n  var digest = this._digest();\n\n  if (encoding !== undefined) digest = digest.toString(encoding); // reset state\n\n  this._block.fill(0);\n\n  this._blockOffset = 0;\n\n  for (var i = 0; i < 4; ++i) this._length[i] = 0;\n\n  return digest;\n};\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented');\n};\n\nmodule.exports = HashBase;\n\n//# sourceURL=webpack://test/./node_modules/hash-base/index.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/hash.js/lib/hash.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var hash = exports;\nhash.utils = __webpack_require__(/*! ./hash/utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\nhash.common = __webpack_require__(/*! ./hash/common */ \"./node_modules/hash.js/lib/hash/common.js\");\nhash.sha = __webpack_require__(/*! ./hash/sha */ \"./node_modules/hash.js/lib/hash/sha.js\");\nhash.ripemd = __webpack_require__(/*! ./hash/ripemd */ \"./node_modules/hash.js/lib/hash/ripemd.js\");\nhash.hmac = __webpack_require__(/*! ./hash/hmac */ \"./node_modules/hash.js/lib/hash/hmac.js\"); // Proxy hash functions to the main object\n\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/common.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/common.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length; // Enough data, try updating\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending; // Process pending data in blocks\n\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n\n  for (var i = 1; i < k; i++) res[i] = 0; // Append length\n\n\n  len <<= 3;\n\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++) res[i++] = 0;\n  }\n\n  return res;\n};\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/common.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/hmac.js":
/*!***********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/hmac.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\n\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize); // Add padding to key\n\n  for (var i = key.length; i < this.blockSize; i++) key.push(0);\n\n  for (i = 0; i < key.length; i++) key[i] ^= 0x36;\n\n  this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a\n\n  for (i = 0; i < key.length; i++) key[i] ^= 0x6a;\n\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/hmac.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/ripemd.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/ripemd.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar common = __webpack_require__(/*! ./common */ \"./node_modules/hash.js/lib/hash/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.endian = 'little';\n}\n\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n}\n\nfunction K(j) {\n  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n}\n\nvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/ripemd.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha.js":
/*!**********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.sha1 = __webpack_require__(/*! ./sha/1 */ \"./node_modules/hash.js/lib/hash/sha/1.js\");\nexports.sha224 = __webpack_require__(/*! ./sha/224 */ \"./node_modules/hash.js/lib/hash/sha/224.js\");\nexports.sha256 = __webpack_require__(/*! ./sha/256 */ \"./node_modules/hash.js/lib/hash/sha/256.js\");\nexports.sha384 = __webpack_require__(/*! ./sha/384 */ \"./node_modules/hash.js/lib/hash/sha/384.js\");\nexports.sha512 = __webpack_require__(/*! ./sha/512 */ \"./node_modules/hash.js/lib/hash/sha/512.js\");\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/sha.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/1.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/1.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar common = __webpack_require__(/*! ../common */ \"./node_modules/hash.js/lib/hash/common.js\");\n\nvar shaCommon = __webpack_require__(/*! ./common */ \"./node_modules/hash.js/lib/hash/sha/common.js\");\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\nvar sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/sha/1.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/224.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/224.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar SHA256 = __webpack_require__(/*! ./256 */ \"./node_modules/hash.js/lib/hash/sha/256.js\");\n\nfunction SHA224() {\n  if (!(this instanceof SHA224)) return new SHA224();\n  SHA256.call(this);\n  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n}\n\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/sha/224.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/256.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/256.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar common = __webpack_require__(/*! ../common */ \"./node_modules/hash.js/lib/hash/common.js\");\n\nvar shaCommon = __webpack_require__(/*! ./common */ \"./node_modules/hash.js/lib/hash/sha/common.js\");\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\nvar BlockHash = common.BlockHash;\nvar sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256)) return new SHA256();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\n\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i++) W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n  assert(this.k.length === W.length);\n\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/sha/256.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/384.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/384.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar SHA512 = __webpack_require__(/*! ./512 */ \"./node_modules/hash.js/lib/hash/sha/512.js\");\n\nfunction SHA384() {\n  if (!(this instanceof SHA384)) return new SHA384();\n  SHA512.call(this);\n  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n}\n\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n};\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/sha/384.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/512.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/512.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar common = __webpack_require__(/*! ../common */ \"./node_modules/hash.js/lib/hash/common.js\");\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\nvar BlockHash = common.BlockHash;\nvar sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512)) return new SHA512();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\n\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W; // 32 x 32bit words\n\n  for (var i = 0; i < 32; i++) W[i] = msg[start + i];\n\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14]; // i - 7\n\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32]; // i - 16\n\n    var c3_lo = W[i - 31];\n    W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n  assert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n    var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ ~xh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ ~xl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ xh & zh ^ yh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ xl & zl ^ yl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2); // 34\n\n  var c2_hi = rotr64_hi(xl, xh, 7); // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2); // 34\n\n  var c2_lo = rotr64_lo(xl, xh, 7); // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9); // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9); // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29); // 61\n\n  var c2_hi = shr64_hi(xh, xl, 6);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29); // 61\n\n  var c2_lo = shr64_lo(xh, xl, 6);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/sha/512.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/common.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/hash.js/lib/hash/utils.js\");\n\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0) return ch32(x, y, z);\n  if (s === 1 || s === 3) return p32(x, y, z);\n  if (s === 2) return maj32(x, y, z);\n}\n\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\n\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\n\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;\n}\n\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;\n}\n\nexports.g1_256 = g1_256;\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/sha/common.js?");

/***/ }),

/***/ "./node_modules/hash.js/lib/hash/utils.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/utils.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = c >> 6 | 192;\n          res[p++] = c & 63 | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = c >> 18 | 240;\n          res[p++] = c >> 12 & 63 | 128;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        } else {\n          res[p++] = c >> 12 | 224;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n  }\n\n  return res;\n}\n\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n  return res;\n}\n\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n  return res >>> 0;\n}\n\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little') w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n}\n\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 0xff;\n      res[k + 2] = m >>> 8 & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 0xff;\n      res[k + 1] = m >>> 8 & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n\n  return res;\n}\n\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.shr64_lo = shr64_lo;\n\n//# sourceURL=webpack://test/./node_modules/hash.js/lib/hash/utils.js?");

/***/ }),

/***/ "./node_modules/hmac-drbg/lib/hmac-drbg.js":
/*!*************************************************!*\
  !*** ./node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hash = __webpack_require__(/*! hash.js */ \"./node_modules/hash.js/lib/hash.js\");\n\nvar utils = __webpack_require__(/*! minimalistic-crypto-utils */ \"./node_modules/minimalistic-crypto-utils/lib/utils.js\");\n\nvar assert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n  assert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n\n//# sourceURL=webpack://test/./node_modules/hmac-drbg/lib/hmac-drbg.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n//# sourceURL=webpack://test/./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}\n\n//# sourceURL=webpack://test/./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/account/account.js":
/*!***********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/account/account.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.RemoteAccount = exports.Account = void 0;\n\nvar _crypto = __webpack_require__(/*! ../crypto/crypto */ \"./node_modules/iotex-antenna/lib/crypto/crypto.js\");\n\nvar _hash = __webpack_require__(/*! ../crypto/hash */ \"./node_modules/iotex-antenna/lib/crypto/hash.js\");\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/iotex-antenna/lib/account/utils.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Account {\n  constructor() {\n    _defineProperty(this, \"address\", void 0);\n\n    _defineProperty(this, \"privateKey\", void 0);\n\n    _defineProperty(this, \"publicKey\", void 0);\n  }\n\n  static fromPrivateKey(privateKey) {\n    if (privateKey === \"\") {\n      throw new Error(\"private key can not empty.\");\n    }\n\n    const obj = (0, _crypto.privateKeyToAccount)(privateKey);\n    const act = new Account();\n    act.address = obj.address;\n    act.privateKey = obj.privateKey;\n    act.publicKey = obj.publicKey;\n    return act;\n  }\n\n  static fromAddress(address) {\n    if (address === \"\" || address.length !== 41) {\n      throw new Error(\"address illegal.\");\n    }\n\n    const act = new Account();\n    act.address = address;\n    return act;\n  }\n\n  async sign(data) {\n    if (!this.privateKey) {\n      throw new Error(\"account sign only support local model.\");\n    }\n\n    const h = this.hashMessage(data);\n    return Buffer.from((0, _crypto.makeSigner)(0)(h.toString(\"hex\"), this.privateKey), \"hex\");\n  }\n\n  recover(message, signature, preFixed = false) {\n    let bytes = message;\n\n    if (!preFixed) {\n      bytes = this.hashMessage(message);\n    } // @ts-ignore\n\n\n    return (0, _crypto.recover)(bytes, signature);\n  }\n\n  hashMessage(data) {\n    let bytes = data;\n\n    if (typeof data === \"string\" && (0, _utils.isHexStrict)(data)) {\n      bytes = (0, _utils.hexToBytes)(data);\n    } // @ts-ignore\n\n\n    const messageBuffer = Buffer.from(bytes);\n    const preamble = `\\x16IoTeX Signed Message:\\n${bytes.length}`;\n    const preambleBuffer = Buffer.from(preamble);\n    const iotexMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return (0, _hash.hash256b)(iotexMessage);\n  }\n\n}\n\nexports.Account = Account;\n\nclass RemoteAccount extends Account {\n  constructor(address, sp) {\n    super();\n\n    _defineProperty(this, \"address\", void 0);\n\n    _defineProperty(this, \"privateKey\", void 0);\n\n    _defineProperty(this, \"publicKey\", void 0);\n\n    _defineProperty(this, \"sp\", void 0);\n\n    this.address = address;\n    this.sp = sp;\n  }\n\n  async sign(data) {\n    if (!this.sp.signMessage) {\n      return new Buffer(\"\");\n    }\n\n    return this.sp.signMessage(data);\n  }\n\n}\n\nexports.RemoteAccount = RemoteAccount;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/account/account.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/account/accounts.js":
/*!************************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/account/accounts.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Accounts = void 0;\n\nvar _account = _interopRequireDefault(__webpack_require__(/*! eth-lib/lib/account */ \"./node_modules/eth-lib/lib/account.js\"));\n\nvar _account2 = __webpack_require__(/*! ./account */ \"./node_modules/iotex-antenna/lib/account/account.js\");\n\nvar _wallet = _interopRequireDefault(__webpack_require__(/*! ./wallet */ \"./node_modules/iotex-antenna/lib/account/wallet.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Accounts extends Array {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"wallet\", void 0);\n\n    this.wallet = new _wallet.default();\n    return new Proxy(this, {\n      get: (target, name) => {\n        // @ts-ignore\n        if (target.wallet[name]) {\n          // @ts-ignore\n          return target.wallet[name];\n        } // @ts-ignore\n\n\n        return target[name];\n      }\n    });\n  }\n\n  create(entropy) {\n    const acct = _account.default.create(entropy);\n\n    const privateKey = acct.privateKey.substr(2);\n\n    const realAccount = _account2.Account.fromPrivateKey(privateKey);\n\n    this.wallet.add(realAccount);\n    return realAccount;\n  }\n\n  privateKeyToAccount(privateKey) {\n    const account = _account2.Account.fromPrivateKey(privateKey);\n\n    this.wallet.add(account);\n    return account;\n  }\n\n  addressToAccount(address) {\n    const account = _account2.Account.fromAddress(address);\n\n    this.wallet.add(account);\n    return account;\n  }\n\n  addAccount(account) {\n    this.wallet.add(account);\n    return account;\n  }\n\n  getAccount(address) {\n    // @ts-ignore\n    return this.wallet[address];\n  }\n\n  removeAccount(address) {\n    return this.wallet.remove(address);\n  }\n\n  async sign(data, privateKey) {\n    return _account2.Account.fromPrivateKey(privateKey).sign(data);\n  }\n\n}\n\nexports.Accounts = Accounts;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/account/accounts.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/account/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/account/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.fromRau = fromRau;\nexports.toRau = toRau;\nexports.fromUtf8 = fromUtf8;\nexports.toUtf8 = toUtf8;\nexports.isHexStrict = isHexStrict;\nexports.hexToBytes = hexToBytes;\nexports.validateAddress = validateAddress;\n\nvar _bech = _interopRequireDefault(__webpack_require__(/*! bech32 */ \"./node_modules/bech32/index.js\"));\n\nvar _bignumber = __webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\");\n\nvar _utf = __webpack_require__(/*! utf8 */ \"./node_modules/utf8/utf8.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * fromRau is a function to convert Rau to Iotx.\n * @param rau number of Rau in string\n * @param unit unit converts to\n * @returns number of unit\n */\n\n\nfunction fromRau(rau, unit) {\n  return convert(rau, unit, \"div\");\n}\n/**\n * toRau is a function to convert various units to Rau.\n * @param num is the number of unit\n * @param unit is the unit to convert to Rau.\n * @returns number of Rau\n */\n\n\nfunction toRau(num, unit) {\n  return convert(num, unit, \"multipliedBy\");\n}\n\nfunction convert(num, unit, operator) {\n  const rauBN = new _bignumber.BigNumber(num);\n\n  switch (unit) {\n    case \"Rau\":\n      return num;\n\n    case \"KRau\":\n      // @ts-ignore\n      return rauBN[operator](new _bignumber.BigNumber(\"1000\")).toString(10);\n\n    case \"MRau\":\n      // @ts-ignore\n      return rauBN[operator](new _bignumber.BigNumber(\"1000000\")).toString(10);\n\n    case \"GRau\":\n      // @ts-ignore\n      return rauBN[operator](new _bignumber.BigNumber(\"1000000000\")).toString(10);\n\n    case \"Qev\":\n      // @ts-ignore\n      return rauBN[operator](new _bignumber.BigNumber(\"1000000000000\")).toString(10);\n\n    case \"Jing\":\n      // @ts-ignore\n      return rauBN[operator](new _bignumber.BigNumber(\"1000000000000000\")).toString(10);\n\n    default:\n      // @ts-ignore\n      return rauBN[operator](new _bignumber.BigNumber(\"1000000000000000000\")).toString(10);\n  }\n}\n/**\n * Should be called to get hex representation of utf8 string\n *\n * @param value input string\n * @returns hex representation of input string\n */\n\n\nfunction fromUtf8(value) {\n  let eValue = (0, _utf.encode)(value);\n  let hex = \"\"; // remove \\u0000 padding from either side\n\n  eValue = eValue.replace(/^(?:\\u0000)*/, \"\");\n  eValue = eValue.split(\"\").reverse().join(\"\");\n  eValue = eValue.replace(/^(?:\\u0000)*/, \"\");\n  eValue = eValue.split(\"\").reverse().join(\"\");\n\n  for (let i = 0; i < eValue.length; i++) {\n    const code = eValue.charCodeAt(i);\n    const n = code.toString(16);\n    hex += n.length < 2 ? `0${n}` : n;\n  }\n\n  return `${hex}`;\n}\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @param hex hex string\n *\n * @returns ascii string representation of hex value\n */\n\n\nfunction toUtf8(hex) {\n  if (!isHexStrict(hex)) {\n    throw new Error(`The parameter \"${hex}\" must be a valid HEX string.`);\n  }\n\n  let result = \"\";\n  let code = 0;\n  let eHex = hex; // remove 00 padding from either side\n\n  eHex = eHex.replace(/^(?:00)*/, \"\");\n  eHex = eHex.split(\"\").reverse().join(\"\");\n  eHex = eHex.replace(/^(?:00)*/, \"\");\n  eHex = eHex.split(\"\").reverse().join(\"\");\n  const l = eHex.length;\n\n  for (let i = 0; i < l; i += 2) {\n    code = parseInt(eHex.substr(i, 2), 16);\n    result += String.fromCharCode(code);\n  }\n\n  return (0, _utf.decode)(result);\n}\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @param hex to be checked\n * @returns is hex\n */\n\n\nfunction isHexStrict(hex) {\n  return /^(-)?[0-9a-f]*$/i.test(hex);\n}\n/**\n * Convert a hex string to a byte array\n *\n * @param hex string\n *\n * @returns  the byte array\n */\n\n\nfunction hexToBytes(hex) {\n  if (!isHexStrict(hex)) {\n    throw new Error(`Given value \"${hex}\" is not a valid hex string.`);\n  }\n\n  const shex = hex.length % 2 ? `0${hex}` : hex;\n  const bytes = [];\n\n  for (let c = 0; c < shex.length; c += 2) {\n    bytes.push(parseInt(shex.substr(c, 2), 16));\n  }\n\n  return new Uint8Array(bytes);\n}\n/**\n * validate address for iotex.\n *\n * @param address address\n *\n * @returns validate result\n */\n\n\nfunction validateAddress(address) {\n  try {\n    const payload = _bech.default.decode(address);\n\n    return payload.prefix === \"io\";\n  } catch (e) {\n    return false;\n  }\n}\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/account/utils.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/account/wallet.js":
/*!**********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/account/wallet.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(__webpack_require__(/*! crypto */ \"./node_modules/crypto-browserify/index.js\"));\n\nvar _randombytes = _interopRequireDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\n\nvar _scrypt = _interopRequireDefault(__webpack_require__(/*! scrypt.js */ \"./node_modules/scrypt.js/js.js\"));\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! uuid/v4 */ \"./node_modules/uuid/v4.js\"));\n\nvar _address = __webpack_require__(/*! ../crypto/address */ \"./node_modules/iotex-antenna/lib/crypto/address.js\");\n\nvar _crypto2 = __webpack_require__(/*! ../crypto/crypto */ \"./node_modules/iotex-antenna/lib/crypto/crypto.js\");\n\nvar _hash = __webpack_require__(/*! ../crypto/hash */ \"./node_modules/iotex-antenna/lib/crypto/hash.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\n\nclass Wallet {\n  constructor() {\n    _defineProperty(this, \"accounts\", void 0);\n\n    _defineProperty(this, \"accountsIndex\", void 0);\n\n    this.accounts = {};\n    this.accountsIndex = 0;\n    return new Proxy(this, {\n      get: (target, name) => {\n        if (target.accounts[name]) {\n          return target.accounts[name];\n        }\n\n        if (name === \"length\") {\n          return target.accountsIndex;\n        } // @ts-ignore\n\n\n        return target[name];\n      }\n    });\n  }\n\n  add(account) {\n    if (!this.accounts[account.address]) {\n      this.accounts[this.accountsIndex] = account;\n      this.accounts[account.address] = account;\n      this.accountsIndex++;\n    }\n  }\n\n  remove(addressOrIndex) {\n    const account = this.accounts[addressOrIndex];\n\n    if (account) {\n      // @ts-ignore\n      delete this.accounts.delete(account.address);\n\n      if (account.address !== addressOrIndex) {\n        // @ts-ignore\n        delete this.accounts.delete(addressOrIndex);\n      }\n    }\n  }\n\n} // ported from ethereumjs-wallet\n\n\nexports.default = Wallet;\n\nfunction encrypt(privateKey, password, opts = {}) {\n  const account = (0, _crypto2.privateKeyToAccount)(privateKey);\n  const salt = opts.salt || (0, _randombytes.default)(32);\n  const iv = opts.iv || (0, _randombytes.default)(16);\n  let derivedKey;\n  const kdf = opts.kdf || \"scrypt\";\n  const kdfparams = {\n    dklen: opts.dklen || 32,\n    salt: salt.toString(\"hex\")\n  };\n\n  if (kdf === \"pbkdf2\") {\n    kdfparams.c = opts.c || 262144;\n    kdfparams.prf = \"hmac-sha256\";\n    derivedKey = _crypto.default.pbkdf2Sync(Buffer.from(password), salt, kdfparams.c, kdfparams.dklen, \"sha256\");\n  } else if (kdf === \"scrypt\") {\n    // FIXME: support progress reporting callback\n    kdfparams.n = opts.n || 262144;\n    kdfparams.r = opts.r || 8;\n    kdfparams.p = opts.p || 1;\n    derivedKey = (0, _scrypt.default)(Buffer.from(password), salt, kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error(\"Unsupported kdf\");\n  }\n\n  const cipher = _crypto.default.createCipheriv(opts.cipher || \"aes-128-ctr\", derivedKey.slice(0, 16), iv);\n\n  if (!cipher) {\n    throw new Error(\"Unsupported cipher\");\n  }\n\n  const ciphertext = runCipherBuffer(cipher, Buffer.from(privateKey, \"hex\"));\n  const mac = (0, _hash.hash256b)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n  return {\n    version: 3,\n    // @ts-ignore\n    id: (0, _v.default)({\n      random: opts.uuid || (0, _randombytes.default)(16)\n    }),\n    address: String((0, _address.fromString)(account.address).stringEth()).replace(/^0x/, \"\"),\n    crypto: {\n      ciphertext: ciphertext.toString(\"hex\"),\n      cipherparams: {\n        iv: iv.toString(\"hex\")\n      },\n      cipher: opts.cipher || \"aes-128-ctr\",\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString(\"hex\")\n    }\n  };\n} // ported from ethereumjs-wallet\n\n\nfunction decrypt(privateKey, password) {\n  let derivedKey;\n  let kdfparams;\n\n  if (privateKey.crypto.kdf === \"scrypt\") {\n    kdfparams = privateKey.crypto.kdfparams; // FIXME: support progress reporting callback\n\n    derivedKey = (0, _scrypt.default)(Buffer.from(password), Buffer.from(kdfparams.salt, \"hex\"), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (privateKey.crypto.kdf === \"pbkdf2\") {\n    kdfparams = privateKey.crypto.kdfparams;\n\n    if (kdfparams.prf !== \"hmac-sha256\") {\n      throw new Error(\"Unsupported parameters to PBKDF2\");\n    }\n\n    derivedKey = _crypto.default.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, \"hex\"), kdfparams.c || 0, kdfparams.dklen, \"sha256\");\n  } else {\n    throw new Error(\"Unsupported key derivation scheme\");\n  }\n\n  const ciphertext = Buffer.from(privateKey.crypto.ciphertext, \"hex\");\n  const mac = (0, _hash.hash256b)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n  if (mac.toString(\"hex\") !== privateKey.crypto.mac) {\n    throw new Error(\"Key derivation failed - possibly wrong passphrase\");\n  }\n\n  const decipher = _crypto.default.createDecipheriv(privateKey.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(privateKey.crypto.cipherparams.iv, \"hex\"));\n\n  const seed = runCipherBuffer(decipher, ciphertext);\n  return (0, _crypto2.privateKeyToAccount)(seed.toString(\"hex\"));\n}\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/account/wallet.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/action/envelop.js":
/*!**********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/action/envelop.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SealedEnvelop = exports.Envelop = void 0;\n\nvar _action_pb = _interopRequireDefault(__webpack_require__(/*! ../../protogen/proto/types/action_pb */ \"./node_modules/iotex-antenna/protogen/proto/types/action_pb.js\"));\n\nvar _crypto = __webpack_require__(/*! ../crypto/crypto */ \"./node_modules/iotex-antenna/lib/crypto/crypto.js\");\n\nvar _hash = __webpack_require__(/*! ../crypto/hash */ \"./node_modules/iotex-antenna/lib/crypto/hash.js\");\n\nvar _types = __webpack_require__(/*! ../rpc-method/types */ \"./node_modules/iotex-antenna/lib/rpc-method/types.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Envelop {\n  // optional fields\n  constructor(version, nonce, gasLimit, gasPrice) {\n    _defineProperty(this, \"version\", void 0);\n\n    _defineProperty(this, \"nonce\", void 0);\n\n    _defineProperty(this, \"gasLimit\", void 0);\n\n    _defineProperty(this, \"gasPrice\", void 0);\n\n    _defineProperty(this, \"transfer\", void 0);\n\n    _defineProperty(this, \"execution\", void 0);\n\n    _defineProperty(this, \"startSubChain\", void 0);\n\n    _defineProperty(this, \"stopSubChain\", void 0);\n\n    _defineProperty(this, \"putBlock\", void 0);\n\n    _defineProperty(this, \"createDeposit\", void 0);\n\n    _defineProperty(this, \"settleDeposit\", void 0);\n\n    _defineProperty(this, \"createPlumChain\", void 0);\n\n    _defineProperty(this, \"terminatePlumChain\", void 0);\n\n    _defineProperty(this, \"plumPutBlock\", void 0);\n\n    _defineProperty(this, \"plumCreateDeposit\", void 0);\n\n    _defineProperty(this, \"plumStartExit\", void 0);\n\n    _defineProperty(this, \"plumChallengeExit\", void 0);\n\n    _defineProperty(this, \"plumResponseChallengeExit\", void 0);\n\n    _defineProperty(this, \"plumFinalizeExit\", void 0);\n\n    _defineProperty(this, \"plumSettleDeposit\", void 0);\n\n    _defineProperty(this, \"plumTransfer\", void 0);\n\n    _defineProperty(this, \"depositToRewardingFund\", void 0);\n\n    _defineProperty(this, \"claimFromRewardingFund\", void 0);\n\n    _defineProperty(this, \"grantReward\", void 0);\n\n    _defineProperty(this, \"stakeCreate\", void 0);\n\n    _defineProperty(this, \"stakeUnstake\", void 0);\n\n    _defineProperty(this, \"stakeWithdraw\", void 0);\n\n    _defineProperty(this, \"stakeAddDeposit\", void 0);\n\n    _defineProperty(this, \"stakeRestake\", void 0);\n\n    _defineProperty(this, \"stakeChangeCandidate\", void 0);\n\n    _defineProperty(this, \"stakeTransferOwnership\", void 0);\n\n    _defineProperty(this, \"candidateRegister\", void 0);\n\n    _defineProperty(this, \"candidateUpdate\", void 0);\n\n    _defineProperty(this, \"putPollResult\", void 0);\n\n    this.version = version;\n    this.nonce = nonce;\n    this.gasLimit = gasLimit;\n    this.gasPrice = gasPrice;\n  } // tslint:disable-next-line:cyclomatic-complexity\n\n\n  core() {\n    const gasLimit = this.gasLimit || \"0\";\n    const gasPrice = this.gasPrice || \"0\";\n    const pbActionCore = new _action_pb.default.ActionCore();\n    pbActionCore.setVersion(this.version);\n    pbActionCore.setNonce(Number(this.nonce));\n    pbActionCore.setGaslimit(Number(gasLimit));\n    pbActionCore.setGasprice(gasPrice);\n    pbActionCore.setChainid(0); // oneof action\n\n    if (this.transfer) {\n      pbActionCore.setTransfer((0, _types.toActionTransfer)(this.transfer));\n    } else if (this.execution) {\n      pbActionCore.setExecution((0, _types.toActionExecution)(this.execution));\n    } else if (this.startSubChain) {\n      pbActionCore.setStartsubchain((0, _types.toActionStartSubChain)(this.startSubChain));\n    } else if (this.stopSubChain) {\n      pbActionCore.setStopsubchain((0, _types.toActionStopSubChain)(this.stopSubChain));\n    } else if (this.putBlock) {\n      pbActionCore.setPutblock((0, _types.toActionPutBlock)(this.putBlock));\n    } else if (this.createDeposit) {\n      pbActionCore.setCreatedeposit((0, _types.toActionCreateDeposit)(this.createDeposit));\n    } else if (this.settleDeposit) {\n      pbActionCore.setSettledeposit((0, _types.toActionSettleDeposit)(this.settleDeposit));\n    } else if (this.createPlumChain) {\n      pbActionCore.setCreateplumchain((0, _types.toActionCreatePlumChain)(this.createPlumChain));\n    } else if (this.terminatePlumChain) {\n      pbActionCore.setTerminateplumchain((0, _types.toActionTerminatePlumChain)(this.terminatePlumChain));\n    } else if (this.plumPutBlock) {\n      pbActionCore.setPlumputblock((0, _types.toActionPlumPutBlock)(this.plumPutBlock));\n    } else if (this.plumCreateDeposit) {\n      pbActionCore.setPlumcreatedeposit((0, _types.toActionPlumCreateDeposit)(this.plumCreateDeposit));\n    } else if (this.plumStartExit) {\n      pbActionCore.setPlumstartexit((0, _types.toActionPlumStartExit)(this.plumStartExit));\n    } else if (this.plumChallengeExit) {\n      pbActionCore.setPlumchallengeexit((0, _types.toActionPlumChallengeExit)(this.plumChallengeExit));\n    } else if (this.plumResponseChallengeExit) {\n      pbActionCore.setPlumresponsechallengeexit((0, _types.toActionPlumResponseChallengeExit)(this.plumResponseChallengeExit));\n    } else if (this.plumFinalizeExit) {\n      pbActionCore.setPlumfinalizeexit((0, _types.toActionPlumFinalizeExit)(this.plumFinalizeExit));\n    } else if (this.plumSettleDeposit) {\n      pbActionCore.setPlumsettledeposit((0, _types.toActionPlumSettleDeposit)(this.plumSettleDeposit));\n    } else if (this.plumTransfer) {\n      pbActionCore.setPlumtransfer((0, _types.toActionPlumTransfer)(this.plumTransfer));\n    } else if (this.depositToRewardingFund) {\n      pbActionCore.setDeposittorewardingfund((0, _types.toActionDepositToRewardingFund)(this.depositToRewardingFund));\n    } else if (this.claimFromRewardingFund) {\n      pbActionCore.setClaimfromrewardingfund((0, _types.toActionClaimFromRewardingFund)(this.claimFromRewardingFund));\n    } else if (this.grantReward) {\n      pbActionCore.setGrantreward((0, _types.toActionGrantReward)(this.grantReward));\n    } else if (this.stakeCreate) {\n      pbActionCore.setStakecreate((0, _types.toActionStakeCreate)(this.stakeCreate));\n    } else if (this.stakeUnstake) {\n      pbActionCore.setStakeunstake((0, _types.toActionStakeReclaim)(this.stakeUnstake));\n    } else if (this.stakeWithdraw) {\n      pbActionCore.setStakewithdraw((0, _types.toActionStakeReclaim)(this.stakeWithdraw));\n    } else if (this.stakeAddDeposit) {\n      pbActionCore.setStakeadddeposit((0, _types.toActionStakeAddDeposit)(this.stakeAddDeposit));\n    } else if (this.stakeRestake) {\n      pbActionCore.setStakerestake((0, _types.toActionStakeRestake)(this.stakeRestake));\n    } else if (this.stakeChangeCandidate) {\n      pbActionCore.setStakechangecandidate((0, _types.toActionStakeChangeCandidate)(this.stakeChangeCandidate));\n    } else if (this.stakeTransferOwnership) {\n      pbActionCore.setStaketransferownership((0, _types.toActionStakeTransferOwnership)(this.stakeTransferOwnership));\n    } else if (this.candidateRegister) {\n      pbActionCore.setCandidateregister((0, _types.toActionCandidateRegister)(this.candidateRegister));\n    } else if (this.candidateUpdate) {\n      pbActionCore.setCandidateupdate((0, _types.toActionCandidateBasicInfo)(this.candidateUpdate));\n    }\n\n    return pbActionCore;\n  }\n\n  bytestream() {\n    return this.core().serializeBinary();\n  }\n\n  static deserialize(bytes) {\n    const pbActionCore = _action_pb.default.ActionCore.deserializeBinary(bytes);\n\n    const envelop = new Envelop(pbActionCore.getVersion(), String(pbActionCore.getNonce()), String(pbActionCore.getGaslimit()), pbActionCore.getGasprice());\n    envelop.transfer = _types.GetActionsRequest.fromTransfer(pbActionCore.getTransfer());\n    envelop.execution = _types.GetActionsRequest.fromExecution(pbActionCore.getExecution());\n    envelop.claimFromRewardingFund = _types.GetActionsRequest.fromClaimFromRewardingFund(pbActionCore.getClaimfromrewardingfund());\n    envelop.stakeCreate = _types.GetActionsRequest.fromStakeCreate(pbActionCore.getStakecreate());\n    envelop.stakeUnstake = _types.GetActionsRequest.fromStakeReclaim(pbActionCore.getStakeunstake());\n    envelop.stakeWithdraw = _types.GetActionsRequest.fromStakeReclaim(pbActionCore.getStakewithdraw());\n    envelop.stakeAddDeposit = _types.GetActionsRequest.fromStakeAddDeposit(pbActionCore.getStakeadddeposit());\n    envelop.stakeRestake = _types.GetActionsRequest.fromStakeRestake(pbActionCore.getStakerestake());\n    envelop.stakeChangeCandidate = _types.GetActionsRequest.fromStakeChangeCandidate(pbActionCore.getStakechangecandidate());\n    envelop.stakeTransferOwnership = _types.GetActionsRequest.fromStakeTransferOwnership(pbActionCore.getStaketransferownership());\n    envelop.candidateRegister = _types.GetActionsRequest.fromCandidateRegister(pbActionCore.getCandidateregister());\n    envelop.candidateUpdate = _types.GetActionsRequest.fromCandidateUpdate(pbActionCore.getCandidateupdate()); // TODO(tian): add more fields\n\n    return envelop;\n  }\n\n}\n\nexports.Envelop = Envelop;\n\nclass SealedEnvelop {\n  constructor(act, senderPubKey, signature) {\n    _defineProperty(this, \"act\", void 0);\n\n    _defineProperty(this, \"senderPubKey\", void 0);\n\n    _defineProperty(this, \"signature\", void 0);\n\n    this.act = act;\n    this.senderPubKey = senderPubKey;\n    this.signature = signature;\n  }\n\n  bytestream() {\n    const pbActionCore = this.act.core();\n    const pbAction = new _action_pb.default.Action();\n    pbAction.setCore(pbActionCore);\n    pbAction.setSenderpubkey(this.senderPubKey);\n    pbAction.setSignature(this.signature);\n    pbAction.setEncoding(0);\n    return pbAction.serializeBinary();\n  }\n\n  hash() {\n    return Buffer.from((0, _hash.hash256b)(this.bytestream())).toString(\"hex\");\n  }\n\n  action() {\n    const gasLimit = this.act.gasLimit || \"0\";\n    const gasPrice = this.act.gasPrice || \"0\";\n    return {\n      core: {\n        version: this.act.version,\n        nonce: this.act.nonce,\n        gasLimit: gasLimit,\n        gasPrice: gasPrice,\n        chainID: 0,\n        transfer: this.act.transfer,\n        execution: this.act.execution,\n        startSubChain: this.act.startSubChain,\n        stopSubChain: this.act.stopSubChain,\n        putBlock: this.act.putBlock,\n        createDeposit: this.act.createDeposit,\n        settleDeposit: this.act.settleDeposit,\n        createPlumChain: this.act.createPlumChain,\n        terminatePlumChain: this.act.terminatePlumChain,\n        plumPutBlock: this.act.plumPutBlock,\n        plumCreateDeposit: this.act.plumCreateDeposit,\n        plumStartExit: this.act.plumStartExit,\n        plumChallengeExit: this.act.plumChallengeExit,\n        plumResponseChallengeExit: this.act.plumResponseChallengeExit,\n        plumFinalizeExit: this.act.plumFinalizeExit,\n        plumSettleDeposit: this.act.plumSettleDeposit,\n        plumTransfer: this.act.plumTransfer,\n        depositToRewardingFund: this.act.depositToRewardingFund,\n        claimFromRewardingFund: this.act.claimFromRewardingFund,\n        grantReward: this.act.grantReward,\n        stakeCreate: this.act.stakeCreate,\n        stakeUnstake: this.act.stakeUnstake,\n        stakeWithdraw: this.act.stakeWithdraw,\n        stakeAddDeposit: this.act.stakeAddDeposit,\n        stakeRestake: this.act.stakeRestake,\n        stakeChangeCandidate: this.act.stakeChangeCandidate,\n        stakeTransferOwnership: this.act.stakeTransferOwnership,\n        candidateRegister: this.act.candidateRegister,\n        candidateUpdate: this.act.candidateUpdate,\n        putPollResult: this.act.putPollResult\n      },\n      senderPubKey: this.senderPubKey,\n      signature: this.signature,\n      encoding: 0\n    };\n  }\n\n  static sign(privateKey, publicKey, act) {\n    const h = (0, _hash.hash256b)(act.bytestream());\n    const sign = Buffer.from((0, _crypto.makeSigner)(0)(h.toString(\"hex\"), privateKey), \"hex\");\n    return new SealedEnvelop(act, Buffer.from(publicKey, \"hex\"), sign);\n  }\n\n}\n\nexports.SealedEnvelop = SealedEnvelop;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/action/envelop.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/action/method.js":
/*!*********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/action/method.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CandidateUpdateMethod = exports.CandidateRegisterMethod = exports.StakeTransferOwnershipMethod = exports.StakeChangeCandidateMethod = exports.StakeRestakeMethod = exports.StakeAddDepositMethod = exports.StakeWithdrawMethod = exports.StakeUnstakeMethod = exports.StakeCreateMethod = exports.ClaimFromRewardingFundMethod = exports.ExecutionMethod = exports.TransferMethod = exports.AbstractMethod = void 0;\n\nvar _bignumber = _interopRequireDefault(__webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\"));\n\nvar _envelop = __webpack_require__(/*! ./envelop */ \"./node_modules/iotex-antenna/lib/action/envelop.js\");\n\nvar _types = __webpack_require__(/*! ./types */ \"./node_modules/iotex-antenna/lib/action/types.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass AbstractMethod {\n  constructor(client, account, opts) {\n    _defineProperty(this, \"client\", void 0);\n\n    _defineProperty(this, \"account\", void 0);\n\n    _defineProperty(this, \"signer\", void 0);\n\n    this.client = client;\n    this.account = account;\n    this.signer = opts && opts.signer;\n  }\n\n  async baseEnvelop(gasLimit, gasPrice) {\n    let nonce = \"\";\n\n    if (this.account && this.account.address) {\n      const meta = await this.client.getAccount({\n        address: this.account.address\n      });\n      nonce = String(meta.accountMeta && meta.accountMeta.pendingNonce || \"\");\n    }\n\n    return new _envelop.Envelop(1, nonce, gasLimit, gasPrice);\n  }\n\n  async signAction(envelop) {\n    if (!envelop.gasPrice) {\n      const price = await this.client.suggestGasPrice({});\n      envelop.gasPrice = String(price.gasPrice);\n    }\n\n    if (!envelop.gasLimit) {\n      const limit = await this.client.estimateActionGasConsumption({\n        transfer: envelop.transfer,\n        execution: envelop.execution,\n        callerAddress: this.account.address\n      });\n      envelop.gasLimit = limit.gas.toString(10);\n    }\n\n    if (this.account && this.account.address) {\n      const meta = await this.client.getAccount({\n        address: this.account.address\n      });\n\n      if (meta.accountMeta && meta.accountMeta.balance) {\n        const gasPrice = new _bignumber.default(envelop.gasPrice);\n        const gasLimit = new _bignumber.default(envelop.gasLimit);\n        const balance = new _bignumber.default(meta.accountMeta.balance);\n\n        if (envelop.transfer) {\n          const amount = new _bignumber.default(envelop.transfer.amount);\n\n          if (balance.comparedTo(amount.plus(gasPrice.multipliedBy(gasLimit))) < 0) {\n            throw new _types.ActionError(_types.ActionErrorCode.ErrBalance, \"Insufficient funds for gas * price + amount\");\n          }\n        }\n\n        if (envelop.execution) {\n          const amount = new _bignumber.default(envelop.execution.amount);\n\n          if (balance.comparedTo(amount.plus(gasPrice.multipliedBy(gasLimit))) < 0) {\n            throw new _types.ActionError(_types.ActionErrorCode.ErrBalance, \"Insufficient funds for gas * price + amount\");\n          }\n        }\n      }\n    }\n\n    return _envelop.SealedEnvelop.sign(this.account.privateKey, this.account.publicKey, envelop);\n  }\n\n  async sendAction(envelop) {\n    const opts = {\n      address: \"\"\n    };\n\n    if (this.account && this.account.address) {\n      opts.address = this.account.address;\n    }\n\n    if (this.signer && this.signer.signAndSend) {\n      return this.signer.signAndSend(envelop, opts);\n    }\n\n    let selp;\n\n    if (this.signer && this.signer.signOnly) {\n      selp = await this.signer.signOnly(envelop, opts);\n    } else {\n      selp = await this.signAction(envelop);\n    }\n\n    try {\n      await this.client.sendAction({\n        action: selp.action()\n      });\n    } catch (e) {\n      let code = _types.ActionErrorCode.ErrUnknown;\n      let message = `send action error: ${JSON.stringify(e)}`;\n\n      if (e.details) {\n        message = e.details;\n\n        if (e.details.match(/^reject existed action .*/)) {\n          code = _types.ActionErrorCode.ErrExistedAction;\n        } else if (e.details.match(/^insufficient balance .*/)) {\n          code = _types.ActionErrorCode.ErrBalance;\n        } else if (e.details.match(/.* lower than minimal gas price threshold$/)) {\n          code = _types.ActionErrorCode.ErrGasPrice;\n        } else if (e.details === \"action source address is blacklisted\") {\n          code = _types.ActionErrorCode.ErrAddress;\n        } else if (e.details.indexOf(\"nonce\") >= 0) {\n          code = _types.ActionErrorCode.ErrNonce;\n        }\n      }\n\n      throw new _types.ActionError(code, message);\n    }\n\n    return selp.hash();\n  }\n\n}\n\nexports.AbstractMethod = AbstractMethod;\n\nclass TransferMethod extends AbstractMethod {\n  constructor(client, account, transfer, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"transfer\", void 0);\n\n    this.transfer = transfer;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.transfer.gasLimit, this.transfer.gasPrice);\n    envelop.transfer = {\n      amount: this.transfer.amount,\n      recipient: this.transfer.recipient,\n      payload: Buffer.from(this.transfer.payload, \"hex\")\n    };\n    return this.sendAction(envelop);\n  }\n\n}\n\nexports.TransferMethod = TransferMethod;\n\nclass ExecutionMethod extends AbstractMethod {\n  constructor(client, account, execution, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"execution\", void 0);\n\n    this.execution = execution;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.execution.gasLimit, this.execution.gasPrice);\n    envelop.execution = {\n      amount: this.execution.amount,\n      contract: this.execution.contract,\n      data: this.execution.data\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.execution.gasLimit, this.execution.gasPrice);\n    envelop.execution = {\n      amount: this.execution.amount,\n      contract: this.execution.contract,\n      data: this.execution.data\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.ExecutionMethod = ExecutionMethod;\n\nclass ClaimFromRewardingFundMethod extends AbstractMethod {\n  constructor(client, account, claim, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"claimFronRewardFund\", void 0);\n\n    this.claimFronRewardFund = claim;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.claimFronRewardFund.gasLimit, this.claimFronRewardFund.gasPrice);\n    envelop.claimFromRewardingFund = {\n      amount: this.claimFronRewardFund.amount,\n      data: this.claimFronRewardFund.data\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.claimFronRewardFund.gasLimit, this.claimFronRewardFund.gasPrice);\n    envelop.claimFromRewardingFund = {\n      amount: this.claimFronRewardFund.amount,\n      data: this.claimFronRewardFund.data\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.ClaimFromRewardingFundMethod = ClaimFromRewardingFundMethod;\n\nclass StakeCreateMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeCreate = {\n      candidateName: this.target.candidateName,\n      stakedAmount: this.target.stakedAmount,\n      stakedDuration: this.target.stakedDuration,\n      autoStake: this.target.autoStake,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeCreate = {\n      candidateName: this.target.candidateName,\n      stakedAmount: this.target.stakedAmount,\n      stakedDuration: this.target.stakedDuration,\n      autoStake: this.target.autoStake,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.StakeCreateMethod = StakeCreateMethod;\n\nclass StakeUnstakeMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeUnstake = {\n      bucketIndex: this.target.bucketIndex,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeUnstake = {\n      bucketIndex: this.target.bucketIndex,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.StakeUnstakeMethod = StakeUnstakeMethod;\n\nclass StakeWithdrawMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeWithdraw = {\n      bucketIndex: this.target.bucketIndex,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeWithdraw = {\n      bucketIndex: this.target.bucketIndex,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.StakeWithdrawMethod = StakeWithdrawMethod;\n\nclass StakeAddDepositMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeAddDeposit = {\n      bucketIndex: this.target.bucketIndex,\n      amount: this.target.amount,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeAddDeposit = {\n      bucketIndex: this.target.bucketIndex,\n      amount: this.target.amount,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.StakeAddDepositMethod = StakeAddDepositMethod;\n\nclass StakeRestakeMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeRestake = {\n      bucketIndex: this.target.bucketIndex,\n      stakedDuration: this.target.stakedDuration,\n      autoStake: this.target.autoStake,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeRestake = {\n      bucketIndex: this.target.bucketIndex,\n      stakedDuration: this.target.stakedDuration,\n      autoStake: this.target.autoStake,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.StakeRestakeMethod = StakeRestakeMethod;\n\nclass StakeChangeCandidateMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeChangeCandidate = {\n      bucketIndex: this.target.bucketIndex,\n      candidateName: this.target.candidateName,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeChangeCandidate = {\n      bucketIndex: this.target.bucketIndex,\n      candidateName: this.target.candidateName,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.StakeChangeCandidateMethod = StakeChangeCandidateMethod;\n\nclass StakeTransferOwnershipMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeTransferOwnership = {\n      bucketIndex: this.target.bucketIndex,\n      voterAddress: this.target.voterAddress,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.stakeTransferOwnership = {\n      bucketIndex: this.target.bucketIndex,\n      voterAddress: this.target.voterAddress,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.StakeTransferOwnershipMethod = StakeTransferOwnershipMethod;\n\nclass CandidateRegisterMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.candidateRegister = {\n      candidate: {\n        name: this.target.name,\n        operatorAddress: this.target.operatorAddress,\n        rewardAddress: this.target.rewardAddress\n      },\n      stakedAmount: this.target.stakedAmount,\n      stakedDuration: this.target.stakedDuration,\n      autoStake: this.target.autoStake,\n      ownerAddress: this.target.ownerAddress,\n      payload: this.target.payload\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.candidateRegister = {\n      candidate: {\n        name: this.target.name,\n        operatorAddress: this.target.operatorAddress,\n        rewardAddress: this.target.rewardAddress\n      },\n      stakedAmount: this.target.stakedAmount,\n      stakedDuration: this.target.stakedDuration,\n      autoStake: this.target.autoStake,\n      ownerAddress: this.target.ownerAddress,\n      payload: this.target.payload\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.CandidateRegisterMethod = CandidateRegisterMethod;\n\nclass CandidateUpdateMethod extends AbstractMethod {\n  constructor(client, account, target, opts) {\n    super(client, account, opts);\n\n    _defineProperty(this, \"target\", void 0);\n\n    this.target = target;\n  }\n\n  async execute() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.candidateUpdate = {\n      name: this.target.name,\n      operatorAddress: this.target.operatorAddress,\n      rewardAddress: this.target.rewardAddress\n    };\n    return this.sendAction(envelop);\n  }\n\n  async sign() {\n    const envelop = await this.baseEnvelop(this.target.gasLimit, this.target.gasPrice);\n    envelop.candidateUpdate = {\n      name: this.target.name,\n      operatorAddress: this.target.operatorAddress,\n      rewardAddress: this.target.rewardAddress\n    };\n    const selp = await this.signAction(envelop);\n    return selp.action();\n  }\n\n}\n\nexports.CandidateUpdateMethod = CandidateUpdateMethod;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/action/method.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/action/types.js":
/*!********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/action/types.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ActionError = exports.ActionErrorCode = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nlet ActionErrorCode;\nexports.ActionErrorCode = ActionErrorCode;\n\n(function (ActionErrorCode) {\n  ActionErrorCode[ActionErrorCode[\"ErrExistedAction\"] = 0] = \"ErrExistedAction\";\n  ActionErrorCode[ActionErrorCode[\"ErrBalance\"] = 1] = \"ErrBalance\";\n  ActionErrorCode[ActionErrorCode[\"ErrNonce\"] = 2] = \"ErrNonce\";\n  ActionErrorCode[ActionErrorCode[\"ErrAddress\"] = 3] = \"ErrAddress\";\n  ActionErrorCode[ActionErrorCode[\"ErrGasPrice\"] = 4] = \"ErrGasPrice\";\n  ActionErrorCode[ActionErrorCode[\"ErrUnknown\"] = 5] = \"ErrUnknown\";\n})(ActionErrorCode || (exports.ActionErrorCode = ActionErrorCode = {}));\n\nclass ActionError extends Error {\n  constructor(code, message) {\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    this.code = code;\n    Object.setPrototypeOf(this, ActionError.prototype);\n  }\n\n}\n\nexports.ActionError = ActionError;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/action/types.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/antenna.js":
/*!***************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/antenna.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _contract = __webpack_require__(/*! ./contract/contract */ \"./node_modules/iotex-antenna/lib/contract/contract.js\");\n\nvar _iotx = __webpack_require__(/*! ./iotx */ \"./node_modules/iotex-antenna/lib/iotx.js\");\n\nvar _ws = __webpack_require__(/*! ./plugin/ws */ \"./node_modules/iotex-antenna/lib/plugin/ws/index.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Antenna {\n  constructor(provider, opts) {\n    _defineProperty(this, \"iotx\", void 0);\n\n    this.iotx = new _iotx.Iotx(provider, {\n      signer: opts && opts.signer,\n      timeout: opts && opts.timeout,\n      apiToken: opts && opts.apiToken\n    });\n  }\n\n  setProvider(provider) {\n    if (typeof provider === \"object\") {\n      if (provider === this.iotx.currentProvider()) {\n        return;\n      }\n    }\n\n    this.iotx.setProvider(provider);\n  }\n\n  currentProvider() {\n    return this.iotx.currentProvider();\n  }\n\n}\n\nexports.default = Antenna;\n\n_defineProperty(Antenna, \"modules\", {\n  Iotx: _iotx.Iotx,\n  WsSignerPlugin: _ws.WsSignerPlugin,\n  Contract: _contract.Contract\n});\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/antenna.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/contract/abi-to-byte.js":
/*!****************************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/contract/abi-to-byte.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getAbiFunctions = getAbiFunctions;\nexports.getArgTypes = getArgTypes;\nexports.getHeaderHash = getHeaderHash;\nexports.encodeArguments = encodeArguments;\nexports.encodeInputData = encodeInputData;\nexports.Constructor = void 0;\n\nvar _web3EthAbi = _interopRequireDefault(__webpack_require__(/*! web3-eth-abi */ \"./node_modules/web3-eth-abi/lib/index.js\"));\n\nvar address = _interopRequireWildcard(__webpack_require__(/*! ../crypto/address */ \"./node_modules/iotex-antenna/lib/crypto/address.js\"));\n\nvar _hash = __webpack_require__(/*! ../crypto/hash */ \"./node_modules/iotex-antenna/lib/crypto/hash.js\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* tslint:disable:no-any */\n\n\nconst Abi = _web3EthAbi.default;\n\nfunction getAbiFunctions(abi) {\n  const abiFunctions = {};\n  abi.forEach(f => {\n    if (f.type === \"function\") {\n      abiFunctions[f.name] = f;\n    }\n\n    if (f.type === \"constructor\") {\n      abiFunctions[Constructor] = f;\n    }\n  });\n  return abiFunctions;\n}\n\nfunction getArgTypes(fnAbi) {\n  const args = [];\n  fnAbi.inputs.forEach(field => {\n    args.push({\n      name: field.name,\n      type: field.type\n    });\n  });\n  return args;\n}\n\nfunction getHeaderHash(fnAbi, args) {\n  const inputs = args.map(i => {\n    return i.type;\n  });\n  const signature = `${fnAbi.name}(${inputs.join(\",\")})`;\n  const keccak256 = (0, _hash.hash256b)(signature).toString(\"hex\");\n  return keccak256.slice(0, 8);\n}\n\nfunction encodeArguments(args, userInput) {\n  const types = [];\n  const values = [];\n  (args || []).forEach((arg, index) => {\n    let name = arg.name;\n\n    if (name === \"\") {\n      name = `arg${index}`;\n    }\n\n    if (arg.type === \"bool\") {\n      types.push(\"uint256\");\n    } else {\n      types.push(arg.type);\n    }\n\n    if (userInput.hasOwnProperty(name)) {\n      let value = userInput[name];\n\n      if (arg.type === \"address\") {\n        value = address.fromString(value).stringEth();\n      }\n\n      if (arg.type === \"address[]\") {\n        for (let i = 0; i < value.length; i++) {\n          value[i] = address.fromString(value[i]).stringEth();\n        }\n      }\n\n      values.push(value);\n    } else {\n      values.push(\"\");\n    }\n  });\n\n  try {\n    const encoded = Abi.encodeParameters(types, values);\n    return encoded.substring(2);\n  } catch (e) {\n    throw new Error(`failed to rawEncode: ${e.stack}, types: ${types}, values: ${values}`);\n  }\n}\n\nconst Constructor = \"constructor\";\nexports.Constructor = Constructor;\n\nfunction encodeInputData(abiByFunc, fnName, userInput) {\n  const fnAbi = abiByFunc[fnName];\n  const args = getArgTypes(fnAbi);\n  const header = getHeaderHash(fnAbi, args);\n  const encodedArgs = encodeArguments(args, userInput);\n  return `${header}${encodedArgs}`;\n}\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/contract/abi-to-byte.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/contract/contract.js":
/*!*************************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/contract/contract.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Contract = void 0;\n\nvar _web3EthAbi = _interopRequireDefault(__webpack_require__(/*! web3-eth-abi */ \"./node_modules/web3-eth-abi/lib/index.js\"));\n\nvar _method = __webpack_require__(/*! ../action/method */ \"./node_modules/iotex-antenna/lib/action/method.js\");\n\nvar _address = __webpack_require__(/*! ../crypto/address */ \"./node_modules/iotex-antenna/lib/crypto/address.js\");\n\nvar _abiToByte = __webpack_require__(/*! ./abi-to-byte */ \"./node_modules/iotex-antenna/lib/contract/abi-to-byte.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst Abi = _web3EthAbi.default;\n\nclass Contract {\n  // The json interface for the contract to instantiate\n  // This address is necessary for executions and call requests\n  // The options of the contract.\n  setProvider(provider) {\n    this.provider = provider;\n  }\n\n  constructor( // tslint:disable-next-line: no-any\n  jsonInterface, address, options) {\n    _defineProperty(this, \"abi\", void 0);\n\n    _defineProperty(this, \"address\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"methods\", void 0);\n\n    _defineProperty(this, \"decodeMethods\", void 0);\n\n    this.provider = options && options.provider;\n\n    if (jsonInterface) {\n      this.abi = (0, _abiToByte.getAbiFunctions)(jsonInterface);\n      const methods = {}; // @ts-ignore\n\n      for (const fnName of Object.keys(this.abi)) {\n        // @ts-ignore\n        const fnAbi = this.abi[fnName];\n\n        if (fnAbi.type === \"constructor\") {\n          continue;\n        }\n\n        const args = (0, _abiToByte.getArgTypes)(fnAbi);\n        const header = (0, _abiToByte.getHeaderHash)(fnAbi, args); // @ts-ignore\n\n        methods[header] = {\n          name: fnName,\n          inputsNames: args.map(i => {\n            return `${i.name}`;\n          }),\n          inputsTypes: args.map(i => {\n            return `${i.type}`;\n          })\n        };\n      }\n\n      this.decodeMethods = methods;\n    }\n\n    this.address = address;\n    this.options = options; // mount methods\n\n    this.methods = {}; // tslint:disable-next-line: no-for-in\n\n    for (const func in this.abi) {\n      if (!this.abi.hasOwnProperty(func)) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      this.methods[func] = async (...args) => {\n        if (!this.address || !this.abi) {\n          throw new Error(\"must set contract address and abi\");\n        }\n\n        if (args.length < 1) {\n          throw new Error(\"must set method execute parameter\");\n        }\n\n        if (!this.provider) {\n          throw new Error(\"no rpc method provider specified\");\n        }\n\n        const executeParameter = args[args.length - 1];\n        const abiFunc = this.abi[func];\n        const userInput = {};\n\n        if (!abiFunc.inputs || !Array.isArray(abiFunc.inputs)) {\n          return userInput;\n        } // tslint:disable-next-line: no-any\n\n\n        abiFunc.inputs.map((val, i) => {\n          // @ts-ignore\n          userInput[val.name] = args[i];\n        });\n\n        if (abiFunc.stateMutability === \"view\") {\n          const result = await this.provider.readContract({\n            execution: this.pureEncodeMethod(\"0\", func, ...args.slice(0, args.length - 1)),\n            callerAddress: this.address\n          });\n          return this.decodeMethodResult(func, result.data);\n        }\n\n        const methodEnvelop = this.encodeMethod(executeParameter.amount || \"0\", func, userInput, executeParameter.gasLimit, executeParameter.gasPrice);\n        const method = new _method.ExecutionMethod(this.provider, executeParameter.account, methodEnvelop, {\n          signer: this.options && this.options.signer\n        });\n        return method.execute();\n      };\n    }\n  } // tslint:disable-next-line: no-any\n\n\n  getABI() {\n    return this.abi;\n  }\n\n  getAddress() {\n    return this.address;\n  }\n\n  async deploy(account, // tslint:disable-next-line: no-any\n  inputs, amount, gasLimit, gasPrice) {\n    if (!this.options) {\n      throw new Error(\"must set contract byte code\");\n    }\n\n    if (!this.provider) {\n      throw new Error(\"no rpc method provider specified\");\n    }\n\n    let data = this.options.data || Buffer.from([]);\n\n    if (this.abi && this.abi.hasOwnProperty(_abiToByte.Constructor)) {\n      const abiFunc = this.abi[_abiToByte.Constructor];\n      const userInput = {}; // @ts-ignore\n\n      if (!abiFunc.inputs || !Array.isArray(abiFunc.inputs)) {\n        throw new Error(\"construtor input error\");\n      } // @ts-ignore\n      // tslint:disable-next-line: no-any\n\n\n      abiFunc.inputs.map((val, i) => {\n        // @ts-ignore\n        userInput[val.name] = inputs[i];\n      });\n      data = Buffer.concat([data, // @ts-ignore\n      Buffer.from((0, _abiToByte.encodeArguments)((0, _abiToByte.getArgTypes)(abiFunc), userInput), \"hex\")]);\n    }\n\n    const contractEnvelop = {\n      gasLimit: gasLimit,\n      gasPrice: gasPrice,\n      contract: \"\",\n      amount: amount || \"0\",\n      data: data\n    };\n    return new _method.ExecutionMethod(this.provider, account, contractEnvelop, {\n      signer: this.options && this.options.signer\n    }).execute();\n  }\n\n  pureEncodeMethod(amount, method, ...args) {\n    if (!this.address || !this.abi) {\n      throw new Error(\"must set contract address and abi\");\n    }\n\n    if (!this.abi[method]) {\n      throw new Error(`method ${method} does not in abi`);\n    }\n\n    const abiFunc = this.abi[method];\n    const userInput = {}; // tslint:disable-next-line: no-any\n\n    abiFunc.inputs.map((val, i) => {\n      let name = val.name;\n\n      if (name === \"\") {\n        name = `arg${i}`;\n      } // @ts-ignore\n\n\n      userInput[name] = args[i];\n    });\n    return this.encodeMethod(amount, method, userInput);\n  }\n\n  encodeMethod(amount, method, // tslint:disable-next-line:no-any\n  input, gasLimit, gasPrice) {\n    if (!this.address || !this.abi) {\n      throw new Error(\"must set contract address and abi\");\n    }\n\n    if (!this.abi[method]) {\n      throw new Error(`method ${method} does not in abi`);\n    }\n\n    return {\n      gasLimit: gasLimit,\n      gasPrice: gasPrice,\n      contract: this.address,\n      amount: amount,\n      data: Buffer.from((0, _abiToByte.encodeInputData)(this.abi, method, input), \"hex\")\n    };\n  }\n\n  decodeMethodResult(method, result) {\n    const outTypes = []; // @ts-ignore\n\n    this.getABI()[method].outputs.forEach(field => {\n      outTypes.push(field.type);\n    });\n\n    if (outTypes.length === 0) {\n      return null;\n    }\n\n    const results = Abi.decodeParameters(outTypes, result);\n\n    for (let i = 0; i < outTypes.length; i++) {\n      if (outTypes[i] === \"address\") {\n        results[i] = (0, _address.fromBytes)(Buffer.from(results[i].substring(2), \"hex\")).string();\n      }\n\n      if (outTypes[i] === \"address[]\") {\n        for (let j = 0; j < results[i].length; j++) {\n          results[i][j] = (0, _address.fromBytes)(Buffer.from(results[i][j].substring(2), \"hex\")).string();\n        }\n      }\n    }\n\n    if (outTypes.length === 1) {\n      return results[0];\n    }\n\n    return results;\n  }\n\n  decodeInput(data) {\n    if (data.length < 8) {\n      throw new Error(\"input data error\");\n    }\n\n    const methodKey = data.substr(0, 8);\n    const method = this.decodeMethods[methodKey];\n\n    if (!method) {\n      throw new Error(`method ${methodKey} is not contract method`);\n    }\n\n    const params = Abi.decodeParameters(method.inputsTypes, data.substring(8));\n    const values = {};\n\n    for (let i = 0; i < method.inputsTypes.length; i++) {\n      if (method.inputsTypes[i] === \"address\") {\n        params[i] = (0, _address.fromBytes)(Buffer.from(params[i].substring(2), \"hex\")).string();\n      } // @ts-ignore\n\n\n      values[method.inputsNames[i]] = params[i];\n    }\n\n    return {\n      method: method.name,\n      data: values\n    };\n  }\n\n}\n\nexports.Contract = Contract;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/contract/contract.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/crypto/address.js":
/*!**********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/crypto/address.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.fromBytes = fromBytes;\nexports.fromString = fromString;\n\nvar _bech = _interopRequireDefault(__webpack_require__(/*! bech32 */ \"./node_modules/bech32/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass AddressV1 {\n  constructor() {\n    _defineProperty(this, \"payload\", void 0);\n  }\n\n  static prefix() {\n    // TODO(tian): not sure how to deal with prefix for now\n    return this.MAINNET_PREFIX;\n  }\n\n  string() {\n    // @ts-ignore\n    const grouped = _bech.default.toWords(this.payload);\n\n    return _bech.default.encode(AddressV1.prefix(), grouped);\n  }\n\n  stringEth() {\n    return `0x${Buffer.from(this.payload).toString(\"hex\")}`;\n  }\n\n  bytes() {\n    return this.payload;\n  }\n\n}\n\n_defineProperty(AddressV1, \"ADDRESS_LENGTH\", 20);\n\n_defineProperty(AddressV1, \"MAINNET_PREFIX\", \"io\");\n\n_defineProperty(AddressV1, \"TESTNET_PREFIX\", \"it\");\n\nfunction fromBytes(bytes) {\n  if (bytes.length !== AddressV1.ADDRESS_LENGTH) {\n    throw new Error(`invalid address length in bytes: ${bytes.length}`);\n  }\n\n  const addr = new AddressV1();\n  addr.payload = bytes;\n  return addr;\n}\n\nfunction fromString(addrStr) {\n  const {\n    prefix,\n    words\n  } = _bech.default.decode(addrStr);\n\n  if (prefix !== AddressV1.prefix()) {\n    throw new Error(`hrp ${prefix} and address prefix ${AddressV1.prefix()} don't match`);\n  }\n\n  const addr = new AddressV1();\n  addr.payload = _bech.default.fromWords(words);\n  return addr;\n}\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/crypto/address.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/crypto/crypto.js":
/*!*********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/crypto/crypto.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.publicKeyToAddress = publicKeyToAddress;\nexports.privateKeyToAccount = privateKeyToAccount;\nexports.recover = exports.makeSigner = void 0;\n\nvar _elliptic = _interopRequireDefault(__webpack_require__(/*! elliptic */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic.js\"));\n\nvar _account = __webpack_require__(/*! eth-lib/lib/account */ \"./node_modules/eth-lib/lib/account.js\");\n\nvar _bytes = _interopRequireDefault(__webpack_require__(/*! eth-lib/lib/bytes */ \"./node_modules/eth-lib/lib/bytes.js\"));\n\nvar _address = __webpack_require__(/*! ./address */ \"./node_modules/iotex-antenna/lib/crypto/address.js\");\n\nvar _hash = __webpack_require__(/*! ./hash */ \"./node_modules/iotex-antenna/lib/crypto/hash.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // @ts-ignore\n// @ts-ignore\n\n\nconst secp256k1 = new _elliptic.default.ec(\"secp256k1\"); // eslint-disable-line\n\nfunction publicKeyToAddress(publicKey) {\n  const key = secp256k1.keyFromPublic(publicKey, \"hex\");\n  const publicKeyBytes = key.getPublic(false, \"ByteArray\");\n  const hashBytes = (0, _hash.hash160b)(publicKeyBytes.slice(1));\n  return (0, _address.fromBytes)(hashBytes).string();\n}\n\nfunction privateKeyToAccount(privateKey) {\n  const buffer = Buffer.from(privateKey, \"hex\");\n  const ecKey = secp256k1.keyFromPrivate(buffer);\n  const publicKey = ecKey.getPublic(false, \"hex\");\n  const publicKeyBytes = ecKey.getPublic(false, \"ByteArray\");\n  const hashBytes = (0, _hash.hash160b)(publicKeyBytes.slice(1));\n  const adObj = (0, _address.fromBytes)(hashBytes);\n  return {\n    address: adObj.string(),\n    publicKey,\n    privateKey\n  };\n}\n\nconst makeSigner = addToV => (hash, privateKey) => {\n  const signature = secp256k1.keyFromPrivate(Buffer.from(privateKey, \"hex\")).sign(Buffer.from(hash, \"hex\"), {\n    canonical: true,\n    pers: undefined\n  });\n  const signed = (0, _account.encodeSignature)([_bytes.default.fromNumber(addToV + (signature.recoveryParam || 0)), _bytes.default.pad(32, _bytes.default.fromNat(`0x${signature.r.toString(16)}`)), _bytes.default.pad(32, _bytes.default.fromNat(`0x${signature.s.toString(16)}`))]);\n  return signed.slice(2);\n};\n\nexports.makeSigner = makeSigner;\n\nconst recover = (hash, signature) => {\n  const vals = (0, _account.decodeSignature)(`0x${signature.toString(\"hex\")}`);\n  const vrs = {\n    v: _bytes.default.toNumber(vals[0]),\n    r: vals[1].slice(2),\n    s: vals[2].slice(2)\n  };\n  const ecPublicKey = secp256k1.recoverPubKey(hash, vrs, vrs.v < 2 ? vrs.v : 1 - vrs.v % 2);\n  const publicKey = ecPublicKey.encode(\"hex\", false);\n  return publicKeyToAddress(publicKey);\n};\n\nexports.recover = recover;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/crypto/crypto.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/crypto/hash.js":
/*!*******************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/crypto/hash.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.hash160b = hash160b;\nexports.hash256b = hash256b;\n\nvar _sha = __webpack_require__(/*! sha3 */ \"./node_modules/sha3/index.js\"); // @ts-ignore\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n\n\nfunction hash160b(input) {\n  const digest = hash256b(input);\n  return digest.slice(12);\n}\n\nfunction hash256b(input) {\n  const k = new _sha.Keccak(256); // @ts-ignore\n\n  k.update(Buffer.from(input));\n  return k.digest();\n}\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/crypto/hash.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _antenna = _interopRequireDefault(__webpack_require__(/*! ./antenna */ \"./node_modules/iotex-antenna/lib/antenna.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = _antenna.default;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/index.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/iotx.js":
/*!************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/iotx.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Iotx = void 0;\n\nvar _account = __webpack_require__(/*! ./account/account */ \"./node_modules/iotex-antenna/lib/account/account.js\");\n\nvar _accounts = __webpack_require__(/*! ./account/accounts */ \"./node_modules/iotex-antenna/lib/account/accounts.js\");\n\nvar _method = __webpack_require__(/*! ./action/method */ \"./node_modules/iotex-antenna/lib/action/method.js\");\n\nvar _contract = __webpack_require__(/*! ./contract/contract */ \"./node_modules/iotex-antenna/lib/contract/contract.js\");\n\nvar _rpcMethod = _interopRequireDefault(__webpack_require__(/*! ./rpc-method */ \"./node_modules/iotex-antenna/lib/rpc-method/browser-rpc-method.js\"));\n\nvar _address = __webpack_require__(/*! ./crypto/address */ \"./node_modules/iotex-antenna/lib/crypto/address.js\");\n\nvar rlp = _interopRequireWildcard(__webpack_require__(/*! rlp */ \"./node_modules/rlp/dist/index.js\"));\n\nvar _bignumber = _interopRequireDefault(__webpack_require__(/*! bignumber.js */ \"./node_modules/bignumber.js/bignumber.js\"));\n\nvar _ethereumjsUtil = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/ethereumjs-util/dist/index.js\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Iotx extends _rpcMethod.default {\n  constructor(hostname, opts) {\n    super(hostname, {\n      timeout: opts && opts.timeout,\n      apiToken: opts && opts.apiToken\n    });\n\n    _defineProperty(this, \"accounts\", void 0);\n\n    _defineProperty(this, \"signer\", void 0);\n\n    this.accounts = new _accounts.Accounts();\n    this.signer = opts && opts.signer;\n    setTimeout(async () => {\n      const signer = this.signer;\n\n      if (signer && signer.getAccounts) {\n        try {\n          const accounts = await signer.getAccounts();\n          accounts.forEach(account => {\n            this.accounts.addAccount(new _account.RemoteAccount(account.address, signer));\n          });\n        } catch (err) {\n          throw new Error(`fetch remote accounts address error: ${err}`);\n        }\n      }\n    }, 2000);\n  }\n\n  async tryGetAccount(address) {\n    const sender = this.signer && this.signer.getAccount ? await this.signer.getAccount(address) : this.accounts.getAccount(address);\n\n    if (!sender) {\n      throw new Error(`cannot find account: ${address}`);\n    }\n\n    return sender;\n  }\n\n  currentProvider() {\n    return this.client;\n  }\n\n  async sendTransfer(req) {\n    const sender = await this.tryGetAccount(req.from);\n    const payload = req.payload || \"\";\n    return new _method.TransferMethod(this, sender, {\n      gasLimit: req.gasLimit,\n      gasPrice: req.gasPrice,\n      amount: req.value,\n      recipient: req.to,\n      payload: payload\n    }, {\n      signer: this.signer\n    }).execute();\n  }\n\n  async sendRawTransaction(req) {\n    // @ts-ignore\n    const tx = rlp.decode(req.data);\n    const nonce = new _bignumber.default(`0x${tx[0].toString(\"hex\")}`);\n    const gasPrice = new _bignumber.default(`0x${tx[1].toString(\"hex\")}`);\n    const gasLimit = new _bignumber.default(`0x${tx[2].toString(\"hex\")}`);\n    let to = tx[3].length > 0 ? (0, _address.fromBytes)(tx[3]).string() : \"\";\n    const value = new _bignumber.default(`0x${tx[4].toString(\"hex\")}`);\n    const data = tx[5];\n    let v = new _bignumber.default(`0x${tx[6].toString(\"hex\")}`);\n    v = v.minus(req.chainID * 2 + 8);\n    const pad = (0, _ethereumjsUtil.unpadBuffer)((0, _ethereumjsUtil.toBuffer)(0));\n    const rawTx = [...tx.slice(0, 6), (0, _ethereumjsUtil.toBuffer)(req.chainID), pad, pad];\n    const raw = rlp.encode(rawTx);\n    const hash = (0, _ethereumjsUtil.keccakFromHexString)(`0x${raw.toString(\"hex\")}`);\n    const vv = (0, _ethereumjsUtil.bufferToInt)(tx[6]);\n    const publicKey = (0, _ethereumjsUtil.ecrecover)(hash, vv, tx[7], tx[8], req.chainID);\n    const compactPublicKey = Buffer.concat([(0, _ethereumjsUtil.toBuffer)(4), publicKey]);\n    const signature = Buffer.concat([(0, _ethereumjsUtil.setLengthLeft)(tx[7], 32), (0, _ethereumjsUtil.setLengthLeft)(tx[8], 32), (0, _ethereumjsUtil.toBuffer)(v.toNumber())]);\n    let isContract = true;\n\n    if (to !== \"\") {\n      const account = await this.getAccount({\n        address: to\n      });\n\n      if (!account.accountMeta) {\n        throw new Error(`can't fetch ${to} account info`);\n      }\n\n      isContract = account.accountMeta.isContract;\n    }\n\n    const sendActionReq = {\n      action: {\n        core: {\n          version: 0,\n          nonce: nonce.toString(10),\n          gasLimit: gasLimit.toString(10),\n          gasPrice: gasPrice.toString(10),\n          chainID: 0\n        },\n        senderPubKey: compactPublicKey,\n        signature: signature,\n        encoding: 1\n      }\n    };\n\n    if (!isContract) {\n      // @ts-ignore\n      sendActionReq.action.core.transfer = {\n        amount: value.toString(10),\n        recipient: to,\n        payload: data\n      };\n    } else {\n      // @ts-ignore\n      sendActionReq.action.core.execution = {\n        amount: value.toString(10),\n        contract: to,\n        data: data\n      };\n    }\n\n    return (await this.sendAction(sendActionReq)).actionHash;\n  }\n\n  async estimateGas(req) {\n    const to = req.to ? (0, _address.fromBytes)(Buffer.from(req.to.substring(2), \"hex\")).string() : \"\";\n    let from = \"io1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqd39ym7\";\n\n    if (req.from) {\n      from = (0, _address.fromBytes)(Buffer.from(req.from.substring(2), \"hex\")).string();\n    }\n\n    let isContract = true;\n\n    if (to !== \"\") {\n      const account = await this.getAccount({\n        address: to\n      });\n\n      if (!account.accountMeta) {\n        throw new Error(`can't fetch ${to} account info`);\n      }\n\n      isContract = account.accountMeta.isContract;\n    }\n\n    const estimateReq = {\n      callerAddress: from\n    };\n\n    if (!isContract) {\n      // @ts-ignore\n      estimateReq.transfer = {\n        amount: new _bignumber.default(req.value).toString(10),\n        recipient: to,\n        payload: req.data ? Buffer.from(req.data.substring(2), \"hex\") : \"\"\n      };\n    } else {\n      // @ts-ignore\n      estimateReq.execution = {\n        amount: req.value ? new _bignumber.default(req.value).toString(10) : \"0\",\n        contract: to,\n        data: req.data ? Buffer.from(req.data.substring(2), \"hex\") : \"\"\n      };\n    }\n\n    return (await this.estimateActionGasConsumption(estimateReq)).gas;\n  } // return action hash\n\n\n  async deployContract(req, ...args) {\n    if (typeof req.abi === \"string\") {\n      try {\n        req.abi = JSON.parse(req.abi);\n      } catch (e) {\n        throw new Error(\"parse abi to ABIDefinition error\");\n      }\n    }\n\n    const sender = await this.tryGetAccount(req.from); // @ts-ignore\n\n    return new _contract.Contract(req.abi, undefined, {\n      data: req.data,\n      provider: this,\n      signer: this.signer\n    }).deploy(sender, args, req.amount, req.gasLimit, req.gasPrice);\n  } // return action hash\n\n\n  async executeContract(req, ...args) {\n    if (typeof req.abi === \"string\") {\n      try {\n        req.abi = JSON.parse(req.abi);\n      } catch (e) {\n        throw new Error(\"parse abi to ABIDefinition error\");\n      }\n    }\n\n    const sender = await this.tryGetAccount(req.from); // @ts-ignore\n\n    const contract = new _contract.Contract(req.abi, req.contractAddress, {\n      provider: this,\n      signer: this.signer\n    });\n    return contract.methods[req.method](...args, {\n      account: sender,\n      amount: req.amount,\n      gasLimit: req.gasLimit,\n      gasPrice: req.gasPrice\n    });\n  }\n\n  async readContractByMethod(req, ...args) {\n    if (typeof req.abi === \"string\") {\n      try {\n        req.abi = JSON.parse(req.abi);\n      } catch (e) {\n        throw new Error(\"parse abi to ABIDefinition error\");\n      }\n    } // @ts-ignore\n\n\n    const contract = new _contract.Contract(req.abi, req.contractAddress, {\n      provider: this,\n      signer: this.signer\n    });\n    const result = await this.readContract({\n      execution: contract.pureEncodeMethod(\"0\", req.method, ...args),\n      callerAddress: req.from\n    });\n    return contract.decodeMethodResult(req.method, result.data);\n  }\n\n  async claimFromRewardingFund(req) {\n    const sender = await this.tryGetAccount(req.from);\n    return new _method.ClaimFromRewardingFundMethod(this, sender, {\n      gasLimit: req.gasLimit,\n      gasPrice: req.gasPrice,\n      amount: req.amount,\n      data: req.data\n    }, {\n      signer: this.signer\n    }).execute();\n  }\n\n}\n\nexports.Iotx = Iotx;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/iotx.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/plugin/ws/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/plugin/ws/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\n\nvar _ws = __webpack_require__(/*! ./ws */ \"./node_modules/iotex-antenna/lib/plugin/ws/ws.js\");\n\nObject.keys(_ws).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _ws[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _ws[key];\n    }\n  });\n});\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/plugin/ws/index.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/plugin/ws/ws.js":
/*!********************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/plugin/ws/ws.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WsSignerPlugin = void 0;\n\nvar _window = _interopRequireDefault(__webpack_require__(/*! global/window */ \"./node_modules/global/window.js\"));\n\nvar _isomorphicWs = _interopRequireDefault(__webpack_require__(/*! isomorphic-ws */ \"./node_modules/isomorphic-ws/browser.js\"));\n\nvar _account = __webpack_require__(/*! ../../account/account */ \"./node_modules/iotex-antenna/lib/account/account.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // tslint:disable-next-line:insecure-random\n\n\nlet reqId = Math.round(Math.random() * 10000);\n\nclass WsSignerPlugin {\n  constructor(provider = \"wss://local.iotex.io:64102\", options = {\n    retryCount: 3,\n    retryDuration: 50\n  }) {\n    _defineProperty(this, \"ws\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    this.provider = provider;\n    this.options = options;\n    this.init();\n  }\n\n  init() {\n    this.ws = new _isomorphicWs.default(this.provider);\n\n    this.ws.onopen = () => {\n      _window.default.console.log(\"[antenna-ws] connected\");\n    };\n\n    this.ws.onclose = () => {\n      _window.default.console.log(\"[antenna-ws] disconnected\");\n    };\n  }\n\n  send(req) {\n    const readyState = this.ws.readyState;\n\n    if (readyState === 1) {\n      this.ws.send(JSON.stringify(req));\n    } else {\n      if (readyState === 2 || readyState === 3) {\n        this.init();\n      }\n\n      this.reconnectAndSend(this.options.retryCount, req);\n    }\n  }\n\n  reconnectAndSend(retryCount, req, timeoutId) {\n    const readyState = this.ws.readyState;\n\n    if (timeoutId) {\n      _window.default.clearTimeout(timeoutId);\n    }\n\n    if (retryCount > 0) {\n      const id = _window.default.setTimeout(() => {\n        if (readyState === 1) {\n          this.ws.send(JSON.stringify(req));\n\n          _window.default.clearTimeout(id);\n        } else {\n          const count = retryCount - 1;\n          this.reconnectAndSend(count, req, id);\n        }\n      }, this.options.retryDuration);\n    } else {\n      _window.default.console.error(\"ws plugin connect error, please retry again later.\");\n    }\n  }\n\n  async signAndSend(envelop) {\n    const id = reqId++;\n    const req = {\n      reqId: id,\n      envelop: Buffer.from(envelop.bytestream()).toString(\"hex\"),\n      type: \"SIGN_AND_SEND\",\n      origin: this.getOrigin()\n    };\n    this.send(req); // tslint:disable-next-line:promise-must-complete\n\n    return new Promise(resolve => {\n      this.ws.onmessage = event => {\n        let resp = {\n          reqId: -1,\n          actionHash: \"\"\n        };\n\n        try {\n          if (typeof event.data === \"string\") {\n            resp = JSON.parse(event.data);\n          }\n        } catch (_) {\n          return;\n        }\n\n        if (resp.reqId === id) {\n          resolve(resp.actionHash);\n        }\n      };\n    });\n  }\n\n  async getAccount(address) {\n    const acct = new _account.Account();\n    acct.address = address;\n    return acct;\n  }\n\n  async getAccounts() {\n    const id = reqId++;\n    const req = {\n      reqId: id,\n      type: \"GET_ACCOUNTS\"\n    };\n    this.send(req); // tslint:disable-next-line:promise-must-complete\n\n    return new Promise(resolve => {\n      this.ws.onmessage = event => {\n        let resp = {\n          reqId: -1,\n          accounts: []\n        };\n\n        try {\n          if (typeof event.data === \"string\") {\n            resp = JSON.parse(event.data);\n          }\n        } catch (_) {\n          return;\n        }\n\n        if (resp.reqId === id) {\n          resolve(resp.accounts);\n        }\n      };\n    });\n  }\n\n  getOrigin(plugin = \"\") {\n    let origin = \"\";\n\n    if (location !== undefined && location.hasOwnProperty(\"hostname\") && location.hostname.length) {\n      origin = location.hostname;\n    } else {\n      origin = plugin;\n    }\n\n    if (origin.substr(0, 4) === \"www.\") {\n      origin = origin.replace(\"www.\", \"\");\n    }\n\n    return origin;\n  }\n\n  async signMessage(data) {\n    const id = reqId++;\n    const req = {\n      reqId: id,\n      msg: data,\n      type: \"SIGN_MSG\"\n    };\n    this.send(req);\n    return new Promise(resolve => {\n      this.ws.onmessage = event => {\n        let resp = {\n          reqId: -1,\n          sig: \"\"\n        };\n\n        try {\n          if (typeof event.data === \"string\") {\n            resp = JSON.parse(event.data);\n          }\n        } catch (_) {\n          resolve(new Buffer(\"\"));\n          return;\n        }\n\n        if (resp.reqId === id) {\n          resolve(Buffer.from(resp.sig, \"hex\"));\n        }\n      };\n    });\n  }\n\n}\n\nexports.WsSignerPlugin = WsSignerPlugin;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/plugin/ws/ws.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/rpc-method/browser-rpc-method.js":
/*!*************************************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/rpc-method/browser-rpc-method.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _api_grpc_web_pb = _interopRequireDefault(__webpack_require__(/*! ../../protogen/proto/api/api_grpc_web_pb */ \"./node_modules/iotex-antenna/protogen/proto/api/api_grpc_web_pb.js\"));\n\nvar _types = __webpack_require__(/*! ./types */ \"./node_modules/iotex-antenna/lib/rpc-method/types.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass RpcMethod {\n  constructor(hostname, options = {}) {\n    _defineProperty(this, \"client\", void 0);\n\n    _defineProperty(this, \"timeout\", void 0);\n\n    _defineProperty(this, \"apiToken\", void 0);\n\n    this.client = new _api_grpc_web_pb.default.APIServicePromiseClient(hostname, null, null);\n    this.timeout = options.timeout || 300000;\n    this.apiToken = options.apiToken;\n  }\n\n  setProvider(provider) {\n    if (typeof provider === \"string\") {\n      this.client = new _api_grpc_web_pb.default.APIServicePromiseClient(provider, null, null);\n    } else {\n      const origin = provider;\n      this.client = origin.client;\n    }\n  }\n\n  getDeadline() {\n    return `${new Date(Date.now() + this.timeout).getTime()}`;\n  }\n\n  getMetadata() {\n    if (this.apiToken) {\n      return {\n        deadline: this.getDeadline(),\n        authorization: `bearer ${this.apiToken}`\n      };\n    }\n\n    return {\n      deadline: this.getDeadline()\n    };\n  }\n\n  async getAccount(req) {\n    const pbReq = _types.GetAccountRequest.to(req);\n\n    const pbResp = await this.client.getAccount(pbReq, this.getMetadata());\n    return _types.GetAccountRequest.from(pbResp);\n  }\n\n  async getBlockMetas(req) {\n    const pbReq = _types.GetBlockMetasRequest.to(req);\n\n    const pbResp = await this.client.getBlockMetas(pbReq, this.getMetadata());\n    return _types.GetBlockMetasRequest.from(pbResp);\n  }\n\n  async getChainMeta(req) {\n    const pbReq = _types.GetChainMetaRequest.to(req);\n\n    const pbResp = await this.client.getChainMeta(pbReq, this.getMetadata());\n    return _types.GetChainMetaRequest.from(pbResp);\n  }\n\n  async getServerMeta(req) {\n    const pbReq = _types.GetServerMetaRequest.to(req);\n\n    const pbResp = await this.client.getServerMeta(pbReq, this.getMetadata());\n    return _types.GetServerMetaRequest.from(pbResp);\n  }\n\n  async getActions(req) {\n    const pbReq = _types.GetActionsRequest.to(req);\n\n    const pbResp = await this.client.getActions(pbReq, this.getMetadata());\n    return _types.GetActionsRequest.from(pbResp);\n  }\n\n  async suggestGasPrice(req) {\n    const pbReq = _types.SuggestGasPriceRequest.to(req);\n\n    const pbResp = await this.client.suggestGasPrice(pbReq, this.getMetadata());\n    return _types.SuggestGasPriceRequest.from(pbResp);\n  }\n\n  async estimateGasForAction(req) {\n    const pbReq = _types.EstimateGasForActionRequest.to(req);\n\n    const pbResp = await this.client.estimateGasForAction(pbReq, this.getMetadata());\n    return _types.EstimateGasForActionRequest.from(pbResp);\n  }\n\n  async readState(req) {\n    const pbReq = _types.ReadStateRequest.to(req);\n\n    const pbResp = await this.client.readState(pbReq, this.getMetadata());\n    return _types.ReadStateRequest.from(pbResp);\n  }\n\n  async readContract(req) {\n    const pbReq = _types.ReadContractRequest.to(req);\n\n    const pbResp = await this.client.readContract(pbReq, this.getMetadata());\n    return _types.ReadContractRequest.from(pbResp);\n  }\n\n  async sendAction(req) {\n    const pbReq = _types.SendActionRequest.to(req);\n\n    const pbResp = await this.client.sendAction(pbReq, this.getMetadata());\n    return _types.SendActionResponse.from(pbResp);\n  }\n\n  async getReceiptByAction(req) {\n    const pbReq = _types.GetReceiptByActionRequest.to(req);\n\n    const pbResp = await this.client.getReceiptByAction(pbReq, this.getMetadata());\n    return _types.GetReceiptByActionRequest.from(pbResp);\n  }\n\n  async getEpochMeta(req) {\n    const pbReq = _types.GetEpochMetaRequest.to(req);\n\n    const pbResp = await this.client.getEpochMeta(pbReq, this.getMetadata());\n    return _types.GetEpochMetaRequest.from(pbResp);\n  }\n\n  async getLogs(req) {\n    const pbReq = _types.GetLogsRequest.to(req);\n\n    const pbResp = await this.client.getLogs(pbReq, this.getMetadata());\n    return _types.GetLogsRequest.from(pbResp);\n  }\n\n  async estimateActionGasConsumption(req) {\n    const pbReq = _types.EstimateActionGasConsumptionRequest.to(req);\n\n    const pbResp = await this.client.estimateActionGasConsumption(pbReq, this.getMetadata());\n    return _types.EstimateActionGasConsumptionRequest.from(pbResp);\n  }\n\n  streamBlocks(req) {\n    const pbReq = _types.StreamBlocksRequest.to(req); // @ts-ignore\n\n\n    const origin = this.client.streamBlocks(pbReq, this.getMetadata());\n    return new _types.ClientReadableStream(origin, \"StreamBlocks\");\n  }\n\n  streamLogs(req) {\n    const pbReq = _types.StreamLogsRequest.to(req); // @ts-ignore\n\n\n    const origin = this.client.streamLogs(pbReq, this.getMetadata());\n    return new _types.ClientReadableStream(origin, \"StreamLogs\");\n  }\n\n}\n\nexports.default = RpcMethod;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/rpc-method/browser-rpc-method.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/lib/rpc-method/types.js":
/*!************************************************************!*\
  !*** ./node_modules/iotex-antenna/lib/rpc-method/types.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.toActionTransfer = toActionTransfer;\nexports.toTimestamp = toTimestamp;\nexports.toActionExecution = toActionExecution;\nexports.toActionStartSubChain = toActionStartSubChain;\nexports.toActionStopSubChain = toActionStopSubChain;\nexports.toActionPutBlock = toActionPutBlock;\nexports.toActionCreateDeposit = toActionCreateDeposit;\nexports.toActionSettleDeposit = toActionSettleDeposit;\nexports.toActionCreatePlumChain = toActionCreatePlumChain;\nexports.toActionTerminatePlumChain = toActionTerminatePlumChain;\nexports.toActionPlumPutBlock = toActionPlumPutBlock;\nexports.toActionPlumCreateDeposit = toActionPlumCreateDeposit;\nexports.toActionPlumStartExit = toActionPlumStartExit;\nexports.toActionPlumChallengeExit = toActionPlumChallengeExit;\nexports.toActionPlumResponseChallengeExit = toActionPlumResponseChallengeExit;\nexports.toActionPlumFinalizeExit = toActionPlumFinalizeExit;\nexports.toActionPlumSettleDeposit = toActionPlumSettleDeposit;\nexports.toActionPlumTransfer = toActionPlumTransfer;\nexports.toActionDepositToRewardingFund = toActionDepositToRewardingFund;\nexports.toActionClaimFromRewardingFund = toActionClaimFromRewardingFund;\nexports.toActionGrantReward = toActionGrantReward;\nexports.toActionStakeCreate = toActionStakeCreate;\nexports.toActionStakeReclaim = toActionStakeReclaim;\nexports.toActionStakeAddDeposit = toActionStakeAddDeposit;\nexports.toActionStakeRestake = toActionStakeRestake;\nexports.toActionStakeChangeCandidate = toActionStakeChangeCandidate;\nexports.toActionStakeTransferOwnership = toActionStakeTransferOwnership;\nexports.toActionCandidateRegister = toActionCandidateRegister;\nexports.toActionCandidateBasicInfo = toActionCandidateBasicInfo;\nexports.toAction = toAction;\nexports.fromPbReceipt = fromPbReceipt;\nexports.IReadStakingDataRequestToBuffer = exports.IReadStakingDataMethodToBuffer = exports.ClientReadableStream = exports.StreamLogsRequest = exports.StreamBlocksRequest = exports.EstimateActionGasConsumptionRequest = exports.GetLogsRequest = exports.GetEpochMetaRequest = exports.ReadStateRequest = exports.EstimateGasForActionRequest = exports.SendActionResponse = exports.SendActionRequest = exports.ReadContractRequest = exports.GetReceiptByActionRequest = exports.ReceiptStatus = exports.SuggestGasPriceRequest = exports.GetActionsRequest = exports.IReadStakingDataMethodName = exports.GetBlockMetasRequest = exports.GetServerMetaRequest = exports.GetChainMetaRequest = exports.GetAccountRequest = void 0;\n\nvar _events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n\nvar _timestamp_pb = __webpack_require__(/*! google-protobuf/google/protobuf/timestamp_pb */ \"./node_modules/google-protobuf/google/protobuf/timestamp_pb.js\");\n\nvar _api_pb = _interopRequireDefault(__webpack_require__(/*! ../../protogen/proto/api/api_pb */ \"./node_modules/iotex-antenna/protogen/proto/api/api_pb.js\"));\n\nvar _read_state_pb = __webpack_require__(/*! ../../protogen/proto/api/read_state_pb */ \"./node_modules/iotex-antenna/protogen/proto/api/read_state_pb.js\");\n\nvar _action_pb = _interopRequireDefault(__webpack_require__(/*! ../../protogen/proto/types/action_pb */ \"./node_modules/iotex-antenna/protogen/proto/types/action_pb.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst GetAccountRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.GetAccountRequest();\n    pbReq.setAddress(req.address);\n    return pbReq;\n  },\n\n  from(pbRes) {\n    const meta = pbRes.getAccountmeta();\n\n    if (!meta) {\n      return {\n        accountMeta: undefined,\n        blockIdentifier: undefined\n      };\n    }\n\n    const blockIdentifierPb = pbRes.getBlockidentifier();\n    let blockIdentifier = undefined;\n\n    if (blockIdentifierPb) {\n      blockIdentifier = {\n        hash: blockIdentifierPb.getHash(),\n        height: blockIdentifierPb.getHeight()\n      };\n    }\n\n    return {\n      accountMeta: {\n        address: meta.getAddress(),\n        balance: meta.getBalance(),\n        isContract: meta.getIscontract(),\n        nonce: meta.getNonce(),\n        pendingNonce: meta.getPendingnonce(),\n        numActions: meta.getNumactions(),\n        contractByteCode: meta.getContractbytecode()\n      },\n      blockIdentifier\n    };\n  }\n\n}; // interface for get chain meta\n\nexports.GetAccountRequest = GetAccountRequest;\nconst GetChainMetaRequest = {\n  // @ts-ignore\n  to(req) {\n    return new _api_pb.default.GetChainMetaRequest();\n  },\n\n  from(pbRes) {\n    const meta = pbRes.getChainmeta();\n    const res = {\n      chainMeta: meta\n    };\n\n    if (meta) {\n      const epochData = meta.getEpoch();\n      res.chainMeta = {\n        height: meta.getHeight(),\n        numActions: meta.getNumactions(),\n        tps: meta.getTps(),\n        epoch: {\n          num: epochData && epochData.getNum(),\n          height: epochData && epochData.getHeight(),\n          gravityChainStartHeight: epochData && epochData.getGravitychainstartheight()\n        }\n      };\n    }\n\n    return res;\n  }\n\n}; // interface for get server metas\n\nexports.GetChainMetaRequest = GetChainMetaRequest; // @ts-ignore\n\nconst GetServerMetaRequest = {\n  // @ts-ignore\n  to(req) {\n    return new _api_pb.default.GetServerMetaRequest();\n  },\n\n  from(pbRes) {\n    const meta = pbRes.getServermeta();\n\n    if (!meta) {\n      return {\n        serverMeta: undefined\n      };\n    }\n\n    return {\n      serverMeta: {\n        packageVersion: meta.getPackageversion(),\n        packageCommitID: meta.getPackagecommitid(),\n        gitStatus: meta.getGitstatus(),\n        goVersion: meta.getGoversion(),\n        buildTime: meta.getBuildtime()\n      }\n    };\n  }\n\n}; // interface for get block metas\n// Properties of a GetBlockMetasByIndexRequest.\n\nexports.GetServerMetaRequest = GetServerMetaRequest;\nconst GetBlockMetasRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.GetBlockMetasRequest();\n\n    if (req.byIndex) {\n      const pbReqByIndex = new _api_pb.default.GetBlockMetasByIndexRequest();\n\n      if (req.byIndex.start) {\n        pbReqByIndex.setStart(req.byIndex.start);\n      }\n\n      if (req.byIndex.count) {\n        pbReqByIndex.setCount(req.byIndex.count);\n      }\n\n      pbReq.setByindex(pbReqByIndex);\n    } else if (req.byHash) {\n      const pbReqByHash = new _api_pb.default.GetBlockMetaByHashRequest();\n      pbReqByHash.setBlkhash(req.byHash.blkHash);\n      pbReq.setByhash(pbReqByHash);\n    }\n\n    return pbReq;\n  },\n\n  from(pbRes) {\n    const metas = pbRes.getBlkmetasList();\n    const res = {\n      blkMetas: metas,\n      total: pbRes.getTotal()\n    };\n\n    if (metas) {\n      const parsedMetas = [];\n\n      for (let i = 0; i < metas.length; i++) {\n        parsedMetas[i] = {\n          hash: metas[i].getHash(),\n          height: metas[i].getHeight(),\n          timestamp: metas[i].getTimestamp(),\n          numActions: metas[i].getNumactions(),\n          producerAddress: metas[i].getProduceraddress(),\n          transferAmount: metas[i].getTransferamount(),\n          txRoot: metas[i].getTxroot(),\n          receiptRoot: metas[i].getReceiptroot(),\n          deltaStateDigest: metas[i].getDeltastatedigest(),\n          gasLimit: metas[i].getGasLimit(),\n          gasUsed: metas[i].getGasUsed()\n        };\n      }\n\n      res.blkMetas = parsedMetas;\n    }\n\n    return res;\n  }\n\n}; // interface for get actions\n// Properties of a GetActionsByIndexRequest.\n\nexports.GetBlockMetasRequest = GetBlockMetasRequest;\nlet IReadStakingDataMethodName;\nexports.IReadStakingDataMethodName = IReadStakingDataMethodName;\n\n(function (IReadStakingDataMethodName) {\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"INVALID\"] = 0] = \"INVALID\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"BUCKETS\"] = 1] = \"BUCKETS\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"BUCKETS_BY_VOTER\"] = 2] = \"BUCKETS_BY_VOTER\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"BUCKETS_BY_CANDIDATE\"] = 3] = \"BUCKETS_BY_CANDIDATE\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"CANDIDATES\"] = 4] = \"CANDIDATES\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"CANDIDATE_BY_NAME\"] = 5] = \"CANDIDATE_BY_NAME\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"BUCKETS_BY_INDEXES\"] = 6] = \"BUCKETS_BY_INDEXES\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"CANDIDATE_BY_ADDRESS\"] = 7] = \"CANDIDATE_BY_ADDRESS\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"TOTAL_STAKING_AMOUNT\"] = 8] = \"TOTAL_STAKING_AMOUNT\";\n  IReadStakingDataMethodName[IReadStakingDataMethodName[\"BUCKETS_COUNT\"] = 9] = \"BUCKETS_COUNT\";\n})(IReadStakingDataMethodName || (exports.IReadStakingDataMethodName = IReadStakingDataMethodName = {}));\n\nfunction toActionTransfer(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbTransfer = new _action_pb.default.Transfer();\n  pbTransfer.setAmount(req.amount);\n  pbTransfer.setRecipient(req.recipient);\n  pbTransfer.setPayload(req.payload);\n  return pbTransfer;\n}\n\nfunction toTimestamp(timestamp) {\n  const ts = new _timestamp_pb.Timestamp();\n\n  if (timestamp) {\n    ts.setSeconds(timestamp.seconds);\n    ts.setNanos(timestamp.nanos);\n  }\n\n  return ts;\n}\n\nfunction toActionExecution(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbExecution = new _action_pb.default.Execution();\n  pbExecution.setAmount(req.amount);\n  pbExecution.setContract(req.contract);\n  pbExecution.setData(req.data);\n  return pbExecution;\n}\n\nfunction toActionStartSubChain(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStartSubChain = new _action_pb.default.StartSubChain();\n  pbStartSubChain.setChainid(req.chainID);\n  pbStartSubChain.setSecuritydeposit(req.securityDeposit);\n  pbStartSubChain.setOperationdeposit(req.operationDeposit);\n  pbStartSubChain.setStartheight(req.startHeight);\n  pbStartSubChain.setParentheightoffset(req.parentHeightOffset);\n  return pbStartSubChain;\n}\n\nfunction toActionStopSubChain(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStopSubChain = new _action_pb.default.StopSubChain(); // @ts-ignore\n\n  pbStopSubChain.setChainid(req.chainID); // @ts-ignore\n\n  pbStopSubChain.setStopheight(req.stopHeight); // @ts-ignore\n\n  pbStopSubChain.setSubchainaddress(req.subChainAddress);\n  return pbStopSubChain;\n}\n\nfunction toActionPutBlock(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const roots = req.roots;\n  const rootList = [];\n\n  if (req.roots && roots) {\n    for (let i = 0; i < req.roots.length; i++) {\n      const rootItem = req.roots && req.roots[i];\n      const mkroot = new _action_pb.default.MerkleRoot();\n      mkroot.setName(rootItem.name);\n      mkroot.setValue(rootItem.value);\n      rootList[i] = mkroot;\n    }\n  }\n\n  const pbPutBlock = new _action_pb.default.PutBlock();\n  pbPutBlock.setSubchainaddress(req.subChainAddress);\n  pbPutBlock.setHeight(req.height);\n  pbPutBlock.setRootsList(rootList);\n  return pbPutBlock;\n}\n\nfunction toActionCreateDeposit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbCreateDeposit = new _action_pb.default.CreateDeposit();\n  pbCreateDeposit.setChainid(req.chainID);\n  pbCreateDeposit.setAmount(req.amount);\n  pbCreateDeposit.setRecipient(req.recipient);\n  return pbCreateDeposit;\n}\n\nfunction toActionSettleDeposit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbSettleDeposit = new _action_pb.default.SettleDeposit();\n  pbSettleDeposit.setAmount(req.amount);\n  pbSettleDeposit.setRecipient(req.recipient);\n  pbSettleDeposit.setIndex(req.index);\n  return pbSettleDeposit;\n}\n\nfunction toActionCreatePlumChain(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  return new _action_pb.default.CreatePlumChain();\n}\n\nfunction toActionTerminatePlumChain(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbTerminatePlumChain = new _action_pb.default.TerminatePlumChain();\n  pbTerminatePlumChain.setSubchainaddress(req.subChainAddress);\n  return pbTerminatePlumChain;\n}\n\nfunction toActionPlumPutBlock(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumPutBlock = new _action_pb.default.PlumPutBlock();\n  pbPlumPutBlock.setSubchainaddress(req.subChainAddress);\n  pbPlumPutBlock.setHeight(req.height);\n  return pbPlumPutBlock;\n}\n\nfunction toActionPlumCreateDeposit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumCreateDeposit = new _action_pb.default.PlumCreateDeposit(); // @ts-ignore\n\n  pbPlumCreateDeposit.setSubchainaddress(req.subChainAddress); // @ts-ignore\n\n  pbPlumCreateDeposit.setAmount(req.amount); // @ts-ignore\n\n  pbPlumCreateDeposit.setRecipient(req.recipient);\n  return pbPlumCreateDeposit;\n}\n\nfunction toActionPlumStartExit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumStartExit = new _action_pb.default.PlumStartExit();\n  pbPlumStartExit.setSubchainaddress(req.subChainAddress);\n  pbPlumStartExit.setPrevioustransfer(req.previousTransfer);\n  pbPlumStartExit.setPrevioustransferblockproof(req.previousTransferBlockProof);\n  pbPlumStartExit.setPrevioustransferblockheight(req.previousTransferBlockHeight);\n  pbPlumStartExit.setExittransfer(req.exitTransfer);\n  pbPlumStartExit.setExittransferblockproof(req.exitTransferBlockProof);\n  pbPlumStartExit.setExittransferblockheight(req.exitTransferBlockHeight);\n  return pbPlumStartExit;\n}\n\nfunction toActionPlumChallengeExit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumChallengeExit = new _action_pb.default.PlumChallengeExit();\n  pbPlumChallengeExit.setSubchainaddress(req.subChainAddress);\n  pbPlumChallengeExit.setCoinid(req.coinID);\n  pbPlumChallengeExit.setChallengetransfer(req.challengeTransfer);\n  pbPlumChallengeExit.setChallengetransferblockproof(req.challengeTransferBlockProof);\n  pbPlumChallengeExit.setChallengetransferblockheight(req.challengeTransferBlockHeight);\n  return pbPlumChallengeExit;\n}\n\nfunction toActionPlumResponseChallengeExit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumResponseChallengeExit = new _action_pb.default.PlumResponseChallengeExit();\n  pbPlumResponseChallengeExit.setSubchainaddress(req.subChainAddress);\n  pbPlumResponseChallengeExit.setCoinid(req.coinID);\n  pbPlumResponseChallengeExit.setChallengetransfer(req.challengeTransfer);\n  pbPlumResponseChallengeExit.setResponsetransfer(req.responseTransfer);\n  pbPlumResponseChallengeExit.setResponsetransferblockproof(req.responseTransferBlockProof);\n  return pbPlumResponseChallengeExit;\n}\n\nfunction toActionPlumFinalizeExit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumFinalizeExit = new _action_pb.default.PlumFinalizeExit();\n  pbPlumFinalizeExit.setSubchainaddress(req.subChainAddress);\n  pbPlumFinalizeExit.setCoinid(req.coinID);\n  return pbPlumFinalizeExit;\n}\n\nfunction toActionPlumSettleDeposit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumSettleDeposit = new _action_pb.default.PlumSettleDeposit();\n  pbPlumSettleDeposit.setCoinid(req.coinID);\n  return pbPlumSettleDeposit;\n}\n\nfunction toActionPlumTransfer(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbPlumTransfer = new _action_pb.default.PlumTransfer();\n  pbPlumTransfer.setCoinid(req.coinID);\n  pbPlumTransfer.setDenomination(req.denomination);\n  pbPlumTransfer.setOwner(req.owner);\n  pbPlumTransfer.setRecipient(req.recipient);\n  return pbPlumTransfer;\n}\n\nfunction toActionDepositToRewardingFund(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbDepositToRewardingFund = new _action_pb.default.DepositToRewardingFund();\n  pbDepositToRewardingFund.setAmount(req.amount);\n  pbDepositToRewardingFund.setData(req.data);\n  return pbDepositToRewardingFund;\n}\n\nfunction toActionClaimFromRewardingFund(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbClaimFromRewardingFund = new _action_pb.default.ClaimFromRewardingFund(); // @ts-ignore\n\n  pbClaimFromRewardingFund.setAmount(req.amount); // @ts-ignore\n\n  pbClaimFromRewardingFund.setData(req.data);\n  return pbClaimFromRewardingFund;\n}\n\nfunction toActionGrantReward(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbGrantReward = new _action_pb.default.GrantReward();\n  pbGrantReward.setType(req.type);\n  return pbGrantReward;\n}\n\nfunction toActionStakeCreate(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStakeCreate = new _action_pb.default.StakeCreate();\n  pbStakeCreate.setCandidatename(req.candidateName);\n  pbStakeCreate.setStakedamount(req.stakedAmount);\n  pbStakeCreate.setStakedduration(req.stakedDuration);\n  pbStakeCreate.setAutostake(req.autoStake);\n  pbStakeCreate.setPayload(req.payload);\n  return pbStakeCreate;\n}\n\nfunction toActionStakeReclaim(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStakeReclaim = new _action_pb.default.StakeReclaim();\n  pbStakeReclaim.setBucketindex(req.bucketIndex);\n  pbStakeReclaim.setPayload(req.payload);\n  return pbStakeReclaim;\n}\n\nfunction toActionStakeAddDeposit(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStakeAddDeposit = new _action_pb.default.StakeAddDeposit();\n  pbStakeAddDeposit.setBucketindex(req.bucketIndex);\n  pbStakeAddDeposit.setAmount(req.amount);\n  pbStakeAddDeposit.setPayload(req.payload);\n  return pbStakeAddDeposit;\n}\n\nfunction toActionStakeRestake(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStakeRestake = new _action_pb.default.StakeRestake();\n  pbStakeRestake.setBucketindex(req.bucketIndex);\n  pbStakeRestake.setStakedduration(req.stakedDuration);\n  pbStakeRestake.setAutostake(req.autoStake);\n  pbStakeRestake.setPayload(req.payload);\n  return pbStakeRestake;\n}\n\nfunction toActionStakeChangeCandidate(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStakeChangeCandidate = new _action_pb.default.StakeChangeCandidate();\n  pbStakeChangeCandidate.setBucketindex(req.bucketIndex);\n  pbStakeChangeCandidate.setCandidatename(req.candidateName);\n  pbStakeChangeCandidate.setPayload(req.payload);\n  return pbStakeChangeCandidate;\n}\n\nfunction toActionStakeTransferOwnership(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbStakeTransferOwnership = new _action_pb.default.StakeTransferOwnership();\n  pbStakeTransferOwnership.setBucketindex(req.bucketIndex);\n  pbStakeTransferOwnership.setVoteraddress(req.voterAddress);\n  pbStakeTransferOwnership.setPayload(req.payload);\n  return pbStakeTransferOwnership;\n}\n\nfunction toActionCandidateRegister(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbCandidateRegister = new _action_pb.default.CandidateRegister();\n  const pbCandidateBasicInfo = new _action_pb.default.CandidateBasicInfo();\n  pbCandidateBasicInfo.setName(req.candidate.name);\n  pbCandidateBasicInfo.setOperatoraddress(req.candidate.operatorAddress);\n  pbCandidateBasicInfo.setRewardaddress(req.candidate.rewardAddress);\n  pbCandidateRegister.setCandidate(pbCandidateBasicInfo);\n  pbCandidateRegister.setStakedamount(req.stakedAmount);\n  pbCandidateRegister.setStakedduration(req.stakedDuration);\n  pbCandidateRegister.setAutostake(req.autoStake);\n  pbCandidateRegister.setOwneraddress(req.ownerAddress);\n  pbCandidateRegister.setPayload(req.payload);\n  return pbCandidateRegister;\n}\n\nfunction toActionCandidateBasicInfo(req) {\n  if (!req) {\n    return undefined;\n  }\n\n  const pbCandidateBasicInfo = new _action_pb.default.CandidateBasicInfo();\n  pbCandidateBasicInfo.setName(req.name);\n  pbCandidateBasicInfo.setOperatoraddress(req.operatorAddress);\n  pbCandidateBasicInfo.setRewardaddress(req.rewardAddress);\n  return pbCandidateBasicInfo;\n}\n\nfunction toAction(req) {\n  const pbActionCore = new _action_pb.default.ActionCore();\n  const core = req && req.core;\n\n  if (core) {\n    pbActionCore.setVersion(core.version);\n    pbActionCore.setNonce(Number(core.nonce));\n    pbActionCore.setGaslimit(Number(core.gasLimit));\n    pbActionCore.setGasprice(core.gasPrice);\n    pbActionCore.setChainid(core.chainID);\n    pbActionCore.setTransfer(toActionTransfer(core.transfer));\n    pbActionCore.setExecution(toActionExecution(core.execution));\n    pbActionCore.setStartsubchain(toActionStartSubChain(core.startSubChain));\n    pbActionCore.setStopsubchain(toActionStopSubChain(core.stopSubChain));\n    pbActionCore.setPutblock(toActionPutBlock(core.putBlock));\n    pbActionCore.setCreatedeposit(toActionCreateDeposit(core.createDeposit));\n    pbActionCore.setSettledeposit(toActionSettleDeposit(core.settleDeposit));\n    pbActionCore.setCreateplumchain(toActionCreatePlumChain(core.createPlumChain));\n    pbActionCore.setTerminateplumchain(toActionTerminatePlumChain(core.terminatePlumChain));\n    pbActionCore.setPlumputblock(toActionPlumPutBlock(core.plumPutBlock));\n    pbActionCore.setPlumcreatedeposit(toActionPlumCreateDeposit(core.plumCreateDeposit));\n    pbActionCore.setPlumstartexit(toActionPlumStartExit(core.plumStartExit));\n    pbActionCore.setPlumchallengeexit(toActionPlumChallengeExit(core.plumChallengeExit));\n    pbActionCore.setPlumresponsechallengeexit(toActionPlumResponseChallengeExit(core.plumResponseChallengeExit));\n    pbActionCore.setPlumfinalizeexit(toActionPlumFinalizeExit(core.plumFinalizeExit));\n    pbActionCore.setPlumsettledeposit(toActionPlumSettleDeposit(core.plumSettleDeposit));\n    pbActionCore.setPlumtransfer(toActionPlumTransfer(core.plumTransfer));\n    pbActionCore.setDeposittorewardingfund(toActionDepositToRewardingFund(core.depositToRewardingFund));\n    pbActionCore.setClaimfromrewardingfund(toActionClaimFromRewardingFund(core.claimFromRewardingFund));\n    pbActionCore.setGrantreward(toActionGrantReward(core.grantReward));\n    pbActionCore.setStakecreate(toActionStakeCreate(core.stakeCreate));\n    pbActionCore.setStakeunstake(toActionStakeReclaim(core.stakeUnstake));\n    pbActionCore.setStakewithdraw(toActionStakeReclaim(core.stakeWithdraw));\n    pbActionCore.setStakeadddeposit(toActionStakeAddDeposit(core.stakeAddDeposit));\n    pbActionCore.setStakerestake(toActionStakeRestake(core.stakeRestake));\n    pbActionCore.setStakechangecandidate(toActionStakeChangeCandidate(core.stakeChangeCandidate));\n    pbActionCore.setStaketransferownership(toActionStakeTransferOwnership(core.stakeTransferOwnership));\n    pbActionCore.setCandidateregister(toActionCandidateRegister(core.candidateRegister));\n    pbActionCore.setCandidateupdate(toActionCandidateBasicInfo(core.candidateUpdate));\n  }\n\n  const pbAction = new _action_pb.default.Action();\n  pbAction.setCore(pbActionCore);\n\n  if (req.senderPubKey) {\n    pbAction.setSenderpubkey(req.senderPubKey);\n  }\n\n  if (req.signature) {\n    pbAction.setSignature(req.signature);\n  }\n\n  if (req.encoding) pbAction.setEncoding(req.encoding);\n  return pbAction;\n}\n\nconst GetActionsRequest = {\n  byAddrTo(byAddr) {\n    const pbReqByAddr = new _api_pb.default.GetActionsByAddressRequest();\n\n    if (byAddr.address) {\n      pbReqByAddr.setAddress(byAddr.address);\n    }\n\n    if (byAddr.start) {\n      pbReqByAddr.setStart(byAddr.start);\n    }\n\n    if (byAddr.count) {\n      pbReqByAddr.setCount(byAddr.count);\n    }\n\n    return pbReqByAddr;\n  },\n\n  byBlkTo(byBlk) {\n    const pbReqByBlk = new _api_pb.default.GetActionsByBlockRequest();\n\n    if (byBlk.blkHash) {\n      pbReqByBlk.setBlkhash(byBlk.blkHash);\n    }\n\n    if (byBlk.start) {\n      pbReqByBlk.setStart(byBlk.start);\n    }\n\n    if (byBlk.count) {\n      pbReqByBlk.setCount(byBlk.count);\n    }\n\n    return pbReqByBlk;\n  },\n\n  byHashTo(byHash) {\n    const pbReqByHash = new _api_pb.default.GetActionByHashRequest();\n\n    if (byHash.actionHash) {\n      pbReqByHash.setActionhash(byHash.actionHash);\n    }\n\n    if (byHash.checkingPending) {\n      pbReqByHash.setCheckpending(byHash.checkingPending);\n    }\n\n    return pbReqByHash;\n  },\n\n  byIndexTo(byIndex) {\n    const pbReqByIndex = new _api_pb.default.GetActionsByIndexRequest();\n\n    if (byIndex.start) {\n      pbReqByIndex.setStart(byIndex.start);\n    }\n\n    if (byIndex.count) {\n      pbReqByIndex.setCount(byIndex.count);\n    }\n\n    return pbReqByIndex;\n  },\n\n  unconfirmedByAddrTo(unconfirmedByAddr) {\n    const pbReqUnconfirmedByAddr = new _api_pb.default.GetUnconfirmedActionsByAddressRequest();\n\n    if (unconfirmedByAddr.start) {\n      pbReqUnconfirmedByAddr.setStart(unconfirmedByAddr.start);\n    }\n\n    if (unconfirmedByAddr.count) {\n      pbReqUnconfirmedByAddr.setCount(unconfirmedByAddr.count);\n    }\n\n    if (unconfirmedByAddr.address) {\n      pbReqUnconfirmedByAddr.setAddress(unconfirmedByAddr.address);\n    }\n\n    return pbReqUnconfirmedByAddr;\n  },\n\n  to(req) {\n    const pbReq = new _api_pb.default.GetActionsRequest();\n\n    if (req.byAddr) {\n      pbReq.setByaddr(GetActionsRequest.byAddrTo(req.byAddr));\n    }\n\n    if (req.byBlk) {\n      pbReq.setByblk(GetActionsRequest.byBlkTo(req.byBlk));\n    }\n\n    if (req.byHash) {\n      pbReq.setByhash(GetActionsRequest.byHashTo(req.byHash));\n    }\n\n    if (req.byIndex) {\n      pbReq.setByindex(GetActionsRequest.byIndexTo(req.byIndex));\n    }\n\n    if (req.unconfirmedByAddr) {\n      pbReq.setUnconfirmedbyaddr(GetActionsRequest.unconfirmedByAddrTo(req.unconfirmedByAddr));\n    }\n\n    return pbReq;\n  },\n\n  fromTransfer(pbRes) {\n    let transferData = pbRes;\n\n    if (pbRes) {\n      transferData = {\n        amount: pbRes.getAmount(),\n        recipient: pbRes.getRecipient(),\n        payload: pbRes.getPayload()\n      };\n    }\n\n    return transferData;\n  },\n\n  fromVote(pbRes) {\n    let voteData = pbRes;\n\n    if (voteData) {\n      voteData = {\n        timestamp: pbRes.getTimestamp(),\n        voteeAddress: pbRes.getVoteeaddress()\n      };\n    }\n\n    return voteData;\n  },\n\n  fromExecution(pbRes) {\n    if (!pbRes) {\n      return;\n    }\n\n    return {\n      amount: pbRes.getAmount(),\n      contract: pbRes.getContract(),\n      // @ts-ignore\n      data: Buffer.from(pbRes.getData())\n    };\n  },\n\n  fromStartSubChain(pbRes) {\n    let startSubChainData = pbRes;\n\n    if (startSubChainData) {\n      startSubChainData = {\n        chainID: pbRes.chainID,\n        securityDeposit: pbRes.securityDeposit,\n        operationDeposit: pbRes.operationDeposit,\n        startHeight: pbRes.startHeight,\n        parentHeightOffset: pbRes.parentHeightOffset\n      };\n    }\n\n    return startSubChainData;\n  },\n\n  fromStopSubChain(pbRes) {\n    let stopSubChainData = pbRes;\n\n    if (stopSubChainData) {\n      stopSubChainData = {\n        chainID: pbRes.chainID,\n        stopHeight: pbRes.stopHeight,\n        subChainAddress: pbRes.subChainAddress\n      };\n    }\n\n    return stopSubChainData;\n  },\n\n  fromPutBlock(pbRes) {\n    let putBlockData = pbRes;\n\n    if (putBlockData) {\n      const rootsData = pbRes.roots;\n\n      if (rootsData) {\n        for (let i = 0; i < pbRes.roots.length; i++) {\n          rootsData[i] = {\n            name: pbRes.roots[i].name,\n            value: pbRes.roots[i].value\n          };\n        }\n      }\n\n      putBlockData = {\n        subChainAddress: pbRes.subChainAddress,\n        height: pbRes.height,\n        roots: rootsData\n      };\n    }\n\n    return putBlockData;\n  },\n\n  fromCreateDeposit(pbRes) {\n    let createDepositData = pbRes;\n\n    if (createDepositData) {\n      createDepositData = {\n        chainID: pbRes.chainID,\n        amount: pbRes.amount,\n        recipient: pbRes.recipient\n      };\n    }\n\n    return createDepositData;\n  },\n\n  fromSettleDeposit(pbRes) {\n    let settleDepositData = pbRes;\n\n    if (settleDepositData) {\n      settleDepositData = {\n        amount: pbRes.amount,\n        recipient: pbRes.recipient,\n        index: pbRes.index\n      };\n    }\n\n    return settleDepositData;\n  },\n\n  fromCreatePlumChain(pbRes) {\n    let createPlumChainData = pbRes;\n\n    if (createPlumChainData) {\n      createPlumChainData = {};\n    }\n\n    return createPlumChainData;\n  },\n\n  fromTerminatePlumChain(pbRes) {\n    let terminatePlumChainData = pbRes;\n\n    if (terminatePlumChainData) {\n      terminatePlumChainData = {\n        subChainAddress: pbRes.subChainAddress\n      };\n    }\n\n    return terminatePlumChainData;\n  },\n\n  fromPlumPutBlock(pbRes) {\n    let plumPutBlockData = pbRes;\n\n    if (plumPutBlockData) {\n      plumPutBlockData = {\n        subChainAddress: pbRes.subChainAddress,\n        height: pbRes.height,\n        roots: pbRes.roots\n      };\n    }\n\n    return plumPutBlockData;\n  },\n\n  fromPlumCreateDeposit(pbRes) {\n    let plumCreateDepositData = pbRes;\n\n    if (plumCreateDepositData) {\n      plumCreateDepositData = {\n        subChainAddress: pbRes.subChainAddress,\n        amount: pbRes.amount,\n        recipient: pbRes.recipient\n      };\n    }\n\n    return plumCreateDepositData;\n  },\n\n  fromPlumStartExit(pbRes) {\n    let plumStartExitData = pbRes;\n\n    if (plumStartExitData) {\n      plumStartExitData = {\n        subChainAddress: pbRes.subChainAddress,\n        previousTransfer: pbRes.previousTransfer,\n        previousTransferBlockProof: pbRes.previousTransferBlockProof,\n        previousTransferBlockHeight: pbRes.previousTransferBlockHeight,\n        exitTransfer: pbRes.exitTransfer,\n        exitTransferBlockProof: pbRes.exitTransferBlockProof,\n        exitTransferBlockHeight: pbRes.exitTransferBlockHeight\n      };\n    }\n\n    return plumStartExitData;\n  },\n\n  fromPlumChallengeExit(pbRes) {\n    let plumChallengeExitData = pbRes;\n\n    if (plumChallengeExitData) {\n      plumChallengeExitData = {\n        subChainAddress: pbRes.subChainAddress,\n        coinID: pbRes.coinID,\n        challengeTransfer: pbRes.challengeTransfer,\n        challengeTransferBlockProof: pbRes.challengeTransferBlockProof,\n        challengeTransferBlockHeight: pbRes.challengeTransferBlockHeight\n      };\n    }\n\n    return plumChallengeExitData;\n  },\n\n  fromPlumResponseChallengeExit(pbRes) {\n    let plumResponseChallengeExitData = pbRes;\n\n    if (plumResponseChallengeExitData) {\n      plumResponseChallengeExitData = {\n        subChainAddress: pbRes.subChainAddress,\n        coinID: pbRes.coinID,\n        challengeTransfer: pbRes.challengeTransfer,\n        responseTransfer: pbRes.responseTransfer,\n        responseTransferBlockProof: pbRes.responseTransferBlockProof,\n        previousTransferBlockHeight: pbRes.previousTransferBlockHeight\n      };\n    }\n\n    return plumResponseChallengeExitData;\n  },\n\n  fromPlumFinalizeExit(pbRes) {\n    let plumFinalizeExitData = pbRes;\n\n    if (plumFinalizeExitData) {\n      plumFinalizeExitData = {\n        subChainAddress: pbRes.subChainAddress,\n        coinID: pbRes.coinID\n      };\n    }\n\n    return plumFinalizeExitData;\n  },\n\n  fromPlumSettleDeposit(pbRes) {\n    let plumSettleDepositData = pbRes;\n\n    if (plumSettleDepositData) {\n      plumSettleDepositData = {\n        coinID: pbRes.coinID\n      };\n    }\n\n    return plumSettleDepositData;\n  },\n\n  fromPlumTransfer(pbRes) {\n    let plumTransferData = pbRes;\n\n    if (plumTransferData) {\n      plumTransferData = {\n        coinID: pbRes.coinID,\n        denomination: pbRes.denomination,\n        owner: pbRes.owner,\n        recipient: pbRes.recipient\n      };\n    }\n\n    return plumTransferData;\n  },\n\n  fromDepositToRewardingFund(pbRes) {\n    let depositToRewardingFundData = pbRes;\n\n    if (depositToRewardingFundData) {\n      depositToRewardingFundData = {\n        amount: pbRes.amount,\n        data: pbRes.data\n      };\n    }\n\n    return depositToRewardingFundData;\n  },\n\n  fromClaimFromRewardingFund(pbRes) {\n    let claimFromRewardingFundData = pbRes;\n\n    if (claimFromRewardingFundData) {\n      claimFromRewardingFundData = {\n        amount: pbRes.amount,\n        data: pbRes.data\n      };\n    }\n\n    return claimFromRewardingFundData;\n  },\n\n  fromSetReward(pbRes) {\n    let setRewardData = pbRes;\n\n    if (setRewardData) {\n      setRewardData = {\n        amount: pbRes.amount,\n        data: pbRes.data,\n        type: pbRes.type\n      };\n    }\n\n    return setRewardData;\n  },\n\n  fromGrantReward(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      type: pbRes.getType(),\n      height: pbRes.getHeight()\n    };\n  },\n\n  fromStakeCreate(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      candidateName: pbRes.getCandidatename(),\n      stakedAmount: pbRes.getStakedamount(),\n      stakedDuration: pbRes.getStakedduration(),\n      autoStake: pbRes.getAutostake(),\n      // @ts-ignore\n      payload: Buffer.from(pbRes.getPayload())\n    };\n  },\n\n  fromStakeReclaim(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      bucketIndex: pbRes.getBucketindex(),\n      // @ts-ignore\n      payload: Buffer.from(pbRes.getPayload())\n    };\n  },\n\n  fromStakeAddDeposit(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      bucketIndex: pbRes.getBucketindex(),\n      amount: pbRes.getAmount(),\n      // @ts-ignore\n      payload: Buffer.from(pbRes.getPayload())\n    };\n  },\n\n  fromStakeRestake(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      bucketIndex: pbRes.getBucketindex(),\n      stakedDuration: pbRes.getStakedduration(),\n      autoStake: pbRes.getAutostake(),\n      // @ts-ignore\n      payload: Buffer.from(pbRes.getPayload())\n    };\n  },\n\n  fromStakeChangeCandidate(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      bucketIndex: pbRes.getBucketindex(),\n      candidateName: pbRes.getCandidatename(),\n      // @ts-ignore\n      payload: Buffer.from(pbRes.getPayload())\n    };\n  },\n\n  fromStakeTransferOwnership(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      bucketIndex: pbRes.getBucketindex(),\n      voterAddress: pbRes.getVoteraddress(),\n      // @ts-ignore\n      payload: Buffer.from(pbRes.getPayload())\n    };\n  },\n\n  fromCandidateRegister(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      candidate: {\n        // @ts-ignore\n        name: pbRes.getCandidate().getName(),\n        // @ts-ignore\n        operatorAddress: pbRes.getCandidate().getOperatoraddress(),\n        // @ts-ignore\n        rewardAddress: pbRes.getCandidate().getRewardaddress()\n      },\n      stakedAmount: pbRes.getStakedamount(),\n      stakedDuration: pbRes.getStakedduration(),\n      autoStake: pbRes.getAutostake(),\n      ownerAddress: pbRes.getOwneraddress(),\n      // @ts-ignore\n      payload: Buffer.from(pbRes.getPayload())\n    };\n  },\n\n  fromCandidateUpdate(pbRes) {\n    if (!pbRes) {\n      return undefined;\n    }\n\n    return {\n      name: pbRes.getName(),\n      operatorAddress: pbRes.getOperatoraddress(),\n      rewardAddress: pbRes.getRewardaddress()\n    };\n  },\n\n  getPutPollResult(req) {\n    if (!req) {\n      return undefined;\n    }\n\n    let candidateList;\n    const rawCandidates = req.getCandidates();\n\n    if (rawCandidates) {\n      candidateList = {\n        candidates: []\n      };\n      const rawCandidatesList = rawCandidates.getCandidatesList();\n\n      if (rawCandidatesList) {\n        for (const rawCandidate of rawCandidatesList) {\n          candidateList.candidates.push({\n            address: rawCandidate.getAddress(),\n            votes: rawCandidate.getVotes(),\n            pubKey: rawCandidate.getPubkey(),\n            rewardAddress: rawCandidate.getRewardaddress()\n          });\n        }\n      }\n    }\n\n    return {\n      height: req.getHeight(),\n      candidates: candidateList\n    };\n  },\n\n  // tslint:disable-next-line:max-func-body-length\n  from(pbRes) {\n    const res = {\n      actionInfo: []\n    };\n    const rawActionInfoList = pbRes.getActioninfoList();\n\n    if (!rawActionInfoList) {\n      return res;\n    }\n\n    for (const rawActionInfo of rawActionInfoList) {\n      const actionInfo = {\n        actHash: rawActionInfo.getActhash(),\n        blkHash: rawActionInfo.getBlkhash(),\n        timestamp: rawActionInfo.getTimestamp(),\n        index: rawActionInfo.getIndex()\n      };\n      const rawAction = rawActionInfo.getAction();\n\n      if (rawAction) {\n        const rawActionCore = rawAction.getCore();\n        let actionCore;\n\n        if (rawActionCore) {\n          actionCore = {\n            version: rawActionCore.getVersion(),\n            nonce: String(rawActionCore.getNonce()),\n            gasLimit: String(rawActionCore.getGaslimit()),\n            gasPrice: rawActionCore.getGasprice(),\n            chainID: rawActionCore.getChainid(),\n            transfer: GetActionsRequest.fromTransfer(rawActionCore.getTransfer()),\n            execution: GetActionsRequest.fromExecution(rawActionCore.getExecution()),\n            startSubChain: GetActionsRequest.fromStartSubChain(rawActionCore.getStartsubchain()),\n            stopSubChain: GetActionsRequest.fromStopSubChain(rawActionCore.getStopsubchain()),\n            putBlock: GetActionsRequest.fromPutBlock(rawActionCore.getPutblock()),\n            createDeposit: GetActionsRequest.fromCreateDeposit(rawActionCore.getCreatedeposit()),\n            settleDeposit: GetActionsRequest.fromSettleDeposit(rawActionCore.getSettledeposit()),\n            createPlumChain: GetActionsRequest.fromCreatePlumChain(rawActionCore.getCreateplumchain()),\n            terminatePlumChain: GetActionsRequest.fromTerminatePlumChain(rawActionCore.getTerminateplumchain()),\n            plumPutBlock: GetActionsRequest.fromPlumPutBlock(rawActionCore.getPlumputblock()),\n            plumCreateDeposit: GetActionsRequest.fromPlumCreateDeposit(rawActionCore.getPlumcreatedeposit()),\n            plumStartExit: GetActionsRequest.fromPlumStartExit(rawActionCore.getPlumstartexit()),\n            plumChallengeExit: GetActionsRequest.fromPlumChallengeExit(rawActionCore.getPlumchallengeexit()),\n            plumResponseChallengeExit: GetActionsRequest.fromPlumResponseChallengeExit(rawActionCore.getPlumresponsechallengeexit()),\n            plumFinalizeExit: GetActionsRequest.fromPlumFinalizeExit(rawActionCore.getPlumfinalizeexit()),\n            plumSettleDeposit: GetActionsRequest.fromPlumSettleDeposit(rawActionCore.getPlumsettledeposit()),\n            plumTransfer: GetActionsRequest.fromPlumTransfer(rawActionCore.getPlumtransfer()),\n            depositToRewardingFund: GetActionsRequest.fromDepositToRewardingFund(rawActionCore.getDeposittorewardingfund()),\n            claimFromRewardingFund: GetActionsRequest.fromClaimFromRewardingFund(rawActionCore.getClaimfromrewardingfund()),\n            grantReward: GetActionsRequest.fromGrantReward(rawActionCore.getGrantreward()),\n            stakeCreate: GetActionsRequest.fromStakeCreate(rawActionCore.getStakecreate()),\n            stakeUnstake: GetActionsRequest.fromStakeReclaim(rawActionCore.getStakeunstake()),\n            stakeWithdraw: GetActionsRequest.fromStakeReclaim(rawActionCore.getStakewithdraw()),\n            stakeAddDeposit: GetActionsRequest.fromStakeAddDeposit(rawActionCore.getStakeadddeposit()),\n            stakeRestake: GetActionsRequest.fromStakeRestake(rawActionCore.getStakerestake()),\n            stakeChangeCandidate: GetActionsRequest.fromStakeChangeCandidate(rawActionCore.getStakechangecandidate()),\n            stakeTransferOwnership: GetActionsRequest.fromStakeTransferOwnership(rawActionCore.getStaketransferownership()),\n            candidateRegister: GetActionsRequest.fromCandidateRegister(rawActionCore.getCandidateregister()),\n            candidateUpdate: GetActionsRequest.fromCandidateUpdate(rawActionCore.getCandidateupdate()),\n            putPollResult: GetActionsRequest.getPutPollResult(rawActionCore.getPutpollresult())\n          };\n        }\n\n        actionInfo.action = {\n          core: actionCore,\n          senderPubKey: rawAction.getSenderpubkey(),\n          signature: rawAction.getSignature(),\n          encoding: rawAction.getEncoding()\n        };\n      }\n\n      res.actionInfo.push(actionInfo);\n    }\n\n    return res;\n  }\n\n}; // Properties of a SuggestGasPrice Request.\n\nexports.GetActionsRequest = GetActionsRequest;\nconst SuggestGasPriceRequest = {\n  // @ts-ignore\n  to(req) {\n    return new _api_pb.default.SuggestGasPriceRequest();\n  },\n\n  from(pbRes) {\n    const gasPrice = pbRes.getGasprice();\n    return {\n      gasPrice\n    };\n  }\n\n}; // Properties of a GetReceiptByActionRequest.\n\nexports.SuggestGasPriceRequest = SuggestGasPriceRequest;\nlet ReceiptStatus; // Properties of an Receipt.\n\nexports.ReceiptStatus = ReceiptStatus;\n\n(function (ReceiptStatus) {\n  ReceiptStatus[ReceiptStatus[\"Failure\"] = 0] = \"Failure\";\n  ReceiptStatus[ReceiptStatus[\"Success\"] = 1] = \"Success\";\n  ReceiptStatus[ReceiptStatus[\"ErrUnknown\"] = 100] = \"ErrUnknown\";\n  ReceiptStatus[ReceiptStatus[\"ErrOutOfGas\"] = 101] = \"ErrOutOfGas\";\n  ReceiptStatus[ReceiptStatus[\"ErrCodeStoreOutOfGas\"] = 102] = \"ErrCodeStoreOutOfGas\";\n  ReceiptStatus[ReceiptStatus[\"ErrDepth\"] = 103] = \"ErrDepth\";\n  ReceiptStatus[ReceiptStatus[\"ErrContractAddressCollision\"] = 104] = \"ErrContractAddressCollision\";\n  ReceiptStatus[ReceiptStatus[\"ErrNoCompatibleInterpreter\"] = 105] = \"ErrNoCompatibleInterpreter\";\n  ReceiptStatus[ReceiptStatus[\"ErrExecutionReverted\"] = 106] = \"ErrExecutionReverted\";\n  ReceiptStatus[ReceiptStatus[\"ErrMaxCodeSizeExceeded\"] = 107] = \"ErrMaxCodeSizeExceeded\";\n  ReceiptStatus[ReceiptStatus[\"ErrWriteProtection\"] = 108] = \"ErrWriteProtection\";\n  ReceiptStatus[ReceiptStatus[\"ErrLoadAccount\"] = 200] = \"ErrLoadAccount\";\n  ReceiptStatus[ReceiptStatus[\"ErrNotEnoughBalance\"] = 201] = \"ErrNotEnoughBalance\";\n  ReceiptStatus[ReceiptStatus[\"ErrInvalidBucketIndex\"] = 202] = \"ErrInvalidBucketIndex\";\n  ReceiptStatus[ReceiptStatus[\"ErrUnauthorizedOperator\"] = 203] = \"ErrUnauthorizedOperator\";\n  ReceiptStatus[ReceiptStatus[\"ErrInvalidBucketType\"] = 204] = \"ErrInvalidBucketType\";\n  ReceiptStatus[ReceiptStatus[\"ErrCandidateNotExist\"] = 205] = \"ErrCandidateNotExist\";\n  ReceiptStatus[ReceiptStatus[\"ErrReduceDurationBeforeMaturity\"] = 206] = \"ErrReduceDurationBeforeMaturity\";\n  ReceiptStatus[ReceiptStatus[\"ErrUnstakeBeforeMaturity\"] = 207] = \"ErrUnstakeBeforeMaturity\";\n  ReceiptStatus[ReceiptStatus[\"ErrWithdrawBeforeUnstake\"] = 208] = \"ErrWithdrawBeforeUnstake\";\n  ReceiptStatus[ReceiptStatus[\"ErrWithdrawBeforeMaturity\"] = 209] = \"ErrWithdrawBeforeMaturity\";\n  ReceiptStatus[ReceiptStatus[\"ErrCandidateAlreadyExist\"] = 210] = \"ErrCandidateAlreadyExist\";\n  ReceiptStatus[ReceiptStatus[\"ErrCandidateConflict\"] = 211] = \"ErrCandidateConflict\";\n})(ReceiptStatus || (exports.ReceiptStatus = ReceiptStatus = {}));\n\nfunction fromPbReceiptInfo(pbReceiptInfo) {\n  if (!pbReceiptInfo) {\n    return undefined;\n  }\n\n  return {\n    receipt: fromPbReceipt(pbReceiptInfo.getReceipt()),\n    blkHash: pbReceiptInfo.getBlkhash()\n  };\n}\n\nconst GetReceiptByActionRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.GetReceiptByActionRequest();\n\n    if (req.actionHash) {\n      pbReq.setActionhash(req.actionHash);\n    }\n\n    return pbReq;\n  },\n\n  from(pbRes) {\n    return {\n      receiptInfo: fromPbReceiptInfo(pbRes.getReceiptinfo())\n    };\n  }\n\n};\nexports.GetReceiptByActionRequest = GetReceiptByActionRequest;\n\nfunction fromPbReceipt(pbReceipt) {\n  if (!pbReceipt) {\n    return undefined;\n  }\n\n  return {\n    status: pbReceipt.getStatus(),\n    blkHeight: pbReceipt.getBlkheight(),\n    actHash: pbReceipt.getActhash(),\n    gasConsumed: pbReceipt.getGasconsumed(),\n    contractAddress: pbReceipt.getContractaddress(),\n    logs: fromPbLogList(pbReceipt.getLogsList())\n  };\n}\n\nfunction fromPbLogList(pbLogList) {\n  if (!pbLogList) {\n    return undefined;\n  }\n\n  const res = [];\n\n  for (const log of pbLogList) {\n    res.push({\n      contractAddress: log.getContractaddress(),\n      topics: log.getTopicsList(),\n      data: log.getData(),\n      blkHeight: log.getBlkheight(),\n      actHash: log.getActhash(),\n      index: log.getIndex(),\n      blkHash: log.getBlkhash()\n    });\n  }\n\n  return res;\n} // Properties of a ReadContractRequest.\n\n\nconst ReadContractRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.ReadContractRequest();\n    pbReq.setCalleraddress(req.callerAddress);\n\n    if (req.execution) {\n      pbReq.setExecution(toActionExecution(req.execution));\n    }\n\n    return pbReq;\n  },\n\n  from(pbRes) {\n    return {\n      data: pbRes.getData(),\n      receipt: fromPbReceipt(pbRes.getReceipt())\n    };\n  }\n\n}; // Properties of a SendActionRequest.\n\nexports.ReadContractRequest = ReadContractRequest;\nconst SendActionRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.SendActionRequest();\n\n    if (req.action) {\n      pbReq.setAction(toAction(req.action));\n    }\n\n    return pbReq;\n  }\n\n};\nexports.SendActionRequest = SendActionRequest;\nconst SendActionResponse = {\n  from(resp) {\n    return {\n      actionHash: resp.getActionhash()\n    };\n  }\n\n}; // Properties of a EstimateGasForActionRequest.\n\nexports.SendActionResponse = SendActionResponse;\nconst EstimateGasForActionRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.EstimateGasForActionRequest();\n\n    if (req.action) {\n      pbReq.setAction(toAction(req.action));\n    }\n\n    return pbReq;\n  },\n\n  from(pbRes) {\n    return {\n      gas: pbRes.getGas()\n    };\n  }\n\n};\nexports.EstimateGasForActionRequest = EstimateGasForActionRequest;\nconst ReadStateRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.ReadStateRequest();\n    pbReq.setProtocolid(req.protocolID);\n    pbReq.setMethodname(req.methodName);\n    pbReq.setArgumentsList(req.arguments);\n    return pbReq;\n  },\n\n  from(pbRes) {\n    return {\n      data: pbRes.getData()\n    };\n  }\n\n}; // Properties of a BlockProducerInfo.\n\nexports.ReadStateRequest = ReadStateRequest;\nconst GetEpochMetaRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.GetEpochMetaRequest();\n\n    if (req.epochNumber) {\n      pbReq.setEpochnumber(req.epochNumber);\n    }\n\n    return pbReq;\n  },\n\n  from(pbRes) {\n    const epoch = pbRes.getEpochdata();\n    const bpInfo = pbRes.getBlockproducersinfoList();\n    const res = {\n      epochData: {\n        num: epoch.getNum(),\n        height: epoch.getHeight(),\n        gravityChainStartHeight: epoch.getGravitychainstartheight()\n      },\n      totalBlocks: pbRes.getTotalblocks(),\n      blockProducersInfo: bpInfo\n    };\n\n    if (bpInfo) {\n      const parsedBpinfo = [];\n\n      for (let i = 0; i < bpInfo.length; i++) {\n        parsedBpinfo[i] = {\n          address: bpInfo[i].getAddress(),\n          votes: bpInfo[i].getVotes(),\n          active: bpInfo[i].getActive(),\n          production: bpInfo[i].getProduction()\n        };\n      }\n\n      res.blockProducersInfo = parsedBpinfo;\n    }\n\n    return res;\n  }\n\n};\nexports.GetEpochMetaRequest = GetEpochMetaRequest;\nconst GetLogsRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.GetLogsRequest();\n\n    if (req.filter) {\n      const filter = new _api_pb.default.LogsFilter();\n      filter.setAddressList(req.filter.address);\n      const topics = [];\n\n      for (let i = 0; i < req.filter.topics.length; i++) {\n        const topic = new _api_pb.default.Topics();\n        topic.setTopicList(req.filter.topics[i].topic);\n        topics.push(topic);\n      }\n\n      filter.setTopicsList(topics);\n      pbReq.setFilter(filter);\n    }\n\n    if (req.byBlock) {\n      const byBlock = new _api_pb.default.GetLogsByBlock();\n      byBlock.setBlockhash(req.byBlock.blockHash);\n      pbReq.setByblock(byBlock);\n    }\n\n    if (req.byRange) {\n      const byRange = new _api_pb.default.GetLogsByRange();\n      byRange.setFromblock(req.byRange.fromBlock);\n      byRange.setToblock(req.byRange.toBlock);\n      byRange.setPaginationsize(req.byRange.paginationSize);\n      pbReq.setByrange(byRange);\n    }\n\n    return pbReq;\n  },\n\n  from(pbRes) {\n    return {\n      logs: fromPbLogList(pbRes.getLogsList())\n    };\n  }\n\n};\nexports.GetLogsRequest = GetLogsRequest;\nconst EstimateActionGasConsumptionRequest = {\n  to(req) {\n    const pbReq = new _api_pb.default.EstimateActionGasConsumptionRequest();\n\n    if (req.transfer) {\n      pbReq.setTransfer(toActionTransfer(req.transfer));\n    }\n\n    if (req.execution) {\n      pbReq.setExecution(toActionExecution(req.execution));\n    }\n\n    pbReq.setCalleraddress(req.callerAddress);\n    return pbReq;\n  },\n\n  from(pbRes) {\n    return {\n      gas: pbRes.getGas()\n    };\n  }\n\n};\nexports.EstimateActionGasConsumptionRequest = EstimateActionGasConsumptionRequest;\n\nfunction fromPbTimestamp(timestamp) {\n  if (timestamp) {\n    return {\n      seconds: timestamp.getSeconds(),\n      nanos: timestamp.getNanos()\n    };\n  }\n\n  return undefined;\n}\n\nfunction fromPbBlockHeaderCore(blockHeaderCore) {\n  if (blockHeaderCore) {\n    return {\n      version: blockHeaderCore.getVersion(),\n      height: blockHeaderCore.getHeight(),\n      timestamp: fromPbTimestamp(blockHeaderCore.getTimestamp()),\n      prevBlockHash: Buffer.from(blockHeaderCore.getPrevblockhash_asU8()),\n      txRoot: Buffer.from(blockHeaderCore.getTxroot_asU8()),\n      deltaStateDigest: Buffer.from(blockHeaderCore.getDeltastatedigest_asU8()),\n      receiptRoot: Buffer.from(blockHeaderCore.getReceiptroot_asU8()),\n      logsBloom: Buffer.from(blockHeaderCore.getLogsbloom_asU8())\n    };\n  }\n\n  return undefined;\n}\n\nfunction fromPbBlockHeader(blockHeader) {\n  if (blockHeader) {\n    return {\n      core: fromPbBlockHeaderCore(blockHeader.getCore()),\n      producerPubkey: Buffer.from(blockHeader.getProducerpubkey_asU8()),\n      signature: Buffer.from(blockHeader.getSignature_asU8())\n    };\n  }\n\n  return undefined;\n}\n\nfunction fromPbBlockBody(blockBody) {\n  if (blockBody) {\n    const res = [];\n\n    for (const rawAction of blockBody.getActionsList()) {\n      const rawActionCore = rawAction.getCore();\n      let actionCore;\n\n      if (rawActionCore) {\n        actionCore = {\n          version: rawActionCore.getVersion(),\n          nonce: String(rawActionCore.getNonce()),\n          gasLimit: String(rawActionCore.getGaslimit()),\n          gasPrice: rawActionCore.getGasprice(),\n          chainID: rawActionCore.getChainid(),\n          transfer: GetActionsRequest.fromTransfer(rawActionCore.getTransfer()),\n          execution: GetActionsRequest.fromExecution(rawActionCore.getExecution()),\n          startSubChain: GetActionsRequest.fromStartSubChain(rawActionCore.getStartsubchain()),\n          stopSubChain: GetActionsRequest.fromStopSubChain(rawActionCore.getStopsubchain()),\n          putBlock: GetActionsRequest.fromPutBlock(rawActionCore.getPutblock()),\n          createDeposit: GetActionsRequest.fromCreateDeposit(rawActionCore.getCreatedeposit()),\n          settleDeposit: GetActionsRequest.fromSettleDeposit(rawActionCore.getSettledeposit()),\n          createPlumChain: GetActionsRequest.fromCreatePlumChain(rawActionCore.getCreateplumchain()),\n          terminatePlumChain: GetActionsRequest.fromTerminatePlumChain(rawActionCore.getTerminateplumchain()),\n          plumPutBlock: GetActionsRequest.fromPlumPutBlock(rawActionCore.getPlumputblock()),\n          plumCreateDeposit: GetActionsRequest.fromPlumCreateDeposit(rawActionCore.getPlumcreatedeposit()),\n          plumStartExit: GetActionsRequest.fromPlumStartExit(rawActionCore.getPlumstartexit()),\n          plumChallengeExit: GetActionsRequest.fromPlumChallengeExit(rawActionCore.getPlumchallengeexit()),\n          plumResponseChallengeExit: GetActionsRequest.fromPlumResponseChallengeExit(rawActionCore.getPlumresponsechallengeexit()),\n          plumFinalizeExit: GetActionsRequest.fromPlumFinalizeExit(rawActionCore.getPlumfinalizeexit()),\n          plumSettleDeposit: GetActionsRequest.fromPlumSettleDeposit(rawActionCore.getPlumsettledeposit()),\n          plumTransfer: GetActionsRequest.fromPlumTransfer(rawActionCore.getPlumtransfer()),\n          depositToRewardingFund: GetActionsRequest.fromDepositToRewardingFund(rawActionCore.getDeposittorewardingfund()),\n          claimFromRewardingFund: GetActionsRequest.fromClaimFromRewardingFund(rawActionCore.getClaimfromrewardingfund()),\n          grantReward: GetActionsRequest.fromGrantReward(rawActionCore.getGrantreward()),\n          putPollResult: GetActionsRequest.getPutPollResult(rawActionCore.getPutpollresult())\n        };\n      }\n\n      const action = {\n        core: actionCore,\n        senderPubKey: rawAction.getSenderpubkey(),\n        signature: rawAction.getSignature(),\n        encoding: rawAction.getEncoding()\n      };\n      res.push(action);\n    }\n\n    return {\n      actions: res\n    };\n  }\n\n  return undefined;\n}\n\nfunction fromPbEndorsements(endorsements) {\n  const res = [];\n\n  for (const endorsement of endorsements) {\n    res.push({\n      timestamp: fromPbTimestamp(endorsement.getTimestamp()),\n      endorser: Buffer.from(endorsement.getEndorser_asU8()),\n      signature: Buffer.from(endorsement.getSignature_asU8())\n    });\n  }\n\n  return res;\n}\n\nfunction fromPbBlockFooter(blockFooter) {\n  if (blockFooter) {\n    return {\n      endorsements: fromPbEndorsements(blockFooter.getEndorsementsList()),\n      timestamp: fromPbTimestamp(blockFooter.getTimestamp())\n    };\n  }\n\n  return undefined;\n}\n\nfunction fromPbBlock(block) {\n  if (block) {\n    return {\n      header: fromPbBlockHeader(block.getHeader()),\n      body: fromPbBlockBody(block.getBody()),\n      footer: fromPbBlockFooter(block.getFooter())\n    };\n  }\n\n  return undefined;\n}\n\nfunction fromPbReceipts(receipts) {\n  const res = [];\n\n  for (const receipt of receipts) {\n    res.push({\n      status: receipt.getStatus(),\n      blkHeight: receipt.getBlkheight(),\n      actHash: receipt.getActhash(),\n      gasConsumed: receipt.getGasconsumed(),\n      contractAddress: receipt.getContractaddress(),\n      logs: fromPbLogList(receipt.getLogsList())\n    });\n  }\n\n  return res;\n}\n\nfunction fromPbBlockInfo(blockInfo) {\n  if (blockInfo) {\n    return {\n      block: fromPbBlock(blockInfo.getBlock()),\n      receipts: fromPbReceipts(blockInfo.getReceiptsList())\n    };\n  }\n\n  return undefined;\n}\n\nconst StreamBlocksRequest = {\n  // @ts-ignore\n  to(req) {\n    return new _api_pb.default.StreamBlocksRequest();\n  },\n\n  from(pbRes) {\n    return {\n      block: fromPbBlockInfo(pbRes.getBlock())\n    };\n  }\n\n};\nexports.StreamBlocksRequest = StreamBlocksRequest;\nconst StreamLogsRequest = {\n  // @ts-ignore\n  to(req) {\n    const pbReq = new _api_pb.default.StreamLogsRequest();\n\n    if (req.filter) {\n      const filter = new _api_pb.default.LogsFilter();\n      filter.setAddressList(req.filter.address);\n      const topics = [];\n\n      for (let i = 0; i < req.filter.topics.length; i++) {\n        const topic = new _api_pb.default.Topics();\n        topic.setTopicList(req.filter.topics[i].topic);\n        topics.push(topic);\n      }\n\n      filter.setTopicsList(topics);\n      pbReq.setFilter(filter);\n    }\n\n    return pbReq;\n  },\n\n  fromPbLog(log) {\n    if (log) {\n      return {\n        contractAddress: log.getContractaddress(),\n        topics: log.getTopicsList(),\n        data: log.getData(),\n        blkHeight: log.getBlkheight(),\n        actHash: log.getActhash(),\n        index: log.getIndex(),\n        blkHash: log.getBlkhash()\n      };\n    }\n\n    return undefined;\n  },\n\n  from(pbRes) {\n    return {\n      log: StreamLogsRequest.fromPbLog(pbRes.getLog())\n    };\n  }\n\n}; // @ts-ignore\n\nexports.StreamLogsRequest = StreamLogsRequest; // @ts-ignore\n\nclass ClientReadableStream extends _events.EventEmitter {\n  constructor(origin, type) {\n    super();\n\n    _defineProperty(this, \"origin\", void 0);\n\n    this.origin = origin;\n    origin.on(\"error\", err => {\n      this.emit(\"error\", err);\n    });\n    origin.on(\"status\", status => {\n      this.emit(\"status\", status);\n    });\n    origin.on(\"data\", response => {\n      if (type === \"StreamBlocks\") {\n        // @ts-ignore\n        this.emit(\"data\", StreamBlocksRequest.from(response));\n      }\n\n      if (type === \"StreamLogs\") {\n        // @ts-ignore\n        this.emit(\"data\", StreamLogsRequest.from(response));\n      }\n    });\n    origin.on(\"end\", () => {\n      this.emit(\"end\");\n    });\n  }\n\n  cancel() {\n    this.origin.cancel();\n  }\n\n}\n\nexports.ClientReadableStream = ClientReadableStream;\n\nconst IReadStakingDataMethodToBuffer = req => {\n  const pbObj = new _read_state_pb.ReadStakingDataMethod();\n\n  switch (req.method.valueOf()) {\n    case _read_state_pb.ReadStakingDataMethod.Name.INVALID.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.INVALID);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.BUCKETS.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.BUCKETS);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.BUCKETS_BY_VOTER.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.BUCKETS_BY_VOTER);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.BUCKETS_BY_CANDIDATE.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.BUCKETS_BY_CANDIDATE);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.CANDIDATES.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.CANDIDATES);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.CANDIDATE_BY_NAME.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.CANDIDATE_BY_NAME);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.BUCKETS_BY_INDEXES.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.BUCKETS_BY_INDEXES);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.CANDIDATE_BY_ADDRESS.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.CANDIDATE_BY_ADDRESS);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.TOTAL_STAKING_AMOUNT.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.TOTAL_STAKING_AMOUNT);\n      break;\n\n    case _read_state_pb.ReadStakingDataMethod.Name.BUCKETS_COUNT.valueOf():\n      pbObj.setMethod(_read_state_pb.ReadStakingDataMethod.Name.BUCKETS_COUNT);\n      break;\n\n    default:\n      throw new Error(`unknow method ${req.method}`);\n  }\n\n  return Buffer.from(pbObj.serializeBinary());\n};\n\nexports.IReadStakingDataMethodToBuffer = IReadStakingDataMethodToBuffer;\n\nconst IReadStakingDataRequestToBuffer = req => {\n  const pbObj = new _read_state_pb.ReadStakingDataRequest();\n\n  if (req.buckets) {\n    const buckets = new _read_state_pb.ReadStakingDataRequest.VoteBuckets();\n    const pagination = new _read_state_pb.PaginationParam();\n    pagination.setOffset(req.buckets.pagination.offset);\n    pagination.setLimit(req.buckets.pagination.limit);\n    buckets.setPagination(pagination);\n    pbObj.setBuckets(buckets);\n  }\n\n  if (req.bucketsByVoter) {\n    const bucketsByVoter = new _read_state_pb.ReadStakingDataRequest.VoteBucketsByVoter();\n    const pagination = new _read_state_pb.PaginationParam();\n    pagination.setOffset(req.bucketsByVoter.pagination.offset);\n    pagination.setLimit(req.bucketsByVoter.pagination.limit);\n    bucketsByVoter.setPagination(pagination);\n    bucketsByVoter.setVoteraddress(req.bucketsByVoter.voterAddress);\n    pbObj.setBucketsbyvoter(bucketsByVoter);\n  }\n\n  if (req.bucketsByCandidate) {\n    const bucketsByCandidate = new _read_state_pb.ReadStakingDataRequest.VoteBucketsByCandidate();\n    const pagination = new _read_state_pb.PaginationParam();\n    pagination.setOffset(req.bucketsByCandidate.pagination.offset);\n    pagination.setLimit(req.bucketsByCandidate.pagination.limit);\n    bucketsByCandidate.setPagination(pagination);\n    bucketsByCandidate.setCandname(req.bucketsByCandidate.candName);\n    pbObj.setBucketsbycandidate(bucketsByCandidate);\n  }\n\n  if (req.candidates) {\n    const candidates = new _read_state_pb.ReadStakingDataRequest.Candidates();\n    const pagination = new _read_state_pb.PaginationParam();\n    pagination.setOffset(req.candidates.pagination.offset);\n    pagination.setLimit(req.candidates.pagination.limit);\n    candidates.setPagination(pagination);\n    pbObj.setCandidates(candidates);\n  }\n\n  if (req.candidateByName) {\n    const candidateByName = new _read_state_pb.ReadStakingDataRequest.CandidateByName();\n    candidateByName.setCandname(req.candidateByName.candName);\n    pbObj.setCandidatebyname(candidateByName);\n  }\n\n  if (req.bucketsByIndexes) {\n    const bucketsByIndexes = new _read_state_pb.ReadStakingDataRequest.VoteBucketsByIndexes();\n    bucketsByIndexes.setIndexList(req.bucketsByIndexes.index);\n    pbObj.setBucketsbyindexes(bucketsByIndexes);\n  }\n\n  if (req.candidateByAddress) {\n    const candidateByAddress = new _read_state_pb.ReadStakingDataRequest.CandidateByAddress();\n    candidateByAddress.setOwneraddr(req.candidateByAddress.ownerAddr);\n    pbObj.setCandidatebyaddress(candidateByAddress);\n  }\n\n  if (req.totalStakingAmount) {\n    const totalStakingAmount = new _read_state_pb.ReadStakingDataRequest.TotalStakingAmount();\n    pbObj.setTotalstakingamount(totalStakingAmount);\n  }\n\n  if (req.bucketsCount) {\n    const bucketsCount = new _read_state_pb.ReadStakingDataRequest.BucketsCount();\n    pbObj.setBucketscount(bucketsCount);\n  }\n\n  return Buffer.from(pbObj.serializeBinary());\n};\n\nexports.IReadStakingDataRequestToBuffer = IReadStakingDataRequestToBuffer;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/lib/rpc-method/types.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic.js":
/*!**************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar elliptic = exports;\nelliptic.version = __webpack_require__(/*! ../package.json */ \"./node_modules/iotex-antenna/node_modules/elliptic/package.json\").version;\nelliptic.utils = __webpack_require__(/*! ./elliptic/utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\nelliptic.rand = __webpack_require__(/*! brorand */ \"./node_modules/brorand/index.js\");\nelliptic.curve = __webpack_require__(/*! ./elliptic/curve */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/index.js\");\nelliptic.curves = __webpack_require__(/*! ./elliptic/curves */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curves.js\"); // Protocols\n\nelliptic.ec = __webpack_require__(/*! ./elliptic/ec */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/index.js\");\nelliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/index.js\");\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/base.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p); // Useful for many curves\n\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n\n    for (var k = j + doubles.step - 1; k >= j; k--) nafW = (nafW << 1) + naf[k];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--) k++;\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n    var z = naf[i];\n    assert(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (var i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq()\n/*other*/\n{\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/base.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Base = __webpack_require__(/*! ./base */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n  Base.call(this, 'edwards', conf);\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\n\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC) return num;else return this.c.redMul(num);\n}; // Just for compatibility with Short curve\n\n\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red) y = y.toRed(this.red); // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd) throw new Error('invalid point');else return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0) throw new Error('invalid point');\n  if (x.fromRed().isOdd() !== odd) x = x.redNeg();\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity()) return true; // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\n  point.normalize();\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one; // Use extended coordinates\n\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n  // A = X1^2\n  var a = this.x.redSqr(); // B = Y1^2\n\n  var b = this.y.redSqr(); // C = 2 * Z1^2\n\n  var c = this.z.redSqr();\n  c = c.redIAdd(c); // D = a * A\n\n  var d = this.curve._mulA(a); // E = (X1 + Y1)^2 - A - B\n\n\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b); // G = D + B\n\n  var g = d.redAdd(b); // F = G - C\n\n  var f = g.redSub(c); // H = D - B\n\n  var h = d.redSub(b); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr(); // C = X1^2\n\n  var c = this.x.redSqr(); // D = Y1^2\n\n  var d = this.y.redSqr();\n  var nx;\n  var ny;\n  var nz;\n\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c); // F = E + D\n\n\n    var f = e.redAdd(d);\n\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two)); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F^2 - 2 * F\n\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr(); // J = F - 2 * H\n\n      var j = f.redSub(h).redISub(h); // X3 = (B-C-D)*J\n\n      nx = b.redSub(c).redISub(d).redMul(j); // Y3 = F * (E - D)\n\n      ny = f.redMul(e.redSub(d)); // Z3 = F * J\n\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d); // H = (c * Z1)^2\n\n    var h = this.curve._mulC(this.z).redSqr(); // J = E - 2 * H\n\n\n    var j = e.redSub(h).redSub(h); // X3 = c * (B - E) * J\n\n    nx = this.curve._mulC(b.redISub(e)).redMul(j); // Y3 = c * E * (C - D)\n\n    ny = this.curve._mulC(e).redMul(c.redISub(d)); // Z3 = E * J\n\n    nz = e.redMul(j);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this; // Double in extended coordinates\n\n  if (this.curve.extended) return this._extDbl();else return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x)); // B = (Y1 + X1) * (Y2 + X2)\n\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x)); // C = T1 * k * T2\n\n  var c = this.t.redMul(this.curve.dd).redMul(p.t); // D = Z1 * 2 * Z2\n\n  var d = this.z.redMul(p.z.redAdd(p.z)); // E = B - A\n\n  var e = b.redSub(a); // F = D - C\n\n  var f = d.redSub(c); // G = D + C\n\n  var g = d.redAdd(c); // H = B + A\n\n  var h = b.redAdd(a); // X3 = E * F\n\n  var nx = e.redMul(f); // Y3 = G * H\n\n  var ny = g.redMul(h); // T3 = E * H\n\n  var nt = e.redMul(h); // Z3 = F * G\n\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z); // B = A^2\n\n  var b = a.redSqr(); // C = X1 * X2\n\n  var c = this.x.redMul(p.x); // D = Y1 * Y2\n\n  var d = this.y.redMul(p.y); // E = d * C * D\n\n  var e = this.curve.d.redMul(c).redMul(d); // F = B - E\n\n  var f = b.redSub(e); // G = B + E\n\n  var g = b.redAdd(e); // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c))); // Z3 = F * G\n\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c)); // Z3 = c * F * G\n\n    nz = this.curve._mulC(f).redMul(g);\n  }\n\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity()) return p;\n  if (p.isInfinity()) return this;\n  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne) return this; // Normalize coordinates\n\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t) this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other || this.getX().cmp(other.getX()) === 0 && this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n}; // Compatibility with BaseCurve\n\n\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/edwards.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar curve = exports;\ncurve.base = __webpack_require__(/*! ./base */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/base.js\");\ncurve.short = __webpack_require__(/*! ./short */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/short.js\");\ncurve.mont = __webpack_require__(/*! ./mont */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/mont.js\");\ncurve.edwards = __webpack_require__(/*! ./edwards */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/edwards.js\");\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/index.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Base = __webpack_require__(/*! ./base */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\n\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {// No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z); // AA = A^2\n\n  var aa = a.redSqr(); // B = X1 - Z1\n\n  var b = this.x.redSub(this.z); // BB = B^2\n\n  var bb = b.redSqr(); // C = AA - BB\n\n  var c = aa.redSub(bb); // X3 = AA * BB\n\n  var nx = aa.redMul(bb); // Z3 = C * (BB + A24 * C)\n\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z); // B = X2 - Z2\n\n  var b = this.x.redSub(this.z); // C = X3 + Z3\n\n  var c = p.x.redAdd(p.z); // D = X3 - Z3\n\n  var d = p.x.redSub(p.z); // DA = D * A\n\n  var da = d.redMul(a); // CB = C * B\n\n  var cb = c.redMul(b); // X5 = Z1 * (DA + CB)^2\n\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr()); // Z5 = X1 * (DA - CB)^2\n\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n\n  var b = this.curve.point(null, null); // (N / 2) * Q\n\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c); // N * Q = 2 * ((N / 2) * Q + Q))\n\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c); // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\n      a = a.dbl();\n    }\n  }\n\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n  return this.x.fromRed();\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/mont.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/short.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Base = __webpack_require__(/*! ./base */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/base.js\");\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (var i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/short.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curves.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curves.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar curves = exports;\n\nvar hash = __webpack_require__(/*! hash.js */ \"./node_modules/hash.js/lib/hash.js\");\n\nvar curve = __webpack_require__(/*! ./curve */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curve/index.js\");\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short') this.curve = new curve.short(options);else if (options.type === 'edwards') this.curve = new curve.edwards(options);else this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\n\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n});\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n});\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n});\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n});\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n});\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['9']\n});\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n  '6666666666666666666666666666666666666666666666666666666666666658']\n});\nvar pre;\n\ntry {\n  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js\");\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [{\n    a: '3086d221a7d46bcde86c90e49284eb15',\n    b: '-e4437ed6010e88286f547fa90abfe4c3'\n  }, {\n    a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n    b: '3086d221a7d46bcde86c90e49284eb15'\n  }],\n  gRed: false,\n  g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n});\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curves.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar HmacDRBG = __webpack_require__(/*! hmac-drbg */ \"./node_modules/hmac-drbg/lib/hmac-drbg.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar curves = __webpack_require__(/*! ../curves */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curves.js\");\n\nvar rand = __webpack_require__(/*! brorand */ \"./node_modules/brorand/index.js\");\n\nvar assert = utils.assert;\n\nvar KeyPair = __webpack_require__(/*! ./key */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/key.js\");\n\nvar Signature = __webpack_require__(/*! ./signature */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/signature.js\");\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n    options = curves[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof curves.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex'); // Perform primitive values validation\n\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null) return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/index.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/key.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/key.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf; // Indefinite length or overflow\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  } // Leading zeroes\n\n\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/ec/signature.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hash = __webpack_require__(/*! hash.js */ \"./node_modules/hash.js/lib/hash.js\");\n\nvar curves = __webpack_require__(/*! ../curves */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/curves.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\n\nvar KeyPair = __webpack_require__(/*! ./key */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/key.js\");\n\nvar Signature = __webpack_require__(/*! ./signature */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/signature.js\");\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n  if (!(this instanceof EDDSA)) return new EDDSA(curve);\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\n\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({\n    R: R,\n    S: S,\n    Rencoded: Rencoded\n  });\n};\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\n\n\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n\n  for (var i = 0; i < arguments.length; i++) hash.update(arguments[i]);\n\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature) return sig;\n  return new Signature(this, sig);\n};\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\n\n\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/index.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\n\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(eddsa, {\n    pub: pub\n  });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair) return secret;\n  return new KeyPair(eddsa, {\n    secret: secret\n  });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n  return a;\n});\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/key.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js\");\n\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\n\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n  if (typeof sig !== 'object') sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n  if (sig.S instanceof BN) this._S = sig.S;\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/eddsa/signature.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \************************************************************************************************/
/***/ ((module) => {

eval("module.exports = {\n  doubles: {\n    step: 4,\n    points: [['e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a', 'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'], ['8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508', '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'], ['175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739', 'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'], ['363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640', '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'], ['8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c', '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'], ['723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda', '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'], ['eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa', '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'], ['100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0', 'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'], ['e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d', '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'], ['feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d', 'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'], ['da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1', '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'], ['53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0', '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'], ['8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047', '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'], ['385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862', '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'], ['6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7', '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'], ['3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd', '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'], ['85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83', '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'], ['948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a', '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'], ['6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8', 'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'], ['e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d', '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'], ['e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725', '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'], ['213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754', '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'], ['4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c', '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'], ['fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6', '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'], ['76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39', 'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'], ['c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891', '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'], ['d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b', 'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'], ['b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03', '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'], ['e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d', 'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'], ['a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070', '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'], ['90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4', 'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'], ['8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da', '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'], ['e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11', '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'], ['8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e', 'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'], ['e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41', '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'], ['b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef', '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'], ['d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8', 'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'], ['324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d', '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'], ['4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96', '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'], ['9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd', 'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'], ['6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5', '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'], ['a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266', '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'], ['7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71', '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'], ['928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac', 'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'], ['85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751', '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'], ['ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e', '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'], ['827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241', 'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'], ['eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3', 'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'], ['e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f', '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'], ['1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19', 'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'], ['146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be', 'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'], ['fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9', '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'], ['da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2', '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'], ['a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13', '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'], ['174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c', 'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'], ['959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba', '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'], ['d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151', 'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'], ['64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073', 'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'], ['8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458', '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'], ['13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b', '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'], ['bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366', 'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'], ['8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa', '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'], ['8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0', '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'], ['dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787', '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'], ['f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e', 'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82']]\n  },\n  naf: {\n    wnd: 7,\n    points: [['f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9', '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'], ['2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4', 'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'], ['5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc', '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'], ['acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe', 'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'], ['774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb', 'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'], ['f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8', 'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'], ['d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e', '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'], ['defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34', '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'], ['2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c', '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'], ['352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5', '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'], ['2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f', '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'], ['9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714', '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'], ['daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729', 'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'], ['c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db', '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'], ['6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4', 'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'], ['1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5', 'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'], ['605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479', '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'], ['62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d', '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'], ['80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f', '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'], ['7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb', 'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'], ['d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9', 'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'], ['49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963', '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'], ['77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74', '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'], ['f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530', 'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'], ['463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b', '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'], ['f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247', 'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'], ['caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1', 'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'], ['2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120', '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'], ['7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435', '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'], ['754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18', '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'], ['e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8', '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'], ['186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb', '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'], ['df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f', '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'], ['5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143', 'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'], ['290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba', 'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'], ['af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45', 'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'], ['766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a', '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'], ['59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e', 'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'], ['f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8', 'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'], ['7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c', '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'], ['948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519', 'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'], ['7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab', '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'], ['3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca', 'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'], ['d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf', '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'], ['1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610', '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'], ['733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4', 'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'], ['15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c', 'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'], ['a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940', 'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'], ['e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980', 'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'], ['311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3', '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'], ['34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf', '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'], ['f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63', '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'], ['d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448', 'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'], ['32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf', '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'], ['7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5', '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'], ['ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6', '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'], ['16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5', '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'], ['eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99', 'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'], ['78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51', 'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'], ['494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5', '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'], ['a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5', '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'], ['c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997', '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'], ['841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881', '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'], ['5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5', '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'], ['36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66', 'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'], ['336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726', 'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'], ['8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede', '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'], ['1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94', '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'], ['85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31', '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'], ['29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51', 'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'], ['a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252', 'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'], ['4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5', 'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'], ['d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b', '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'], ['ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4', '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'], ['af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f', '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'], ['e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889', '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'], ['591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246', 'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'], ['11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984', '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'], ['3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a', 'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'], ['cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030', 'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'], ['c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197', '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'], ['c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593', 'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'], ['a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef', '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'], ['347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38', '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'], ['da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a', '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'], ['c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111', '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'], ['4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502', '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'], ['3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea', 'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'], ['cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26', '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'], ['b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986', '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'], ['d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e', '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'], ['48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4', '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'], ['dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda', 'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'], ['6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859', 'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'], ['e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f', 'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'], ['eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c', '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'], ['13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942', 'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'], ['ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a', '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'], ['b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80', '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'], ['ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d', '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'], ['8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1', 'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'], ['52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63', 'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'], ['e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352', '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'], ['7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193', 'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'], ['5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00', '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'], ['32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58', 'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'], ['e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7', 'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'], ['8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8', 'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'], ['4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e', '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'], ['3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d', 'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'], ['674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b', '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'], ['d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f', 'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'], ['30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6', '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'], ['be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297', '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'], ['93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a', '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'], ['b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c', 'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'], ['d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52', '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'], ['d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb', 'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'], ['463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065', 'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'], ['7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917', '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'], ['74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9', 'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'], ['30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3', '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'], ['9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57', '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'], ['176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66', 'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'], ['75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8', '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'], ['809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721', '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'], ['1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180', '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9']]\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = exports;\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar minAssert = __webpack_require__(/*! minimalistic-assert */ \"./node_modules/minimalistic-assert/index.js\");\n\nvar minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ \"./node_modules/minimalistic-crypto-utils/lib/utils.js\");\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode; // Represent num in a w-NAF form\n\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n  var ws = 1 << w + 1;\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\n\nutils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\nfunction getJSF(k1, k2) {\n  var jsf = [[], []];\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = k1.andln(3) + d1 & 3;\n    var m24 = k2.andln(3) + d2 & 3;\n    if (m14 === 3) m14 = -1;\n    if (m24 === 3) m24 = -1;\n    var u1;\n\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = k1.andln(7) + d1 & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n    }\n\n    jsf[0].push(u1);\n    var u2;\n\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = k2.andln(7) + d2 & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n    }\n\n    jsf[1].push(u2); // Second phase\n\n    if (2 * d1 === u1 + 1) d1 = 1 - d1;\n    if (2 * d2 === u2 + 1) d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\n\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n  };\n}\n\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n}\n\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\n\nutils.intFromLE = intFromLE;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/lib/elliptic/utils.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/api/api_grpc_web_pb.js":
/*!**************************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/api/api_grpc_web_pb.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * @fileoverview gRPC-Web generated client stub for iotexapi\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nconst grpc = {};\ngrpc.web = __webpack_require__(/*! grpc-web */ \"./node_modules/grpc-web/index.js\");\n\nvar proto_types_action_pb = __webpack_require__(/*! ../../proto/types/action_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/action_pb.js\");\n\nvar proto_types_blockchain_pb = __webpack_require__(/*! ../../proto/types/blockchain_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/blockchain_pb.js\");\n\nvar proto_types_node_pb = __webpack_require__(/*! ../../proto/types/node_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/node_pb.js\");\n\nvar proto_types_election_pb = __webpack_require__(/*! ../../proto/types/election_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/election_pb.js\");\n\nvar proto_types_transaction_log_pb = __webpack_require__(/*! ../../proto/types/transaction_log_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/transaction_log_pb.js\");\n\nvar google_protobuf_timestamp_pb = __webpack_require__(/*! google-protobuf/google/protobuf/timestamp_pb.js */ \"./node_modules/google-protobuf/google/protobuf/timestamp_pb.js\");\n\nconst proto = {};\nproto.iotexapi = __webpack_require__(/*! ./api_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/api/api_pb.js\");\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\nproto.iotexapi.APIServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.iotexapi.APIServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetAccountRequest,\n *   !proto.iotexapi.GetAccountResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetAccount = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetAccount', grpc.web.MethodType.UNARY, proto.iotexapi.GetAccountRequest, proto.iotexapi.GetAccountResponse,\n/**\n * @param {!proto.iotexapi.GetAccountRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetAccountResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetAccountRequest,\n *   !proto.iotexapi.GetAccountResponse>}\n */\n\nconst methodInfo_APIService_GetAccount = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetAccountResponse,\n/**\n * @param {!proto.iotexapi.GetAccountRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetAccountResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetAccountRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetAccountResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetAccountResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getAccount = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetAccount', request, metadata || {}, methodDescriptor_APIService_GetAccount, callback);\n};\n/**\n * @param {!proto.iotexapi.GetAccountRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetAccountResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getAccount = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetAccount', request, metadata || {}, methodDescriptor_APIService_GetAccount);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetActionsRequest,\n *   !proto.iotexapi.GetActionsResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetActions = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetActions', grpc.web.MethodType.UNARY, proto.iotexapi.GetActionsRequest, proto.iotexapi.GetActionsResponse,\n/**\n * @param {!proto.iotexapi.GetActionsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetActionsResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetActionsRequest,\n *   !proto.iotexapi.GetActionsResponse>}\n */\n\nconst methodInfo_APIService_GetActions = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetActionsResponse,\n/**\n * @param {!proto.iotexapi.GetActionsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetActionsResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetActionsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetActionsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetActionsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getActions = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetActions', request, metadata || {}, methodDescriptor_APIService_GetActions, callback);\n};\n/**\n * @param {!proto.iotexapi.GetActionsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetActionsResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getActions = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetActions', request, metadata || {}, methodDescriptor_APIService_GetActions);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetBlockMetasRequest,\n *   !proto.iotexapi.GetBlockMetasResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetBlockMetas = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetBlockMetas', grpc.web.MethodType.UNARY, proto.iotexapi.GetBlockMetasRequest, proto.iotexapi.GetBlockMetasResponse,\n/**\n * @param {!proto.iotexapi.GetBlockMetasRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetBlockMetasResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetBlockMetasRequest,\n *   !proto.iotexapi.GetBlockMetasResponse>}\n */\n\nconst methodInfo_APIService_GetBlockMetas = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetBlockMetasResponse,\n/**\n * @param {!proto.iotexapi.GetBlockMetasRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetBlockMetasResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetBlockMetasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetBlockMetasResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetBlockMetasResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getBlockMetas = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetBlockMetas', request, metadata || {}, methodDescriptor_APIService_GetBlockMetas, callback);\n};\n/**\n * @param {!proto.iotexapi.GetBlockMetasRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetBlockMetasResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getBlockMetas = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetBlockMetas', request, metadata || {}, methodDescriptor_APIService_GetBlockMetas);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetChainMetaRequest,\n *   !proto.iotexapi.GetChainMetaResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetChainMeta = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetChainMeta', grpc.web.MethodType.UNARY, proto.iotexapi.GetChainMetaRequest, proto.iotexapi.GetChainMetaResponse,\n/**\n * @param {!proto.iotexapi.GetChainMetaRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetChainMetaResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetChainMetaRequest,\n *   !proto.iotexapi.GetChainMetaResponse>}\n */\n\nconst methodInfo_APIService_GetChainMeta = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetChainMetaResponse,\n/**\n * @param {!proto.iotexapi.GetChainMetaRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetChainMetaResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetChainMetaRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetChainMetaResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetChainMetaResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getChainMeta = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetChainMeta', request, metadata || {}, methodDescriptor_APIService_GetChainMeta, callback);\n};\n/**\n * @param {!proto.iotexapi.GetChainMetaRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetChainMetaResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getChainMeta = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetChainMeta', request, metadata || {}, methodDescriptor_APIService_GetChainMeta);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetServerMetaRequest,\n *   !proto.iotexapi.GetServerMetaResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetServerMeta = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetServerMeta', grpc.web.MethodType.UNARY, proto.iotexapi.GetServerMetaRequest, proto.iotexapi.GetServerMetaResponse,\n/**\n * @param {!proto.iotexapi.GetServerMetaRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetServerMetaResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetServerMetaRequest,\n *   !proto.iotexapi.GetServerMetaResponse>}\n */\n\nconst methodInfo_APIService_GetServerMeta = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetServerMetaResponse,\n/**\n * @param {!proto.iotexapi.GetServerMetaRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetServerMetaResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetServerMetaRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetServerMetaResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetServerMetaResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getServerMeta = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetServerMeta', request, metadata || {}, methodDescriptor_APIService_GetServerMeta, callback);\n};\n/**\n * @param {!proto.iotexapi.GetServerMetaRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetServerMetaResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getServerMeta = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetServerMeta', request, metadata || {}, methodDescriptor_APIService_GetServerMeta);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.SendActionRequest,\n *   !proto.iotexapi.SendActionResponse>}\n */\n\n\nconst methodDescriptor_APIService_SendAction = new grpc.web.MethodDescriptor('/iotexapi.APIService/SendAction', grpc.web.MethodType.UNARY, proto.iotexapi.SendActionRequest, proto.iotexapi.SendActionResponse,\n/**\n * @param {!proto.iotexapi.SendActionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.SendActionResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.SendActionRequest,\n *   !proto.iotexapi.SendActionResponse>}\n */\n\nconst methodInfo_APIService_SendAction = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.SendActionResponse,\n/**\n * @param {!proto.iotexapi.SendActionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.SendActionResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.SendActionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.SendActionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.SendActionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.sendAction = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/SendAction', request, metadata || {}, methodDescriptor_APIService_SendAction, callback);\n};\n/**\n * @param {!proto.iotexapi.SendActionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.SendActionResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.sendAction = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/SendAction', request, metadata || {}, methodDescriptor_APIService_SendAction);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetReceiptByActionRequest,\n *   !proto.iotexapi.GetReceiptByActionResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetReceiptByAction = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetReceiptByAction', grpc.web.MethodType.UNARY, proto.iotexapi.GetReceiptByActionRequest, proto.iotexapi.GetReceiptByActionResponse,\n/**\n * @param {!proto.iotexapi.GetReceiptByActionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetReceiptByActionResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetReceiptByActionRequest,\n *   !proto.iotexapi.GetReceiptByActionResponse>}\n */\n\nconst methodInfo_APIService_GetReceiptByAction = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetReceiptByActionResponse,\n/**\n * @param {!proto.iotexapi.GetReceiptByActionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetReceiptByActionResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetReceiptByActionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetReceiptByActionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetReceiptByActionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getReceiptByAction = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetReceiptByAction', request, metadata || {}, methodDescriptor_APIService_GetReceiptByAction, callback);\n};\n/**\n * @param {!proto.iotexapi.GetReceiptByActionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetReceiptByActionResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getReceiptByAction = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetReceiptByAction', request, metadata || {}, methodDescriptor_APIService_GetReceiptByAction);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.ReadContractRequest,\n *   !proto.iotexapi.ReadContractResponse>}\n */\n\n\nconst methodDescriptor_APIService_ReadContract = new grpc.web.MethodDescriptor('/iotexapi.APIService/ReadContract', grpc.web.MethodType.UNARY, proto.iotexapi.ReadContractRequest, proto.iotexapi.ReadContractResponse,\n/**\n * @param {!proto.iotexapi.ReadContractRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.ReadContractResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.ReadContractRequest,\n *   !proto.iotexapi.ReadContractResponse>}\n */\n\nconst methodInfo_APIService_ReadContract = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.ReadContractResponse,\n/**\n * @param {!proto.iotexapi.ReadContractRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.ReadContractResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.ReadContractRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.ReadContractResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.ReadContractResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.readContract = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/ReadContract', request, metadata || {}, methodDescriptor_APIService_ReadContract, callback);\n};\n/**\n * @param {!proto.iotexapi.ReadContractRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.ReadContractResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.readContract = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/ReadContract', request, metadata || {}, methodDescriptor_APIService_ReadContract);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.SuggestGasPriceRequest,\n *   !proto.iotexapi.SuggestGasPriceResponse>}\n */\n\n\nconst methodDescriptor_APIService_SuggestGasPrice = new grpc.web.MethodDescriptor('/iotexapi.APIService/SuggestGasPrice', grpc.web.MethodType.UNARY, proto.iotexapi.SuggestGasPriceRequest, proto.iotexapi.SuggestGasPriceResponse,\n/**\n * @param {!proto.iotexapi.SuggestGasPriceRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.SuggestGasPriceResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.SuggestGasPriceRequest,\n *   !proto.iotexapi.SuggestGasPriceResponse>}\n */\n\nconst methodInfo_APIService_SuggestGasPrice = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.SuggestGasPriceResponse,\n/**\n * @param {!proto.iotexapi.SuggestGasPriceRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.SuggestGasPriceResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.SuggestGasPriceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.SuggestGasPriceResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.SuggestGasPriceResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.suggestGasPrice = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/SuggestGasPrice', request, metadata || {}, methodDescriptor_APIService_SuggestGasPrice, callback);\n};\n/**\n * @param {!proto.iotexapi.SuggestGasPriceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.SuggestGasPriceResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.suggestGasPrice = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/SuggestGasPrice', request, metadata || {}, methodDescriptor_APIService_SuggestGasPrice);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.EstimateGasForActionRequest,\n *   !proto.iotexapi.EstimateGasForActionResponse>}\n */\n\n\nconst methodDescriptor_APIService_EstimateGasForAction = new grpc.web.MethodDescriptor('/iotexapi.APIService/EstimateGasForAction', grpc.web.MethodType.UNARY, proto.iotexapi.EstimateGasForActionRequest, proto.iotexapi.EstimateGasForActionResponse,\n/**\n * @param {!proto.iotexapi.EstimateGasForActionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.EstimateGasForActionResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.EstimateGasForActionRequest,\n *   !proto.iotexapi.EstimateGasForActionResponse>}\n */\n\nconst methodInfo_APIService_EstimateGasForAction = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.EstimateGasForActionResponse,\n/**\n * @param {!proto.iotexapi.EstimateGasForActionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.EstimateGasForActionResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.EstimateGasForActionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.EstimateGasForActionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.EstimateGasForActionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.estimateGasForAction = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/EstimateGasForAction', request, metadata || {}, methodDescriptor_APIService_EstimateGasForAction, callback);\n};\n/**\n * @param {!proto.iotexapi.EstimateGasForActionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.EstimateGasForActionResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.estimateGasForAction = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/EstimateGasForAction', request, metadata || {}, methodDescriptor_APIService_EstimateGasForAction);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.EstimateActionGasConsumptionRequest,\n *   !proto.iotexapi.EstimateActionGasConsumptionResponse>}\n */\n\n\nconst methodDescriptor_APIService_EstimateActionGasConsumption = new grpc.web.MethodDescriptor('/iotexapi.APIService/EstimateActionGasConsumption', grpc.web.MethodType.UNARY, proto.iotexapi.EstimateActionGasConsumptionRequest, proto.iotexapi.EstimateActionGasConsumptionResponse,\n/**\n * @param {!proto.iotexapi.EstimateActionGasConsumptionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.EstimateActionGasConsumptionResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.EstimateActionGasConsumptionRequest,\n *   !proto.iotexapi.EstimateActionGasConsumptionResponse>}\n */\n\nconst methodInfo_APIService_EstimateActionGasConsumption = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.EstimateActionGasConsumptionResponse,\n/**\n * @param {!proto.iotexapi.EstimateActionGasConsumptionRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.EstimateActionGasConsumptionResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.EstimateActionGasConsumptionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.EstimateActionGasConsumptionResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.EstimateActionGasConsumptionResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.estimateActionGasConsumption = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/EstimateActionGasConsumption', request, metadata || {}, methodDescriptor_APIService_EstimateActionGasConsumption, callback);\n};\n/**\n * @param {!proto.iotexapi.EstimateActionGasConsumptionRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.EstimateActionGasConsumptionResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.estimateActionGasConsumption = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/EstimateActionGasConsumption', request, metadata || {}, methodDescriptor_APIService_EstimateActionGasConsumption);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.ReadStateRequest,\n *   !proto.iotexapi.ReadStateResponse>}\n */\n\n\nconst methodDescriptor_APIService_ReadState = new grpc.web.MethodDescriptor('/iotexapi.APIService/ReadState', grpc.web.MethodType.UNARY, proto.iotexapi.ReadStateRequest, proto.iotexapi.ReadStateResponse,\n/**\n * @param {!proto.iotexapi.ReadStateRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.ReadStateResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.ReadStateRequest,\n *   !proto.iotexapi.ReadStateResponse>}\n */\n\nconst methodInfo_APIService_ReadState = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.ReadStateResponse,\n/**\n * @param {!proto.iotexapi.ReadStateRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.ReadStateResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.ReadStateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.ReadStateResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.ReadStateResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.readState = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/ReadState', request, metadata || {}, methodDescriptor_APIService_ReadState, callback);\n};\n/**\n * @param {!proto.iotexapi.ReadStateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.ReadStateResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.readState = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/ReadState', request, metadata || {}, methodDescriptor_APIService_ReadState);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetEpochMetaRequest,\n *   !proto.iotexapi.GetEpochMetaResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetEpochMeta = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetEpochMeta', grpc.web.MethodType.UNARY, proto.iotexapi.GetEpochMetaRequest, proto.iotexapi.GetEpochMetaResponse,\n/**\n * @param {!proto.iotexapi.GetEpochMetaRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetEpochMetaResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetEpochMetaRequest,\n *   !proto.iotexapi.GetEpochMetaResponse>}\n */\n\nconst methodInfo_APIService_GetEpochMeta = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetEpochMetaResponse,\n/**\n * @param {!proto.iotexapi.GetEpochMetaRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetEpochMetaResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetEpochMetaRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetEpochMetaResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetEpochMetaResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getEpochMeta = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetEpochMeta', request, metadata || {}, methodDescriptor_APIService_GetEpochMeta, callback);\n};\n/**\n * @param {!proto.iotexapi.GetEpochMetaRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetEpochMetaResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getEpochMeta = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetEpochMeta', request, metadata || {}, methodDescriptor_APIService_GetEpochMeta);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetRawBlocksRequest,\n *   !proto.iotexapi.GetRawBlocksResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetRawBlocks = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetRawBlocks', grpc.web.MethodType.UNARY, proto.iotexapi.GetRawBlocksRequest, proto.iotexapi.GetRawBlocksResponse,\n/**\n * @param {!proto.iotexapi.GetRawBlocksRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetRawBlocksResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetRawBlocksRequest,\n *   !proto.iotexapi.GetRawBlocksResponse>}\n */\n\nconst methodInfo_APIService_GetRawBlocks = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetRawBlocksResponse,\n/**\n * @param {!proto.iotexapi.GetRawBlocksRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetRawBlocksResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetRawBlocksRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetRawBlocksResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetRawBlocksResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getRawBlocks = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetRawBlocks', request, metadata || {}, methodDescriptor_APIService_GetRawBlocks, callback);\n};\n/**\n * @param {!proto.iotexapi.GetRawBlocksRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetRawBlocksResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getRawBlocks = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetRawBlocks', request, metadata || {}, methodDescriptor_APIService_GetRawBlocks);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetLogsRequest,\n *   !proto.iotexapi.GetLogsResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetLogs = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetLogs', grpc.web.MethodType.UNARY, proto.iotexapi.GetLogsRequest, proto.iotexapi.GetLogsResponse,\n/**\n * @param {!proto.iotexapi.GetLogsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetLogsResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetLogsRequest,\n *   !proto.iotexapi.GetLogsResponse>}\n */\n\nconst methodInfo_APIService_GetLogs = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetLogsResponse,\n/**\n * @param {!proto.iotexapi.GetLogsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetLogsResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetLogsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetLogsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetLogsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getLogs = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetLogs', request, metadata || {}, methodDescriptor_APIService_GetLogs, callback);\n};\n/**\n * @param {!proto.iotexapi.GetLogsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetLogsResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getLogs = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetLogs', request, metadata || {}, methodDescriptor_APIService_GetLogs);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetTransactionLogByActionHashRequest,\n *   !proto.iotexapi.GetTransactionLogByActionHashResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetTransactionLogByActionHash = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetTransactionLogByActionHash', grpc.web.MethodType.UNARY, proto.iotexapi.GetTransactionLogByActionHashRequest, proto.iotexapi.GetTransactionLogByActionHashResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByActionHashResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetTransactionLogByActionHashRequest,\n *   !proto.iotexapi.GetTransactionLogByActionHashResponse>}\n */\n\nconst methodInfo_APIService_GetTransactionLogByActionHash = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetTransactionLogByActionHashResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByActionHashResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetTransactionLogByActionHashResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetTransactionLogByActionHashResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getTransactionLogByActionHash = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetTransactionLogByActionHash', request, metadata || {}, methodDescriptor_APIService_GetTransactionLogByActionHash, callback);\n};\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetTransactionLogByActionHashResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getTransactionLogByActionHash = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetTransactionLogByActionHash', request, metadata || {}, methodDescriptor_APIService_GetTransactionLogByActionHash);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetTransactionLogByBlockHeightRequest,\n *   !proto.iotexapi.GetTransactionLogByBlockHeightResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetTransactionLogByBlockHeight = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetTransactionLogByBlockHeight', grpc.web.MethodType.UNARY, proto.iotexapi.GetTransactionLogByBlockHeightRequest, proto.iotexapi.GetTransactionLogByBlockHeightResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByBlockHeightResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetTransactionLogByBlockHeightRequest,\n *   !proto.iotexapi.GetTransactionLogByBlockHeightResponse>}\n */\n\nconst methodInfo_APIService_GetTransactionLogByBlockHeight = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetTransactionLogByBlockHeightResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByBlockHeightResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetTransactionLogByBlockHeightResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetTransactionLogByBlockHeightResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getTransactionLogByBlockHeight = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetTransactionLogByBlockHeight', request, metadata || {}, methodDescriptor_APIService_GetTransactionLogByBlockHeight, callback);\n};\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetTransactionLogByBlockHeightResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getTransactionLogByBlockHeight = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetTransactionLogByBlockHeight', request, metadata || {}, methodDescriptor_APIService_GetTransactionLogByBlockHeight);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.StreamBlocksRequest,\n *   !proto.iotexapi.StreamBlocksResponse>}\n */\n\n\nconst methodDescriptor_APIService_StreamBlocks = new grpc.web.MethodDescriptor('/iotexapi.APIService/StreamBlocks', grpc.web.MethodType.SERVER_STREAMING, proto.iotexapi.StreamBlocksRequest, proto.iotexapi.StreamBlocksResponse,\n/**\n * @param {!proto.iotexapi.StreamBlocksRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.StreamBlocksResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.StreamBlocksRequest,\n *   !proto.iotexapi.StreamBlocksResponse>}\n */\n\nconst methodInfo_APIService_StreamBlocks = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.StreamBlocksResponse,\n/**\n * @param {!proto.iotexapi.StreamBlocksRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.StreamBlocksResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.StreamBlocksRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.StreamBlocksResponse>}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.streamBlocks = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/iotexapi.APIService/StreamBlocks', request, metadata || {}, methodDescriptor_APIService_StreamBlocks);\n};\n/**\n * @param {!proto.iotexapi.StreamBlocksRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.StreamBlocksResponse>}\n *     The XHR Node Readable Stream\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.streamBlocks = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/iotexapi.APIService/StreamBlocks', request, metadata || {}, methodDescriptor_APIService_StreamBlocks);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.StreamLogsRequest,\n *   !proto.iotexapi.StreamLogsResponse>}\n */\n\n\nconst methodDescriptor_APIService_StreamLogs = new grpc.web.MethodDescriptor('/iotexapi.APIService/StreamLogs', grpc.web.MethodType.SERVER_STREAMING, proto.iotexapi.StreamLogsRequest, proto.iotexapi.StreamLogsResponse,\n/**\n * @param {!proto.iotexapi.StreamLogsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.StreamLogsResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.StreamLogsRequest,\n *   !proto.iotexapi.StreamLogsResponse>}\n */\n\nconst methodInfo_APIService_StreamLogs = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.StreamLogsResponse,\n/**\n * @param {!proto.iotexapi.StreamLogsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.StreamLogsResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.StreamLogsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.StreamLogsResponse>}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.streamLogs = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/iotexapi.APIService/StreamLogs', request, metadata || {}, methodDescriptor_APIService_StreamLogs);\n};\n/**\n * @param {!proto.iotexapi.StreamLogsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.StreamLogsResponse>}\n *     The XHR Node Readable Stream\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.streamLogs = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/iotexapi.APIService/StreamLogs', request, metadata || {}, methodDescriptor_APIService_StreamLogs);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetActPoolActionsRequest,\n *   !proto.iotexapi.GetActPoolActionsResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetActPoolActions = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetActPoolActions', grpc.web.MethodType.UNARY, proto.iotexapi.GetActPoolActionsRequest, proto.iotexapi.GetActPoolActionsResponse,\n/**\n * @param {!proto.iotexapi.GetActPoolActionsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetActPoolActionsResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetActPoolActionsRequest,\n *   !proto.iotexapi.GetActPoolActionsResponse>}\n */\n\nconst methodInfo_APIService_GetActPoolActions = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetActPoolActionsResponse,\n/**\n * @param {!proto.iotexapi.GetActPoolActionsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetActPoolActionsResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetActPoolActionsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetActPoolActionsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetActPoolActionsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getActPoolActions = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetActPoolActions', request, metadata || {}, methodDescriptor_APIService_GetActPoolActions, callback);\n};\n/**\n * @param {!proto.iotexapi.GetActPoolActionsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetActPoolActionsResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getActPoolActions = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetActPoolActions', request, metadata || {}, methodDescriptor_APIService_GetActPoolActions);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetEvmTransfersByActionHashRequest,\n *   !proto.iotexapi.GetEvmTransfersByActionHashResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetEvmTransfersByActionHash = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetEvmTransfersByActionHash', grpc.web.MethodType.UNARY, proto.iotexapi.GetEvmTransfersByActionHashRequest, proto.iotexapi.GetEvmTransfersByActionHashResponse,\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetEvmTransfersByActionHashResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetEvmTransfersByActionHashRequest,\n *   !proto.iotexapi.GetEvmTransfersByActionHashResponse>}\n */\n\nconst methodInfo_APIService_GetEvmTransfersByActionHash = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetEvmTransfersByActionHashResponse,\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetEvmTransfersByActionHashResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetEvmTransfersByActionHashResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetEvmTransfersByActionHashResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getEvmTransfersByActionHash = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetEvmTransfersByActionHash', request, metadata || {}, methodDescriptor_APIService_GetEvmTransfersByActionHash, callback);\n};\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetEvmTransfersByActionHashResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getEvmTransfersByActionHash = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetEvmTransfersByActionHash', request, metadata || {}, methodDescriptor_APIService_GetEvmTransfersByActionHash);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetEvmTransfersByBlockHeightRequest,\n *   !proto.iotexapi.GetEvmTransfersByBlockHeightResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetEvmTransfersByBlockHeight = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetEvmTransfersByBlockHeight', grpc.web.MethodType.UNARY, proto.iotexapi.GetEvmTransfersByBlockHeightRequest, proto.iotexapi.GetEvmTransfersByBlockHeightResponse,\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetEvmTransfersByBlockHeightResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetEvmTransfersByBlockHeightRequest,\n *   !proto.iotexapi.GetEvmTransfersByBlockHeightResponse>}\n */\n\nconst methodInfo_APIService_GetEvmTransfersByBlockHeight = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetEvmTransfersByBlockHeightResponse,\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetEvmTransfersByBlockHeightResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetEvmTransfersByBlockHeightResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetEvmTransfersByBlockHeightResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getEvmTransfersByBlockHeight = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetEvmTransfersByBlockHeight', request, metadata || {}, methodDescriptor_APIService_GetEvmTransfersByBlockHeight, callback);\n};\n/**\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetEvmTransfersByBlockHeightResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getEvmTransfersByBlockHeight = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetEvmTransfersByBlockHeight', request, metadata || {}, methodDescriptor_APIService_GetEvmTransfersByBlockHeight);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetElectionBucketsRequest,\n *   !proto.iotexapi.GetElectionBucketsResponse>}\n */\n\n\nconst methodDescriptor_APIService_GetElectionBuckets = new grpc.web.MethodDescriptor('/iotexapi.APIService/GetElectionBuckets', grpc.web.MethodType.UNARY, proto.iotexapi.GetElectionBucketsRequest, proto.iotexapi.GetElectionBucketsResponse,\n/**\n * @param {!proto.iotexapi.GetElectionBucketsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetElectionBucketsResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetElectionBucketsRequest,\n *   !proto.iotexapi.GetElectionBucketsResponse>}\n */\n\nconst methodInfo_APIService_GetElectionBuckets = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetElectionBucketsResponse,\n/**\n * @param {!proto.iotexapi.GetElectionBucketsRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetElectionBucketsResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetElectionBucketsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetElectionBucketsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetElectionBucketsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.APIServiceClient.prototype.getElectionBuckets = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.APIService/GetElectionBuckets', request, metadata || {}, methodDescriptor_APIService_GetElectionBuckets, callback);\n};\n/**\n * @param {!proto.iotexapi.GetElectionBucketsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetElectionBucketsResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.APIServicePromiseClient.prototype.getElectionBuckets = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.APIService/GetElectionBuckets', request, metadata || {}, methodDescriptor_APIService_GetElectionBuckets);\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.iotexapi.TransactionLogServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.iotexapi.TransactionLogServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetTransactionLogByActionHashRequest,\n *   !proto.iotexapi.GetTransactionLogByActionHashResponse>}\n */\n\n\nconst methodDescriptor_TransactionLogService_GetTransactionLogByActionHash = new grpc.web.MethodDescriptor('/iotexapi.TransactionLogService/GetTransactionLogByActionHash', grpc.web.MethodType.UNARY, proto.iotexapi.GetTransactionLogByActionHashRequest, proto.iotexapi.GetTransactionLogByActionHashResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByActionHashResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetTransactionLogByActionHashRequest,\n *   !proto.iotexapi.GetTransactionLogByActionHashResponse>}\n */\n\nconst methodInfo_TransactionLogService_GetTransactionLogByActionHash = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetTransactionLogByActionHashResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByActionHashResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetTransactionLogByActionHashResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetTransactionLogByActionHashResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.TransactionLogServiceClient.prototype.getTransactionLogByActionHash = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.TransactionLogService/GetTransactionLogByActionHash', request, metadata || {}, methodDescriptor_TransactionLogService_GetTransactionLogByActionHash, callback);\n};\n/**\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetTransactionLogByActionHashResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.TransactionLogServicePromiseClient.prototype.getTransactionLogByActionHash = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.TransactionLogService/GetTransactionLogByActionHash', request, metadata || {}, methodDescriptor_TransactionLogService_GetTransactionLogByActionHash);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.iotexapi.GetTransactionLogByBlockHeightRequest,\n *   !proto.iotexapi.GetTransactionLogByBlockHeightResponse>}\n */\n\n\nconst methodDescriptor_TransactionLogService_GetTransactionLogByBlockHeight = new grpc.web.MethodDescriptor('/iotexapi.TransactionLogService/GetTransactionLogByBlockHeight', grpc.web.MethodType.UNARY, proto.iotexapi.GetTransactionLogByBlockHeightRequest, proto.iotexapi.GetTransactionLogByBlockHeightResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByBlockHeightResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.iotexapi.GetTransactionLogByBlockHeightRequest,\n *   !proto.iotexapi.GetTransactionLogByBlockHeightResponse>}\n */\n\nconst methodInfo_TransactionLogService_GetTransactionLogByBlockHeight = new grpc.web.AbstractClientBase.MethodInfo(proto.iotexapi.GetTransactionLogByBlockHeightResponse,\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.iotexapi.GetTransactionLogByBlockHeightResponse.deserializeBinary);\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.iotexapi.GetTransactionLogByBlockHeightResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.iotexapi.GetTransactionLogByBlockHeightResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.iotexapi.TransactionLogServiceClient.prototype.getTransactionLogByBlockHeight = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/iotexapi.TransactionLogService/GetTransactionLogByBlockHeight', request, metadata || {}, methodDescriptor_TransactionLogService_GetTransactionLogByBlockHeight, callback);\n};\n/**\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.iotexapi.GetTransactionLogByBlockHeightResponse>}\n *     Promise that resolves to the response\n */\n\n\nproto.iotexapi.TransactionLogServicePromiseClient.prototype.getTransactionLogByBlockHeight = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/iotexapi.TransactionLogService/GetTransactionLogByBlockHeight', request, metadata || {}, methodDescriptor_TransactionLogService_GetTransactionLogByBlockHeight);\n};\n\nmodule.exports = proto.iotexapi;\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/api/api_grpc_web_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/api/api_pb.js":
/*!*****************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/api/api_pb.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/api/api.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar proto_types_action_pb = __webpack_require__(/*! ../../proto/types/action_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/action_pb.js\");\n\ngoog.object.extend(proto, proto_types_action_pb);\n\nvar proto_types_blockchain_pb = __webpack_require__(/*! ../../proto/types/blockchain_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/blockchain_pb.js\");\n\ngoog.object.extend(proto, proto_types_blockchain_pb);\n\nvar proto_types_node_pb = __webpack_require__(/*! ../../proto/types/node_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/node_pb.js\");\n\ngoog.object.extend(proto, proto_types_node_pb);\n\nvar proto_types_election_pb = __webpack_require__(/*! ../../proto/types/election_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/election_pb.js\");\n\ngoog.object.extend(proto, proto_types_election_pb);\n\nvar proto_types_transaction_log_pb = __webpack_require__(/*! ../../proto/types/transaction_log_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/transaction_log_pb.js\");\n\ngoog.object.extend(proto, proto_types_transaction_log_pb);\n\nvar google_protobuf_timestamp_pb = __webpack_require__(/*! google-protobuf/google/protobuf/timestamp_pb.js */ \"./node_modules/google-protobuf/google/protobuf/timestamp_pb.js\");\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.iotexapi.ActionInfo', null, global);\ngoog.exportSymbol('proto.iotexapi.BlockInfo', null, global);\ngoog.exportSymbol('proto.iotexapi.BlockProducerInfo', null, global);\ngoog.exportSymbol('proto.iotexapi.Bucket', null, global);\ngoog.exportSymbol('proto.iotexapi.EstimateActionGasConsumptionRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.EstimateActionGasConsumptionRequest.ActionCase', null, global);\ngoog.exportSymbol('proto.iotexapi.EstimateActionGasConsumptionResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.EstimateGasForActionRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.EstimateGasForActionResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetAccountRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetAccountResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActPoolActionsRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActPoolActionsResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActionByHashRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActionsByAddressRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActionsByBlockRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActionsByIndexRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActionsRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActionsRequest.LookupCase', null, global);\ngoog.exportSymbol('proto.iotexapi.GetActionsResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetBlockMetaByHashRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetBlockMetasByIndexRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetBlockMetasRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetBlockMetasRequest.LookupCase', null, global);\ngoog.exportSymbol('proto.iotexapi.GetBlockMetasResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetChainMetaRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetChainMetaResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetElectionBucketsRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetElectionBucketsResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetEpochMetaRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetEpochMetaResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetEvmTransfersByActionHashRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetEvmTransfersByActionHashResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetEvmTransfersByBlockHeightRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetEvmTransfersByBlockHeightResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetLogsByBlock', null, global);\ngoog.exportSymbol('proto.iotexapi.GetLogsByRange', null, global);\ngoog.exportSymbol('proto.iotexapi.GetLogsRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetLogsRequest.LookupCase', null, global);\ngoog.exportSymbol('proto.iotexapi.GetLogsResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetRawBlocksRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetRawBlocksResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetReceiptByActionRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetReceiptByActionResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetServerMetaRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetServerMetaResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetTransactionLogByActionHashRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetTransactionLogByActionHashResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetTransactionLogByBlockHeightRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.GetTransactionLogByBlockHeightResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.GetUnconfirmedActionsByAddressRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.LogsFilter', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadContractRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadContractResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStateRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStateResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.ReceiptInfo', null, global);\ngoog.exportSymbol('proto.iotexapi.SendActionRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.SendActionResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.SendSignedActionBytesRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.StreamBlocksRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.StreamBlocksResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.StreamLogsRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.StreamLogsResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.SuggestGasPriceRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.SuggestGasPriceResponse', null, global);\ngoog.exportSymbol('proto.iotexapi.Topics', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotexapi.Bucket = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.Bucket, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.Bucket.displayName = 'proto.iotexapi.Bucket';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetAccountRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetAccountRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetAccountRequest.displayName = 'proto.iotexapi.GetAccountRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetAccountResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetAccountResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetAccountResponse.displayName = 'proto.iotexapi.GetAccountResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActionsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotexapi.GetActionsRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.iotexapi.GetActionsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActionsRequest.displayName = 'proto.iotexapi.GetActionsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetActionsByIndexRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActionsByIndexRequest.displayName = 'proto.iotexapi.GetActionsByIndexRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActionByHashRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetActionByHashRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActionByHashRequest.displayName = 'proto.iotexapi.GetActionByHashRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetActionsByAddressRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActionsByAddressRequest.displayName = 'proto.iotexapi.GetActionsByAddressRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetUnconfirmedActionsByAddressRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetUnconfirmedActionsByAddressRequest.displayName = 'proto.iotexapi.GetUnconfirmedActionsByAddressRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetActionsByBlockRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActionsByBlockRequest.displayName = 'proto.iotexapi.GetActionsByBlockRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ActionInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ActionInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ActionInfo.displayName = 'proto.iotexapi.ActionInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReceiptInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReceiptInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReceiptInfo.displayName = 'proto.iotexapi.ReceiptInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.BlockProducerInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.BlockProducerInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.BlockProducerInfo.displayName = 'proto.iotexapi.BlockProducerInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.BlockInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.BlockInfo.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.BlockInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.BlockInfo.displayName = 'proto.iotexapi.BlockInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActionsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetActionsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetActionsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActionsResponse.displayName = 'proto.iotexapi.GetActionsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetBlockMetasRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotexapi.GetBlockMetasRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.iotexapi.GetBlockMetasRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetBlockMetasRequest.displayName = 'proto.iotexapi.GetBlockMetasRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetBlockMetasByIndexRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetBlockMetasByIndexRequest.displayName = 'proto.iotexapi.GetBlockMetasByIndexRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetBlockMetaByHashRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetBlockMetaByHashRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetBlockMetaByHashRequest.displayName = 'proto.iotexapi.GetBlockMetaByHashRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetBlockMetasResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetBlockMetasResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetBlockMetasResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetBlockMetasResponse.displayName = 'proto.iotexapi.GetBlockMetasResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetChainMetaRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetChainMetaRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetChainMetaRequest.displayName = 'proto.iotexapi.GetChainMetaRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetChainMetaResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetChainMetaResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetChainMetaResponse.displayName = 'proto.iotexapi.GetChainMetaResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetServerMetaRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetServerMetaRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetServerMetaRequest.displayName = 'proto.iotexapi.GetServerMetaRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetServerMetaResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetServerMetaResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetServerMetaResponse.displayName = 'proto.iotexapi.GetServerMetaResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.SendActionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.SendActionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.SendActionRequest.displayName = 'proto.iotexapi.SendActionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.SendSignedActionBytesRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.SendSignedActionBytesRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.SendSignedActionBytesRequest.displayName = 'proto.iotexapi.SendSignedActionBytesRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.SendActionResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.SendActionResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.SendActionResponse.displayName = 'proto.iotexapi.SendActionResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetReceiptByActionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetReceiptByActionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetReceiptByActionRequest.displayName = 'proto.iotexapi.GetReceiptByActionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetReceiptByActionResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetReceiptByActionResponse.displayName = 'proto.iotexapi.GetReceiptByActionResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadContractRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadContractRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadContractRequest.displayName = 'proto.iotexapi.ReadContractRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadContractResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadContractResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadContractResponse.displayName = 'proto.iotexapi.ReadContractResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.SuggestGasPriceRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.SuggestGasPriceRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.SuggestGasPriceRequest.displayName = 'proto.iotexapi.SuggestGasPriceRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.SuggestGasPriceResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.SuggestGasPriceResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.SuggestGasPriceResponse.displayName = 'proto.iotexapi.SuggestGasPriceResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.EstimateGasForActionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.EstimateGasForActionRequest.displayName = 'proto.iotexapi.EstimateGasForActionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.iotexapi.EstimateActionGasConsumptionRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.EstimateActionGasConsumptionRequest.displayName = 'proto.iotexapi.EstimateActionGasConsumptionRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.EstimateActionGasConsumptionResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.EstimateActionGasConsumptionResponse.displayName = 'proto.iotexapi.EstimateActionGasConsumptionResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.EstimateGasForActionResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.EstimateGasForActionResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.EstimateGasForActionResponse.displayName = 'proto.iotexapi.EstimateGasForActionResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStateRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.ReadStateRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStateRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStateRequest.displayName = 'proto.iotexapi.ReadStateRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStateResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStateResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStateResponse.displayName = 'proto.iotexapi.ReadStateResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetEpochMetaRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetEpochMetaRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetEpochMetaRequest.displayName = 'proto.iotexapi.GetEpochMetaRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetEpochMetaResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetEpochMetaResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetEpochMetaResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetEpochMetaResponse.displayName = 'proto.iotexapi.GetEpochMetaResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetRawBlocksRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetRawBlocksRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetRawBlocksRequest.displayName = 'proto.iotexapi.GetRawBlocksRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetRawBlocksResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetRawBlocksResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetRawBlocksResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetRawBlocksResponse.displayName = 'proto.iotexapi.GetRawBlocksResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetLogsByBlock = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetLogsByBlock, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetLogsByBlock.displayName = 'proto.iotexapi.GetLogsByBlock';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetLogsByRange = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetLogsByRange, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetLogsByRange.displayName = 'proto.iotexapi.GetLogsByRange';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.Topics = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.Topics.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.Topics, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.Topics.displayName = 'proto.iotexapi.Topics';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.LogsFilter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.LogsFilter.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.LogsFilter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.LogsFilter.displayName = 'proto.iotexapi.LogsFilter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetLogsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotexapi.GetLogsRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.iotexapi.GetLogsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetLogsRequest.displayName = 'proto.iotexapi.GetLogsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetLogsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetLogsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetLogsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetLogsResponse.displayName = 'proto.iotexapi.GetLogsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetTransactionLogByActionHashRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetTransactionLogByActionHashRequest.displayName = 'proto.iotexapi.GetTransactionLogByActionHashRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetTransactionLogByActionHashResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetTransactionLogByActionHashResponse.displayName = 'proto.iotexapi.GetTransactionLogByActionHashResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetTransactionLogByBlockHeightRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetTransactionLogByBlockHeightRequest.displayName = 'proto.iotexapi.GetTransactionLogByBlockHeightRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetTransactionLogByBlockHeightResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetTransactionLogByBlockHeightResponse.displayName = 'proto.iotexapi.GetTransactionLogByBlockHeightResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.StreamBlocksRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.StreamBlocksRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.StreamBlocksRequest.displayName = 'proto.iotexapi.StreamBlocksRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.StreamBlocksResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.StreamBlocksResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.StreamBlocksResponse.displayName = 'proto.iotexapi.StreamBlocksResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.StreamLogsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.StreamLogsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.StreamLogsRequest.displayName = 'proto.iotexapi.StreamLogsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.StreamLogsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.StreamLogsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.StreamLogsResponse.displayName = 'proto.iotexapi.StreamLogsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetActPoolActionsRequest.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetActPoolActionsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActPoolActionsRequest.displayName = 'proto.iotexapi.GetActPoolActionsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetActPoolActionsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetActPoolActionsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetActPoolActionsResponse.displayName = 'proto.iotexapi.GetActPoolActionsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetElectionBucketsRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetElectionBucketsRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetElectionBucketsRequest.displayName = 'proto.iotexapi.GetElectionBucketsRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.GetElectionBucketsResponse.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.GetElectionBucketsResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetElectionBucketsResponse.displayName = 'proto.iotexapi.GetElectionBucketsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetEvmTransfersByActionHashRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetEvmTransfersByActionHashRequest.displayName = 'proto.iotexapi.GetEvmTransfersByActionHashRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetEvmTransfersByActionHashResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetEvmTransfersByActionHashResponse.displayName = 'proto.iotexapi.GetEvmTransfersByActionHashResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetEvmTransfersByBlockHeightRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetEvmTransfersByBlockHeightRequest.displayName = 'proto.iotexapi.GetEvmTransfersByBlockHeightRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.GetEvmTransfersByBlockHeightResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.GetEvmTransfersByBlockHeightResponse.displayName = 'proto.iotexapi.GetEvmTransfersByBlockHeightResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.Bucket.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.Bucket.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.Bucket} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.Bucket.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      voter: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      votes: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      weightedvotes: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      remainingduration: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.Bucket}\n */\n\n\nproto.iotexapi.Bucket.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.Bucket();\n  return proto.iotexapi.Bucket.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.Bucket} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.Bucket}\n */\n\n\nproto.iotexapi.Bucket.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVoter(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVotes(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setWeightedvotes(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRemainingduration(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.Bucket.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.Bucket.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.Bucket} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.Bucket.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVoter();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getVotes();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getWeightedvotes();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getRemainingduration();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional string voter = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.Bucket.prototype.getVoter = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.Bucket} returns this\n */\n\n\nproto.iotexapi.Bucket.prototype.setVoter = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string votes = 2;\n * @return {string}\n */\n\n\nproto.iotexapi.Bucket.prototype.getVotes = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.Bucket} returns this\n */\n\n\nproto.iotexapi.Bucket.prototype.setVotes = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string weightedVotes = 3;\n * @return {string}\n */\n\n\nproto.iotexapi.Bucket.prototype.getWeightedvotes = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.Bucket} returns this\n */\n\n\nproto.iotexapi.Bucket.prototype.setWeightedvotes = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string remainingDuration = 4;\n * @return {string}\n */\n\n\nproto.iotexapi.Bucket.prototype.getRemainingduration = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.Bucket} returns this\n */\n\n\nproto.iotexapi.Bucket.prototype.setRemainingduration = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetAccountRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetAccountRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetAccountRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetAccountRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetAccountRequest}\n */\n\n\nproto.iotexapi.GetAccountRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetAccountRequest();\n  return proto.iotexapi.GetAccountRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetAccountRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetAccountRequest}\n */\n\n\nproto.iotexapi.GetAccountRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetAccountRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetAccountRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetAccountRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetAccountRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetAccountRequest.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetAccountRequest} returns this\n */\n\n\nproto.iotexapi.GetAccountRequest.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetAccountResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetAccountResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetAccountResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetAccountResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      accountmeta: (f = msg.getAccountmeta()) && proto_types_blockchain_pb.AccountMeta.toObject(includeInstance, f),\n      blockidentifier: (f = msg.getBlockidentifier()) && proto_types_blockchain_pb.BlockIdentifier.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetAccountResponse}\n */\n\n\nproto.iotexapi.GetAccountResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetAccountResponse();\n  return proto.iotexapi.GetAccountResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetAccountResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetAccountResponse}\n */\n\n\nproto.iotexapi.GetAccountResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_blockchain_pb.AccountMeta();\n        reader.readMessage(value, proto_types_blockchain_pb.AccountMeta.deserializeBinaryFromReader);\n        msg.setAccountmeta(value);\n        break;\n\n      case 2:\n        var value = new proto_types_blockchain_pb.BlockIdentifier();\n        reader.readMessage(value, proto_types_blockchain_pb.BlockIdentifier.deserializeBinaryFromReader);\n        msg.setBlockidentifier(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetAccountResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetAccountResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetAccountResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetAccountResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAccountmeta();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_blockchain_pb.AccountMeta.serializeBinaryToWriter);\n  }\n\n  f = message.getBlockidentifier();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto_types_blockchain_pb.BlockIdentifier.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.AccountMeta accountMeta = 1;\n * @return {?proto.iotextypes.AccountMeta}\n */\n\n\nproto.iotexapi.GetAccountResponse.prototype.getAccountmeta = function () {\n  return (\n    /** @type{?proto.iotextypes.AccountMeta} */\n    jspb.Message.getWrapperField(this, proto_types_blockchain_pb.AccountMeta, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.AccountMeta|undefined} value\n * @return {!proto.iotexapi.GetAccountResponse} returns this\n*/\n\n\nproto.iotexapi.GetAccountResponse.prototype.setAccountmeta = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetAccountResponse} returns this\n */\n\n\nproto.iotexapi.GetAccountResponse.prototype.clearAccountmeta = function () {\n  return this.setAccountmeta(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetAccountResponse.prototype.hasAccountmeta = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional iotextypes.BlockIdentifier blockIdentifier = 2;\n * @return {?proto.iotextypes.BlockIdentifier}\n */\n\n\nproto.iotexapi.GetAccountResponse.prototype.getBlockidentifier = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockIdentifier} */\n    jspb.Message.getWrapperField(this, proto_types_blockchain_pb.BlockIdentifier, 2)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockIdentifier|undefined} value\n * @return {!proto.iotexapi.GetAccountResponse} returns this\n*/\n\n\nproto.iotexapi.GetAccountResponse.prototype.setBlockidentifier = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetAccountResponse} returns this\n */\n\n\nproto.iotexapi.GetAccountResponse.prototype.clearBlockidentifier = function () {\n  return this.setBlockidentifier(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetAccountResponse.prototype.hasBlockidentifier = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.iotexapi.GetActionsRequest.oneofGroups_ = [[1, 2, 3, 4, 5]];\n/**\n * @enum {number}\n */\n\nproto.iotexapi.GetActionsRequest.LookupCase = {\n  LOOKUP_NOT_SET: 0,\n  BYINDEX: 1,\n  BYHASH: 2,\n  BYADDR: 3,\n  UNCONFIRMEDBYADDR: 4,\n  BYBLK: 5\n};\n/**\n * @return {proto.iotexapi.GetActionsRequest.LookupCase}\n */\n\nproto.iotexapi.GetActionsRequest.prototype.getLookupCase = function () {\n  return (\n    /** @type {proto.iotexapi.GetActionsRequest.LookupCase} */\n    jspb.Message.computeOneofCase(this, proto.iotexapi.GetActionsRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActionsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActionsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActionsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActionsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      byindex: (f = msg.getByindex()) && proto.iotexapi.GetActionsByIndexRequest.toObject(includeInstance, f),\n      byhash: (f = msg.getByhash()) && proto.iotexapi.GetActionByHashRequest.toObject(includeInstance, f),\n      byaddr: (f = msg.getByaddr()) && proto.iotexapi.GetActionsByAddressRequest.toObject(includeInstance, f),\n      unconfirmedbyaddr: (f = msg.getUnconfirmedbyaddr()) && proto.iotexapi.GetUnconfirmedActionsByAddressRequest.toObject(includeInstance, f),\n      byblk: (f = msg.getByblk()) && proto.iotexapi.GetActionsByBlockRequest.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActionsRequest}\n */\n\n\nproto.iotexapi.GetActionsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActionsRequest();\n  return proto.iotexapi.GetActionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActionsRequest}\n */\n\n\nproto.iotexapi.GetActionsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.GetActionsByIndexRequest();\n        reader.readMessage(value, proto.iotexapi.GetActionsByIndexRequest.deserializeBinaryFromReader);\n        msg.setByindex(value);\n        break;\n\n      case 2:\n        var value = new proto.iotexapi.GetActionByHashRequest();\n        reader.readMessage(value, proto.iotexapi.GetActionByHashRequest.deserializeBinaryFromReader);\n        msg.setByhash(value);\n        break;\n\n      case 3:\n        var value = new proto.iotexapi.GetActionsByAddressRequest();\n        reader.readMessage(value, proto.iotexapi.GetActionsByAddressRequest.deserializeBinaryFromReader);\n        msg.setByaddr(value);\n        break;\n\n      case 4:\n        var value = new proto.iotexapi.GetUnconfirmedActionsByAddressRequest();\n        reader.readMessage(value, proto.iotexapi.GetUnconfirmedActionsByAddressRequest.deserializeBinaryFromReader);\n        msg.setUnconfirmedbyaddr(value);\n        break;\n\n      case 5:\n        var value = new proto.iotexapi.GetActionsByBlockRequest();\n        reader.readMessage(value, proto.iotexapi.GetActionsByBlockRequest.deserializeBinaryFromReader);\n        msg.setByblk(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActionsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getByindex();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.GetActionsByIndexRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getByhash();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotexapi.GetActionByHashRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getByaddr();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.iotexapi.GetActionsByAddressRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getUnconfirmedbyaddr();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.iotexapi.GetUnconfirmedActionsByAddressRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getByblk();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.iotexapi.GetActionsByBlockRequest.serializeBinaryToWriter);\n  }\n};\n/**\n * optional GetActionsByIndexRequest byIndex = 1;\n * @return {?proto.iotexapi.GetActionsByIndexRequest}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.getByindex = function () {\n  return (\n    /** @type{?proto.iotexapi.GetActionsByIndexRequest} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetActionsByIndexRequest, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetActionsByIndexRequest|undefined} value\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n*/\n\n\nproto.iotexapi.GetActionsRequest.prototype.setByindex = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.iotexapi.GetActionsRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.clearByindex = function () {\n  return this.setByindex(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.hasByindex = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional GetActionByHashRequest byHash = 2;\n * @return {?proto.iotexapi.GetActionByHashRequest}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.getByhash = function () {\n  return (\n    /** @type{?proto.iotexapi.GetActionByHashRequest} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetActionByHashRequest, 2)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetActionByHashRequest|undefined} value\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n*/\n\n\nproto.iotexapi.GetActionsRequest.prototype.setByhash = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.iotexapi.GetActionsRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.clearByhash = function () {\n  return this.setByhash(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.hasByhash = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional GetActionsByAddressRequest byAddr = 3;\n * @return {?proto.iotexapi.GetActionsByAddressRequest}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.getByaddr = function () {\n  return (\n    /** @type{?proto.iotexapi.GetActionsByAddressRequest} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetActionsByAddressRequest, 3)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetActionsByAddressRequest|undefined} value\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n*/\n\n\nproto.iotexapi.GetActionsRequest.prototype.setByaddr = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.iotexapi.GetActionsRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.clearByaddr = function () {\n  return this.setByaddr(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.hasByaddr = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional GetUnconfirmedActionsByAddressRequest unconfirmedByAddr = 4;\n * @return {?proto.iotexapi.GetUnconfirmedActionsByAddressRequest}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.getUnconfirmedbyaddr = function () {\n  return (\n    /** @type{?proto.iotexapi.GetUnconfirmedActionsByAddressRequest} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetUnconfirmedActionsByAddressRequest, 4)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetUnconfirmedActionsByAddressRequest|undefined} value\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n*/\n\n\nproto.iotexapi.GetActionsRequest.prototype.setUnconfirmedbyaddr = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.iotexapi.GetActionsRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.clearUnconfirmedbyaddr = function () {\n  return this.setUnconfirmedbyaddr(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.hasUnconfirmedbyaddr = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional GetActionsByBlockRequest byBlk = 5;\n * @return {?proto.iotexapi.GetActionsByBlockRequest}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.getByblk = function () {\n  return (\n    /** @type{?proto.iotexapi.GetActionsByBlockRequest} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetActionsByBlockRequest, 5)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetActionsByBlockRequest|undefined} value\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n*/\n\n\nproto.iotexapi.GetActionsRequest.prototype.setByblk = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.iotexapi.GetActionsRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.clearByblk = function () {\n  return this.setByblk(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetActionsRequest.prototype.hasByblk = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActionsByIndexRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActionsByIndexRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActionsByIndexRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActionsByIndexRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      start: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      count: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActionsByIndexRequest}\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActionsByIndexRequest();\n  return proto.iotexapi.GetActionsByIndexRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActionsByIndexRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActionsByIndexRequest}\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStart(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActionsByIndexRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActionsByIndexRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStart();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCount();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * optional uint64 start = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.prototype.getStart = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetActionsByIndexRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.prototype.setStart = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 count = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.prototype.getCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetActionsByIndexRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByIndexRequest.prototype.setCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActionByHashRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActionByHashRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActionByHashRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActionByHashRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      checkpending: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActionByHashRequest}\n */\n\n\nproto.iotexapi.GetActionByHashRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActionByHashRequest();\n  return proto.iotexapi.GetActionByHashRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActionByHashRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActionByHashRequest}\n */\n\n\nproto.iotexapi.GetActionByHashRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setActionhash(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setCheckpending(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActionByHashRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActionByHashRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActionByHashRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActionByHashRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCheckpending();\n\n  if (f) {\n    writer.writeBool(2, f);\n  }\n};\n/**\n * optional string actionHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetActionByHashRequest.prototype.getActionhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetActionByHashRequest} returns this\n */\n\n\nproto.iotexapi.GetActionByHashRequest.prototype.setActionhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bool checkPending = 2;\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetActionByHashRequest.prototype.getCheckpending = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 2, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotexapi.GetActionByHashRequest} returns this\n */\n\n\nproto.iotexapi.GetActionByHashRequest.prototype.setCheckpending = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActionsByAddressRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActionsByAddressRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActionsByAddressRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActionsByAddressRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      start: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      count: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActionsByAddressRequest}\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActionsByAddressRequest();\n  return proto.iotexapi.GetActionsByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActionsByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActionsByAddressRequest}\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStart(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActionsByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActionsByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getStart();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getCount();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetActionsByAddressRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 start = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.prototype.getStart = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetActionsByAddressRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.prototype.setStart = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 count = 3;\n * @return {number}\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.prototype.getCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetActionsByAddressRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByAddressRequest.prototype.setCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetUnconfirmedActionsByAddressRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetUnconfirmedActionsByAddressRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      start: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      count: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest}\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetUnconfirmedActionsByAddressRequest();\n  return proto.iotexapi.GetUnconfirmedActionsByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest}\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStart(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetUnconfirmedActionsByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getStart();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getCount();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest} returns this\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 start = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.getStart = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest} returns this\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.setStart = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 count = 3;\n * @return {number}\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.getCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetUnconfirmedActionsByAddressRequest} returns this\n */\n\n\nproto.iotexapi.GetUnconfirmedActionsByAddressRequest.prototype.setCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActionsByBlockRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActionsByBlockRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActionsByBlockRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActionsByBlockRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blkhash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      start: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      count: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActionsByBlockRequest}\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActionsByBlockRequest();\n  return proto.iotexapi.GetActionsByBlockRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActionsByBlockRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActionsByBlockRequest}\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setBlkhash(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStart(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActionsByBlockRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActionsByBlockRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlkhash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getStart();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getCount();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional string blkHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.prototype.getBlkhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetActionsByBlockRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.prototype.setBlkhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 start = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.prototype.getStart = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetActionsByBlockRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.prototype.setStart = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 count = 3;\n * @return {number}\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.prototype.getCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetActionsByBlockRequest} returns this\n */\n\n\nproto.iotexapi.GetActionsByBlockRequest.prototype.setCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ActionInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ActionInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ActionInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ActionInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      action: (f = msg.getAction()) && proto_types_action_pb.Action.toObject(includeInstance, f),\n      acthash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      blkhash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      blkheight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      sender: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      gasfee: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      index: jspb.Message.getFieldWithDefault(msg, 8, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ActionInfo}\n */\n\n\nproto.iotexapi.ActionInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ActionInfo();\n  return proto.iotexapi.ActionInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ActionInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ActionInfo}\n */\n\n\nproto.iotexapi.ActionInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Action();\n        reader.readMessage(value, proto_types_action_pb.Action.deserializeBinaryFromReader);\n        msg.setAction(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setActhash(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setBlkhash(value);\n        break;\n\n      case 4:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setTimestamp(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBlkheight(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSender(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setGasfee(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setIndex(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ActionInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ActionInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ActionInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAction();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.Action.serializeBinaryToWriter);\n  }\n\n  f = message.getActhash();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getBlkhash();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getTimestamp();\n\n  if (f != null) {\n    writer.writeMessage(4, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getBlkheight();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n\n  f = message.getSender();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getGasfee();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getIndex();\n\n  if (f !== 0) {\n    writer.writeUint32(8, f);\n  }\n};\n/**\n * optional iotextypes.Action action = 1;\n * @return {?proto.iotextypes.Action}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getAction = function () {\n  return (\n    /** @type{?proto.iotextypes.Action} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Action, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Action|undefined} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n*/\n\n\nproto.iotexapi.ActionInfo.prototype.setAction = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.clearAction = function () {\n  return this.setAction(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.hasAction = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string actHash = 2;\n * @return {string}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getActhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.setActhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string blkHash = 3;\n * @return {string}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getBlkhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.setBlkhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional google.protobuf.Timestamp timestamp = 4;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getTimestamp = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n*/\n\n\nproto.iotexapi.ActionInfo.prototype.setTimestamp = function (value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.clearTimestamp = function () {\n  return this.setTimestamp(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.hasTimestamp = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint64 blkHeight = 5;\n * @return {number}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getBlkheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.setBlkheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional string sender = 6;\n * @return {string}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getSender = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.setSender = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string gasFee = 7;\n * @return {string}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getGasfee = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.setGasfee = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional uint32 index = 8;\n * @return {number}\n */\n\n\nproto.iotexapi.ActionInfo.prototype.getIndex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.ActionInfo} returns this\n */\n\n\nproto.iotexapi.ActionInfo.prototype.setIndex = function (value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReceiptInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReceiptInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReceiptInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReceiptInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      receipt: (f = msg.getReceipt()) && proto_types_action_pb.Receipt.toObject(includeInstance, f),\n      blkhash: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReceiptInfo}\n */\n\n\nproto.iotexapi.ReceiptInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReceiptInfo();\n  return proto.iotexapi.ReceiptInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReceiptInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReceiptInfo}\n */\n\n\nproto.iotexapi.ReceiptInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Receipt();\n        reader.readMessage(value, proto_types_action_pb.Receipt.deserializeBinaryFromReader);\n        msg.setReceipt(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setBlkhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReceiptInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReceiptInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReceiptInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReceiptInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getReceipt();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.Receipt.serializeBinaryToWriter);\n  }\n\n  f = message.getBlkhash();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional iotextypes.Receipt receipt = 1;\n * @return {?proto.iotextypes.Receipt}\n */\n\n\nproto.iotexapi.ReceiptInfo.prototype.getReceipt = function () {\n  return (\n    /** @type{?proto.iotextypes.Receipt} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Receipt, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Receipt|undefined} value\n * @return {!proto.iotexapi.ReceiptInfo} returns this\n*/\n\n\nproto.iotexapi.ReceiptInfo.prototype.setReceipt = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReceiptInfo} returns this\n */\n\n\nproto.iotexapi.ReceiptInfo.prototype.clearReceipt = function () {\n  return this.setReceipt(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReceiptInfo.prototype.hasReceipt = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string blkHash = 2;\n * @return {string}\n */\n\n\nproto.iotexapi.ReceiptInfo.prototype.getBlkhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReceiptInfo} returns this\n */\n\n\nproto.iotexapi.ReceiptInfo.prototype.setBlkhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.BlockProducerInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.BlockProducerInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.BlockProducerInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.BlockProducerInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      votes: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      active: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      production: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.BlockProducerInfo}\n */\n\n\nproto.iotexapi.BlockProducerInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.BlockProducerInfo();\n  return proto.iotexapi.BlockProducerInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.BlockProducerInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.BlockProducerInfo}\n */\n\n\nproto.iotexapi.BlockProducerInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVotes(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setActive(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setProduction(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.BlockProducerInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.BlockProducerInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.BlockProducerInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getVotes();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getActive();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getProduction();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.BlockProducerInfo} returns this\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string votes = 2;\n * @return {string}\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.getVotes = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.BlockProducerInfo} returns this\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.setVotes = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bool active = 3;\n * @return {boolean}\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.getActive = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotexapi.BlockProducerInfo} returns this\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.setActive = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional uint64 production = 4;\n * @return {number}\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.getProduction = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.BlockProducerInfo} returns this\n */\n\n\nproto.iotexapi.BlockProducerInfo.prototype.setProduction = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.BlockInfo.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.BlockInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.BlockInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.BlockInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.BlockInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      block: (f = msg.getBlock()) && proto_types_blockchain_pb.Block.toObject(includeInstance, f),\n      receiptsList: jspb.Message.toObjectList(msg.getReceiptsList(), proto_types_action_pb.Receipt.toObject, includeInstance),\n      transactionlogs: (f = msg.getTransactionlogs()) && proto_types_transaction_log_pb.TransactionLogs.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.BlockInfo}\n */\n\n\nproto.iotexapi.BlockInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.BlockInfo();\n  return proto.iotexapi.BlockInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.BlockInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.BlockInfo}\n */\n\n\nproto.iotexapi.BlockInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_blockchain_pb.Block();\n        reader.readMessage(value, proto_types_blockchain_pb.Block.deserializeBinaryFromReader);\n        msg.setBlock(value);\n        break;\n\n      case 2:\n        var value = new proto_types_action_pb.Receipt();\n        reader.readMessage(value, proto_types_action_pb.Receipt.deserializeBinaryFromReader);\n        msg.addReceipts(value);\n        break;\n\n      case 3:\n        var value = new proto_types_transaction_log_pb.TransactionLogs();\n        reader.readMessage(value, proto_types_transaction_log_pb.TransactionLogs.deserializeBinaryFromReader);\n        msg.setTransactionlogs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.BlockInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.BlockInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.BlockInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.BlockInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlock();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_blockchain_pb.Block.serializeBinaryToWriter);\n  }\n\n  f = message.getReceiptsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto_types_action_pb.Receipt.serializeBinaryToWriter);\n  }\n\n  f = message.getTransactionlogs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto_types_transaction_log_pb.TransactionLogs.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.Block block = 1;\n * @return {?proto.iotextypes.Block}\n */\n\n\nproto.iotexapi.BlockInfo.prototype.getBlock = function () {\n  return (\n    /** @type{?proto.iotextypes.Block} */\n    jspb.Message.getWrapperField(this, proto_types_blockchain_pb.Block, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Block|undefined} value\n * @return {!proto.iotexapi.BlockInfo} returns this\n*/\n\n\nproto.iotexapi.BlockInfo.prototype.setBlock = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.BlockInfo} returns this\n */\n\n\nproto.iotexapi.BlockInfo.prototype.clearBlock = function () {\n  return this.setBlock(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.BlockInfo.prototype.hasBlock = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated iotextypes.Receipt receipts = 2;\n * @return {!Array<!proto.iotextypes.Receipt>}\n */\n\n\nproto.iotexapi.BlockInfo.prototype.getReceiptsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Receipt>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_action_pb.Receipt, 2)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Receipt>} value\n * @return {!proto.iotexapi.BlockInfo} returns this\n*/\n\n\nproto.iotexapi.BlockInfo.prototype.setReceiptsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.iotextypes.Receipt=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Receipt}\n */\n\n\nproto.iotexapi.BlockInfo.prototype.addReceipts = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iotextypes.Receipt, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.BlockInfo} returns this\n */\n\n\nproto.iotexapi.BlockInfo.prototype.clearReceiptsList = function () {\n  return this.setReceiptsList([]);\n};\n/**\n * optional iotextypes.TransactionLogs transactionLogs = 3;\n * @return {?proto.iotextypes.TransactionLogs}\n */\n\n\nproto.iotexapi.BlockInfo.prototype.getTransactionlogs = function () {\n  return (\n    /** @type{?proto.iotextypes.TransactionLogs} */\n    jspb.Message.getWrapperField(this, proto_types_transaction_log_pb.TransactionLogs, 3)\n  );\n};\n/**\n * @param {?proto.iotextypes.TransactionLogs|undefined} value\n * @return {!proto.iotexapi.BlockInfo} returns this\n*/\n\n\nproto.iotexapi.BlockInfo.prototype.setTransactionlogs = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.BlockInfo} returns this\n */\n\n\nproto.iotexapi.BlockInfo.prototype.clearTransactionlogs = function () {\n  return this.setTransactionlogs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.BlockInfo.prototype.hasTransactionlogs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetActionsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActionsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActionsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActionsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActionsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      total: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      actioninfoList: jspb.Message.toObjectList(msg.getActioninfoList(), proto.iotexapi.ActionInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActionsResponse}\n */\n\n\nproto.iotexapi.GetActionsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActionsResponse();\n  return proto.iotexapi.GetActionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActionsResponse}\n */\n\n\nproto.iotexapi.GetActionsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotal(value);\n        break;\n\n      case 1:\n        var value = new proto.iotexapi.ActionInfo();\n        reader.readMessage(value, proto.iotexapi.ActionInfo.deserializeBinaryFromReader);\n        msg.addActioninfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActionsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActionsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getActioninfoList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.iotexapi.ActionInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional uint64 total = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetActionsResponse.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetActionsResponse} returns this\n */\n\n\nproto.iotexapi.GetActionsResponse.prototype.setTotal = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated ActionInfo actionInfo = 1;\n * @return {!Array<!proto.iotexapi.ActionInfo>}\n */\n\n\nproto.iotexapi.GetActionsResponse.prototype.getActioninfoList = function () {\n  return (\n    /** @type{!Array<!proto.iotexapi.ActionInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotexapi.ActionInfo, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotexapi.ActionInfo>} value\n * @return {!proto.iotexapi.GetActionsResponse} returns this\n*/\n\n\nproto.iotexapi.GetActionsResponse.prototype.setActioninfoList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotexapi.ActionInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.ActionInfo}\n */\n\n\nproto.iotexapi.GetActionsResponse.prototype.addActioninfo = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotexapi.ActionInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetActionsResponse} returns this\n */\n\n\nproto.iotexapi.GetActionsResponse.prototype.clearActioninfoList = function () {\n  return this.setActioninfoList([]);\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.oneofGroups_ = [[1, 2]];\n/**\n * @enum {number}\n */\n\nproto.iotexapi.GetBlockMetasRequest.LookupCase = {\n  LOOKUP_NOT_SET: 0,\n  BYINDEX: 1,\n  BYHASH: 2\n};\n/**\n * @return {proto.iotexapi.GetBlockMetasRequest.LookupCase}\n */\n\nproto.iotexapi.GetBlockMetasRequest.prototype.getLookupCase = function () {\n  return (\n    /** @type {proto.iotexapi.GetBlockMetasRequest.LookupCase} */\n    jspb.Message.computeOneofCase(this, proto.iotexapi.GetBlockMetasRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetBlockMetasRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetBlockMetasRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetBlockMetasRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetBlockMetasRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      byindex: (f = msg.getByindex()) && proto.iotexapi.GetBlockMetasByIndexRequest.toObject(includeInstance, f),\n      byhash: (f = msg.getByhash()) && proto.iotexapi.GetBlockMetaByHashRequest.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetBlockMetasRequest}\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetBlockMetasRequest();\n  return proto.iotexapi.GetBlockMetasRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetBlockMetasRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetBlockMetasRequest}\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.GetBlockMetasByIndexRequest();\n        reader.readMessage(value, proto.iotexapi.GetBlockMetasByIndexRequest.deserializeBinaryFromReader);\n        msg.setByindex(value);\n        break;\n\n      case 2:\n        var value = new proto.iotexapi.GetBlockMetaByHashRequest();\n        reader.readMessage(value, proto.iotexapi.GetBlockMetaByHashRequest.deserializeBinaryFromReader);\n        msg.setByhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetBlockMetasRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetBlockMetasRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getByindex();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.GetBlockMetasByIndexRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getByhash();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotexapi.GetBlockMetaByHashRequest.serializeBinaryToWriter);\n  }\n};\n/**\n * optional GetBlockMetasByIndexRequest byIndex = 1;\n * @return {?proto.iotexapi.GetBlockMetasByIndexRequest}\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.getByindex = function () {\n  return (\n    /** @type{?proto.iotexapi.GetBlockMetasByIndexRequest} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetBlockMetasByIndexRequest, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetBlockMetasByIndexRequest|undefined} value\n * @return {!proto.iotexapi.GetBlockMetasRequest} returns this\n*/\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.setByindex = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.iotexapi.GetBlockMetasRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetBlockMetasRequest} returns this\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.clearByindex = function () {\n  return this.setByindex(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.hasByindex = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional GetBlockMetaByHashRequest byHash = 2;\n * @return {?proto.iotexapi.GetBlockMetaByHashRequest}\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.getByhash = function () {\n  return (\n    /** @type{?proto.iotexapi.GetBlockMetaByHashRequest} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetBlockMetaByHashRequest, 2)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetBlockMetaByHashRequest|undefined} value\n * @return {!proto.iotexapi.GetBlockMetasRequest} returns this\n*/\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.setByhash = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.iotexapi.GetBlockMetasRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetBlockMetasRequest} returns this\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.clearByhash = function () {\n  return this.setByhash(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetBlockMetasRequest.prototype.hasByhash = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetBlockMetasByIndexRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetBlockMetasByIndexRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetBlockMetasByIndexRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetBlockMetasByIndexRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      start: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      count: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetBlockMetasByIndexRequest}\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetBlockMetasByIndexRequest();\n  return proto.iotexapi.GetBlockMetasByIndexRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetBlockMetasByIndexRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetBlockMetasByIndexRequest}\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStart(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetBlockMetasByIndexRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetBlockMetasByIndexRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStart();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCount();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * optional uint64 start = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.prototype.getStart = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetBlockMetasByIndexRequest} returns this\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.prototype.setStart = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 count = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.prototype.getCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetBlockMetasByIndexRequest} returns this\n */\n\n\nproto.iotexapi.GetBlockMetasByIndexRequest.prototype.setCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetBlockMetaByHashRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetBlockMetaByHashRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetBlockMetaByHashRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetBlockMetaByHashRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blkhash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetBlockMetaByHashRequest}\n */\n\n\nproto.iotexapi.GetBlockMetaByHashRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetBlockMetaByHashRequest();\n  return proto.iotexapi.GetBlockMetaByHashRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetBlockMetaByHashRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetBlockMetaByHashRequest}\n */\n\n\nproto.iotexapi.GetBlockMetaByHashRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setBlkhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetBlockMetaByHashRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetBlockMetaByHashRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetBlockMetaByHashRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetBlockMetaByHashRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlkhash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string blkHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetBlockMetaByHashRequest.prototype.getBlkhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetBlockMetaByHashRequest} returns this\n */\n\n\nproto.iotexapi.GetBlockMetaByHashRequest.prototype.setBlkhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetBlockMetasResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetBlockMetasResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetBlockMetasResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetBlockMetasResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      total: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      blkmetasList: jspb.Message.toObjectList(msg.getBlkmetasList(), proto_types_blockchain_pb.BlockMeta.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetBlockMetasResponse}\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetBlockMetasResponse();\n  return proto.iotexapi.GetBlockMetasResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetBlockMetasResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetBlockMetasResponse}\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotal(value);\n        break;\n\n      case 1:\n        var value = new proto_types_blockchain_pb.BlockMeta();\n        reader.readMessage(value, proto_types_blockchain_pb.BlockMeta.deserializeBinaryFromReader);\n        msg.addBlkmetas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetBlockMetasResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetBlockMetasResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getBlkmetasList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto_types_blockchain_pb.BlockMeta.serializeBinaryToWriter);\n  }\n};\n/**\n * optional uint64 total = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetBlockMetasResponse} returns this\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.prototype.setTotal = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated iotextypes.BlockMeta blkMetas = 1;\n * @return {!Array<!proto.iotextypes.BlockMeta>}\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.prototype.getBlkmetasList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.BlockMeta>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_blockchain_pb.BlockMeta, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.BlockMeta>} value\n * @return {!proto.iotexapi.GetBlockMetasResponse} returns this\n*/\n\n\nproto.iotexapi.GetBlockMetasResponse.prototype.setBlkmetasList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.BlockMeta=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.BlockMeta}\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.prototype.addBlkmetas = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.BlockMeta, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetBlockMetasResponse} returns this\n */\n\n\nproto.iotexapi.GetBlockMetasResponse.prototype.clearBlkmetasList = function () {\n  return this.setBlkmetasList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetChainMetaRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetChainMetaRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetChainMetaRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetChainMetaRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetChainMetaRequest}\n */\n\n\nproto.iotexapi.GetChainMetaRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetChainMetaRequest();\n  return proto.iotexapi.GetChainMetaRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetChainMetaRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetChainMetaRequest}\n */\n\n\nproto.iotexapi.GetChainMetaRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetChainMetaRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetChainMetaRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetChainMetaRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetChainMetaRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetChainMetaResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetChainMetaResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetChainMetaResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetChainMetaResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      chainmeta: (f = msg.getChainmeta()) && proto_types_blockchain_pb.ChainMeta.toObject(includeInstance, f),\n      syncstage: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetChainMetaResponse}\n */\n\n\nproto.iotexapi.GetChainMetaResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetChainMetaResponse();\n  return proto.iotexapi.GetChainMetaResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetChainMetaResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetChainMetaResponse}\n */\n\n\nproto.iotexapi.GetChainMetaResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_blockchain_pb.ChainMeta();\n        reader.readMessage(value, proto_types_blockchain_pb.ChainMeta.deserializeBinaryFromReader);\n        msg.setChainmeta(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSyncstage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetChainMetaResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetChainMetaResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetChainMetaResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetChainMetaResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getChainmeta();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_blockchain_pb.ChainMeta.serializeBinaryToWriter);\n  }\n\n  f = message.getSyncstage();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional iotextypes.ChainMeta chainMeta = 1;\n * @return {?proto.iotextypes.ChainMeta}\n */\n\n\nproto.iotexapi.GetChainMetaResponse.prototype.getChainmeta = function () {\n  return (\n    /** @type{?proto.iotextypes.ChainMeta} */\n    jspb.Message.getWrapperField(this, proto_types_blockchain_pb.ChainMeta, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.ChainMeta|undefined} value\n * @return {!proto.iotexapi.GetChainMetaResponse} returns this\n*/\n\n\nproto.iotexapi.GetChainMetaResponse.prototype.setChainmeta = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetChainMetaResponse} returns this\n */\n\n\nproto.iotexapi.GetChainMetaResponse.prototype.clearChainmeta = function () {\n  return this.setChainmeta(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetChainMetaResponse.prototype.hasChainmeta = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string syncStage = 2;\n * @return {string}\n */\n\n\nproto.iotexapi.GetChainMetaResponse.prototype.getSyncstage = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetChainMetaResponse} returns this\n */\n\n\nproto.iotexapi.GetChainMetaResponse.prototype.setSyncstage = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetServerMetaRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetServerMetaRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetServerMetaRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetServerMetaRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetServerMetaRequest}\n */\n\n\nproto.iotexapi.GetServerMetaRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetServerMetaRequest();\n  return proto.iotexapi.GetServerMetaRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetServerMetaRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetServerMetaRequest}\n */\n\n\nproto.iotexapi.GetServerMetaRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetServerMetaRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetServerMetaRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetServerMetaRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetServerMetaRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetServerMetaResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetServerMetaResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetServerMetaResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetServerMetaResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      servermeta: (f = msg.getServermeta()) && proto_types_node_pb.ServerMeta.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetServerMetaResponse}\n */\n\n\nproto.iotexapi.GetServerMetaResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetServerMetaResponse();\n  return proto.iotexapi.GetServerMetaResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetServerMetaResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetServerMetaResponse}\n */\n\n\nproto.iotexapi.GetServerMetaResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_node_pb.ServerMeta();\n        reader.readMessage(value, proto_types_node_pb.ServerMeta.deserializeBinaryFromReader);\n        msg.setServermeta(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetServerMetaResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetServerMetaResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetServerMetaResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetServerMetaResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getServermeta();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_node_pb.ServerMeta.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.ServerMeta serverMeta = 1;\n * @return {?proto.iotextypes.ServerMeta}\n */\n\n\nproto.iotexapi.GetServerMetaResponse.prototype.getServermeta = function () {\n  return (\n    /** @type{?proto.iotextypes.ServerMeta} */\n    jspb.Message.getWrapperField(this, proto_types_node_pb.ServerMeta, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.ServerMeta|undefined} value\n * @return {!proto.iotexapi.GetServerMetaResponse} returns this\n*/\n\n\nproto.iotexapi.GetServerMetaResponse.prototype.setServermeta = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetServerMetaResponse} returns this\n */\n\n\nproto.iotexapi.GetServerMetaResponse.prototype.clearServermeta = function () {\n  return this.setServermeta(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetServerMetaResponse.prototype.hasServermeta = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.SendActionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.SendActionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.SendActionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.SendActionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      action: (f = msg.getAction()) && proto_types_action_pb.Action.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.SendActionRequest}\n */\n\n\nproto.iotexapi.SendActionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.SendActionRequest();\n  return proto.iotexapi.SendActionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.SendActionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.SendActionRequest}\n */\n\n\nproto.iotexapi.SendActionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Action();\n        reader.readMessage(value, proto_types_action_pb.Action.deserializeBinaryFromReader);\n        msg.setAction(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.SendActionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.SendActionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.SendActionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.SendActionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAction();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.Action.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.Action action = 1;\n * @return {?proto.iotextypes.Action}\n */\n\n\nproto.iotexapi.SendActionRequest.prototype.getAction = function () {\n  return (\n    /** @type{?proto.iotextypes.Action} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Action, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Action|undefined} value\n * @return {!proto.iotexapi.SendActionRequest} returns this\n*/\n\n\nproto.iotexapi.SendActionRequest.prototype.setAction = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.SendActionRequest} returns this\n */\n\n\nproto.iotexapi.SendActionRequest.prototype.clearAction = function () {\n  return this.setAction(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.SendActionRequest.prototype.hasAction = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.SendSignedActionBytesRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.SendSignedActionBytesRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.SendSignedActionBytesRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.SendSignedActionBytesRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      signedactionbytes: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.SendSignedActionBytesRequest}\n */\n\n\nproto.iotexapi.SendSignedActionBytesRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.SendSignedActionBytesRequest();\n  return proto.iotexapi.SendSignedActionBytesRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.SendSignedActionBytesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.SendSignedActionBytesRequest}\n */\n\n\nproto.iotexapi.SendSignedActionBytesRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSignedactionbytes(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.SendSignedActionBytesRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.SendSignedActionBytesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.SendSignedActionBytesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.SendSignedActionBytesRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSignedactionbytes();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string signedActionBytes = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.SendSignedActionBytesRequest.prototype.getSignedactionbytes = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.SendSignedActionBytesRequest} returns this\n */\n\n\nproto.iotexapi.SendSignedActionBytesRequest.prototype.setSignedactionbytes = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.SendActionResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.SendActionResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.SendActionResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.SendActionResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.SendActionResponse}\n */\n\n\nproto.iotexapi.SendActionResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.SendActionResponse();\n  return proto.iotexapi.SendActionResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.SendActionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.SendActionResponse}\n */\n\n\nproto.iotexapi.SendActionResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setActionhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.SendActionResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.SendActionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.SendActionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.SendActionResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string actionHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.SendActionResponse.prototype.getActionhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.SendActionResponse} returns this\n */\n\n\nproto.iotexapi.SendActionResponse.prototype.setActionhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetReceiptByActionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetReceiptByActionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetReceiptByActionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetReceiptByActionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetReceiptByActionRequest}\n */\n\n\nproto.iotexapi.GetReceiptByActionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetReceiptByActionRequest();\n  return proto.iotexapi.GetReceiptByActionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetReceiptByActionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetReceiptByActionRequest}\n */\n\n\nproto.iotexapi.GetReceiptByActionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setActionhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetReceiptByActionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetReceiptByActionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetReceiptByActionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetReceiptByActionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string actionHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetReceiptByActionRequest.prototype.getActionhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetReceiptByActionRequest} returns this\n */\n\n\nproto.iotexapi.GetReceiptByActionRequest.prototype.setActionhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetReceiptByActionResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetReceiptByActionResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetReceiptByActionResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetReceiptByActionResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      receiptinfo: (f = msg.getReceiptinfo()) && proto.iotexapi.ReceiptInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetReceiptByActionResponse}\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetReceiptByActionResponse();\n  return proto.iotexapi.GetReceiptByActionResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetReceiptByActionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetReceiptByActionResponse}\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.ReceiptInfo();\n        reader.readMessage(value, proto.iotexapi.ReceiptInfo.deserializeBinaryFromReader);\n        msg.setReceiptinfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetReceiptByActionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetReceiptByActionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getReceiptinfo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.ReceiptInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional ReceiptInfo receiptInfo = 1;\n * @return {?proto.iotexapi.ReceiptInfo}\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse.prototype.getReceiptinfo = function () {\n  return (\n    /** @type{?proto.iotexapi.ReceiptInfo} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReceiptInfo, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReceiptInfo|undefined} value\n * @return {!proto.iotexapi.GetReceiptByActionResponse} returns this\n*/\n\n\nproto.iotexapi.GetReceiptByActionResponse.prototype.setReceiptinfo = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetReceiptByActionResponse} returns this\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse.prototype.clearReceiptinfo = function () {\n  return this.setReceiptinfo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetReceiptByActionResponse.prototype.hasReceiptinfo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadContractRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadContractRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadContractRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadContractRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      execution: (f = msg.getExecution()) && proto_types_action_pb.Execution.toObject(includeInstance, f),\n      calleraddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadContractRequest}\n */\n\n\nproto.iotexapi.ReadContractRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadContractRequest();\n  return proto.iotexapi.ReadContractRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadContractRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadContractRequest}\n */\n\n\nproto.iotexapi.ReadContractRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Execution();\n        reader.readMessage(value, proto_types_action_pb.Execution.deserializeBinaryFromReader);\n        msg.setExecution(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCalleraddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadContractRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadContractRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadContractRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadContractRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getExecution();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.Execution.serializeBinaryToWriter);\n  }\n\n  f = message.getCalleraddress();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional iotextypes.Execution execution = 1;\n * @return {?proto.iotextypes.Execution}\n */\n\n\nproto.iotexapi.ReadContractRequest.prototype.getExecution = function () {\n  return (\n    /** @type{?proto.iotextypes.Execution} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Execution, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Execution|undefined} value\n * @return {!proto.iotexapi.ReadContractRequest} returns this\n*/\n\n\nproto.iotexapi.ReadContractRequest.prototype.setExecution = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadContractRequest} returns this\n */\n\n\nproto.iotexapi.ReadContractRequest.prototype.clearExecution = function () {\n  return this.setExecution(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadContractRequest.prototype.hasExecution = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string callerAddress = 2;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadContractRequest.prototype.getCalleraddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReadContractRequest} returns this\n */\n\n\nproto.iotexapi.ReadContractRequest.prototype.setCalleraddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadContractResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadContractResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadContractResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadContractResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      data: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      receipt: (f = msg.getReceipt()) && proto_types_action_pb.Receipt.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadContractResponse}\n */\n\n\nproto.iotexapi.ReadContractResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadContractResponse();\n  return proto.iotexapi.ReadContractResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadContractResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadContractResponse}\n */\n\n\nproto.iotexapi.ReadContractResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setData(value);\n        break;\n\n      case 2:\n        var value = new proto_types_action_pb.Receipt();\n        reader.readMessage(value, proto_types_action_pb.Receipt.deserializeBinaryFromReader);\n        msg.setReceipt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadContractResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadContractResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadContractResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadContractResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getData();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getReceipt();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto_types_action_pb.Receipt.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string data = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadContractResponse.prototype.getData = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReadContractResponse} returns this\n */\n\n\nproto.iotexapi.ReadContractResponse.prototype.setData = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional iotextypes.Receipt receipt = 2;\n * @return {?proto.iotextypes.Receipt}\n */\n\n\nproto.iotexapi.ReadContractResponse.prototype.getReceipt = function () {\n  return (\n    /** @type{?proto.iotextypes.Receipt} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Receipt, 2)\n  );\n};\n/**\n * @param {?proto.iotextypes.Receipt|undefined} value\n * @return {!proto.iotexapi.ReadContractResponse} returns this\n*/\n\n\nproto.iotexapi.ReadContractResponse.prototype.setReceipt = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadContractResponse} returns this\n */\n\n\nproto.iotexapi.ReadContractResponse.prototype.clearReceipt = function () {\n  return this.setReceipt(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadContractResponse.prototype.hasReceipt = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.SuggestGasPriceRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.SuggestGasPriceRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.SuggestGasPriceRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.SuggestGasPriceRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.SuggestGasPriceRequest}\n */\n\n\nproto.iotexapi.SuggestGasPriceRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.SuggestGasPriceRequest();\n  return proto.iotexapi.SuggestGasPriceRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.SuggestGasPriceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.SuggestGasPriceRequest}\n */\n\n\nproto.iotexapi.SuggestGasPriceRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.SuggestGasPriceRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.SuggestGasPriceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.SuggestGasPriceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.SuggestGasPriceRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.SuggestGasPriceResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.SuggestGasPriceResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.SuggestGasPriceResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.SuggestGasPriceResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      gasprice: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.SuggestGasPriceResponse}\n */\n\n\nproto.iotexapi.SuggestGasPriceResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.SuggestGasPriceResponse();\n  return proto.iotexapi.SuggestGasPriceResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.SuggestGasPriceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.SuggestGasPriceResponse}\n */\n\n\nproto.iotexapi.SuggestGasPriceResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGasprice(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.SuggestGasPriceResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.SuggestGasPriceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.SuggestGasPriceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.SuggestGasPriceResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getGasprice();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 gasPrice = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.SuggestGasPriceResponse.prototype.getGasprice = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.SuggestGasPriceResponse} returns this\n */\n\n\nproto.iotexapi.SuggestGasPriceResponse.prototype.setGasprice = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.EstimateGasForActionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.EstimateGasForActionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.EstimateGasForActionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.EstimateGasForActionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      action: (f = msg.getAction()) && proto_types_action_pb.Action.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.EstimateGasForActionRequest}\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.EstimateGasForActionRequest();\n  return proto.iotexapi.EstimateGasForActionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.EstimateGasForActionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.EstimateGasForActionRequest}\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Action();\n        reader.readMessage(value, proto_types_action_pb.Action.deserializeBinaryFromReader);\n        msg.setAction(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.EstimateGasForActionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.EstimateGasForActionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAction();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.Action.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.Action action = 1;\n * @return {?proto.iotextypes.Action}\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest.prototype.getAction = function () {\n  return (\n    /** @type{?proto.iotextypes.Action} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Action, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Action|undefined} value\n * @return {!proto.iotexapi.EstimateGasForActionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateGasForActionRequest.prototype.setAction = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateGasForActionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest.prototype.clearAction = function () {\n  return this.setAction(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateGasForActionRequest.prototype.hasAction = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_ = [[1, 2, 40, 41, 42, 43, 44, 45, 46, 47, 48]];\n/**\n * @enum {number}\n */\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.ActionCase = {\n  ACTION_NOT_SET: 0,\n  TRANSFER: 1,\n  EXECUTION: 2,\n  STAKECREATE: 40,\n  STAKEUNSTAKE: 41,\n  STAKEWITHDRAW: 42,\n  STAKEADDDEPOSIT: 43,\n  STAKERESTAKE: 44,\n  STAKECHANGECANDIDATE: 45,\n  STAKETRANSFEROWNERSHIP: 46,\n  CANDIDATEREGISTER: 47,\n  CANDIDATEUPDATE: 48\n};\n/**\n * @return {proto.iotexapi.EstimateActionGasConsumptionRequest.ActionCase}\n */\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getActionCase = function () {\n  return (\n    /** @type {proto.iotexapi.EstimateActionGasConsumptionRequest.ActionCase} */\n    jspb.Message.computeOneofCase(this, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.EstimateActionGasConsumptionRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.EstimateActionGasConsumptionRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.EstimateActionGasConsumptionRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.EstimateActionGasConsumptionRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      transfer: (f = msg.getTransfer()) && proto_types_action_pb.Transfer.toObject(includeInstance, f),\n      execution: (f = msg.getExecution()) && proto_types_action_pb.Execution.toObject(includeInstance, f),\n      stakecreate: (f = msg.getStakecreate()) && proto_types_action_pb.StakeCreate.toObject(includeInstance, f),\n      stakeunstake: (f = msg.getStakeunstake()) && proto_types_action_pb.StakeReclaim.toObject(includeInstance, f),\n      stakewithdraw: (f = msg.getStakewithdraw()) && proto_types_action_pb.StakeReclaim.toObject(includeInstance, f),\n      stakeadddeposit: (f = msg.getStakeadddeposit()) && proto_types_action_pb.StakeAddDeposit.toObject(includeInstance, f),\n      stakerestake: (f = msg.getStakerestake()) && proto_types_action_pb.StakeRestake.toObject(includeInstance, f),\n      stakechangecandidate: (f = msg.getStakechangecandidate()) && proto_types_action_pb.StakeChangeCandidate.toObject(includeInstance, f),\n      staketransferownership: (f = msg.getStaketransferownership()) && proto_types_action_pb.StakeTransferOwnership.toObject(includeInstance, f),\n      candidateregister: (f = msg.getCandidateregister()) && proto_types_action_pb.CandidateRegister.toObject(includeInstance, f),\n      candidateupdate: (f = msg.getCandidateupdate()) && proto_types_action_pb.CandidateBasicInfo.toObject(includeInstance, f),\n      calleraddress: jspb.Message.getFieldWithDefault(msg, 100, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.EstimateActionGasConsumptionRequest();\n  return proto.iotexapi.EstimateActionGasConsumptionRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.EstimateActionGasConsumptionRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Transfer();\n        reader.readMessage(value, proto_types_action_pb.Transfer.deserializeBinaryFromReader);\n        msg.setTransfer(value);\n        break;\n\n      case 2:\n        var value = new proto_types_action_pb.Execution();\n        reader.readMessage(value, proto_types_action_pb.Execution.deserializeBinaryFromReader);\n        msg.setExecution(value);\n        break;\n\n      case 40:\n        var value = new proto_types_action_pb.StakeCreate();\n        reader.readMessage(value, proto_types_action_pb.StakeCreate.deserializeBinaryFromReader);\n        msg.setStakecreate(value);\n        break;\n\n      case 41:\n        var value = new proto_types_action_pb.StakeReclaim();\n        reader.readMessage(value, proto_types_action_pb.StakeReclaim.deserializeBinaryFromReader);\n        msg.setStakeunstake(value);\n        break;\n\n      case 42:\n        var value = new proto_types_action_pb.StakeReclaim();\n        reader.readMessage(value, proto_types_action_pb.StakeReclaim.deserializeBinaryFromReader);\n        msg.setStakewithdraw(value);\n        break;\n\n      case 43:\n        var value = new proto_types_action_pb.StakeAddDeposit();\n        reader.readMessage(value, proto_types_action_pb.StakeAddDeposit.deserializeBinaryFromReader);\n        msg.setStakeadddeposit(value);\n        break;\n\n      case 44:\n        var value = new proto_types_action_pb.StakeRestake();\n        reader.readMessage(value, proto_types_action_pb.StakeRestake.deserializeBinaryFromReader);\n        msg.setStakerestake(value);\n        break;\n\n      case 45:\n        var value = new proto_types_action_pb.StakeChangeCandidate();\n        reader.readMessage(value, proto_types_action_pb.StakeChangeCandidate.deserializeBinaryFromReader);\n        msg.setStakechangecandidate(value);\n        break;\n\n      case 46:\n        var value = new proto_types_action_pb.StakeTransferOwnership();\n        reader.readMessage(value, proto_types_action_pb.StakeTransferOwnership.deserializeBinaryFromReader);\n        msg.setStaketransferownership(value);\n        break;\n\n      case 47:\n        var value = new proto_types_action_pb.CandidateRegister();\n        reader.readMessage(value, proto_types_action_pb.CandidateRegister.deserializeBinaryFromReader);\n        msg.setCandidateregister(value);\n        break;\n\n      case 48:\n        var value = new proto_types_action_pb.CandidateBasicInfo();\n        reader.readMessage(value, proto_types_action_pb.CandidateBasicInfo.deserializeBinaryFromReader);\n        msg.setCandidateupdate(value);\n        break;\n\n      case 100:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCalleraddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.EstimateActionGasConsumptionRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.EstimateActionGasConsumptionRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTransfer();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.Transfer.serializeBinaryToWriter);\n  }\n\n  f = message.getExecution();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto_types_action_pb.Execution.serializeBinaryToWriter);\n  }\n\n  f = message.getStakecreate();\n\n  if (f != null) {\n    writer.writeMessage(40, f, proto_types_action_pb.StakeCreate.serializeBinaryToWriter);\n  }\n\n  f = message.getStakeunstake();\n\n  if (f != null) {\n    writer.writeMessage(41, f, proto_types_action_pb.StakeReclaim.serializeBinaryToWriter);\n  }\n\n  f = message.getStakewithdraw();\n\n  if (f != null) {\n    writer.writeMessage(42, f, proto_types_action_pb.StakeReclaim.serializeBinaryToWriter);\n  }\n\n  f = message.getStakeadddeposit();\n\n  if (f != null) {\n    writer.writeMessage(43, f, proto_types_action_pb.StakeAddDeposit.serializeBinaryToWriter);\n  }\n\n  f = message.getStakerestake();\n\n  if (f != null) {\n    writer.writeMessage(44, f, proto_types_action_pb.StakeRestake.serializeBinaryToWriter);\n  }\n\n  f = message.getStakechangecandidate();\n\n  if (f != null) {\n    writer.writeMessage(45, f, proto_types_action_pb.StakeChangeCandidate.serializeBinaryToWriter);\n  }\n\n  f = message.getStaketransferownership();\n\n  if (f != null) {\n    writer.writeMessage(46, f, proto_types_action_pb.StakeTransferOwnership.serializeBinaryToWriter);\n  }\n\n  f = message.getCandidateregister();\n\n  if (f != null) {\n    writer.writeMessage(47, f, proto_types_action_pb.CandidateRegister.serializeBinaryToWriter);\n  }\n\n  f = message.getCandidateupdate();\n\n  if (f != null) {\n    writer.writeMessage(48, f, proto_types_action_pb.CandidateBasicInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getCalleraddress();\n\n  if (f.length > 0) {\n    writer.writeString(100, f);\n  }\n};\n/**\n * optional iotextypes.Transfer transfer = 1;\n * @return {?proto.iotextypes.Transfer}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getTransfer = function () {\n  return (\n    /** @type{?proto.iotextypes.Transfer} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Transfer, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Transfer|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setTransfer = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearTransfer = function () {\n  return this.setTransfer(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasTransfer = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional iotextypes.Execution execution = 2;\n * @return {?proto.iotextypes.Execution}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getExecution = function () {\n  return (\n    /** @type{?proto.iotextypes.Execution} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Execution, 2)\n  );\n};\n/**\n * @param {?proto.iotextypes.Execution|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setExecution = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearExecution = function () {\n  return this.setExecution(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasExecution = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional iotextypes.StakeCreate stakeCreate = 40;\n * @return {?proto.iotextypes.StakeCreate}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getStakecreate = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeCreate} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.StakeCreate, 40)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeCreate|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setStakecreate = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 40, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearStakecreate = function () {\n  return this.setStakecreate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasStakecreate = function () {\n  return jspb.Message.getField(this, 40) != null;\n};\n/**\n * optional iotextypes.StakeReclaim stakeUnstake = 41;\n * @return {?proto.iotextypes.StakeReclaim}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getStakeunstake = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeReclaim} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.StakeReclaim, 41)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeReclaim|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setStakeunstake = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 41, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearStakeunstake = function () {\n  return this.setStakeunstake(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasStakeunstake = function () {\n  return jspb.Message.getField(this, 41) != null;\n};\n/**\n * optional iotextypes.StakeReclaim stakeWithdraw = 42;\n * @return {?proto.iotextypes.StakeReclaim}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getStakewithdraw = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeReclaim} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.StakeReclaim, 42)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeReclaim|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setStakewithdraw = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 42, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearStakewithdraw = function () {\n  return this.setStakewithdraw(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasStakewithdraw = function () {\n  return jspb.Message.getField(this, 42) != null;\n};\n/**\n * optional iotextypes.StakeAddDeposit stakeAddDeposit = 43;\n * @return {?proto.iotextypes.StakeAddDeposit}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getStakeadddeposit = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeAddDeposit} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.StakeAddDeposit, 43)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeAddDeposit|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setStakeadddeposit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 43, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearStakeadddeposit = function () {\n  return this.setStakeadddeposit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasStakeadddeposit = function () {\n  return jspb.Message.getField(this, 43) != null;\n};\n/**\n * optional iotextypes.StakeRestake stakeRestake = 44;\n * @return {?proto.iotextypes.StakeRestake}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getStakerestake = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeRestake} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.StakeRestake, 44)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeRestake|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setStakerestake = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 44, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearStakerestake = function () {\n  return this.setStakerestake(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasStakerestake = function () {\n  return jspb.Message.getField(this, 44) != null;\n};\n/**\n * optional iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;\n * @return {?proto.iotextypes.StakeChangeCandidate}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getStakechangecandidate = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeChangeCandidate} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.StakeChangeCandidate, 45)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeChangeCandidate|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setStakechangecandidate = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 45, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearStakechangecandidate = function () {\n  return this.setStakechangecandidate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasStakechangecandidate = function () {\n  return jspb.Message.getField(this, 45) != null;\n};\n/**\n * optional iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;\n * @return {?proto.iotextypes.StakeTransferOwnership}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getStaketransferownership = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeTransferOwnership} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.StakeTransferOwnership, 46)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeTransferOwnership|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setStaketransferownership = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 46, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearStaketransferownership = function () {\n  return this.setStaketransferownership(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasStaketransferownership = function () {\n  return jspb.Message.getField(this, 46) != null;\n};\n/**\n * optional iotextypes.CandidateRegister candidateRegister = 47;\n * @return {?proto.iotextypes.CandidateRegister}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getCandidateregister = function () {\n  return (\n    /** @type{?proto.iotextypes.CandidateRegister} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.CandidateRegister, 47)\n  );\n};\n/**\n * @param {?proto.iotextypes.CandidateRegister|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setCandidateregister = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 47, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearCandidateregister = function () {\n  return this.setCandidateregister(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasCandidateregister = function () {\n  return jspb.Message.getField(this, 47) != null;\n};\n/**\n * optional iotextypes.CandidateBasicInfo candidateUpdate = 48;\n * @return {?proto.iotextypes.CandidateBasicInfo}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getCandidateupdate = function () {\n  return (\n    /** @type{?proto.iotextypes.CandidateBasicInfo} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.CandidateBasicInfo, 48)\n  );\n};\n/**\n * @param {?proto.iotextypes.CandidateBasicInfo|undefined} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n*/\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setCandidateupdate = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 48, proto.iotexapi.EstimateActionGasConsumptionRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.clearCandidateupdate = function () {\n  return this.setCandidateupdate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.hasCandidateupdate = function () {\n  return jspb.Message.getField(this, 48) != null;\n};\n/**\n * optional string callerAddress = 100;\n * @return {string}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.getCalleraddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 100, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionRequest} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionRequest.prototype.setCalleraddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 100, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.EstimateActionGasConsumptionResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.EstimateActionGasConsumptionResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.EstimateActionGasConsumptionResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.EstimateActionGasConsumptionResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      gas: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionResponse}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.EstimateActionGasConsumptionResponse();\n  return proto.iotexapi.EstimateActionGasConsumptionResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.EstimateActionGasConsumptionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.EstimateActionGasConsumptionResponse}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.EstimateActionGasConsumptionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.EstimateActionGasConsumptionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getGas();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 gas = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionResponse.prototype.getGas = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.EstimateActionGasConsumptionResponse} returns this\n */\n\n\nproto.iotexapi.EstimateActionGasConsumptionResponse.prototype.setGas = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.EstimateGasForActionResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.EstimateGasForActionResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.EstimateGasForActionResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.EstimateGasForActionResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      gas: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.EstimateGasForActionResponse}\n */\n\n\nproto.iotexapi.EstimateGasForActionResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.EstimateGasForActionResponse();\n  return proto.iotexapi.EstimateGasForActionResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.EstimateGasForActionResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.EstimateGasForActionResponse}\n */\n\n\nproto.iotexapi.EstimateGasForActionResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.EstimateGasForActionResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.EstimateGasForActionResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.EstimateGasForActionResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.EstimateGasForActionResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getGas();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 gas = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.EstimateGasForActionResponse.prototype.getGas = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.EstimateGasForActionResponse} returns this\n */\n\n\nproto.iotexapi.EstimateGasForActionResponse.prototype.setGas = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.ReadStateRequest.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStateRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStateRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStateRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStateRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      protocolid: msg.getProtocolid_asB64(),\n      methodname: msg.getMethodname_asB64(),\n      argumentsList: msg.getArgumentsList_asB64(),\n      height: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStateRequest}\n */\n\n\nproto.iotexapi.ReadStateRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStateRequest();\n  return proto.iotexapi.ReadStateRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStateRequest}\n */\n\n\nproto.iotexapi.ReadStateRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setProtocolid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setMethodname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addArguments(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHeight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStateRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getProtocolid_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getMethodname_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getArgumentsList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(3, f);\n  }\n\n  f = message.getHeight();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional bytes protocolID = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getProtocolid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes protocolID = 1;\n * This is a type-conversion wrapper around `getProtocolid()`\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getProtocolid_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getProtocolid())\n  );\n};\n/**\n * optional bytes protocolID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProtocolid()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getProtocolid_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getProtocolid())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotexapi.ReadStateRequest} returns this\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.setProtocolid = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional bytes methodName = 2;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getMethodname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes methodName = 2;\n * This is a type-conversion wrapper around `getMethodname()`\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getMethodname_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getMethodname())\n  );\n};\n/**\n * optional bytes methodName = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMethodname()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getMethodname_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getMethodname())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotexapi.ReadStateRequest} returns this\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.setMethodname = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * repeated bytes arguments = 3;\n * @return {!Array<string>}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getArgumentsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 3)\n  );\n};\n/**\n * repeated bytes arguments = 3;\n * This is a type-conversion wrapper around `getArgumentsList()`\n * @return {!Array<string>}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getArgumentsList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getArgumentsList())\n  );\n};\n/**\n * repeated bytes arguments = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getArgumentsList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getArgumentsList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getArgumentsList())\n  );\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.iotexapi.ReadStateRequest} returns this\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.setArgumentsList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.ReadStateRequest} returns this\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.addArguments = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.ReadStateRequest} returns this\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.clearArgumentsList = function () {\n  return this.setArgumentsList([]);\n};\n/**\n * optional string height = 4;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.getHeight = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReadStateRequest} returns this\n */\n\n\nproto.iotexapi.ReadStateRequest.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStateResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStateResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStateResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStateResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      data: msg.getData_asB64(),\n      blockidentifier: (f = msg.getBlockidentifier()) && proto_types_blockchain_pb.BlockIdentifier.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStateResponse}\n */\n\n\nproto.iotexapi.ReadStateResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStateResponse();\n  return proto.iotexapi.ReadStateResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStateResponse}\n */\n\n\nproto.iotexapi.ReadStateResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setData(value);\n        break;\n\n      case 2:\n        var value = new proto_types_blockchain_pb.BlockIdentifier();\n        reader.readMessage(value, proto_types_blockchain_pb.BlockIdentifier.deserializeBinaryFromReader);\n        msg.setBlockidentifier(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStateResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getData_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getBlockidentifier();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto_types_blockchain_pb.BlockIdentifier.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bytes data = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.getData = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes data = 1;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.getData_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getData())\n  );\n};\n/**\n * optional bytes data = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.getData_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getData())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotexapi.ReadStateResponse} returns this\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.setData = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional iotextypes.BlockIdentifier blockIdentifier = 2;\n * @return {?proto.iotextypes.BlockIdentifier}\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.getBlockidentifier = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockIdentifier} */\n    jspb.Message.getWrapperField(this, proto_types_blockchain_pb.BlockIdentifier, 2)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockIdentifier|undefined} value\n * @return {!proto.iotexapi.ReadStateResponse} returns this\n*/\n\n\nproto.iotexapi.ReadStateResponse.prototype.setBlockidentifier = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStateResponse} returns this\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.clearBlockidentifier = function () {\n  return this.setBlockidentifier(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStateResponse.prototype.hasBlockidentifier = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetEpochMetaRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetEpochMetaRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetEpochMetaRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetEpochMetaRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      epochnumber: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetEpochMetaRequest}\n */\n\n\nproto.iotexapi.GetEpochMetaRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetEpochMetaRequest();\n  return proto.iotexapi.GetEpochMetaRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetEpochMetaRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetEpochMetaRequest}\n */\n\n\nproto.iotexapi.GetEpochMetaRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setEpochnumber(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetEpochMetaRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetEpochMetaRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetEpochMetaRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetEpochMetaRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEpochnumber();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 epochNumber = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetEpochMetaRequest.prototype.getEpochnumber = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetEpochMetaRequest} returns this\n */\n\n\nproto.iotexapi.GetEpochMetaRequest.prototype.setEpochnumber = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetEpochMetaResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetEpochMetaResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetEpochMetaResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetEpochMetaResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      epochdata: (f = msg.getEpochdata()) && proto_types_blockchain_pb.EpochData.toObject(includeInstance, f),\n      totalblocks: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      blockproducersinfoList: jspb.Message.toObjectList(msg.getBlockproducersinfoList(), proto.iotexapi.BlockProducerInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetEpochMetaResponse}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetEpochMetaResponse();\n  return proto.iotexapi.GetEpochMetaResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetEpochMetaResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetEpochMetaResponse}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_blockchain_pb.EpochData();\n        reader.readMessage(value, proto_types_blockchain_pb.EpochData.deserializeBinaryFromReader);\n        msg.setEpochdata(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotalblocks(value);\n        break;\n\n      case 3:\n        var value = new proto.iotexapi.BlockProducerInfo();\n        reader.readMessage(value, proto.iotexapi.BlockProducerInfo.deserializeBinaryFromReader);\n        msg.addBlockproducersinfo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetEpochMetaResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetEpochMetaResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEpochdata();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_blockchain_pb.EpochData.serializeBinaryToWriter);\n  }\n\n  f = message.getTotalblocks();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getBlockproducersinfoList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.iotexapi.BlockProducerInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.EpochData epochData = 1;\n * @return {?proto.iotextypes.EpochData}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.getEpochdata = function () {\n  return (\n    /** @type{?proto.iotextypes.EpochData} */\n    jspb.Message.getWrapperField(this, proto_types_blockchain_pb.EpochData, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.EpochData|undefined} value\n * @return {!proto.iotexapi.GetEpochMetaResponse} returns this\n*/\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.setEpochdata = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetEpochMetaResponse} returns this\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.clearEpochdata = function () {\n  return this.setEpochdata(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.hasEpochdata = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional uint64 totalBlocks = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.getTotalblocks = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetEpochMetaResponse} returns this\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.setTotalblocks = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated BlockProducerInfo blockProducersInfo = 3;\n * @return {!Array<!proto.iotexapi.BlockProducerInfo>}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.getBlockproducersinfoList = function () {\n  return (\n    /** @type{!Array<!proto.iotexapi.BlockProducerInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotexapi.BlockProducerInfo, 3)\n  );\n};\n/**\n * @param {!Array<!proto.iotexapi.BlockProducerInfo>} value\n * @return {!proto.iotexapi.GetEpochMetaResponse} returns this\n*/\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.setBlockproducersinfoList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.iotexapi.BlockProducerInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.BlockProducerInfo}\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.addBlockproducersinfo = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iotexapi.BlockProducerInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetEpochMetaResponse} returns this\n */\n\n\nproto.iotexapi.GetEpochMetaResponse.prototype.clearBlockproducersinfoList = function () {\n  return this.setBlockproducersinfoList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetRawBlocksRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetRawBlocksRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetRawBlocksRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetRawBlocksRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      startheight: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      count: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      withreceipts: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      withtransactionlogs: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetRawBlocksRequest}\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetRawBlocksRequest();\n  return proto.iotexapi.GetRawBlocksRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetRawBlocksRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetRawBlocksRequest}\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStartheight(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setWithreceipts(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setWithtransactionlogs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetRawBlocksRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetRawBlocksRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStartheight();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCount();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getWithreceipts();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getWithtransactionlogs();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n};\n/**\n * optional uint64 startHeight = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.getStartheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetRawBlocksRequest} returns this\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.setStartheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 count = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.getCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetRawBlocksRequest} returns this\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.setCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bool withReceipts = 3;\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.getWithreceipts = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotexapi.GetRawBlocksRequest} returns this\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.setWithreceipts = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional bool withTransactionLogs = 4;\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.getWithtransactionlogs = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotexapi.GetRawBlocksRequest} returns this\n */\n\n\nproto.iotexapi.GetRawBlocksRequest.prototype.setWithtransactionlogs = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetRawBlocksResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetRawBlocksResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetRawBlocksResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetRawBlocksResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blocksList: jspb.Message.toObjectList(msg.getBlocksList(), proto.iotexapi.BlockInfo.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetRawBlocksResponse}\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetRawBlocksResponse();\n  return proto.iotexapi.GetRawBlocksResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetRawBlocksResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetRawBlocksResponse}\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.BlockInfo();\n        reader.readMessage(value, proto.iotexapi.BlockInfo.deserializeBinaryFromReader);\n        msg.addBlocks(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetRawBlocksResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetRawBlocksResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlocksList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.iotexapi.BlockInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated BlockInfo blocks = 1;\n * @return {!Array<!proto.iotexapi.BlockInfo>}\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.prototype.getBlocksList = function () {\n  return (\n    /** @type{!Array<!proto.iotexapi.BlockInfo>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotexapi.BlockInfo, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotexapi.BlockInfo>} value\n * @return {!proto.iotexapi.GetRawBlocksResponse} returns this\n*/\n\n\nproto.iotexapi.GetRawBlocksResponse.prototype.setBlocksList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotexapi.BlockInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.BlockInfo}\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.prototype.addBlocks = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotexapi.BlockInfo, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetRawBlocksResponse} returns this\n */\n\n\nproto.iotexapi.GetRawBlocksResponse.prototype.clearBlocksList = function () {\n  return this.setBlocksList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetLogsByBlock.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetLogsByBlock.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetLogsByBlock} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetLogsByBlock.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blockhash: msg.getBlockhash_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetLogsByBlock}\n */\n\n\nproto.iotexapi.GetLogsByBlock.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetLogsByBlock();\n  return proto.iotexapi.GetLogsByBlock.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetLogsByBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetLogsByBlock}\n */\n\n\nproto.iotexapi.GetLogsByBlock.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setBlockhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetLogsByBlock.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetLogsByBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetLogsByBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetLogsByBlock.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlockhash_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes blockHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetLogsByBlock.prototype.getBlockhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes blockHash = 1;\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {string}\n */\n\n\nproto.iotexapi.GetLogsByBlock.prototype.getBlockhash_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getBlockhash())\n  );\n};\n/**\n * optional bytes blockHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockhash()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetLogsByBlock.prototype.getBlockhash_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getBlockhash())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotexapi.GetLogsByBlock} returns this\n */\n\n\nproto.iotexapi.GetLogsByBlock.prototype.setBlockhash = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetLogsByRange.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetLogsByRange.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetLogsByRange} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetLogsByRange.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      fromblock: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      toblock: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      paginationsize: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetLogsByRange}\n */\n\n\nproto.iotexapi.GetLogsByRange.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetLogsByRange();\n  return proto.iotexapi.GetLogsByRange.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetLogsByRange} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetLogsByRange}\n */\n\n\nproto.iotexapi.GetLogsByRange.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setFromblock(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setToblock(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPaginationsize(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetLogsByRange.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetLogsByRange.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetLogsByRange} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetLogsByRange.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFromblock();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getToblock();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getPaginationsize();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional uint64 fromBlock = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetLogsByRange.prototype.getFromblock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetLogsByRange} returns this\n */\n\n\nproto.iotexapi.GetLogsByRange.prototype.setFromblock = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 toBlock = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.GetLogsByRange.prototype.getToblock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetLogsByRange} returns this\n */\n\n\nproto.iotexapi.GetLogsByRange.prototype.setToblock = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 paginationSize = 3;\n * @return {number}\n */\n\n\nproto.iotexapi.GetLogsByRange.prototype.getPaginationsize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetLogsByRange} returns this\n */\n\n\nproto.iotexapi.GetLogsByRange.prototype.setPaginationsize = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.Topics.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.Topics.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.Topics.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.Topics} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.Topics.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      topicList: msg.getTopicList_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.Topics}\n */\n\n\nproto.iotexapi.Topics.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.Topics();\n  return proto.iotexapi.Topics.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.Topics} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.Topics}\n */\n\n\nproto.iotexapi.Topics.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addTopic(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.Topics.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.Topics.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.Topics} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.Topics.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTopicList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(1, f);\n  }\n};\n/**\n * repeated bytes topic = 1;\n * @return {!Array<string>}\n */\n\n\nproto.iotexapi.Topics.prototype.getTopicList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * repeated bytes topic = 1;\n * This is a type-conversion wrapper around `getTopicList()`\n * @return {!Array<string>}\n */\n\n\nproto.iotexapi.Topics.prototype.getTopicList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getTopicList())\n  );\n};\n/**\n * repeated bytes topic = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTopicList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.iotexapi.Topics.prototype.getTopicList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getTopicList())\n  );\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.iotexapi.Topics} returns this\n */\n\n\nproto.iotexapi.Topics.prototype.setTopicList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.Topics} returns this\n */\n\n\nproto.iotexapi.Topics.prototype.addTopic = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.Topics} returns this\n */\n\n\nproto.iotexapi.Topics.prototype.clearTopicList = function () {\n  return this.setTopicList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.LogsFilter.repeatedFields_ = [1, 2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.LogsFilter.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.LogsFilter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.LogsFilter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.LogsFilter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      addressList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n      topicsList: jspb.Message.toObjectList(msg.getTopicsList(), proto.iotexapi.Topics.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.LogsFilter}\n */\n\n\nproto.iotexapi.LogsFilter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.LogsFilter();\n  return proto.iotexapi.LogsFilter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.LogsFilter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.LogsFilter}\n */\n\n\nproto.iotexapi.LogsFilter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addAddress(value);\n        break;\n\n      case 2:\n        var value = new proto.iotexapi.Topics();\n        reader.readMessage(value, proto.iotexapi.Topics.deserializeBinaryFromReader);\n        msg.addTopics(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.LogsFilter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.LogsFilter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.LogsFilter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.LogsFilter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddressList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(1, f);\n  }\n\n  f = message.getTopicsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.iotexapi.Topics.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated string address = 1;\n * @return {!Array<string>}\n */\n\n\nproto.iotexapi.LogsFilter.prototype.getAddressList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.iotexapi.LogsFilter} returns this\n */\n\n\nproto.iotexapi.LogsFilter.prototype.setAddressList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.LogsFilter} returns this\n */\n\n\nproto.iotexapi.LogsFilter.prototype.addAddress = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.LogsFilter} returns this\n */\n\n\nproto.iotexapi.LogsFilter.prototype.clearAddressList = function () {\n  return this.setAddressList([]);\n};\n/**\n * repeated Topics topics = 2;\n * @return {!Array<!proto.iotexapi.Topics>}\n */\n\n\nproto.iotexapi.LogsFilter.prototype.getTopicsList = function () {\n  return (\n    /** @type{!Array<!proto.iotexapi.Topics>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotexapi.Topics, 2)\n  );\n};\n/**\n * @param {!Array<!proto.iotexapi.Topics>} value\n * @return {!proto.iotexapi.LogsFilter} returns this\n*/\n\n\nproto.iotexapi.LogsFilter.prototype.setTopicsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.iotexapi.Topics=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.Topics}\n */\n\n\nproto.iotexapi.LogsFilter.prototype.addTopics = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iotexapi.Topics, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.LogsFilter} returns this\n */\n\n\nproto.iotexapi.LogsFilter.prototype.clearTopicsList = function () {\n  return this.setTopicsList([]);\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.iotexapi.GetLogsRequest.oneofGroups_ = [[2, 3]];\n/**\n * @enum {number}\n */\n\nproto.iotexapi.GetLogsRequest.LookupCase = {\n  LOOKUP_NOT_SET: 0,\n  BYBLOCK: 2,\n  BYRANGE: 3\n};\n/**\n * @return {proto.iotexapi.GetLogsRequest.LookupCase}\n */\n\nproto.iotexapi.GetLogsRequest.prototype.getLookupCase = function () {\n  return (\n    /** @type {proto.iotexapi.GetLogsRequest.LookupCase} */\n    jspb.Message.computeOneofCase(this, proto.iotexapi.GetLogsRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetLogsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetLogsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetLogsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetLogsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      filter: (f = msg.getFilter()) && proto.iotexapi.LogsFilter.toObject(includeInstance, f),\n      byblock: (f = msg.getByblock()) && proto.iotexapi.GetLogsByBlock.toObject(includeInstance, f),\n      byrange: (f = msg.getByrange()) && proto.iotexapi.GetLogsByRange.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetLogsRequest}\n */\n\n\nproto.iotexapi.GetLogsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetLogsRequest();\n  return proto.iotexapi.GetLogsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetLogsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetLogsRequest}\n */\n\n\nproto.iotexapi.GetLogsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.LogsFilter();\n        reader.readMessage(value, proto.iotexapi.LogsFilter.deserializeBinaryFromReader);\n        msg.setFilter(value);\n        break;\n\n      case 2:\n        var value = new proto.iotexapi.GetLogsByBlock();\n        reader.readMessage(value, proto.iotexapi.GetLogsByBlock.deserializeBinaryFromReader);\n        msg.setByblock(value);\n        break;\n\n      case 3:\n        var value = new proto.iotexapi.GetLogsByRange();\n        reader.readMessage(value, proto.iotexapi.GetLogsByRange.deserializeBinaryFromReader);\n        msg.setByrange(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetLogsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetLogsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetLogsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFilter();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.LogsFilter.serializeBinaryToWriter);\n  }\n\n  f = message.getByblock();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotexapi.GetLogsByBlock.serializeBinaryToWriter);\n  }\n\n  f = message.getByrange();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.iotexapi.GetLogsByRange.serializeBinaryToWriter);\n  }\n};\n/**\n * optional LogsFilter filter = 1;\n * @return {?proto.iotexapi.LogsFilter}\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.getFilter = function () {\n  return (\n    /** @type{?proto.iotexapi.LogsFilter} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.LogsFilter, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.LogsFilter|undefined} value\n * @return {!proto.iotexapi.GetLogsRequest} returns this\n*/\n\n\nproto.iotexapi.GetLogsRequest.prototype.setFilter = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetLogsRequest} returns this\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.clearFilter = function () {\n  return this.setFilter(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.hasFilter = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional GetLogsByBlock byBlock = 2;\n * @return {?proto.iotexapi.GetLogsByBlock}\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.getByblock = function () {\n  return (\n    /** @type{?proto.iotexapi.GetLogsByBlock} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetLogsByBlock, 2)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetLogsByBlock|undefined} value\n * @return {!proto.iotexapi.GetLogsRequest} returns this\n*/\n\n\nproto.iotexapi.GetLogsRequest.prototype.setByblock = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.iotexapi.GetLogsRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetLogsRequest} returns this\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.clearByblock = function () {\n  return this.setByblock(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.hasByblock = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional GetLogsByRange byRange = 3;\n * @return {?proto.iotexapi.GetLogsByRange}\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.getByrange = function () {\n  return (\n    /** @type{?proto.iotexapi.GetLogsByRange} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.GetLogsByRange, 3)\n  );\n};\n/**\n * @param {?proto.iotexapi.GetLogsByRange|undefined} value\n * @return {!proto.iotexapi.GetLogsRequest} returns this\n*/\n\n\nproto.iotexapi.GetLogsRequest.prototype.setByrange = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.iotexapi.GetLogsRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetLogsRequest} returns this\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.clearByrange = function () {\n  return this.setByrange(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetLogsRequest.prototype.hasByrange = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetLogsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetLogsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetLogsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetLogsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetLogsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      logsList: jspb.Message.toObjectList(msg.getLogsList(), proto_types_action_pb.Log.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetLogsResponse}\n */\n\n\nproto.iotexapi.GetLogsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetLogsResponse();\n  return proto.iotexapi.GetLogsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetLogsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetLogsResponse}\n */\n\n\nproto.iotexapi.GetLogsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Log();\n        reader.readMessage(value, proto_types_action_pb.Log.deserializeBinaryFromReader);\n        msg.addLogs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetLogsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetLogsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetLogsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetLogsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getLogsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto_types_action_pb.Log.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated iotextypes.Log logs = 1;\n * @return {!Array<!proto.iotextypes.Log>}\n */\n\n\nproto.iotexapi.GetLogsResponse.prototype.getLogsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Log>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_action_pb.Log, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Log>} value\n * @return {!proto.iotexapi.GetLogsResponse} returns this\n*/\n\n\nproto.iotexapi.GetLogsResponse.prototype.setLogsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.Log=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Log}\n */\n\n\nproto.iotexapi.GetLogsResponse.prototype.addLogs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.Log, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetLogsResponse} returns this\n */\n\n\nproto.iotexapi.GetLogsResponse.prototype.clearLogsList = function () {\n  return this.setLogsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetTransactionLogByActionHashRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetTransactionLogByActionHashRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetTransactionLogByActionHashRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetTransactionLogByActionHashRequest}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetTransactionLogByActionHashRequest();\n  return proto.iotexapi.GetTransactionLogByActionHashRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetTransactionLogByActionHashRequest}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setActionhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetTransactionLogByActionHashRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetTransactionLogByActionHashRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string actionHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashRequest.prototype.getActionhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetTransactionLogByActionHashRequest} returns this\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashRequest.prototype.setActionhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetTransactionLogByActionHashResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetTransactionLogByActionHashResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetTransactionLogByActionHashResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetTransactionLogByActionHashResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      transactionlog: (f = msg.getTransactionlog()) && proto_types_transaction_log_pb.TransactionLog.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetTransactionLogByActionHashResponse}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetTransactionLogByActionHashResponse();\n  return proto.iotexapi.GetTransactionLogByActionHashResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetTransactionLogByActionHashResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetTransactionLogByActionHashResponse}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_transaction_log_pb.TransactionLog();\n        reader.readMessage(value, proto_types_transaction_log_pb.TransactionLog.deserializeBinaryFromReader);\n        msg.setTransactionlog(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetTransactionLogByActionHashResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetTransactionLogByActionHashResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTransactionlog();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_transaction_log_pb.TransactionLog.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.TransactionLog transactionLog = 1;\n * @return {?proto.iotextypes.TransactionLog}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.prototype.getTransactionlog = function () {\n  return (\n    /** @type{?proto.iotextypes.TransactionLog} */\n    jspb.Message.getWrapperField(this, proto_types_transaction_log_pb.TransactionLog, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.TransactionLog|undefined} value\n * @return {!proto.iotexapi.GetTransactionLogByActionHashResponse} returns this\n*/\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.prototype.setTransactionlog = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetTransactionLogByActionHashResponse} returns this\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.prototype.clearTransactionlog = function () {\n  return this.setTransactionlog(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetTransactionLogByActionHashResponse.prototype.hasTransactionlog = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetTransactionLogByBlockHeightRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetTransactionLogByBlockHeightRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetTransactionLogByBlockHeightRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blockheight: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightRequest}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetTransactionLogByBlockHeightRequest();\n  return proto.iotexapi.GetTransactionLogByBlockHeightRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightRequest}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBlockheight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetTransactionLogByBlockHeightRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlockheight();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 blockHeight = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightRequest.prototype.getBlockheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightRequest} returns this\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightRequest.prototype.setBlockheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetTransactionLogByBlockHeightResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetTransactionLogByBlockHeightResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetTransactionLogByBlockHeightResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      transactionlogs: (f = msg.getTransactionlogs()) && proto_types_transaction_log_pb.TransactionLogs.toObject(includeInstance, f),\n      blockidentifier: (f = msg.getBlockidentifier()) && proto_types_blockchain_pb.BlockIdentifier.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightResponse}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetTransactionLogByBlockHeightResponse();\n  return proto.iotexapi.GetTransactionLogByBlockHeightResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightResponse}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_transaction_log_pb.TransactionLogs();\n        reader.readMessage(value, proto_types_transaction_log_pb.TransactionLogs.deserializeBinaryFromReader);\n        msg.setTransactionlogs(value);\n        break;\n\n      case 2:\n        var value = new proto_types_blockchain_pb.BlockIdentifier();\n        reader.readMessage(value, proto_types_blockchain_pb.BlockIdentifier.deserializeBinaryFromReader);\n        msg.setBlockidentifier(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetTransactionLogByBlockHeightResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetTransactionLogByBlockHeightResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTransactionlogs();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_transaction_log_pb.TransactionLogs.serializeBinaryToWriter);\n  }\n\n  f = message.getBlockidentifier();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto_types_blockchain_pb.BlockIdentifier.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.TransactionLogs transactionLogs = 1;\n * @return {?proto.iotextypes.TransactionLogs}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.getTransactionlogs = function () {\n  return (\n    /** @type{?proto.iotextypes.TransactionLogs} */\n    jspb.Message.getWrapperField(this, proto_types_transaction_log_pb.TransactionLogs, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.TransactionLogs|undefined} value\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightResponse} returns this\n*/\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.setTransactionlogs = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightResponse} returns this\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.clearTransactionlogs = function () {\n  return this.setTransactionlogs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.hasTransactionlogs = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional iotextypes.BlockIdentifier blockIdentifier = 2;\n * @return {?proto.iotextypes.BlockIdentifier}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.getBlockidentifier = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockIdentifier} */\n    jspb.Message.getWrapperField(this, proto_types_blockchain_pb.BlockIdentifier, 2)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockIdentifier|undefined} value\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightResponse} returns this\n*/\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.setBlockidentifier = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetTransactionLogByBlockHeightResponse} returns this\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.clearBlockidentifier = function () {\n  return this.setBlockidentifier(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetTransactionLogByBlockHeightResponse.prototype.hasBlockidentifier = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.StreamBlocksRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.StreamBlocksRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.StreamBlocksRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.StreamBlocksRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.StreamBlocksRequest}\n */\n\n\nproto.iotexapi.StreamBlocksRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.StreamBlocksRequest();\n  return proto.iotexapi.StreamBlocksRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.StreamBlocksRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.StreamBlocksRequest}\n */\n\n\nproto.iotexapi.StreamBlocksRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.StreamBlocksRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.StreamBlocksRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.StreamBlocksRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.StreamBlocksRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.StreamBlocksResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.StreamBlocksResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.StreamBlocksResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.StreamBlocksResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      block: (f = msg.getBlock()) && proto.iotexapi.BlockInfo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.StreamBlocksResponse}\n */\n\n\nproto.iotexapi.StreamBlocksResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.StreamBlocksResponse();\n  return proto.iotexapi.StreamBlocksResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.StreamBlocksResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.StreamBlocksResponse}\n */\n\n\nproto.iotexapi.StreamBlocksResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.BlockInfo();\n        reader.readMessage(value, proto.iotexapi.BlockInfo.deserializeBinaryFromReader);\n        msg.setBlock(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.StreamBlocksResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.StreamBlocksResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.StreamBlocksResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.StreamBlocksResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlock();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.BlockInfo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional BlockInfo block = 1;\n * @return {?proto.iotexapi.BlockInfo}\n */\n\n\nproto.iotexapi.StreamBlocksResponse.prototype.getBlock = function () {\n  return (\n    /** @type{?proto.iotexapi.BlockInfo} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.BlockInfo, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.BlockInfo|undefined} value\n * @return {!proto.iotexapi.StreamBlocksResponse} returns this\n*/\n\n\nproto.iotexapi.StreamBlocksResponse.prototype.setBlock = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.StreamBlocksResponse} returns this\n */\n\n\nproto.iotexapi.StreamBlocksResponse.prototype.clearBlock = function () {\n  return this.setBlock(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.StreamBlocksResponse.prototype.hasBlock = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.StreamLogsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.StreamLogsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.StreamLogsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.StreamLogsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      filter: (f = msg.getFilter()) && proto.iotexapi.LogsFilter.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.StreamLogsRequest}\n */\n\n\nproto.iotexapi.StreamLogsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.StreamLogsRequest();\n  return proto.iotexapi.StreamLogsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.StreamLogsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.StreamLogsRequest}\n */\n\n\nproto.iotexapi.StreamLogsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.LogsFilter();\n        reader.readMessage(value, proto.iotexapi.LogsFilter.deserializeBinaryFromReader);\n        msg.setFilter(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.StreamLogsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.StreamLogsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.StreamLogsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.StreamLogsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFilter();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.LogsFilter.serializeBinaryToWriter);\n  }\n};\n/**\n * optional LogsFilter filter = 1;\n * @return {?proto.iotexapi.LogsFilter}\n */\n\n\nproto.iotexapi.StreamLogsRequest.prototype.getFilter = function () {\n  return (\n    /** @type{?proto.iotexapi.LogsFilter} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.LogsFilter, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.LogsFilter|undefined} value\n * @return {!proto.iotexapi.StreamLogsRequest} returns this\n*/\n\n\nproto.iotexapi.StreamLogsRequest.prototype.setFilter = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.StreamLogsRequest} returns this\n */\n\n\nproto.iotexapi.StreamLogsRequest.prototype.clearFilter = function () {\n  return this.setFilter(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.StreamLogsRequest.prototype.hasFilter = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.StreamLogsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.StreamLogsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.StreamLogsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.StreamLogsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      log: (f = msg.getLog()) && proto_types_action_pb.Log.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.StreamLogsResponse}\n */\n\n\nproto.iotexapi.StreamLogsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.StreamLogsResponse();\n  return proto.iotexapi.StreamLogsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.StreamLogsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.StreamLogsResponse}\n */\n\n\nproto.iotexapi.StreamLogsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Log();\n        reader.readMessage(value, proto_types_action_pb.Log.deserializeBinaryFromReader);\n        msg.setLog(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.StreamLogsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.StreamLogsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.StreamLogsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.StreamLogsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getLog();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.Log.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.Log log = 1;\n * @return {?proto.iotextypes.Log}\n */\n\n\nproto.iotexapi.StreamLogsResponse.prototype.getLog = function () {\n  return (\n    /** @type{?proto.iotextypes.Log} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.Log, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Log|undefined} value\n * @return {!proto.iotexapi.StreamLogsResponse} returns this\n*/\n\n\nproto.iotexapi.StreamLogsResponse.prototype.setLog = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.StreamLogsResponse} returns this\n */\n\n\nproto.iotexapi.StreamLogsResponse.prototype.clearLog = function () {\n  return this.setLog(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.StreamLogsResponse.prototype.hasLog = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActPoolActionsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActPoolActionsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActPoolActionsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActPoolActionsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhashesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActPoolActionsRequest}\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActPoolActionsRequest();\n  return proto.iotexapi.GetActPoolActionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActPoolActionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActPoolActionsRequest}\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addActionhashes(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActPoolActionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActPoolActionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhashesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(1, f);\n  }\n};\n/**\n * repeated string actionHashes = 1;\n * @return {!Array<string>}\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.prototype.getActionhashesList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.iotexapi.GetActPoolActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.prototype.setActionhashesList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.GetActPoolActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.prototype.addActionhashes = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetActPoolActionsRequest} returns this\n */\n\n\nproto.iotexapi.GetActPoolActionsRequest.prototype.clearActionhashesList = function () {\n  return this.setActionhashesList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetActPoolActionsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetActPoolActionsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetActPoolActionsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetActPoolActionsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionsList: jspb.Message.toObjectList(msg.getActionsList(), proto_types_action_pb.Action.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetActPoolActionsResponse}\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetActPoolActionsResponse();\n  return proto.iotexapi.GetActPoolActionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetActPoolActionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetActPoolActionsResponse}\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Action();\n        reader.readMessage(value, proto_types_action_pb.Action.deserializeBinaryFromReader);\n        msg.addActions(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetActPoolActionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetActPoolActionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto_types_action_pb.Action.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated iotextypes.Action actions = 1;\n * @return {!Array<!proto.iotextypes.Action>}\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.prototype.getActionsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Action>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_action_pb.Action, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Action>} value\n * @return {!proto.iotexapi.GetActPoolActionsResponse} returns this\n*/\n\n\nproto.iotexapi.GetActPoolActionsResponse.prototype.setActionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.Action=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Action}\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.prototype.addActions = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.Action, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetActPoolActionsResponse} returns this\n */\n\n\nproto.iotexapi.GetActPoolActionsResponse.prototype.clearActionsList = function () {\n  return this.setActionsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetElectionBucketsRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetElectionBucketsRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetElectionBucketsRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetElectionBucketsRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      epochnum: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetElectionBucketsRequest}\n */\n\n\nproto.iotexapi.GetElectionBucketsRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetElectionBucketsRequest();\n  return proto.iotexapi.GetElectionBucketsRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetElectionBucketsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetElectionBucketsRequest}\n */\n\n\nproto.iotexapi.GetElectionBucketsRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setEpochnum(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetElectionBucketsRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetElectionBucketsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetElectionBucketsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetElectionBucketsRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEpochnum();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 epochNum = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetElectionBucketsRequest.prototype.getEpochnum = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetElectionBucketsRequest} returns this\n */\n\n\nproto.iotexapi.GetElectionBucketsRequest.prototype.setEpochnum = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetElectionBucketsResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetElectionBucketsResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetElectionBucketsResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetElectionBucketsResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bucketsList: jspb.Message.toObjectList(msg.getBucketsList(), proto_types_election_pb.ElectionBucket.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetElectionBucketsResponse}\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetElectionBucketsResponse();\n  return proto.iotexapi.GetElectionBucketsResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetElectionBucketsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetElectionBucketsResponse}\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_election_pb.ElectionBucket();\n        reader.readMessage(value, proto_types_election_pb.ElectionBucket.deserializeBinaryFromReader);\n        msg.addBuckets(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetElectionBucketsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetElectionBucketsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBucketsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto_types_election_pb.ElectionBucket.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated iotextypes.ElectionBucket buckets = 1;\n * @return {!Array<!proto.iotextypes.ElectionBucket>}\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.prototype.getBucketsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.ElectionBucket>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_election_pb.ElectionBucket, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.ElectionBucket>} value\n * @return {!proto.iotexapi.GetElectionBucketsResponse} returns this\n*/\n\n\nproto.iotexapi.GetElectionBucketsResponse.prototype.setBucketsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.ElectionBucket=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.ElectionBucket}\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.prototype.addBuckets = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.ElectionBucket, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.GetElectionBucketsResponse} returns this\n */\n\n\nproto.iotexapi.GetElectionBucketsResponse.prototype.clearBucketsList = function () {\n  return this.setBucketsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetEvmTransfersByActionHashRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetEvmTransfersByActionHashRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetEvmTransfersByActionHashRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetEvmTransfersByActionHashRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetEvmTransfersByActionHashRequest}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetEvmTransfersByActionHashRequest();\n  return proto.iotexapi.GetEvmTransfersByActionHashRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetEvmTransfersByActionHashRequest}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setActionhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetEvmTransfersByActionHashRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string actionHash = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashRequest.prototype.getActionhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.GetEvmTransfersByActionHashRequest} returns this\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashRequest.prototype.setActionhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetEvmTransfersByActionHashResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetEvmTransfersByActionHashResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetEvmTransfersByActionHashResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetEvmTransfersByActionHashResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionevmtransfers: (f = msg.getActionevmtransfers()) && proto_types_action_pb.ActionEvmTransfer.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetEvmTransfersByActionHashResponse}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetEvmTransfersByActionHashResponse();\n  return proto.iotexapi.GetEvmTransfersByActionHashResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetEvmTransfersByActionHashResponse}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.ActionEvmTransfer();\n        reader.readMessage(value, proto_types_action_pb.ActionEvmTransfer.deserializeBinaryFromReader);\n        msg.setActionevmtransfers(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetEvmTransfersByActionHashResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetEvmTransfersByActionHashResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionevmtransfers();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.ActionEvmTransfer.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.ActionEvmTransfer actionEvmTransfers = 1;\n * @return {?proto.iotextypes.ActionEvmTransfer}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.prototype.getActionevmtransfers = function () {\n  return (\n    /** @type{?proto.iotextypes.ActionEvmTransfer} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.ActionEvmTransfer, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.ActionEvmTransfer|undefined} value\n * @return {!proto.iotexapi.GetEvmTransfersByActionHashResponse} returns this\n*/\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.prototype.setActionevmtransfers = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetEvmTransfersByActionHashResponse} returns this\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.prototype.clearActionevmtransfers = function () {\n  return this.setActionevmtransfers(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetEvmTransfersByActionHashResponse.prototype.hasActionevmtransfers = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetEvmTransfersByBlockHeightRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetEvmTransfersByBlockHeightRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetEvmTransfersByBlockHeightRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blockheight: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetEvmTransfersByBlockHeightRequest();\n  return proto.iotexapi.GetEvmTransfersByBlockHeightRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBlockheight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetEvmTransfersByBlockHeightRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlockheight();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 blockHeight = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightRequest.prototype.getBlockheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.GetEvmTransfersByBlockHeightRequest} returns this\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightRequest.prototype.setBlockheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.GetEvmTransfersByBlockHeightResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.GetEvmTransfersByBlockHeightResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.GetEvmTransfersByBlockHeightResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blockevmtransfers: (f = msg.getBlockevmtransfers()) && proto_types_action_pb.BlockEvmTransfer.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.GetEvmTransfersByBlockHeightResponse}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.GetEvmTransfersByBlockHeightResponse();\n  return proto.iotexapi.GetEvmTransfersByBlockHeightResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.GetEvmTransfersByBlockHeightResponse}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.BlockEvmTransfer();\n        reader.readMessage(value, proto_types_action_pb.BlockEvmTransfer.deserializeBinaryFromReader);\n        msg.setBlockevmtransfers(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.GetEvmTransfersByBlockHeightResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.GetEvmTransfersByBlockHeightResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlockevmtransfers();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto_types_action_pb.BlockEvmTransfer.serializeBinaryToWriter);\n  }\n};\n/**\n * optional iotextypes.BlockEvmTransfer blockEvmTransfers = 1;\n * @return {?proto.iotextypes.BlockEvmTransfer}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.prototype.getBlockevmtransfers = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockEvmTransfer} */\n    jspb.Message.getWrapperField(this, proto_types_action_pb.BlockEvmTransfer, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockEvmTransfer|undefined} value\n * @return {!proto.iotexapi.GetEvmTransfersByBlockHeightResponse} returns this\n*/\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.prototype.setBlockevmtransfers = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.GetEvmTransfersByBlockHeightResponse} returns this\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.prototype.clearBlockevmtransfers = function () {\n  return this.setBlockevmtransfers(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.GetEvmTransfersByBlockHeightResponse.prototype.hasBlockevmtransfers = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\ngoog.object.extend(exports, proto.iotexapi);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/api/api_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/api/read_state_pb.js":
/*!************************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/api/read_state_pb.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/api/read_state.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.iotexapi.PaginationParam', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataMethod', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataMethod.Name', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.BucketsCount', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.CandidateByAddress', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.CandidateByName', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.Candidates', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.RequestCase', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBuckets', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes', null, global);\ngoog.exportSymbol('proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotexapi.PaginationParam = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.PaginationParam, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.PaginationParam.displayName = 'proto.iotexapi.PaginationParam';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataMethod = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataMethod, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataMethod.displayName = 'proto.iotexapi.ReadStakingDataMethod';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotexapi.ReadStakingDataRequest.oneofGroups_);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.displayName = 'proto.iotexapi.ReadStakingDataRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBuckets, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBuckets.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBuckets';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.Candidates, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.Candidates.displayName = 'proto.iotexapi.ReadStakingDataRequest.Candidates';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByName = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.CandidateByName, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.CandidateByName.displayName = 'proto.iotexapi.ReadStakingDataRequest.CandidateByName';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.displayName = 'proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.CandidateByAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.displayName = 'proto.iotexapi.ReadStakingDataRequest.CandidateByAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.TotalStakingAmount = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.displayName = 'proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.BucketsCount = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotexapi.ReadStakingDataRequest.BucketsCount, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotexapi.ReadStakingDataRequest.BucketsCount.displayName = 'proto.iotexapi.ReadStakingDataRequest.BucketsCount';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.PaginationParam.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.PaginationParam.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.PaginationParam} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.PaginationParam.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      offset: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      limit: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.PaginationParam}\n */\n\n\nproto.iotexapi.PaginationParam.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.PaginationParam();\n  return proto.iotexapi.PaginationParam.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.PaginationParam} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.PaginationParam}\n */\n\n\nproto.iotexapi.PaginationParam.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOffset(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setLimit(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.PaginationParam.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.PaginationParam.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.PaginationParam} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.PaginationParam.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOffset();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getLimit();\n\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n};\n/**\n * optional uint32 offset = 1;\n * @return {number}\n */\n\n\nproto.iotexapi.PaginationParam.prototype.getOffset = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.PaginationParam} returns this\n */\n\n\nproto.iotexapi.PaginationParam.prototype.setOffset = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint32 limit = 2;\n * @return {number}\n */\n\n\nproto.iotexapi.PaginationParam.prototype.getLimit = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotexapi.PaginationParam} returns this\n */\n\n\nproto.iotexapi.PaginationParam.prototype.setLimit = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataMethod.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataMethod.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataMethod} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataMethod.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      method: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataMethod}\n */\n\n\nproto.iotexapi.ReadStakingDataMethod.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataMethod();\n  return proto.iotexapi.ReadStakingDataMethod.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataMethod} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataMethod}\n */\n\n\nproto.iotexapi.ReadStakingDataMethod.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.iotexapi.ReadStakingDataMethod.Name} */\n        reader.readEnum();\n        msg.setMethod(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataMethod.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataMethod.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataMethod} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataMethod.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMethod();\n\n  if (f !== 0.0) {\n    writer.writeEnum(1, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.iotexapi.ReadStakingDataMethod.Name = {\n  INVALID: 0,\n  BUCKETS: 1,\n  BUCKETS_BY_VOTER: 2,\n  BUCKETS_BY_CANDIDATE: 3,\n  CANDIDATES: 4,\n  CANDIDATE_BY_NAME: 5,\n  BUCKETS_BY_INDEXES: 6,\n  CANDIDATE_BY_ADDRESS: 7,\n  TOTAL_STAKING_AMOUNT: 8,\n  BUCKETS_COUNT: 9\n};\n/**\n * optional Name method = 1;\n * @return {!proto.iotexapi.ReadStakingDataMethod.Name}\n */\n\nproto.iotexapi.ReadStakingDataMethod.prototype.getMethod = function () {\n  return (\n    /** @type {!proto.iotexapi.ReadStakingDataMethod.Name} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {!proto.iotexapi.ReadStakingDataMethod.Name} value\n * @return {!proto.iotexapi.ReadStakingDataMethod} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataMethod.prototype.setMethod = function (value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.oneofGroups_ = [[1, 2, 3, 4, 5, 6, 7, 8, 9]];\n/**\n * @enum {number}\n */\n\nproto.iotexapi.ReadStakingDataRequest.RequestCase = {\n  REQUEST_NOT_SET: 0,\n  BUCKETS: 1,\n  BUCKETSBYVOTER: 2,\n  BUCKETSBYCANDIDATE: 3,\n  CANDIDATES: 4,\n  CANDIDATEBYNAME: 5,\n  BUCKETSBYINDEXES: 6,\n  CANDIDATEBYADDRESS: 7,\n  TOTALSTAKINGAMOUNT: 8,\n  BUCKETSCOUNT: 9\n};\n/**\n * @return {proto.iotexapi.ReadStakingDataRequest.RequestCase}\n */\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getRequestCase = function () {\n  return (\n    /** @type {proto.iotexapi.ReadStakingDataRequest.RequestCase} */\n    jspb.Message.computeOneofCase(this, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      buckets: (f = msg.getBuckets()) && proto.iotexapi.ReadStakingDataRequest.VoteBuckets.toObject(includeInstance, f),\n      bucketsbyvoter: (f = msg.getBucketsbyvoter()) && proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.toObject(includeInstance, f),\n      bucketsbycandidate: (f = msg.getBucketsbycandidate()) && proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.toObject(includeInstance, f),\n      candidates: (f = msg.getCandidates()) && proto.iotexapi.ReadStakingDataRequest.Candidates.toObject(includeInstance, f),\n      candidatebyname: (f = msg.getCandidatebyname()) && proto.iotexapi.ReadStakingDataRequest.CandidateByName.toObject(includeInstance, f),\n      bucketsbyindexes: (f = msg.getBucketsbyindexes()) && proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.toObject(includeInstance, f),\n      candidatebyaddress: (f = msg.getCandidatebyaddress()) && proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.toObject(includeInstance, f),\n      totalstakingamount: (f = msg.getTotalstakingamount()) && proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.toObject(includeInstance, f),\n      bucketscount: (f = msg.getBucketscount()) && proto.iotexapi.ReadStakingDataRequest.BucketsCount.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest();\n  return proto.iotexapi.ReadStakingDataRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.ReadStakingDataRequest.VoteBuckets();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinaryFromReader);\n        msg.setBuckets(value);\n        break;\n\n      case 2:\n        var value = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinaryFromReader);\n        msg.setBucketsbyvoter(value);\n        break;\n\n      case 3:\n        var value = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinaryFromReader);\n        msg.setBucketsbycandidate(value);\n        break;\n\n      case 4:\n        var value = new proto.iotexapi.ReadStakingDataRequest.Candidates();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinaryFromReader);\n        msg.setCandidates(value);\n        break;\n\n      case 5:\n        var value = new proto.iotexapi.ReadStakingDataRequest.CandidateByName();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinaryFromReader);\n        msg.setCandidatebyname(value);\n        break;\n\n      case 6:\n        var value = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinaryFromReader);\n        msg.setBucketsbyindexes(value);\n        break;\n\n      case 7:\n        var value = new proto.iotexapi.ReadStakingDataRequest.CandidateByAddress();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinaryFromReader);\n        msg.setCandidatebyaddress(value);\n        break;\n\n      case 8:\n        var value = new proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinaryFromReader);\n        msg.setTotalstakingamount(value);\n        break;\n\n      case 9:\n        var value = new proto.iotexapi.ReadStakingDataRequest.BucketsCount();\n        reader.readMessage(value, proto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinaryFromReader);\n        msg.setBucketscount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBuckets();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.ReadStakingDataRequest.VoteBuckets.serializeBinaryToWriter);\n  }\n\n  f = message.getBucketsbyvoter();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.serializeBinaryToWriter);\n  }\n\n  f = message.getBucketsbycandidate();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.serializeBinaryToWriter);\n  }\n\n  f = message.getCandidates();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.iotexapi.ReadStakingDataRequest.Candidates.serializeBinaryToWriter);\n  }\n\n  f = message.getCandidatebyname();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.iotexapi.ReadStakingDataRequest.CandidateByName.serializeBinaryToWriter);\n  }\n\n  f = message.getBucketsbyindexes();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.serializeBinaryToWriter);\n  }\n\n  f = message.getCandidatebyaddress();\n\n  if (f != null) {\n    writer.writeMessage(7, f, proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.serializeBinaryToWriter);\n  }\n\n  f = message.getTotalstakingamount();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.serializeBinaryToWriter);\n  }\n\n  f = message.getBucketscount();\n\n  if (f != null) {\n    writer.writeMessage(9, f, proto.iotexapi.ReadStakingDataRequest.BucketsCount.serializeBinaryToWriter);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.VoteBuckets.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.VoteBuckets.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBuckets();\n  return proto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.PaginationParam();\n        reader.readMessage(value, proto.iotexapi.PaginationParam.deserializeBinaryFromReader);\n        msg.setPagination(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.VoteBuckets.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPagination();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.PaginationParam.serializeBinaryToWriter);\n  }\n};\n/**\n * optional PaginationParam pagination = 1;\n * @return {?proto.iotexapi.PaginationParam}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.getPagination = function () {\n  return (\n    /** @type{?proto.iotexapi.PaginationParam} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.PaginationParam|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.setPagination = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBuckets} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.clearPagination = function () {\n  return this.setPagination(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBuckets.prototype.hasPagination = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      voteraddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter();\n  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVoteraddress(value);\n        break;\n\n      case 2:\n        var value = new proto.iotexapi.PaginationParam();\n        reader.readMessage(value, proto.iotexapi.PaginationParam.deserializeBinaryFromReader);\n        msg.setPagination(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVoteraddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getPagination();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotexapi.PaginationParam.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string voterAddress = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.getVoteraddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.setVoteraddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional PaginationParam pagination = 2;\n * @return {?proto.iotexapi.PaginationParam}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.getPagination = function () {\n  return (\n    /** @type{?proto.iotexapi.PaginationParam} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 2)\n  );\n};\n/**\n * @param {?proto.iotexapi.PaginationParam|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.setPagination = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.clearPagination = function () {\n  return this.setPagination(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter.prototype.hasPagination = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      candname: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate();\n  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCandname(value);\n        break;\n\n      case 2:\n        var value = new proto.iotexapi.PaginationParam();\n        reader.readMessage(value, proto.iotexapi.PaginationParam.deserializeBinaryFromReader);\n        msg.setPagination(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCandname();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getPagination();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotexapi.PaginationParam.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string candName = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.getCandname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.setCandname = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional PaginationParam pagination = 2;\n * @return {?proto.iotexapi.PaginationParam}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.getPagination = function () {\n  return (\n    /** @type{?proto.iotexapi.PaginationParam} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 2)\n  );\n};\n/**\n * @param {?proto.iotexapi.PaginationParam|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.setPagination = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.clearPagination = function () {\n  return this.setPagination(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate.prototype.hasPagination = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.Candidates.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.Candidates.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.Candidates} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.Candidates.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      pagination: (f = msg.getPagination()) && proto.iotexapi.PaginationParam.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.Candidates();\n  return proto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.Candidates} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotexapi.PaginationParam();\n        reader.readMessage(value, proto.iotexapi.PaginationParam.deserializeBinaryFromReader);\n        msg.setPagination(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.Candidates.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.Candidates} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPagination();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotexapi.PaginationParam.serializeBinaryToWriter);\n  }\n};\n/**\n * optional PaginationParam pagination = 1;\n * @return {?proto.iotexapi.PaginationParam}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.prototype.getPagination = function () {\n  return (\n    /** @type{?proto.iotexapi.PaginationParam} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.PaginationParam, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.PaginationParam|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.prototype.setPagination = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest.Candidates} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.prototype.clearPagination = function () {\n  return this.setPagination(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.Candidates.prototype.hasPagination = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.CandidateByName.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.CandidateByName.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      candname: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByName}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.CandidateByName();\n  return proto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByName}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByName.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCandname(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.CandidateByName.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByName.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCandname();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string candName = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.getCandname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByName} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByName.prototype.setCandname = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      indexList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes();\n  return proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values =\n        /** @type {!Array<number>} */\n        reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addIndex(values[i]);\n        }\n\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getIndexList();\n\n  if (f.length > 0) {\n    writer.writePackedUint64(1, f);\n  }\n};\n/**\n * repeated uint64 index = 1;\n * @return {!Array<number>}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.getIndexList = function () {\n  return (\n    /** @type {!Array<number>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.setIndexList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.addIndex = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes.prototype.clearIndexList = function () {\n  return this.setIndexList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      owneraddr: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.CandidateByAddress();\n  return proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setOwneraddr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.CandidateByAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOwneraddr();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string ownerAddr = 1;\n * @return {string}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.getOwneraddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.CandidateByAddress.prototype.setOwneraddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount();\n  return proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.TotalStakingAmount.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotexapi.ReadStakingDataRequest.BucketsCount.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotexapi.ReadStakingDataRequest.BucketsCount.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotexapi.ReadStakingDataRequest.BucketsCount} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotexapi.ReadStakingDataRequest.BucketsCount.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotexapi.ReadStakingDataRequest.BucketsCount}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotexapi.ReadStakingDataRequest.BucketsCount();\n  return proto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotexapi.ReadStakingDataRequest.BucketsCount} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotexapi.ReadStakingDataRequest.BucketsCount}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.BucketsCount.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.BucketsCount.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotexapi.ReadStakingDataRequest.BucketsCount.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotexapi.ReadStakingDataRequest.BucketsCount} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.BucketsCount.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n/**\n * optional VoteBuckets buckets = 1;\n * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBuckets}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getBuckets = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBuckets} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBuckets, 1)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBuckets|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setBuckets = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearBuckets = function () {\n  return this.setBuckets(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasBuckets = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional VoteBucketsByVoter bucketsByVoter = 2;\n * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getBucketsbyvoter = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter, 2)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByVoter|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setBucketsbyvoter = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearBucketsbyvoter = function () {\n  return this.setBucketsbyvoter(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasBucketsbyvoter = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional VoteBucketsByCandidate bucketsByCandidate = 3;\n * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getBucketsbycandidate = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate, 3)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByCandidate|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setBucketsbycandidate = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearBucketsbycandidate = function () {\n  return this.setBucketsbycandidate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasBucketsbycandidate = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional Candidates candidates = 4;\n * @return {?proto.iotexapi.ReadStakingDataRequest.Candidates}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getCandidates = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.Candidates} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.Candidates, 4)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.Candidates|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setCandidates = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearCandidates = function () {\n  return this.setCandidates(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasCandidates = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional CandidateByName candidateByName = 5;\n * @return {?proto.iotexapi.ReadStakingDataRequest.CandidateByName}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getCandidatebyname = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.CandidateByName} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.CandidateByName, 5)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.CandidateByName|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setCandidatebyname = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearCandidatebyname = function () {\n  return this.setCandidatebyname(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasCandidatebyname = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional VoteBucketsByIndexes bucketsByIndexes = 6;\n * @return {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getBucketsbyindexes = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes, 6)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.VoteBucketsByIndexes|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setBucketsbyindexes = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 6, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearBucketsbyindexes = function () {\n  return this.setBucketsbyindexes(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasBucketsbyindexes = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional CandidateByAddress candidateByAddress = 7;\n * @return {?proto.iotexapi.ReadStakingDataRequest.CandidateByAddress}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getCandidatebyaddress = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.CandidateByAddress} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.CandidateByAddress, 7)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.CandidateByAddress|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setCandidatebyaddress = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearCandidatebyaddress = function () {\n  return this.setCandidatebyaddress(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasCandidatebyaddress = function () {\n  return jspb.Message.getField(this, 7) != null;\n};\n/**\n * optional TotalStakingAmount totalStakingAmount = 8;\n * @return {?proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getTotalstakingamount = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount, 8)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.TotalStakingAmount|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setTotalstakingamount = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 8, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearTotalstakingamount = function () {\n  return this.setTotalstakingamount(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasTotalstakingamount = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional BucketsCount bucketsCount = 9;\n * @return {?proto.iotexapi.ReadStakingDataRequest.BucketsCount}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.getBucketscount = function () {\n  return (\n    /** @type{?proto.iotexapi.ReadStakingDataRequest.BucketsCount} */\n    jspb.Message.getWrapperField(this, proto.iotexapi.ReadStakingDataRequest.BucketsCount, 9)\n  );\n};\n/**\n * @param {?proto.iotexapi.ReadStakingDataRequest.BucketsCount|undefined} value\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n*/\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.setBucketscount = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 9, proto.iotexapi.ReadStakingDataRequest.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotexapi.ReadStakingDataRequest} returns this\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.clearBucketscount = function () {\n  return this.setBucketscount(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotexapi.ReadStakingDataRequest.prototype.hasBucketscount = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n\ngoog.object.extend(exports, proto.iotexapi);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/api/read_state_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/types/action_pb.js":
/*!**********************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/types/action_pb.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/types/action.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.iotextypes.Action', null, global);\ngoog.exportSymbol('proto.iotextypes.ActionCore', null, global);\ngoog.exportSymbol('proto.iotextypes.ActionCore.ActionCase', null, global);\ngoog.exportSymbol('proto.iotextypes.ActionEvmTransfer', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockEvmTransfer', null, global);\ngoog.exportSymbol('proto.iotextypes.Candidate', null, global);\ngoog.exportSymbol('proto.iotextypes.CandidateBasicInfo', null, global);\ngoog.exportSymbol('proto.iotextypes.CandidateList', null, global);\ngoog.exportSymbol('proto.iotextypes.CandidateRegister', null, global);\ngoog.exportSymbol('proto.iotextypes.ClaimFromRewardingFund', null, global);\ngoog.exportSymbol('proto.iotextypes.CreateDeposit', null, global);\ngoog.exportSymbol('proto.iotextypes.CreatePlumChain', null, global);\ngoog.exportSymbol('proto.iotextypes.DepositToRewardingFund', null, global);\ngoog.exportSymbol('proto.iotextypes.Encoding', null, global);\ngoog.exportSymbol('proto.iotextypes.EvmTransfer', null, global);\ngoog.exportSymbol('proto.iotextypes.EvmTransferList', null, global);\ngoog.exportSymbol('proto.iotextypes.Execution', null, global);\ngoog.exportSymbol('proto.iotextypes.GrantReward', null, global);\ngoog.exportSymbol('proto.iotextypes.Log', null, global);\ngoog.exportSymbol('proto.iotextypes.Logs', null, global);\ngoog.exportSymbol('proto.iotextypes.MerkleRoot', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumChallengeExit', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumCreateDeposit', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumFinalizeExit', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumPutBlock', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumResponseChallengeExit', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumSettleDeposit', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumStartExit', null, global);\ngoog.exportSymbol('proto.iotextypes.PlumTransfer', null, global);\ngoog.exportSymbol('proto.iotextypes.PutBlock', null, global);\ngoog.exportSymbol('proto.iotextypes.PutPollResult', null, global);\ngoog.exportSymbol('proto.iotextypes.Receipt', null, global);\ngoog.exportSymbol('proto.iotextypes.RewardType', null, global);\ngoog.exportSymbol('proto.iotextypes.SettleDeposit', null, global);\ngoog.exportSymbol('proto.iotextypes.StakeAddDeposit', null, global);\ngoog.exportSymbol('proto.iotextypes.StakeChangeCandidate', null, global);\ngoog.exportSymbol('proto.iotextypes.StakeCreate', null, global);\ngoog.exportSymbol('proto.iotextypes.StakeReclaim', null, global);\ngoog.exportSymbol('proto.iotextypes.StakeRestake', null, global);\ngoog.exportSymbol('proto.iotextypes.StakeTransferOwnership', null, global);\ngoog.exportSymbol('proto.iotextypes.StartSubChain', null, global);\ngoog.exportSymbol('proto.iotextypes.StopSubChain', null, global);\ngoog.exportSymbol('proto.iotextypes.TerminatePlumChain', null, global);\ngoog.exportSymbol('proto.iotextypes.Transfer', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotextypes.Transfer = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.Transfer, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Transfer.displayName = 'proto.iotextypes.Transfer';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Candidate = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.Candidate, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Candidate.displayName = 'proto.iotextypes.Candidate';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.CandidateList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.CandidateList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.CandidateList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.CandidateList.displayName = 'proto.iotextypes.CandidateList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PutPollResult = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PutPollResult, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PutPollResult.displayName = 'proto.iotextypes.PutPollResult';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Execution = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.Execution, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Execution.displayName = 'proto.iotextypes.Execution';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StakeCreate = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StakeCreate, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StakeCreate.displayName = 'proto.iotextypes.StakeCreate';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StakeReclaim = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StakeReclaim, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StakeReclaim.displayName = 'proto.iotextypes.StakeReclaim';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StakeAddDeposit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StakeAddDeposit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StakeAddDeposit.displayName = 'proto.iotextypes.StakeAddDeposit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StakeRestake = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StakeRestake, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StakeRestake.displayName = 'proto.iotextypes.StakeRestake';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StakeChangeCandidate = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StakeChangeCandidate, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StakeChangeCandidate.displayName = 'proto.iotextypes.StakeChangeCandidate';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StakeTransferOwnership = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StakeTransferOwnership, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StakeTransferOwnership.displayName = 'proto.iotextypes.StakeTransferOwnership';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.CandidateBasicInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.CandidateBasicInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.CandidateBasicInfo.displayName = 'proto.iotextypes.CandidateBasicInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.CandidateRegister = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.CandidateRegister, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.CandidateRegister.displayName = 'proto.iotextypes.CandidateRegister';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StartSubChain = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StartSubChain, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StartSubChain.displayName = 'proto.iotextypes.StartSubChain';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.StopSubChain = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.StopSubChain, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.StopSubChain.displayName = 'proto.iotextypes.StopSubChain';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.MerkleRoot = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.MerkleRoot, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.MerkleRoot.displayName = 'proto.iotextypes.MerkleRoot';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PutBlock = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.PutBlock.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.PutBlock, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PutBlock.displayName = 'proto.iotextypes.PutBlock';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.CreateDeposit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.CreateDeposit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.CreateDeposit.displayName = 'proto.iotextypes.CreateDeposit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.SettleDeposit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.SettleDeposit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.SettleDeposit.displayName = 'proto.iotextypes.SettleDeposit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.CreatePlumChain = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.CreatePlumChain, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.CreatePlumChain.displayName = 'proto.iotextypes.CreatePlumChain';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.TerminatePlumChain = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.TerminatePlumChain, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.TerminatePlumChain.displayName = 'proto.iotextypes.TerminatePlumChain';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumPutBlock = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumPutBlock, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumPutBlock.displayName = 'proto.iotextypes.PlumPutBlock';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumCreateDeposit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumCreateDeposit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumCreateDeposit.displayName = 'proto.iotextypes.PlumCreateDeposit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumStartExit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumStartExit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumStartExit.displayName = 'proto.iotextypes.PlumStartExit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumChallengeExit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumChallengeExit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumChallengeExit.displayName = 'proto.iotextypes.PlumChallengeExit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumResponseChallengeExit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumResponseChallengeExit.displayName = 'proto.iotextypes.PlumResponseChallengeExit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumFinalizeExit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumFinalizeExit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumFinalizeExit.displayName = 'proto.iotextypes.PlumFinalizeExit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumSettleDeposit = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumSettleDeposit, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumSettleDeposit.displayName = 'proto.iotextypes.PlumSettleDeposit';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.PlumTransfer = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.PlumTransfer, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.PlumTransfer.displayName = 'proto.iotextypes.PlumTransfer';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.ActionCore = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iotextypes.ActionCore.oneofGroups_);\n};\n\ngoog.inherits(proto.iotextypes.ActionCore, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.ActionCore.displayName = 'proto.iotextypes.ActionCore';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Action = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.Action, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Action.displayName = 'proto.iotextypes.Action';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Receipt = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.Receipt.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.Receipt, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Receipt.displayName = 'proto.iotextypes.Receipt';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Log = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.Log.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.Log, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Log.displayName = 'proto.iotextypes.Log';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Logs = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.Logs.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.Logs, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Logs.displayName = 'proto.iotextypes.Logs';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.EvmTransfer = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.EvmTransfer, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.EvmTransfer.displayName = 'proto.iotextypes.EvmTransfer';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.EvmTransferList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.EvmTransferList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.EvmTransferList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.EvmTransferList.displayName = 'proto.iotextypes.EvmTransferList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.ActionEvmTransfer = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.ActionEvmTransfer.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.ActionEvmTransfer, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.ActionEvmTransfer.displayName = 'proto.iotextypes.ActionEvmTransfer';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockEvmTransfer = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.BlockEvmTransfer.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockEvmTransfer, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockEvmTransfer.displayName = 'proto.iotextypes.BlockEvmTransfer';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.DepositToRewardingFund = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.DepositToRewardingFund, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.DepositToRewardingFund.displayName = 'proto.iotextypes.DepositToRewardingFund';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.ClaimFromRewardingFund, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.ClaimFromRewardingFund.displayName = 'proto.iotextypes.ClaimFromRewardingFund';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.GrantReward = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.GrantReward, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.GrantReward.displayName = 'proto.iotextypes.GrantReward';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Transfer.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Transfer.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Transfer} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Transfer.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      recipient: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Transfer}\n */\n\n\nproto.iotextypes.Transfer.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Transfer();\n  return proto.iotextypes.Transfer.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Transfer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Transfer}\n */\n\n\nproto.iotextypes.Transfer.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRecipient(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Transfer.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Transfer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Transfer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Transfer.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getRecipient();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional string amount = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.Transfer.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Transfer} returns this\n */\n\n\nproto.iotextypes.Transfer.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string recipient = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.Transfer.prototype.getRecipient = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Transfer} returns this\n */\n\n\nproto.iotextypes.Transfer.prototype.setRecipient = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.Transfer.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.Transfer.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Transfer.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Transfer} returns this\n */\n\n\nproto.iotextypes.Transfer.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Candidate.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Candidate.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Candidate} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Candidate.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      votes: msg.getVotes_asB64(),\n      pubkey: msg.getPubkey_asB64(),\n      rewardaddress: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Candidate}\n */\n\n\nproto.iotextypes.Candidate.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Candidate();\n  return proto.iotextypes.Candidate.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Candidate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Candidate}\n */\n\n\nproto.iotextypes.Candidate.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setVotes(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPubkey(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRewardaddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Candidate.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Candidate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Candidate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Candidate.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getVotes_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getPubkey_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getRewardaddress();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.Candidate.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Candidate} returns this\n */\n\n\nproto.iotextypes.Candidate.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes votes = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.Candidate.prototype.getVotes = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes votes = 2;\n * This is a type-conversion wrapper around `getVotes()`\n * @return {string}\n */\n\n\nproto.iotextypes.Candidate.prototype.getVotes_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getVotes())\n  );\n};\n/**\n * optional bytes votes = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVotes()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Candidate.prototype.getVotes_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getVotes())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Candidate} returns this\n */\n\n\nproto.iotextypes.Candidate.prototype.setVotes = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional bytes pubKey = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.Candidate.prototype.getPubkey = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes pubKey = 3;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\n\n\nproto.iotextypes.Candidate.prototype.getPubkey_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPubkey())\n  );\n};\n/**\n * optional bytes pubKey = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Candidate.prototype.getPubkey_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPubkey())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Candidate} returns this\n */\n\n\nproto.iotextypes.Candidate.prototype.setPubkey = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional string rewardAddress = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.Candidate.prototype.getRewardaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Candidate} returns this\n */\n\n\nproto.iotextypes.Candidate.prototype.setRewardaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.CandidateList.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.CandidateList.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.CandidateList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.CandidateList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.CandidateList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(), proto.iotextypes.Candidate.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.CandidateList}\n */\n\n\nproto.iotextypes.CandidateList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.CandidateList();\n  return proto.iotextypes.CandidateList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.CandidateList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.CandidateList}\n */\n\n\nproto.iotextypes.CandidateList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.Candidate();\n        reader.readMessage(value, proto.iotextypes.Candidate.deserializeBinaryFromReader);\n        msg.addCandidates(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.CandidateList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.CandidateList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.CandidateList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.CandidateList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCandidatesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.iotextypes.Candidate.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Candidate candidates = 1;\n * @return {!Array<!proto.iotextypes.Candidate>}\n */\n\n\nproto.iotextypes.CandidateList.prototype.getCandidatesList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Candidate>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.Candidate, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Candidate>} value\n * @return {!proto.iotextypes.CandidateList} returns this\n*/\n\n\nproto.iotextypes.CandidateList.prototype.setCandidatesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.Candidate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Candidate}\n */\n\n\nproto.iotextypes.CandidateList.prototype.addCandidates = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.Candidate, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.CandidateList} returns this\n */\n\n\nproto.iotextypes.CandidateList.prototype.clearCandidatesList = function () {\n  return this.setCandidatesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PutPollResult.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PutPollResult.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PutPollResult} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PutPollResult.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      height: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      candidates: (f = msg.getCandidates()) && proto.iotextypes.CandidateList.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PutPollResult}\n */\n\n\nproto.iotextypes.PutPollResult.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PutPollResult();\n  return proto.iotextypes.PutPollResult.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PutPollResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PutPollResult}\n */\n\n\nproto.iotextypes.PutPollResult.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      case 2:\n        var value = new proto.iotextypes.CandidateList();\n        reader.readMessage(value, proto.iotextypes.CandidateList.deserializeBinaryFromReader);\n        msg.setCandidates(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PutPollResult.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PutPollResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PutPollResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PutPollResult.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCandidates();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotextypes.CandidateList.serializeBinaryToWriter);\n  }\n};\n/**\n * optional uint64 height = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.PutPollResult.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PutPollResult} returns this\n */\n\n\nproto.iotextypes.PutPollResult.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional CandidateList candidates = 2;\n * @return {?proto.iotextypes.CandidateList}\n */\n\n\nproto.iotextypes.PutPollResult.prototype.getCandidates = function () {\n  return (\n    /** @type{?proto.iotextypes.CandidateList} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.CandidateList, 2)\n  );\n};\n/**\n * @param {?proto.iotextypes.CandidateList|undefined} value\n * @return {!proto.iotextypes.PutPollResult} returns this\n*/\n\n\nproto.iotextypes.PutPollResult.prototype.setCandidates = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.PutPollResult} returns this\n */\n\n\nproto.iotextypes.PutPollResult.prototype.clearCandidates = function () {\n  return this.setCandidates(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.PutPollResult.prototype.hasCandidates = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Execution.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Execution.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Execution} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Execution.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      contract: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      data: msg.getData_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Execution}\n */\n\n\nproto.iotextypes.Execution.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Execution();\n  return proto.iotextypes.Execution.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Execution} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Execution}\n */\n\n\nproto.iotextypes.Execution.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setContract(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Execution.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Execution.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Execution} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Execution.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getContract();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getData_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional string amount = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.Execution.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Execution} returns this\n */\n\n\nproto.iotextypes.Execution.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string contract = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.Execution.prototype.getContract = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Execution} returns this\n */\n\n\nproto.iotextypes.Execution.prototype.setContract = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes data = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.Execution.prototype.getData = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes data = 3;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.iotextypes.Execution.prototype.getData_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getData())\n  );\n};\n/**\n * optional bytes data = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Execution.prototype.getData_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getData())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Execution} returns this\n */\n\n\nproto.iotextypes.Execution.prototype.setData = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StakeCreate.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StakeCreate.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StakeCreate} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StakeCreate.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      candidatename: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      stakedamount: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      stakedduration: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      autostake: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StakeCreate}\n */\n\n\nproto.iotextypes.StakeCreate.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StakeCreate();\n  return proto.iotextypes.StakeCreate.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StakeCreate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StakeCreate}\n */\n\n\nproto.iotextypes.StakeCreate.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCandidatename(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStakedamount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setStakedduration(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setAutostake(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StakeCreate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StakeCreate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StakeCreate.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCandidatename();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getStakedamount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getStakedduration();\n\n  if (f !== 0) {\n    writer.writeUint32(3, f);\n  }\n\n  f = message.getAutostake();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(5, f);\n  }\n};\n/**\n * optional string candidateName = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.getCandidatename = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StakeCreate} returns this\n */\n\n\nproto.iotextypes.StakeCreate.prototype.setCandidatename = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string stakedAmount = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.getStakedamount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StakeCreate} returns this\n */\n\n\nproto.iotextypes.StakeCreate.prototype.setStakedamount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint32 stakedDuration = 3;\n * @return {number}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.getStakedduration = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StakeCreate} returns this\n */\n\n\nproto.iotextypes.StakeCreate.prototype.setStakedduration = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional bool autoStake = 4;\n * @return {boolean}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.getAutostake = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotextypes.StakeCreate} returns this\n */\n\n\nproto.iotextypes.StakeCreate.prototype.setAutostake = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional bytes payload = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * optional bytes payload = 5;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeCreate.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.StakeCreate} returns this\n */\n\n\nproto.iotextypes.StakeCreate.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StakeReclaim.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StakeReclaim.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StakeReclaim} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StakeReclaim.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bucketindex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StakeReclaim}\n */\n\n\nproto.iotextypes.StakeReclaim.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StakeReclaim();\n  return proto.iotextypes.StakeReclaim.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StakeReclaim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StakeReclaim}\n */\n\n\nproto.iotextypes.StakeReclaim.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBucketindex(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeReclaim.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StakeReclaim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StakeReclaim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StakeReclaim.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBucketindex();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional uint64 bucketIndex = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.StakeReclaim.prototype.getBucketindex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StakeReclaim} returns this\n */\n\n\nproto.iotextypes.StakeReclaim.prototype.setBucketindex = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional bytes payload = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeReclaim.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes payload = 2;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.StakeReclaim.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeReclaim.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.StakeReclaim} returns this\n */\n\n\nproto.iotextypes.StakeReclaim.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StakeAddDeposit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StakeAddDeposit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StakeAddDeposit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StakeAddDeposit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bucketindex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      amount: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StakeAddDeposit}\n */\n\n\nproto.iotextypes.StakeAddDeposit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StakeAddDeposit();\n  return proto.iotextypes.StakeAddDeposit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StakeAddDeposit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StakeAddDeposit}\n */\n\n\nproto.iotextypes.StakeAddDeposit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBucketindex(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StakeAddDeposit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StakeAddDeposit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StakeAddDeposit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBucketindex();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional uint64 bucketIndex = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.getBucketindex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StakeAddDeposit} returns this\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.setBucketindex = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string amount = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StakeAddDeposit} returns this\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.StakeAddDeposit} returns this\n */\n\n\nproto.iotextypes.StakeAddDeposit.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StakeRestake.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StakeRestake.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StakeRestake} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StakeRestake.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bucketindex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      stakedduration: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      autostake: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StakeRestake}\n */\n\n\nproto.iotextypes.StakeRestake.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StakeRestake();\n  return proto.iotextypes.StakeRestake.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StakeRestake} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StakeRestake}\n */\n\n\nproto.iotextypes.StakeRestake.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBucketindex(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setStakedduration(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setAutostake(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeRestake.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StakeRestake.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StakeRestake} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StakeRestake.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBucketindex();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getStakedduration();\n\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n\n  f = message.getAutostake();\n\n  if (f) {\n    writer.writeBool(3, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n};\n/**\n * optional uint64 bucketIndex = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.StakeRestake.prototype.getBucketindex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StakeRestake} returns this\n */\n\n\nproto.iotextypes.StakeRestake.prototype.setBucketindex = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint32 stakedDuration = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.StakeRestake.prototype.getStakedduration = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StakeRestake} returns this\n */\n\n\nproto.iotextypes.StakeRestake.prototype.setStakedduration = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bool autoStake = 3;\n * @return {boolean}\n */\n\n\nproto.iotextypes.StakeRestake.prototype.getAutostake = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 3, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotextypes.StakeRestake} returns this\n */\n\n\nproto.iotextypes.StakeRestake.prototype.setAutostake = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n/**\n * optional bytes payload = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeRestake.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * optional bytes payload = 4;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.StakeRestake.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeRestake.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.StakeRestake} returns this\n */\n\n\nproto.iotextypes.StakeRestake.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StakeChangeCandidate.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StakeChangeCandidate.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StakeChangeCandidate} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StakeChangeCandidate.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bucketindex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      candidatename: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StakeChangeCandidate}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StakeChangeCandidate();\n  return proto.iotextypes.StakeChangeCandidate.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StakeChangeCandidate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StakeChangeCandidate}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBucketindex(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setCandidatename(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StakeChangeCandidate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StakeChangeCandidate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StakeChangeCandidate.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBucketindex();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCandidatename();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional uint64 bucketIndex = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.getBucketindex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StakeChangeCandidate} returns this\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.setBucketindex = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string candidateName = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.getCandidatename = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StakeChangeCandidate} returns this\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.setCandidatename = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.StakeChangeCandidate} returns this\n */\n\n\nproto.iotextypes.StakeChangeCandidate.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StakeTransferOwnership.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StakeTransferOwnership.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StakeTransferOwnership} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StakeTransferOwnership.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bucketindex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      voteraddress: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StakeTransferOwnership}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StakeTransferOwnership();\n  return proto.iotextypes.StakeTransferOwnership.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StakeTransferOwnership} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StakeTransferOwnership}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBucketindex(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVoteraddress(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StakeTransferOwnership.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StakeTransferOwnership} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StakeTransferOwnership.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBucketindex();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getVoteraddress();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional uint64 bucketIndex = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.getBucketindex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StakeTransferOwnership} returns this\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.setBucketindex = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string voterAddress = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.getVoteraddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StakeTransferOwnership} returns this\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.setVoteraddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.StakeTransferOwnership} returns this\n */\n\n\nproto.iotextypes.StakeTransferOwnership.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.CandidateBasicInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.CandidateBasicInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.CandidateBasicInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.CandidateBasicInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      operatoraddress: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      rewardaddress: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.CandidateBasicInfo}\n */\n\n\nproto.iotextypes.CandidateBasicInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.CandidateBasicInfo();\n  return proto.iotextypes.CandidateBasicInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.CandidateBasicInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.CandidateBasicInfo}\n */\n\n\nproto.iotextypes.CandidateBasicInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setOperatoraddress(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRewardaddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.CandidateBasicInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.CandidateBasicInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.CandidateBasicInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.CandidateBasicInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getOperatoraddress();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getRewardaddress();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.CandidateBasicInfo.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.CandidateBasicInfo} returns this\n */\n\n\nproto.iotextypes.CandidateBasicInfo.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string operatorAddress = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.CandidateBasicInfo.prototype.getOperatoraddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.CandidateBasicInfo} returns this\n */\n\n\nproto.iotextypes.CandidateBasicInfo.prototype.setOperatoraddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string rewardAddress = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.CandidateBasicInfo.prototype.getRewardaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.CandidateBasicInfo} returns this\n */\n\n\nproto.iotextypes.CandidateBasicInfo.prototype.setRewardaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.CandidateRegister.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.CandidateRegister.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.CandidateRegister} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.CandidateRegister.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      candidate: (f = msg.getCandidate()) && proto.iotextypes.CandidateBasicInfo.toObject(includeInstance, f),\n      stakedamount: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      stakedduration: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      autostake: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      owneraddress: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      payload: msg.getPayload_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.CandidateRegister}\n */\n\n\nproto.iotextypes.CandidateRegister.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.CandidateRegister();\n  return proto.iotextypes.CandidateRegister.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.CandidateRegister} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.CandidateRegister}\n */\n\n\nproto.iotextypes.CandidateRegister.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.CandidateBasicInfo();\n        reader.readMessage(value, proto.iotextypes.CandidateBasicInfo.deserializeBinaryFromReader);\n        msg.setCandidate(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStakedamount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setStakedduration(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setAutostake(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setOwneraddress(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPayload(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.CandidateRegister.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.CandidateRegister} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.CandidateRegister.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCandidate();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotextypes.CandidateBasicInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getStakedamount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getStakedduration();\n\n  if (f !== 0) {\n    writer.writeUint32(3, f);\n  }\n\n  f = message.getAutostake();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getOwneraddress();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getPayload_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(6, f);\n  }\n};\n/**\n * optional CandidateBasicInfo candidate = 1;\n * @return {?proto.iotextypes.CandidateBasicInfo}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getCandidate = function () {\n  return (\n    /** @type{?proto.iotextypes.CandidateBasicInfo} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.CandidateBasicInfo, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.CandidateBasicInfo|undefined} value\n * @return {!proto.iotextypes.CandidateRegister} returns this\n*/\n\n\nproto.iotextypes.CandidateRegister.prototype.setCandidate = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.CandidateRegister} returns this\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.clearCandidate = function () {\n  return this.setCandidate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.hasCandidate = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string stakedAmount = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getStakedamount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.CandidateRegister} returns this\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.setStakedamount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint32 stakedDuration = 3;\n * @return {number}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getStakedduration = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.CandidateRegister} returns this\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.setStakedduration = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional bool autoStake = 4;\n * @return {boolean}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getAutostake = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotextypes.CandidateRegister} returns this\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.setAutostake = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional string ownerAddress = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getOwneraddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.CandidateRegister} returns this\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.setOwneraddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional bytes payload = 6;\n * @return {string}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getPayload = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * optional bytes payload = 6;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getPayload_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPayload())\n  );\n};\n/**\n * optional bytes payload = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.getPayload_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPayload())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.CandidateRegister} returns this\n */\n\n\nproto.iotextypes.CandidateRegister.prototype.setPayload = function (value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StartSubChain.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StartSubChain.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StartSubChain} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StartSubChain.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      chainid: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      securitydeposit: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      operationdeposit: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      startheight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      parentheightoffset: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StartSubChain}\n */\n\n\nproto.iotextypes.StartSubChain.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StartSubChain();\n  return proto.iotextypes.StartSubChain.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StartSubChain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StartSubChain}\n */\n\n\nproto.iotextypes.StartSubChain.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setChainid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSecuritydeposit(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setOperationdeposit(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStartheight(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setParentheightoffset(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StartSubChain.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StartSubChain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StartSubChain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StartSubChain.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getChainid();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getSecuritydeposit();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getOperationdeposit();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getStartheight();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getParentheightoffset();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n};\n/**\n * optional uint32 chainID = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.StartSubChain.prototype.getChainid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StartSubChain} returns this\n */\n\n\nproto.iotextypes.StartSubChain.prototype.setChainid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string securityDeposit = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.StartSubChain.prototype.getSecuritydeposit = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StartSubChain} returns this\n */\n\n\nproto.iotextypes.StartSubChain.prototype.setSecuritydeposit = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string operationDeposit = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.StartSubChain.prototype.getOperationdeposit = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StartSubChain} returns this\n */\n\n\nproto.iotextypes.StartSubChain.prototype.setOperationdeposit = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional uint64 startHeight = 4;\n * @return {number}\n */\n\n\nproto.iotextypes.StartSubChain.prototype.getStartheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StartSubChain} returns this\n */\n\n\nproto.iotextypes.StartSubChain.prototype.setStartheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint64 parentHeightOffset = 5;\n * @return {number}\n */\n\n\nproto.iotextypes.StartSubChain.prototype.getParentheightoffset = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StartSubChain} returns this\n */\n\n\nproto.iotextypes.StartSubChain.prototype.setParentheightoffset = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.StopSubChain.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.StopSubChain.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.StopSubChain} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.StopSubChain.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      chainid: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      stopheight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.StopSubChain}\n */\n\n\nproto.iotextypes.StopSubChain.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.StopSubChain();\n  return proto.iotextypes.StopSubChain.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.StopSubChain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.StopSubChain}\n */\n\n\nproto.iotextypes.StopSubChain.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setChainid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStopheight(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.StopSubChain.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.StopSubChain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.StopSubChain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.StopSubChain.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getChainid();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getStopheight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional uint32 chainID = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.StopSubChain.prototype.getChainid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StopSubChain} returns this\n */\n\n\nproto.iotextypes.StopSubChain.prototype.setChainid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 stopHeight = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.StopSubChain.prototype.getStopheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.StopSubChain} returns this\n */\n\n\nproto.iotextypes.StopSubChain.prototype.setStopheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional string subChainAddress = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.StopSubChain.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.StopSubChain} returns this\n */\n\n\nproto.iotextypes.StopSubChain.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.MerkleRoot.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.MerkleRoot.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.MerkleRoot} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.MerkleRoot.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      value: msg.getValue_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.MerkleRoot}\n */\n\n\nproto.iotextypes.MerkleRoot.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.MerkleRoot();\n  return proto.iotextypes.MerkleRoot.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.MerkleRoot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.MerkleRoot}\n */\n\n\nproto.iotextypes.MerkleRoot.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setValue(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.MerkleRoot.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.MerkleRoot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.MerkleRoot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.MerkleRoot.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getValue_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.MerkleRoot.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.MerkleRoot} returns this\n */\n\n\nproto.iotextypes.MerkleRoot.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes value = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.MerkleRoot.prototype.getValue = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes value = 2;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\n\n\nproto.iotextypes.MerkleRoot.prototype.getValue_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getValue())\n  );\n};\n/**\n * optional bytes value = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.MerkleRoot.prototype.getValue_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getValue())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.MerkleRoot} returns this\n */\n\n\nproto.iotextypes.MerkleRoot.prototype.setValue = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.PutBlock.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PutBlock.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PutBlock.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PutBlock} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PutBlock.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      height: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      rootsList: jspb.Message.toObjectList(msg.getRootsList(), proto.iotextypes.MerkleRoot.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PutBlock}\n */\n\n\nproto.iotextypes.PutBlock.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PutBlock();\n  return proto.iotextypes.PutBlock.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PutBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PutBlock}\n */\n\n\nproto.iotextypes.PutBlock.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      case 3:\n        var value = new proto.iotextypes.MerkleRoot();\n        reader.readMessage(value, proto.iotextypes.MerkleRoot.deserializeBinaryFromReader);\n        msg.addRoots(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PutBlock.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PutBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PutBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PutBlock.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getRootsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.iotextypes.MerkleRoot.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.PutBlock.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PutBlock} returns this\n */\n\n\nproto.iotextypes.PutBlock.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.PutBlock.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PutBlock} returns this\n */\n\n\nproto.iotextypes.PutBlock.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated MerkleRoot roots = 3;\n * @return {!Array<!proto.iotextypes.MerkleRoot>}\n */\n\n\nproto.iotextypes.PutBlock.prototype.getRootsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.MerkleRoot>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.MerkleRoot, 3)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.MerkleRoot>} value\n * @return {!proto.iotextypes.PutBlock} returns this\n*/\n\n\nproto.iotextypes.PutBlock.prototype.setRootsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.iotextypes.MerkleRoot=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.MerkleRoot}\n */\n\n\nproto.iotextypes.PutBlock.prototype.addRoots = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iotextypes.MerkleRoot, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.PutBlock} returns this\n */\n\n\nproto.iotextypes.PutBlock.prototype.clearRootsList = function () {\n  return this.setRootsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.CreateDeposit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.CreateDeposit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.CreateDeposit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.CreateDeposit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      chainid: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      amount: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      recipient: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.CreateDeposit}\n */\n\n\nproto.iotextypes.CreateDeposit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.CreateDeposit();\n  return proto.iotextypes.CreateDeposit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.CreateDeposit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.CreateDeposit}\n */\n\n\nproto.iotextypes.CreateDeposit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setChainid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRecipient(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.CreateDeposit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.CreateDeposit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.CreateDeposit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.CreateDeposit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getChainid();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getRecipient();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional uint32 chainID = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.CreateDeposit.prototype.getChainid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.CreateDeposit} returns this\n */\n\n\nproto.iotextypes.CreateDeposit.prototype.setChainid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string amount = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.CreateDeposit.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.CreateDeposit} returns this\n */\n\n\nproto.iotextypes.CreateDeposit.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string recipient = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.CreateDeposit.prototype.getRecipient = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.CreateDeposit} returns this\n */\n\n\nproto.iotextypes.CreateDeposit.prototype.setRecipient = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.SettleDeposit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.SettleDeposit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.SettleDeposit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.SettleDeposit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      recipient: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      index: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.SettleDeposit}\n */\n\n\nproto.iotextypes.SettleDeposit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.SettleDeposit();\n  return proto.iotextypes.SettleDeposit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.SettleDeposit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.SettleDeposit}\n */\n\n\nproto.iotextypes.SettleDeposit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRecipient(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setIndex(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.SettleDeposit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.SettleDeposit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.SettleDeposit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.SettleDeposit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getRecipient();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getIndex();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional string amount = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.SettleDeposit.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.SettleDeposit} returns this\n */\n\n\nproto.iotextypes.SettleDeposit.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string recipient = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.SettleDeposit.prototype.getRecipient = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.SettleDeposit} returns this\n */\n\n\nproto.iotextypes.SettleDeposit.prototype.setRecipient = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint64 index = 3;\n * @return {number}\n */\n\n\nproto.iotextypes.SettleDeposit.prototype.getIndex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.SettleDeposit} returns this\n */\n\n\nproto.iotextypes.SettleDeposit.prototype.setIndex = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.CreatePlumChain.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.CreatePlumChain.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.CreatePlumChain} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.CreatePlumChain.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.CreatePlumChain}\n */\n\n\nproto.iotextypes.CreatePlumChain.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.CreatePlumChain();\n  return proto.iotextypes.CreatePlumChain.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.CreatePlumChain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.CreatePlumChain}\n */\n\n\nproto.iotextypes.CreatePlumChain.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.CreatePlumChain.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.CreatePlumChain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.CreatePlumChain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.CreatePlumChain.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.TerminatePlumChain.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.TerminatePlumChain.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.TerminatePlumChain} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.TerminatePlumChain.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.TerminatePlumChain}\n */\n\n\nproto.iotextypes.TerminatePlumChain.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.TerminatePlumChain();\n  return proto.iotextypes.TerminatePlumChain.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.TerminatePlumChain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.TerminatePlumChain}\n */\n\n\nproto.iotextypes.TerminatePlumChain.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.TerminatePlumChain.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.TerminatePlumChain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.TerminatePlumChain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.TerminatePlumChain.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.TerminatePlumChain.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.TerminatePlumChain} returns this\n */\n\n\nproto.iotextypes.TerminatePlumChain.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumPutBlock.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumPutBlock.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumPutBlock} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumPutBlock.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      height: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      rootsMap: (f = msg.getRootsMap()) ? f.toObject(includeInstance, undefined) : []\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumPutBlock}\n */\n\n\nproto.iotextypes.PlumPutBlock.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumPutBlock();\n  return proto.iotextypes.PlumPutBlock.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumPutBlock} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumPutBlock}\n */\n\n\nproto.iotextypes.PlumPutBlock.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      case 3:\n        var value = msg.getRootsMap();\n        reader.readMessage(value, function (message, reader) {\n          jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, \"\", \"\");\n        });\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumPutBlock.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumPutBlock.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumPutBlock} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumPutBlock.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getRootsMap(true);\n\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumPutBlock.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumPutBlock} returns this\n */\n\n\nproto.iotextypes.PlumPutBlock.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumPutBlock.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumPutBlock} returns this\n */\n\n\nproto.iotextypes.PlumPutBlock.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * map<string, bytes> roots = 3;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!(string|Uint8Array)>}\n */\n\n\nproto.iotextypes.PlumPutBlock.prototype.getRootsMap = function (opt_noLazyCreate) {\n  return (\n    /** @type {!jspb.Map<string,!(string|Uint8Array)>} */\n    jspb.Message.getMapField(this, 3, opt_noLazyCreate, null)\n  );\n};\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!proto.iotextypes.PlumPutBlock} returns this\n */\n\n\nproto.iotextypes.PlumPutBlock.prototype.clearRootsMap = function () {\n  this.getRootsMap().clear();\n  return this;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumCreateDeposit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumCreateDeposit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumCreateDeposit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumCreateDeposit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      amount: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      recipient: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumCreateDeposit}\n */\n\n\nproto.iotextypes.PlumCreateDeposit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumCreateDeposit();\n  return proto.iotextypes.PlumCreateDeposit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumCreateDeposit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumCreateDeposit}\n */\n\n\nproto.iotextypes.PlumCreateDeposit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRecipient(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumCreateDeposit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumCreateDeposit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumCreateDeposit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumCreateDeposit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getRecipient();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumCreateDeposit.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumCreateDeposit} returns this\n */\n\n\nproto.iotextypes.PlumCreateDeposit.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string amount = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumCreateDeposit.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumCreateDeposit} returns this\n */\n\n\nproto.iotextypes.PlumCreateDeposit.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string recipient = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumCreateDeposit.prototype.getRecipient = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumCreateDeposit} returns this\n */\n\n\nproto.iotextypes.PlumCreateDeposit.prototype.setRecipient = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumStartExit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumStartExit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumStartExit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumStartExit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      previoustransfer: msg.getPrevioustransfer_asB64(),\n      previoustransferblockproof: msg.getPrevioustransferblockproof_asB64(),\n      previoustransferblockheight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      exittransfer: msg.getExittransfer_asB64(),\n      exittransferblockproof: msg.getExittransferblockproof_asB64(),\n      exittransferblockheight: jspb.Message.getFieldWithDefault(msg, 7, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumStartExit}\n */\n\n\nproto.iotextypes.PlumStartExit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumStartExit();\n  return proto.iotextypes.PlumStartExit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumStartExit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumStartExit}\n */\n\n\nproto.iotextypes.PlumStartExit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPrevioustransfer(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPrevioustransferblockproof(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPrevioustransferblockheight(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setExittransfer(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setExittransferblockproof(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setExittransferblockheight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumStartExit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumStartExit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumStartExit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getPrevioustransfer_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getPrevioustransferblockproof_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getPrevioustransferblockheight();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getExittransfer_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(5, f);\n  }\n\n  f = message.getExittransferblockproof_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(6, f);\n  }\n\n  f = message.getExittransferblockheight();\n\n  if (f !== 0) {\n    writer.writeUint64(7, f);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumStartExit} returns this\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes previousTransfer = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getPrevioustransfer = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes previousTransfer = 2;\n * This is a type-conversion wrapper around `getPrevioustransfer()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getPrevioustransfer_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPrevioustransfer())\n  );\n};\n/**\n * optional bytes previousTransfer = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrevioustransfer()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getPrevioustransfer_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPrevioustransfer())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumStartExit} returns this\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.setPrevioustransfer = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional bytes previousTransferBlockProof = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getPrevioustransferblockproof = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes previousTransferBlockProof = 3;\n * This is a type-conversion wrapper around `getPrevioustransferblockproof()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getPrevioustransferblockproof_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPrevioustransferblockproof())\n  );\n};\n/**\n * optional bytes previousTransferBlockProof = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrevioustransferblockproof()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getPrevioustransferblockproof_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPrevioustransferblockproof())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumStartExit} returns this\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.setPrevioustransferblockproof = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional uint64 previousTransferBlockHeight = 4;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getPrevioustransferblockheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumStartExit} returns this\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.setPrevioustransferblockheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional bytes exitTransfer = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getExittransfer = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * optional bytes exitTransfer = 5;\n * This is a type-conversion wrapper around `getExittransfer()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getExittransfer_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getExittransfer())\n  );\n};\n/**\n * optional bytes exitTransfer = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getExittransfer()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getExittransfer_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getExittransfer())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumStartExit} returns this\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.setExittransfer = function (value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n/**\n * optional bytes exitTransferBlockProof = 6;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getExittransferblockproof = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * optional bytes exitTransferBlockProof = 6;\n * This is a type-conversion wrapper around `getExittransferblockproof()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getExittransferblockproof_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getExittransferblockproof())\n  );\n};\n/**\n * optional bytes exitTransferBlockProof = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getExittransferblockproof()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getExittransferblockproof_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getExittransferblockproof())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumStartExit} returns this\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.setExittransferblockproof = function (value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n/**\n * optional uint64 exitTransferBlockHeight = 7;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.getExittransferblockheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumStartExit} returns this\n */\n\n\nproto.iotextypes.PlumStartExit.prototype.setExittransferblockheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumChallengeExit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumChallengeExit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumChallengeExit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumChallengeExit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      coinid: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      challengetransfer: msg.getChallengetransfer_asB64(),\n      challengetransferblockproof: msg.getChallengetransferblockproof_asB64(),\n      challengetransferblockheight: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumChallengeExit}\n */\n\n\nproto.iotextypes.PlumChallengeExit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumChallengeExit();\n  return proto.iotextypes.PlumChallengeExit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumChallengeExit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumChallengeExit}\n */\n\n\nproto.iotextypes.PlumChallengeExit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCoinid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setChallengetransfer(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setChallengetransferblockproof(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setChallengetransferblockheight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumChallengeExit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumChallengeExit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumChallengeExit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCoinid();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getChallengetransfer_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getChallengetransferblockproof_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n\n  f = message.getChallengetransferblockheight();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 coinID = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getCoinid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.setCoinid = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bytes challengeTransfer = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getChallengetransfer = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes challengeTransfer = 3;\n * This is a type-conversion wrapper around `getChallengetransfer()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getChallengetransfer_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getChallengetransfer())\n  );\n};\n/**\n * optional bytes challengeTransfer = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallengetransfer()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getChallengetransfer_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getChallengetransfer())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.setChallengetransfer = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional bytes challengeTransferBlockProof = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getChallengetransferblockproof = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * optional bytes challengeTransferBlockProof = 4;\n * This is a type-conversion wrapper around `getChallengetransferblockproof()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getChallengetransferblockproof_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getChallengetransferblockproof())\n  );\n};\n/**\n * optional bytes challengeTransferBlockProof = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallengetransferblockproof()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getChallengetransferblockproof_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getChallengetransferblockproof())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.setChallengetransferblockproof = function (value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n/**\n * optional uint64 challengeTransferBlockHeight = 5;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.getChallengetransferblockheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumChallengeExit.prototype.setChallengetransferblockheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumResponseChallengeExit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumResponseChallengeExit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumResponseChallengeExit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumResponseChallengeExit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      coinid: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      challengetransfer: msg.getChallengetransfer_asB64(),\n      responsetransfer: msg.getResponsetransfer_asB64(),\n      responsetransferblockproof: msg.getResponsetransferblockproof_asB64(),\n      previoustransferblockheight: jspb.Message.getFieldWithDefault(msg, 6, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumResponseChallengeExit}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumResponseChallengeExit();\n  return proto.iotextypes.PlumResponseChallengeExit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumResponseChallengeExit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumResponseChallengeExit}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCoinid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setChallengetransfer(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setResponsetransfer(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setResponsetransferblockproof(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPrevioustransferblockheight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumResponseChallengeExit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumResponseChallengeExit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCoinid();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getChallengetransfer_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getResponsetransfer_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n\n  f = message.getResponsetransferblockproof_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(5, f);\n  }\n\n  f = message.getPrevioustransferblockheight();\n\n  if (f !== 0) {\n    writer.writeUint64(6, f);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumResponseChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 coinID = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getCoinid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumResponseChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.setCoinid = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bytes challengeTransfer = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getChallengetransfer = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes challengeTransfer = 3;\n * This is a type-conversion wrapper around `getChallengetransfer()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getChallengetransfer_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getChallengetransfer())\n  );\n};\n/**\n * optional bytes challengeTransfer = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChallengetransfer()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getChallengetransfer_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getChallengetransfer())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumResponseChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.setChallengetransfer = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional bytes responseTransfer = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getResponsetransfer = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * optional bytes responseTransfer = 4;\n * This is a type-conversion wrapper around `getResponsetransfer()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getResponsetransfer_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getResponsetransfer())\n  );\n};\n/**\n * optional bytes responseTransfer = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResponsetransfer()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getResponsetransfer_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getResponsetransfer())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumResponseChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.setResponsetransfer = function (value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n/**\n * optional bytes responseTransferBlockProof = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getResponsetransferblockproof = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * optional bytes responseTransferBlockProof = 5;\n * This is a type-conversion wrapper around `getResponsetransferblockproof()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getResponsetransferblockproof_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getResponsetransferblockproof())\n  );\n};\n/**\n * optional bytes responseTransferBlockProof = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResponsetransferblockproof()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getResponsetransferblockproof_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getResponsetransferblockproof())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumResponseChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.setResponsetransferblockproof = function (value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n/**\n * optional uint64 previousTransferBlockHeight = 6;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.getPrevioustransferblockheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumResponseChallengeExit} returns this\n */\n\n\nproto.iotextypes.PlumResponseChallengeExit.prototype.setPrevioustransferblockheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumFinalizeExit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumFinalizeExit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumFinalizeExit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumFinalizeExit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subchainaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      coinid: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumFinalizeExit}\n */\n\n\nproto.iotextypes.PlumFinalizeExit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumFinalizeExit();\n  return proto.iotextypes.PlumFinalizeExit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumFinalizeExit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumFinalizeExit}\n */\n\n\nproto.iotextypes.PlumFinalizeExit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSubchainaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCoinid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumFinalizeExit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumFinalizeExit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumFinalizeExit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumFinalizeExit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubchainaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getCoinid();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * optional string subChainAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumFinalizeExit.prototype.getSubchainaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumFinalizeExit} returns this\n */\n\n\nproto.iotextypes.PlumFinalizeExit.prototype.setSubchainaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 coinID = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumFinalizeExit.prototype.getCoinid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumFinalizeExit} returns this\n */\n\n\nproto.iotextypes.PlumFinalizeExit.prototype.setCoinid = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumSettleDeposit.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumSettleDeposit.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumSettleDeposit} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumSettleDeposit.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      coinid: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumSettleDeposit}\n */\n\n\nproto.iotextypes.PlumSettleDeposit.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumSettleDeposit();\n  return proto.iotextypes.PlumSettleDeposit.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumSettleDeposit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumSettleDeposit}\n */\n\n\nproto.iotextypes.PlumSettleDeposit.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCoinid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumSettleDeposit.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumSettleDeposit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumSettleDeposit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumSettleDeposit.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCoinid();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 coinID = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumSettleDeposit.prototype.getCoinid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumSettleDeposit} returns this\n */\n\n\nproto.iotextypes.PlumSettleDeposit.prototype.setCoinid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.PlumTransfer.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.PlumTransfer.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.PlumTransfer} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.PlumTransfer.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      coinid: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      denomination: msg.getDenomination_asB64(),\n      owner: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      recipient: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.PlumTransfer}\n */\n\n\nproto.iotextypes.PlumTransfer.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.PlumTransfer();\n  return proto.iotextypes.PlumTransfer.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.PlumTransfer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.PlumTransfer}\n */\n\n\nproto.iotextypes.PlumTransfer.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCoinid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDenomination(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setOwner(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRecipient(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.PlumTransfer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.PlumTransfer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.PlumTransfer.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCoinid();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getDenomination_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getOwner();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getRecipient();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional uint64 coinID = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.getCoinid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.PlumTransfer} returns this\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.setCoinid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional bytes denomination = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.getDenomination = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes denomination = 2;\n * This is a type-conversion wrapper around `getDenomination()`\n * @return {string}\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.getDenomination_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDenomination())\n  );\n};\n/**\n * optional bytes denomination = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDenomination()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.getDenomination_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDenomination())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.PlumTransfer} returns this\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.setDenomination = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional string owner = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.getOwner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumTransfer} returns this\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.setOwner = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string recipient = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.getRecipient = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.PlumTransfer} returns this\n */\n\n\nproto.iotextypes.PlumTransfer.prototype.setRecipient = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.iotextypes.ActionCore.oneofGroups_ = [[10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50]];\n/**\n * @enum {number}\n */\n\nproto.iotextypes.ActionCore.ActionCase = {\n  ACTION_NOT_SET: 0,\n  TRANSFER: 10,\n  EXECUTION: 12,\n  STARTSUBCHAIN: 13,\n  STOPSUBCHAIN: 14,\n  PUTBLOCK: 15,\n  CREATEDEPOSIT: 16,\n  SETTLEDEPOSIT: 17,\n  CREATEPLUMCHAIN: 18,\n  TERMINATEPLUMCHAIN: 19,\n  PLUMPUTBLOCK: 20,\n  PLUMCREATEDEPOSIT: 21,\n  PLUMSTARTEXIT: 22,\n  PLUMCHALLENGEEXIT: 23,\n  PLUMRESPONSECHALLENGEEXIT: 24,\n  PLUMFINALIZEEXIT: 25,\n  PLUMSETTLEDEPOSIT: 26,\n  PLUMTRANSFER: 27,\n  DEPOSITTOREWARDINGFUND: 30,\n  CLAIMFROMREWARDINGFUND: 31,\n  GRANTREWARD: 32,\n  STAKECREATE: 40,\n  STAKEUNSTAKE: 41,\n  STAKEWITHDRAW: 42,\n  STAKEADDDEPOSIT: 43,\n  STAKERESTAKE: 44,\n  STAKECHANGECANDIDATE: 45,\n  STAKETRANSFEROWNERSHIP: 46,\n  CANDIDATEREGISTER: 47,\n  CANDIDATEUPDATE: 48,\n  PUTPOLLRESULT: 50\n};\n/**\n * @return {proto.iotextypes.ActionCore.ActionCase}\n */\n\nproto.iotextypes.ActionCore.prototype.getActionCase = function () {\n  return (\n    /** @type {proto.iotextypes.ActionCore.ActionCase} */\n    jspb.Message.computeOneofCase(this, proto.iotextypes.ActionCore.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.ActionCore.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.ActionCore.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.ActionCore} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.ActionCore.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      nonce: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      gaslimit: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      gasprice: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      chainid: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      transfer: (f = msg.getTransfer()) && proto.iotextypes.Transfer.toObject(includeInstance, f),\n      execution: (f = msg.getExecution()) && proto.iotextypes.Execution.toObject(includeInstance, f),\n      startsubchain: (f = msg.getStartsubchain()) && proto.iotextypes.StartSubChain.toObject(includeInstance, f),\n      stopsubchain: (f = msg.getStopsubchain()) && proto.iotextypes.StopSubChain.toObject(includeInstance, f),\n      putblock: (f = msg.getPutblock()) && proto.iotextypes.PutBlock.toObject(includeInstance, f),\n      createdeposit: (f = msg.getCreatedeposit()) && proto.iotextypes.CreateDeposit.toObject(includeInstance, f),\n      settledeposit: (f = msg.getSettledeposit()) && proto.iotextypes.SettleDeposit.toObject(includeInstance, f),\n      createplumchain: (f = msg.getCreateplumchain()) && proto.iotextypes.CreatePlumChain.toObject(includeInstance, f),\n      terminateplumchain: (f = msg.getTerminateplumchain()) && proto.iotextypes.TerminatePlumChain.toObject(includeInstance, f),\n      plumputblock: (f = msg.getPlumputblock()) && proto.iotextypes.PlumPutBlock.toObject(includeInstance, f),\n      plumcreatedeposit: (f = msg.getPlumcreatedeposit()) && proto.iotextypes.PlumCreateDeposit.toObject(includeInstance, f),\n      plumstartexit: (f = msg.getPlumstartexit()) && proto.iotextypes.PlumStartExit.toObject(includeInstance, f),\n      plumchallengeexit: (f = msg.getPlumchallengeexit()) && proto.iotextypes.PlumChallengeExit.toObject(includeInstance, f),\n      plumresponsechallengeexit: (f = msg.getPlumresponsechallengeexit()) && proto.iotextypes.PlumResponseChallengeExit.toObject(includeInstance, f),\n      plumfinalizeexit: (f = msg.getPlumfinalizeexit()) && proto.iotextypes.PlumFinalizeExit.toObject(includeInstance, f),\n      plumsettledeposit: (f = msg.getPlumsettledeposit()) && proto.iotextypes.PlumSettleDeposit.toObject(includeInstance, f),\n      plumtransfer: (f = msg.getPlumtransfer()) && proto.iotextypes.PlumTransfer.toObject(includeInstance, f),\n      deposittorewardingfund: (f = msg.getDeposittorewardingfund()) && proto.iotextypes.DepositToRewardingFund.toObject(includeInstance, f),\n      claimfromrewardingfund: (f = msg.getClaimfromrewardingfund()) && proto.iotextypes.ClaimFromRewardingFund.toObject(includeInstance, f),\n      grantreward: (f = msg.getGrantreward()) && proto.iotextypes.GrantReward.toObject(includeInstance, f),\n      stakecreate: (f = msg.getStakecreate()) && proto.iotextypes.StakeCreate.toObject(includeInstance, f),\n      stakeunstake: (f = msg.getStakeunstake()) && proto.iotextypes.StakeReclaim.toObject(includeInstance, f),\n      stakewithdraw: (f = msg.getStakewithdraw()) && proto.iotextypes.StakeReclaim.toObject(includeInstance, f),\n      stakeadddeposit: (f = msg.getStakeadddeposit()) && proto.iotextypes.StakeAddDeposit.toObject(includeInstance, f),\n      stakerestake: (f = msg.getStakerestake()) && proto.iotextypes.StakeRestake.toObject(includeInstance, f),\n      stakechangecandidate: (f = msg.getStakechangecandidate()) && proto.iotextypes.StakeChangeCandidate.toObject(includeInstance, f),\n      staketransferownership: (f = msg.getStaketransferownership()) && proto.iotextypes.StakeTransferOwnership.toObject(includeInstance, f),\n      candidateregister: (f = msg.getCandidateregister()) && proto.iotextypes.CandidateRegister.toObject(includeInstance, f),\n      candidateupdate: (f = msg.getCandidateupdate()) && proto.iotextypes.CandidateBasicInfo.toObject(includeInstance, f),\n      putpollresult: (f = msg.getPutpollresult()) && proto.iotextypes.PutPollResult.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.ActionCore}\n */\n\n\nproto.iotextypes.ActionCore.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.ActionCore();\n  return proto.iotextypes.ActionCore.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.ActionCore} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.ActionCore}\n */\n\n\nproto.iotextypes.ActionCore.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setVersion(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setNonce(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGaslimit(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setGasprice(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setChainid(value);\n        break;\n\n      case 10:\n        var value = new proto.iotextypes.Transfer();\n        reader.readMessage(value, proto.iotextypes.Transfer.deserializeBinaryFromReader);\n        msg.setTransfer(value);\n        break;\n\n      case 12:\n        var value = new proto.iotextypes.Execution();\n        reader.readMessage(value, proto.iotextypes.Execution.deserializeBinaryFromReader);\n        msg.setExecution(value);\n        break;\n\n      case 13:\n        var value = new proto.iotextypes.StartSubChain();\n        reader.readMessage(value, proto.iotextypes.StartSubChain.deserializeBinaryFromReader);\n        msg.setStartsubchain(value);\n        break;\n\n      case 14:\n        var value = new proto.iotextypes.StopSubChain();\n        reader.readMessage(value, proto.iotextypes.StopSubChain.deserializeBinaryFromReader);\n        msg.setStopsubchain(value);\n        break;\n\n      case 15:\n        var value = new proto.iotextypes.PutBlock();\n        reader.readMessage(value, proto.iotextypes.PutBlock.deserializeBinaryFromReader);\n        msg.setPutblock(value);\n        break;\n\n      case 16:\n        var value = new proto.iotextypes.CreateDeposit();\n        reader.readMessage(value, proto.iotextypes.CreateDeposit.deserializeBinaryFromReader);\n        msg.setCreatedeposit(value);\n        break;\n\n      case 17:\n        var value = new proto.iotextypes.SettleDeposit();\n        reader.readMessage(value, proto.iotextypes.SettleDeposit.deserializeBinaryFromReader);\n        msg.setSettledeposit(value);\n        break;\n\n      case 18:\n        var value = new proto.iotextypes.CreatePlumChain();\n        reader.readMessage(value, proto.iotextypes.CreatePlumChain.deserializeBinaryFromReader);\n        msg.setCreateplumchain(value);\n        break;\n\n      case 19:\n        var value = new proto.iotextypes.TerminatePlumChain();\n        reader.readMessage(value, proto.iotextypes.TerminatePlumChain.deserializeBinaryFromReader);\n        msg.setTerminateplumchain(value);\n        break;\n\n      case 20:\n        var value = new proto.iotextypes.PlumPutBlock();\n        reader.readMessage(value, proto.iotextypes.PlumPutBlock.deserializeBinaryFromReader);\n        msg.setPlumputblock(value);\n        break;\n\n      case 21:\n        var value = new proto.iotextypes.PlumCreateDeposit();\n        reader.readMessage(value, proto.iotextypes.PlumCreateDeposit.deserializeBinaryFromReader);\n        msg.setPlumcreatedeposit(value);\n        break;\n\n      case 22:\n        var value = new proto.iotextypes.PlumStartExit();\n        reader.readMessage(value, proto.iotextypes.PlumStartExit.deserializeBinaryFromReader);\n        msg.setPlumstartexit(value);\n        break;\n\n      case 23:\n        var value = new proto.iotextypes.PlumChallengeExit();\n        reader.readMessage(value, proto.iotextypes.PlumChallengeExit.deserializeBinaryFromReader);\n        msg.setPlumchallengeexit(value);\n        break;\n\n      case 24:\n        var value = new proto.iotextypes.PlumResponseChallengeExit();\n        reader.readMessage(value, proto.iotextypes.PlumResponseChallengeExit.deserializeBinaryFromReader);\n        msg.setPlumresponsechallengeexit(value);\n        break;\n\n      case 25:\n        var value = new proto.iotextypes.PlumFinalizeExit();\n        reader.readMessage(value, proto.iotextypes.PlumFinalizeExit.deserializeBinaryFromReader);\n        msg.setPlumfinalizeexit(value);\n        break;\n\n      case 26:\n        var value = new proto.iotextypes.PlumSettleDeposit();\n        reader.readMessage(value, proto.iotextypes.PlumSettleDeposit.deserializeBinaryFromReader);\n        msg.setPlumsettledeposit(value);\n        break;\n\n      case 27:\n        var value = new proto.iotextypes.PlumTransfer();\n        reader.readMessage(value, proto.iotextypes.PlumTransfer.deserializeBinaryFromReader);\n        msg.setPlumtransfer(value);\n        break;\n\n      case 30:\n        var value = new proto.iotextypes.DepositToRewardingFund();\n        reader.readMessage(value, proto.iotextypes.DepositToRewardingFund.deserializeBinaryFromReader);\n        msg.setDeposittorewardingfund(value);\n        break;\n\n      case 31:\n        var value = new proto.iotextypes.ClaimFromRewardingFund();\n        reader.readMessage(value, proto.iotextypes.ClaimFromRewardingFund.deserializeBinaryFromReader);\n        msg.setClaimfromrewardingfund(value);\n        break;\n\n      case 32:\n        var value = new proto.iotextypes.GrantReward();\n        reader.readMessage(value, proto.iotextypes.GrantReward.deserializeBinaryFromReader);\n        msg.setGrantreward(value);\n        break;\n\n      case 40:\n        var value = new proto.iotextypes.StakeCreate();\n        reader.readMessage(value, proto.iotextypes.StakeCreate.deserializeBinaryFromReader);\n        msg.setStakecreate(value);\n        break;\n\n      case 41:\n        var value = new proto.iotextypes.StakeReclaim();\n        reader.readMessage(value, proto.iotextypes.StakeReclaim.deserializeBinaryFromReader);\n        msg.setStakeunstake(value);\n        break;\n\n      case 42:\n        var value = new proto.iotextypes.StakeReclaim();\n        reader.readMessage(value, proto.iotextypes.StakeReclaim.deserializeBinaryFromReader);\n        msg.setStakewithdraw(value);\n        break;\n\n      case 43:\n        var value = new proto.iotextypes.StakeAddDeposit();\n        reader.readMessage(value, proto.iotextypes.StakeAddDeposit.deserializeBinaryFromReader);\n        msg.setStakeadddeposit(value);\n        break;\n\n      case 44:\n        var value = new proto.iotextypes.StakeRestake();\n        reader.readMessage(value, proto.iotextypes.StakeRestake.deserializeBinaryFromReader);\n        msg.setStakerestake(value);\n        break;\n\n      case 45:\n        var value = new proto.iotextypes.StakeChangeCandidate();\n        reader.readMessage(value, proto.iotextypes.StakeChangeCandidate.deserializeBinaryFromReader);\n        msg.setStakechangecandidate(value);\n        break;\n\n      case 46:\n        var value = new proto.iotextypes.StakeTransferOwnership();\n        reader.readMessage(value, proto.iotextypes.StakeTransferOwnership.deserializeBinaryFromReader);\n        msg.setStaketransferownership(value);\n        break;\n\n      case 47:\n        var value = new proto.iotextypes.CandidateRegister();\n        reader.readMessage(value, proto.iotextypes.CandidateRegister.deserializeBinaryFromReader);\n        msg.setCandidateregister(value);\n        break;\n\n      case 48:\n        var value = new proto.iotextypes.CandidateBasicInfo();\n        reader.readMessage(value, proto.iotextypes.CandidateBasicInfo.deserializeBinaryFromReader);\n        msg.setCandidateupdate(value);\n        break;\n\n      case 50:\n        var value = new proto.iotextypes.PutPollResult();\n        reader.readMessage(value, proto.iotextypes.PutPollResult.deserializeBinaryFromReader);\n        msg.setPutpollresult(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ActionCore.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.ActionCore.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.ActionCore} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.ActionCore.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getNonce();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getGaslimit();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getGasprice();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getChainid();\n\n  if (f !== 0) {\n    writer.writeUint32(5, f);\n  }\n\n  f = message.getTransfer();\n\n  if (f != null) {\n    writer.writeMessage(10, f, proto.iotextypes.Transfer.serializeBinaryToWriter);\n  }\n\n  f = message.getExecution();\n\n  if (f != null) {\n    writer.writeMessage(12, f, proto.iotextypes.Execution.serializeBinaryToWriter);\n  }\n\n  f = message.getStartsubchain();\n\n  if (f != null) {\n    writer.writeMessage(13, f, proto.iotextypes.StartSubChain.serializeBinaryToWriter);\n  }\n\n  f = message.getStopsubchain();\n\n  if (f != null) {\n    writer.writeMessage(14, f, proto.iotextypes.StopSubChain.serializeBinaryToWriter);\n  }\n\n  f = message.getPutblock();\n\n  if (f != null) {\n    writer.writeMessage(15, f, proto.iotextypes.PutBlock.serializeBinaryToWriter);\n  }\n\n  f = message.getCreatedeposit();\n\n  if (f != null) {\n    writer.writeMessage(16, f, proto.iotextypes.CreateDeposit.serializeBinaryToWriter);\n  }\n\n  f = message.getSettledeposit();\n\n  if (f != null) {\n    writer.writeMessage(17, f, proto.iotextypes.SettleDeposit.serializeBinaryToWriter);\n  }\n\n  f = message.getCreateplumchain();\n\n  if (f != null) {\n    writer.writeMessage(18, f, proto.iotextypes.CreatePlumChain.serializeBinaryToWriter);\n  }\n\n  f = message.getTerminateplumchain();\n\n  if (f != null) {\n    writer.writeMessage(19, f, proto.iotextypes.TerminatePlumChain.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumputblock();\n\n  if (f != null) {\n    writer.writeMessage(20, f, proto.iotextypes.PlumPutBlock.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumcreatedeposit();\n\n  if (f != null) {\n    writer.writeMessage(21, f, proto.iotextypes.PlumCreateDeposit.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumstartexit();\n\n  if (f != null) {\n    writer.writeMessage(22, f, proto.iotextypes.PlumStartExit.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumchallengeexit();\n\n  if (f != null) {\n    writer.writeMessage(23, f, proto.iotextypes.PlumChallengeExit.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumresponsechallengeexit();\n\n  if (f != null) {\n    writer.writeMessage(24, f, proto.iotextypes.PlumResponseChallengeExit.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumfinalizeexit();\n\n  if (f != null) {\n    writer.writeMessage(25, f, proto.iotextypes.PlumFinalizeExit.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumsettledeposit();\n\n  if (f != null) {\n    writer.writeMessage(26, f, proto.iotextypes.PlumSettleDeposit.serializeBinaryToWriter);\n  }\n\n  f = message.getPlumtransfer();\n\n  if (f != null) {\n    writer.writeMessage(27, f, proto.iotextypes.PlumTransfer.serializeBinaryToWriter);\n  }\n\n  f = message.getDeposittorewardingfund();\n\n  if (f != null) {\n    writer.writeMessage(30, f, proto.iotextypes.DepositToRewardingFund.serializeBinaryToWriter);\n  }\n\n  f = message.getClaimfromrewardingfund();\n\n  if (f != null) {\n    writer.writeMessage(31, f, proto.iotextypes.ClaimFromRewardingFund.serializeBinaryToWriter);\n  }\n\n  f = message.getGrantreward();\n\n  if (f != null) {\n    writer.writeMessage(32, f, proto.iotextypes.GrantReward.serializeBinaryToWriter);\n  }\n\n  f = message.getStakecreate();\n\n  if (f != null) {\n    writer.writeMessage(40, f, proto.iotextypes.StakeCreate.serializeBinaryToWriter);\n  }\n\n  f = message.getStakeunstake();\n\n  if (f != null) {\n    writer.writeMessage(41, f, proto.iotextypes.StakeReclaim.serializeBinaryToWriter);\n  }\n\n  f = message.getStakewithdraw();\n\n  if (f != null) {\n    writer.writeMessage(42, f, proto.iotextypes.StakeReclaim.serializeBinaryToWriter);\n  }\n\n  f = message.getStakeadddeposit();\n\n  if (f != null) {\n    writer.writeMessage(43, f, proto.iotextypes.StakeAddDeposit.serializeBinaryToWriter);\n  }\n\n  f = message.getStakerestake();\n\n  if (f != null) {\n    writer.writeMessage(44, f, proto.iotextypes.StakeRestake.serializeBinaryToWriter);\n  }\n\n  f = message.getStakechangecandidate();\n\n  if (f != null) {\n    writer.writeMessage(45, f, proto.iotextypes.StakeChangeCandidate.serializeBinaryToWriter);\n  }\n\n  f = message.getStaketransferownership();\n\n  if (f != null) {\n    writer.writeMessage(46, f, proto.iotextypes.StakeTransferOwnership.serializeBinaryToWriter);\n  }\n\n  f = message.getCandidateregister();\n\n  if (f != null) {\n    writer.writeMessage(47, f, proto.iotextypes.CandidateRegister.serializeBinaryToWriter);\n  }\n\n  f = message.getCandidateupdate();\n\n  if (f != null) {\n    writer.writeMessage(48, f, proto.iotextypes.CandidateBasicInfo.serializeBinaryToWriter);\n  }\n\n  f = message.getPutpollresult();\n\n  if (f != null) {\n    writer.writeMessage(50, f, proto.iotextypes.PutPollResult.serializeBinaryToWriter);\n  }\n};\n/**\n * optional uint32 version = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getVersion = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.setVersion = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 nonce = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getNonce = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.setNonce = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 gasLimit = 3;\n * @return {number}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getGaslimit = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.setGaslimit = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional string gasPrice = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getGasprice = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.setGasprice = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional uint32 chainID = 5;\n * @return {number}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getChainid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.setChainid = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional Transfer transfer = 10;\n * @return {?proto.iotextypes.Transfer}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getTransfer = function () {\n  return (\n    /** @type{?proto.iotextypes.Transfer} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.Transfer, 10)\n  );\n};\n/**\n * @param {?proto.iotextypes.Transfer|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setTransfer = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 10, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearTransfer = function () {\n  return this.setTransfer(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasTransfer = function () {\n  return jspb.Message.getField(this, 10) != null;\n};\n/**\n * optional Execution execution = 12;\n * @return {?proto.iotextypes.Execution}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getExecution = function () {\n  return (\n    /** @type{?proto.iotextypes.Execution} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.Execution, 12)\n  );\n};\n/**\n * @param {?proto.iotextypes.Execution|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setExecution = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 12, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearExecution = function () {\n  return this.setExecution(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasExecution = function () {\n  return jspb.Message.getField(this, 12) != null;\n};\n/**\n * optional StartSubChain startSubChain = 13;\n * @return {?proto.iotextypes.StartSubChain}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStartsubchain = function () {\n  return (\n    /** @type{?proto.iotextypes.StartSubChain} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StartSubChain, 13)\n  );\n};\n/**\n * @param {?proto.iotextypes.StartSubChain|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStartsubchain = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 13, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStartsubchain = function () {\n  return this.setStartsubchain(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStartsubchain = function () {\n  return jspb.Message.getField(this, 13) != null;\n};\n/**\n * optional StopSubChain stopSubChain = 14;\n * @return {?proto.iotextypes.StopSubChain}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStopsubchain = function () {\n  return (\n    /** @type{?proto.iotextypes.StopSubChain} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StopSubChain, 14)\n  );\n};\n/**\n * @param {?proto.iotextypes.StopSubChain|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStopsubchain = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 14, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStopsubchain = function () {\n  return this.setStopsubchain(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStopsubchain = function () {\n  return jspb.Message.getField(this, 14) != null;\n};\n/**\n * optional PutBlock putBlock = 15;\n * @return {?proto.iotextypes.PutBlock}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPutblock = function () {\n  return (\n    /** @type{?proto.iotextypes.PutBlock} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PutBlock, 15)\n  );\n};\n/**\n * @param {?proto.iotextypes.PutBlock|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPutblock = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 15, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPutblock = function () {\n  return this.setPutblock(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPutblock = function () {\n  return jspb.Message.getField(this, 15) != null;\n};\n/**\n * optional CreateDeposit createDeposit = 16;\n * @return {?proto.iotextypes.CreateDeposit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getCreatedeposit = function () {\n  return (\n    /** @type{?proto.iotextypes.CreateDeposit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.CreateDeposit, 16)\n  );\n};\n/**\n * @param {?proto.iotextypes.CreateDeposit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setCreatedeposit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 16, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearCreatedeposit = function () {\n  return this.setCreatedeposit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasCreatedeposit = function () {\n  return jspb.Message.getField(this, 16) != null;\n};\n/**\n * optional SettleDeposit settleDeposit = 17;\n * @return {?proto.iotextypes.SettleDeposit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getSettledeposit = function () {\n  return (\n    /** @type{?proto.iotextypes.SettleDeposit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.SettleDeposit, 17)\n  );\n};\n/**\n * @param {?proto.iotextypes.SettleDeposit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setSettledeposit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 17, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearSettledeposit = function () {\n  return this.setSettledeposit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasSettledeposit = function () {\n  return jspb.Message.getField(this, 17) != null;\n};\n/**\n * optional CreatePlumChain createPlumChain = 18;\n * @return {?proto.iotextypes.CreatePlumChain}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getCreateplumchain = function () {\n  return (\n    /** @type{?proto.iotextypes.CreatePlumChain} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.CreatePlumChain, 18)\n  );\n};\n/**\n * @param {?proto.iotextypes.CreatePlumChain|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setCreateplumchain = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 18, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearCreateplumchain = function () {\n  return this.setCreateplumchain(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasCreateplumchain = function () {\n  return jspb.Message.getField(this, 18) != null;\n};\n/**\n * optional TerminatePlumChain terminatePlumChain = 19;\n * @return {?proto.iotextypes.TerminatePlumChain}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getTerminateplumchain = function () {\n  return (\n    /** @type{?proto.iotextypes.TerminatePlumChain} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.TerminatePlumChain, 19)\n  );\n};\n/**\n * @param {?proto.iotextypes.TerminatePlumChain|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setTerminateplumchain = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 19, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearTerminateplumchain = function () {\n  return this.setTerminateplumchain(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasTerminateplumchain = function () {\n  return jspb.Message.getField(this, 19) != null;\n};\n/**\n * optional PlumPutBlock plumPutBlock = 20;\n * @return {?proto.iotextypes.PlumPutBlock}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumputblock = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumPutBlock} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumPutBlock, 20)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumPutBlock|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumputblock = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 20, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumputblock = function () {\n  return this.setPlumputblock(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumputblock = function () {\n  return jspb.Message.getField(this, 20) != null;\n};\n/**\n * optional PlumCreateDeposit plumCreateDeposit = 21;\n * @return {?proto.iotextypes.PlumCreateDeposit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumcreatedeposit = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumCreateDeposit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumCreateDeposit, 21)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumCreateDeposit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumcreatedeposit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 21, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumcreatedeposit = function () {\n  return this.setPlumcreatedeposit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumcreatedeposit = function () {\n  return jspb.Message.getField(this, 21) != null;\n};\n/**\n * optional PlumStartExit plumStartExit = 22;\n * @return {?proto.iotextypes.PlumStartExit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumstartexit = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumStartExit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumStartExit, 22)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumStartExit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumstartexit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 22, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumstartexit = function () {\n  return this.setPlumstartexit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumstartexit = function () {\n  return jspb.Message.getField(this, 22) != null;\n};\n/**\n * optional PlumChallengeExit plumChallengeExit = 23;\n * @return {?proto.iotextypes.PlumChallengeExit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumchallengeexit = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumChallengeExit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumChallengeExit, 23)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumChallengeExit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumchallengeexit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 23, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumchallengeexit = function () {\n  return this.setPlumchallengeexit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumchallengeexit = function () {\n  return jspb.Message.getField(this, 23) != null;\n};\n/**\n * optional PlumResponseChallengeExit plumResponseChallengeExit = 24;\n * @return {?proto.iotextypes.PlumResponseChallengeExit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumresponsechallengeexit = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumResponseChallengeExit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumResponseChallengeExit, 24)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumResponseChallengeExit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumresponsechallengeexit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 24, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumresponsechallengeexit = function () {\n  return this.setPlumresponsechallengeexit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumresponsechallengeexit = function () {\n  return jspb.Message.getField(this, 24) != null;\n};\n/**\n * optional PlumFinalizeExit plumFinalizeExit = 25;\n * @return {?proto.iotextypes.PlumFinalizeExit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumfinalizeexit = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumFinalizeExit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumFinalizeExit, 25)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumFinalizeExit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumfinalizeexit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 25, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumfinalizeexit = function () {\n  return this.setPlumfinalizeexit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumfinalizeexit = function () {\n  return jspb.Message.getField(this, 25) != null;\n};\n/**\n * optional PlumSettleDeposit plumSettleDeposit = 26;\n * @return {?proto.iotextypes.PlumSettleDeposit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumsettledeposit = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumSettleDeposit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumSettleDeposit, 26)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumSettleDeposit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumsettledeposit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 26, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumsettledeposit = function () {\n  return this.setPlumsettledeposit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumsettledeposit = function () {\n  return jspb.Message.getField(this, 26) != null;\n};\n/**\n * optional PlumTransfer plumTransfer = 27;\n * @return {?proto.iotextypes.PlumTransfer}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPlumtransfer = function () {\n  return (\n    /** @type{?proto.iotextypes.PlumTransfer} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PlumTransfer, 27)\n  );\n};\n/**\n * @param {?proto.iotextypes.PlumTransfer|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPlumtransfer = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 27, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPlumtransfer = function () {\n  return this.setPlumtransfer(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPlumtransfer = function () {\n  return jspb.Message.getField(this, 27) != null;\n};\n/**\n * optional DepositToRewardingFund depositToRewardingFund = 30;\n * @return {?proto.iotextypes.DepositToRewardingFund}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getDeposittorewardingfund = function () {\n  return (\n    /** @type{?proto.iotextypes.DepositToRewardingFund} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.DepositToRewardingFund, 30)\n  );\n};\n/**\n * @param {?proto.iotextypes.DepositToRewardingFund|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setDeposittorewardingfund = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 30, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearDeposittorewardingfund = function () {\n  return this.setDeposittorewardingfund(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasDeposittorewardingfund = function () {\n  return jspb.Message.getField(this, 30) != null;\n};\n/**\n * optional ClaimFromRewardingFund claimFromRewardingFund = 31;\n * @return {?proto.iotextypes.ClaimFromRewardingFund}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getClaimfromrewardingfund = function () {\n  return (\n    /** @type{?proto.iotextypes.ClaimFromRewardingFund} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.ClaimFromRewardingFund, 31)\n  );\n};\n/**\n * @param {?proto.iotextypes.ClaimFromRewardingFund|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setClaimfromrewardingfund = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 31, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearClaimfromrewardingfund = function () {\n  return this.setClaimfromrewardingfund(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasClaimfromrewardingfund = function () {\n  return jspb.Message.getField(this, 31) != null;\n};\n/**\n * optional GrantReward grantReward = 32;\n * @return {?proto.iotextypes.GrantReward}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getGrantreward = function () {\n  return (\n    /** @type{?proto.iotextypes.GrantReward} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.GrantReward, 32)\n  );\n};\n/**\n * @param {?proto.iotextypes.GrantReward|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setGrantreward = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 32, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearGrantreward = function () {\n  return this.setGrantreward(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasGrantreward = function () {\n  return jspb.Message.getField(this, 32) != null;\n};\n/**\n * optional StakeCreate stakeCreate = 40;\n * @return {?proto.iotextypes.StakeCreate}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStakecreate = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeCreate} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StakeCreate, 40)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeCreate|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStakecreate = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 40, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStakecreate = function () {\n  return this.setStakecreate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStakecreate = function () {\n  return jspb.Message.getField(this, 40) != null;\n};\n/**\n * optional StakeReclaim stakeUnstake = 41;\n * @return {?proto.iotextypes.StakeReclaim}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStakeunstake = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeReclaim} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StakeReclaim, 41)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeReclaim|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStakeunstake = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 41, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStakeunstake = function () {\n  return this.setStakeunstake(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStakeunstake = function () {\n  return jspb.Message.getField(this, 41) != null;\n};\n/**\n * optional StakeReclaim stakeWithdraw = 42;\n * @return {?proto.iotextypes.StakeReclaim}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStakewithdraw = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeReclaim} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StakeReclaim, 42)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeReclaim|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStakewithdraw = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 42, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStakewithdraw = function () {\n  return this.setStakewithdraw(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStakewithdraw = function () {\n  return jspb.Message.getField(this, 42) != null;\n};\n/**\n * optional StakeAddDeposit stakeAddDeposit = 43;\n * @return {?proto.iotextypes.StakeAddDeposit}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStakeadddeposit = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeAddDeposit} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StakeAddDeposit, 43)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeAddDeposit|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStakeadddeposit = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 43, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStakeadddeposit = function () {\n  return this.setStakeadddeposit(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStakeadddeposit = function () {\n  return jspb.Message.getField(this, 43) != null;\n};\n/**\n * optional StakeRestake stakeRestake = 44;\n * @return {?proto.iotextypes.StakeRestake}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStakerestake = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeRestake} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StakeRestake, 44)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeRestake|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStakerestake = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 44, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStakerestake = function () {\n  return this.setStakerestake(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStakerestake = function () {\n  return jspb.Message.getField(this, 44) != null;\n};\n/**\n * optional StakeChangeCandidate stakeChangeCandidate = 45;\n * @return {?proto.iotextypes.StakeChangeCandidate}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStakechangecandidate = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeChangeCandidate} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StakeChangeCandidate, 45)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeChangeCandidate|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStakechangecandidate = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 45, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStakechangecandidate = function () {\n  return this.setStakechangecandidate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStakechangecandidate = function () {\n  return jspb.Message.getField(this, 45) != null;\n};\n/**\n * optional StakeTransferOwnership stakeTransferOwnership = 46;\n * @return {?proto.iotextypes.StakeTransferOwnership}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getStaketransferownership = function () {\n  return (\n    /** @type{?proto.iotextypes.StakeTransferOwnership} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.StakeTransferOwnership, 46)\n  );\n};\n/**\n * @param {?proto.iotextypes.StakeTransferOwnership|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setStaketransferownership = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 46, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearStaketransferownership = function () {\n  return this.setStaketransferownership(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasStaketransferownership = function () {\n  return jspb.Message.getField(this, 46) != null;\n};\n/**\n * optional CandidateRegister candidateRegister = 47;\n * @return {?proto.iotextypes.CandidateRegister}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getCandidateregister = function () {\n  return (\n    /** @type{?proto.iotextypes.CandidateRegister} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.CandidateRegister, 47)\n  );\n};\n/**\n * @param {?proto.iotextypes.CandidateRegister|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setCandidateregister = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 47, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearCandidateregister = function () {\n  return this.setCandidateregister(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasCandidateregister = function () {\n  return jspb.Message.getField(this, 47) != null;\n};\n/**\n * optional CandidateBasicInfo candidateUpdate = 48;\n * @return {?proto.iotextypes.CandidateBasicInfo}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getCandidateupdate = function () {\n  return (\n    /** @type{?proto.iotextypes.CandidateBasicInfo} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.CandidateBasicInfo, 48)\n  );\n};\n/**\n * @param {?proto.iotextypes.CandidateBasicInfo|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setCandidateupdate = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 48, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearCandidateupdate = function () {\n  return this.setCandidateupdate(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasCandidateupdate = function () {\n  return jspb.Message.getField(this, 48) != null;\n};\n/**\n * optional PutPollResult putPollResult = 50;\n * @return {?proto.iotextypes.PutPollResult}\n */\n\n\nproto.iotextypes.ActionCore.prototype.getPutpollresult = function () {\n  return (\n    /** @type{?proto.iotextypes.PutPollResult} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.PutPollResult, 50)\n  );\n};\n/**\n * @param {?proto.iotextypes.PutPollResult|undefined} value\n * @return {!proto.iotextypes.ActionCore} returns this\n*/\n\n\nproto.iotextypes.ActionCore.prototype.setPutpollresult = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 50, proto.iotextypes.ActionCore.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ActionCore} returns this\n */\n\n\nproto.iotextypes.ActionCore.prototype.clearPutpollresult = function () {\n  return this.setPutpollresult(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ActionCore.prototype.hasPutpollresult = function () {\n  return jspb.Message.getField(this, 50) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Action.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Action.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Action} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Action.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      core: (f = msg.getCore()) && proto.iotextypes.ActionCore.toObject(includeInstance, f),\n      senderpubkey: msg.getSenderpubkey_asB64(),\n      signature: msg.getSignature_asB64(),\n      encoding: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Action}\n */\n\n\nproto.iotextypes.Action.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Action();\n  return proto.iotextypes.Action.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Action} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Action}\n */\n\n\nproto.iotextypes.Action.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.ActionCore();\n        reader.readMessage(value, proto.iotextypes.ActionCore.deserializeBinaryFromReader);\n        msg.setCore(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSenderpubkey(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!proto.iotextypes.Encoding} */\n        reader.readEnum();\n        msg.setEncoding(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Action.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Action.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Action} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Action.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCore();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotextypes.ActionCore.serializeBinaryToWriter);\n  }\n\n  f = message.getSenderpubkey_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getSignature_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getEncoding();\n\n  if (f !== 0.0) {\n    writer.writeEnum(4, f);\n  }\n};\n/**\n * optional ActionCore core = 1;\n * @return {?proto.iotextypes.ActionCore}\n */\n\n\nproto.iotextypes.Action.prototype.getCore = function () {\n  return (\n    /** @type{?proto.iotextypes.ActionCore} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.ActionCore, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.ActionCore|undefined} value\n * @return {!proto.iotextypes.Action} returns this\n*/\n\n\nproto.iotextypes.Action.prototype.setCore = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.Action} returns this\n */\n\n\nproto.iotextypes.Action.prototype.clearCore = function () {\n  return this.setCore(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.Action.prototype.hasCore = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes senderPubKey = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.Action.prototype.getSenderpubkey = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes senderPubKey = 2;\n * This is a type-conversion wrapper around `getSenderpubkey()`\n * @return {string}\n */\n\n\nproto.iotextypes.Action.prototype.getSenderpubkey_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSenderpubkey())\n  );\n};\n/**\n * optional bytes senderPubKey = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSenderpubkey()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Action.prototype.getSenderpubkey_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSenderpubkey())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Action} returns this\n */\n\n\nproto.iotextypes.Action.prototype.setSenderpubkey = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional bytes signature = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.Action.prototype.getSignature = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.iotextypes.Action.prototype.getSignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSignature())\n  );\n};\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Action.prototype.getSignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Action} returns this\n */\n\n\nproto.iotextypes.Action.prototype.setSignature = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional Encoding encoding = 4;\n * @return {!proto.iotextypes.Encoding}\n */\n\n\nproto.iotextypes.Action.prototype.getEncoding = function () {\n  return (\n    /** @type {!proto.iotextypes.Encoding} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {!proto.iotextypes.Encoding} value\n * @return {!proto.iotextypes.Action} returns this\n */\n\n\nproto.iotextypes.Action.prototype.setEncoding = function (value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.Receipt.repeatedFields_ = [6];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Receipt.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Receipt.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Receipt} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Receipt.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      blkheight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      acthash: msg.getActhash_asB64(),\n      gasconsumed: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      contractaddress: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      logsList: jspb.Message.toObjectList(msg.getLogsList(), proto.iotextypes.Log.toObject, includeInstance),\n      executionrevertmsg: jspb.Message.getFieldWithDefault(msg, 7, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Receipt}\n */\n\n\nproto.iotextypes.Receipt.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Receipt();\n  return proto.iotextypes.Receipt.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Receipt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Receipt}\n */\n\n\nproto.iotextypes.Receipt.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setStatus(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBlkheight(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setActhash(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGasconsumed(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setContractaddress(value);\n        break;\n\n      case 6:\n        var value = new proto.iotextypes.Log();\n        reader.readMessage(value, proto.iotextypes.Log.deserializeBinaryFromReader);\n        msg.addLogs(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setExecutionrevertmsg(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Receipt.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Receipt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Receipt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Receipt.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getBlkheight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getActhash_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getGasconsumed();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getContractaddress();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getLogsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(6, f, proto.iotextypes.Log.serializeBinaryToWriter);\n  }\n\n  f = message.getExecutionrevertmsg();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n};\n/**\n * optional uint64 status = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.Receipt.prototype.getStatus = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.Receipt} returns this\n */\n\n\nproto.iotextypes.Receipt.prototype.setStatus = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 blkHeight = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.Receipt.prototype.getBlkheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.Receipt} returns this\n */\n\n\nproto.iotextypes.Receipt.prototype.setBlkheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bytes actHash = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.Receipt.prototype.getActhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes actHash = 3;\n * This is a type-conversion wrapper around `getActhash()`\n * @return {string}\n */\n\n\nproto.iotextypes.Receipt.prototype.getActhash_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getActhash())\n  );\n};\n/**\n * optional bytes actHash = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getActhash()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Receipt.prototype.getActhash_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getActhash())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Receipt} returns this\n */\n\n\nproto.iotextypes.Receipt.prototype.setActhash = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional uint64 gasConsumed = 4;\n * @return {number}\n */\n\n\nproto.iotextypes.Receipt.prototype.getGasconsumed = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.Receipt} returns this\n */\n\n\nproto.iotextypes.Receipt.prototype.setGasconsumed = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional string contractAddress = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.Receipt.prototype.getContractaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Receipt} returns this\n */\n\n\nproto.iotextypes.Receipt.prototype.setContractaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * repeated Log logs = 6;\n * @return {!Array<!proto.iotextypes.Log>}\n */\n\n\nproto.iotextypes.Receipt.prototype.getLogsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Log>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.Log, 6)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Log>} value\n * @return {!proto.iotextypes.Receipt} returns this\n*/\n\n\nproto.iotextypes.Receipt.prototype.setLogsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n/**\n * @param {!proto.iotextypes.Log=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Log}\n */\n\n\nproto.iotextypes.Receipt.prototype.addLogs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.iotextypes.Log, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.Receipt} returns this\n */\n\n\nproto.iotextypes.Receipt.prototype.clearLogsList = function () {\n  return this.setLogsList([]);\n};\n/**\n * optional string executionRevertMsg = 7;\n * @return {string}\n */\n\n\nproto.iotextypes.Receipt.prototype.getExecutionrevertmsg = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Receipt} returns this\n */\n\n\nproto.iotextypes.Receipt.prototype.setExecutionrevertmsg = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.Log.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Log.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Log.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Log} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Log.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      contractaddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      topicsList: msg.getTopicsList_asB64(),\n      data: msg.getData_asB64(),\n      blkheight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      acthash: msg.getActhash_asB64(),\n      index: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      blkhash: msg.getBlkhash_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Log}\n */\n\n\nproto.iotextypes.Log.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Log();\n  return proto.iotextypes.Log.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Log} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Log}\n */\n\n\nproto.iotextypes.Log.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setContractaddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addTopics(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setData(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBlkheight(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setActhash(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setIndex(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setBlkhash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Log.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Log.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Log} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Log.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getContractaddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTopicsList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(2, f);\n  }\n\n  f = message.getData_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getBlkheight();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getActhash_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(5, f);\n  }\n\n  f = message.getIndex();\n\n  if (f !== 0) {\n    writer.writeUint32(6, f);\n  }\n\n  f = message.getBlkhash_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(7, f);\n  }\n};\n/**\n * optional string contractAddress = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.Log.prototype.getContractaddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.setContractaddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * repeated bytes topics = 2;\n * @return {!Array<string>}\n */\n\n\nproto.iotextypes.Log.prototype.getTopicsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 2)\n  );\n};\n/**\n * repeated bytes topics = 2;\n * This is a type-conversion wrapper around `getTopicsList()`\n * @return {!Array<string>}\n */\n\n\nproto.iotextypes.Log.prototype.getTopicsList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getTopicsList())\n  );\n};\n/**\n * repeated bytes topics = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTopicsList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.iotextypes.Log.prototype.getTopicsList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getTopicsList())\n  );\n};\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.setTopicsList = function (value) {\n  return jspb.Message.setField(this, 2, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.addTopics = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.clearTopicsList = function () {\n  return this.setTopicsList([]);\n};\n/**\n * optional bytes data = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.Log.prototype.getData = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes data = 3;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.iotextypes.Log.prototype.getData_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getData())\n  );\n};\n/**\n * optional bytes data = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Log.prototype.getData_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getData())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.setData = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional uint64 blkHeight = 4;\n * @return {number}\n */\n\n\nproto.iotextypes.Log.prototype.getBlkheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.setBlkheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional bytes actHash = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.Log.prototype.getActhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * optional bytes actHash = 5;\n * This is a type-conversion wrapper around `getActhash()`\n * @return {string}\n */\n\n\nproto.iotextypes.Log.prototype.getActhash_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getActhash())\n  );\n};\n/**\n * optional bytes actHash = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getActhash()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Log.prototype.getActhash_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getActhash())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.setActhash = function (value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n/**\n * optional uint32 index = 6;\n * @return {number}\n */\n\n\nproto.iotextypes.Log.prototype.getIndex = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.setIndex = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional bytes blkHash = 7;\n * @return {string}\n */\n\n\nproto.iotextypes.Log.prototype.getBlkhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * optional bytes blkHash = 7;\n * This is a type-conversion wrapper around `getBlkhash()`\n * @return {string}\n */\n\n\nproto.iotextypes.Log.prototype.getBlkhash_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getBlkhash())\n  );\n};\n/**\n * optional bytes blkHash = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlkhash()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Log.prototype.getBlkhash_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getBlkhash())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Log} returns this\n */\n\n\nproto.iotextypes.Log.prototype.setBlkhash = function (value) {\n  return jspb.Message.setProto3BytesField(this, 7, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.Logs.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Logs.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Logs.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Logs} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Logs.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      logsList: jspb.Message.toObjectList(msg.getLogsList(), proto.iotextypes.Log.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Logs}\n */\n\n\nproto.iotextypes.Logs.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Logs();\n  return proto.iotextypes.Logs.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Logs} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Logs}\n */\n\n\nproto.iotextypes.Logs.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.Log();\n        reader.readMessage(value, proto.iotextypes.Log.deserializeBinaryFromReader);\n        msg.addLogs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Logs.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Logs.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Logs} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Logs.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getLogsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.iotextypes.Log.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Log logs = 1;\n * @return {!Array<!proto.iotextypes.Log>}\n */\n\n\nproto.iotextypes.Logs.prototype.getLogsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Log>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.Log, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Log>} value\n * @return {!proto.iotextypes.Logs} returns this\n*/\n\n\nproto.iotextypes.Logs.prototype.setLogsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.Log=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Log}\n */\n\n\nproto.iotextypes.Logs.prototype.addLogs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.Log, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.Logs} returns this\n */\n\n\nproto.iotextypes.Logs.prototype.clearLogsList = function () {\n  return this.setLogsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.EvmTransfer.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.EvmTransfer.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.EvmTransfer} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.EvmTransfer.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: msg.getAmount_asB64(),\n      from: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      to: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.EvmTransfer}\n */\n\n\nproto.iotextypes.EvmTransfer.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.EvmTransfer();\n  return proto.iotextypes.EvmTransfer.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.EvmTransfer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.EvmTransfer}\n */\n\n\nproto.iotextypes.EvmTransfer.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFrom(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.EvmTransfer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.EvmTransfer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.EvmTransfer.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAmount_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getFrom();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getTo();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional bytes amount = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes amount = 1;\n * This is a type-conversion wrapper around `getAmount()`\n * @return {string}\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.getAmount_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getAmount())\n  );\n};\n/**\n * optional bytes amount = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAmount()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.getAmount_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getAmount())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.EvmTransfer} returns this\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string from = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.getFrom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.EvmTransfer} returns this\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.setFrom = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string to = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.getTo = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.EvmTransfer} returns this\n */\n\n\nproto.iotextypes.EvmTransfer.prototype.setTo = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.EvmTransferList.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.EvmTransferList.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.EvmTransferList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.EvmTransferList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.EvmTransferList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      evmtransfersList: jspb.Message.toObjectList(msg.getEvmtransfersList(), proto.iotextypes.EvmTransfer.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.EvmTransferList}\n */\n\n\nproto.iotextypes.EvmTransferList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.EvmTransferList();\n  return proto.iotextypes.EvmTransferList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.EvmTransferList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.EvmTransferList}\n */\n\n\nproto.iotextypes.EvmTransferList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.EvmTransfer();\n        reader.readMessage(value, proto.iotextypes.EvmTransfer.deserializeBinaryFromReader);\n        msg.addEvmtransfers(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.EvmTransferList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.EvmTransferList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.EvmTransferList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.EvmTransferList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEvmtransfersList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.iotextypes.EvmTransfer.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated EvmTransfer evmTransfers = 1;\n * @return {!Array<!proto.iotextypes.EvmTransfer>}\n */\n\n\nproto.iotextypes.EvmTransferList.prototype.getEvmtransfersList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.EvmTransfer>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.EvmTransfer, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.EvmTransfer>} value\n * @return {!proto.iotextypes.EvmTransferList} returns this\n*/\n\n\nproto.iotextypes.EvmTransferList.prototype.setEvmtransfersList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.EvmTransfer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.EvmTransfer}\n */\n\n\nproto.iotextypes.EvmTransferList.prototype.addEvmtransfers = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.EvmTransfer, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.EvmTransferList} returns this\n */\n\n\nproto.iotextypes.EvmTransferList.prototype.clearEvmtransfersList = function () {\n  return this.setEvmtransfersList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.ActionEvmTransfer.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.ActionEvmTransfer.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.ActionEvmTransfer.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.ActionEvmTransfer} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.ActionEvmTransfer.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhash: msg.getActionhash_asB64(),\n      numevmtransfers: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      evmtransfersList: jspb.Message.toObjectList(msg.getEvmtransfersList(), proto.iotextypes.EvmTransfer.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.ActionEvmTransfer}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.ActionEvmTransfer();\n  return proto.iotextypes.ActionEvmTransfer.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.ActionEvmTransfer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.ActionEvmTransfer}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setActionhash(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setNumevmtransfers(value);\n        break;\n\n      case 3:\n        var value = new proto.iotextypes.EvmTransfer();\n        reader.readMessage(value, proto.iotextypes.EvmTransfer.deserializeBinaryFromReader);\n        msg.addEvmtransfers(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.ActionEvmTransfer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.ActionEvmTransfer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.ActionEvmTransfer.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhash_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getNumevmtransfers();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getEvmtransfersList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.iotextypes.EvmTransfer.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bytes actionHash = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.getActionhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes actionHash = 1;\n * This is a type-conversion wrapper around `getActionhash()`\n * @return {string}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.getActionhash_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getActionhash())\n  );\n};\n/**\n * optional bytes actionHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getActionhash()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.getActionhash_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getActionhash())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.ActionEvmTransfer} returns this\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.setActionhash = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional uint64 numEvmTransfers = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.getNumevmtransfers = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ActionEvmTransfer} returns this\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.setNumevmtransfers = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated EvmTransfer evmTransfers = 3;\n * @return {!Array<!proto.iotextypes.EvmTransfer>}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.getEvmtransfersList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.EvmTransfer>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.EvmTransfer, 3)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.EvmTransfer>} value\n * @return {!proto.iotextypes.ActionEvmTransfer} returns this\n*/\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.setEvmtransfersList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.iotextypes.EvmTransfer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.EvmTransfer}\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.addEvmtransfers = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iotextypes.EvmTransfer, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.ActionEvmTransfer} returns this\n */\n\n\nproto.iotextypes.ActionEvmTransfer.prototype.clearEvmtransfersList = function () {\n  return this.setEvmtransfersList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.BlockEvmTransfer.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockEvmTransfer.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockEvmTransfer.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockEvmTransfer} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockEvmTransfer.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blockheight: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      numevmtransfers: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      actionevmtransfersList: jspb.Message.toObjectList(msg.getActionevmtransfersList(), proto.iotextypes.ActionEvmTransfer.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockEvmTransfer}\n */\n\n\nproto.iotextypes.BlockEvmTransfer.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockEvmTransfer();\n  return proto.iotextypes.BlockEvmTransfer.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockEvmTransfer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockEvmTransfer}\n */\n\n\nproto.iotextypes.BlockEvmTransfer.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBlockheight(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setNumevmtransfers(value);\n        break;\n\n      case 3:\n        var value = new proto.iotextypes.ActionEvmTransfer();\n        reader.readMessage(value, proto.iotextypes.ActionEvmTransfer.deserializeBinaryFromReader);\n        msg.addActionevmtransfers(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockEvmTransfer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockEvmTransfer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockEvmTransfer.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlockheight();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getNumevmtransfers();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getActionevmtransfersList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.iotextypes.ActionEvmTransfer.serializeBinaryToWriter);\n  }\n};\n/**\n * optional uint64 blockHeight = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.getBlockheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockEvmTransfer} returns this\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.setBlockheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 numEvmTransfers = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.getNumevmtransfers = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockEvmTransfer} returns this\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.setNumevmtransfers = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated ActionEvmTransfer actionEvmTransfers = 3;\n * @return {!Array<!proto.iotextypes.ActionEvmTransfer>}\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.getActionevmtransfersList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.ActionEvmTransfer>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.ActionEvmTransfer, 3)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.ActionEvmTransfer>} value\n * @return {!proto.iotextypes.BlockEvmTransfer} returns this\n*/\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.setActionevmtransfersList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.iotextypes.ActionEvmTransfer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.ActionEvmTransfer}\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.addActionevmtransfers = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iotextypes.ActionEvmTransfer, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.BlockEvmTransfer} returns this\n */\n\n\nproto.iotextypes.BlockEvmTransfer.prototype.clearActionevmtransfersList = function () {\n  return this.setActionevmtransfersList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.DepositToRewardingFund.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.DepositToRewardingFund.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.DepositToRewardingFund} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.DepositToRewardingFund.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      data: msg.getData_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.DepositToRewardingFund}\n */\n\n\nproto.iotextypes.DepositToRewardingFund.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.DepositToRewardingFund();\n  return proto.iotextypes.DepositToRewardingFund.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.DepositToRewardingFund} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.DepositToRewardingFund}\n */\n\n\nproto.iotextypes.DepositToRewardingFund.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.DepositToRewardingFund.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.DepositToRewardingFund.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.DepositToRewardingFund} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.DepositToRewardingFund.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getData_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional string amount = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.DepositToRewardingFund.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.DepositToRewardingFund} returns this\n */\n\n\nproto.iotextypes.DepositToRewardingFund.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes data = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.DepositToRewardingFund.prototype.getData = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.iotextypes.DepositToRewardingFund.prototype.getData_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getData())\n  );\n};\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.DepositToRewardingFund.prototype.getData_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getData())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.DepositToRewardingFund} returns this\n */\n\n\nproto.iotextypes.DepositToRewardingFund.prototype.setData = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.ClaimFromRewardingFund.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.ClaimFromRewardingFund.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.ClaimFromRewardingFund} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.ClaimFromRewardingFund.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      amount: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      data: msg.getData_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.ClaimFromRewardingFund}\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.ClaimFromRewardingFund();\n  return proto.iotextypes.ClaimFromRewardingFund.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.ClaimFromRewardingFund} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.ClaimFromRewardingFund}\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.ClaimFromRewardingFund.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.ClaimFromRewardingFund} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getData_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional string amount = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.ClaimFromRewardingFund} returns this\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bytes data = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.prototype.getData = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes data = 2;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.prototype.getData_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getData())\n  );\n};\n/**\n * optional bytes data = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.prototype.getData_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getData())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.ClaimFromRewardingFund} returns this\n */\n\n\nproto.iotextypes.ClaimFromRewardingFund.prototype.setData = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.GrantReward.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.GrantReward.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.GrantReward} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.GrantReward.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      height: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.GrantReward}\n */\n\n\nproto.iotextypes.GrantReward.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.GrantReward();\n  return proto.iotextypes.GrantReward.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.GrantReward} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.GrantReward}\n */\n\n\nproto.iotextypes.GrantReward.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.iotextypes.RewardType} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.GrantReward.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.GrantReward.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.GrantReward} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.GrantReward.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getType();\n\n  if (f !== 0.0) {\n    writer.writeEnum(1, f);\n  }\n\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * optional RewardType type = 1;\n * @return {!proto.iotextypes.RewardType}\n */\n\n\nproto.iotextypes.GrantReward.prototype.getType = function () {\n  return (\n    /** @type {!proto.iotextypes.RewardType} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {!proto.iotextypes.RewardType} value\n * @return {!proto.iotextypes.GrantReward} returns this\n */\n\n\nproto.iotextypes.GrantReward.prototype.setType = function (value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.GrantReward.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.GrantReward} returns this\n */\n\n\nproto.iotextypes.GrantReward.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * @enum {number}\n */\n\n\nproto.iotextypes.Encoding = {\n  IOTEX_PROTOBUF: 0,\n  ETHEREUM_RLP: 1\n};\n/**\n * @enum {number}\n */\n\nproto.iotextypes.RewardType = {\n  BLOCKREWARD: 0,\n  EPOCHREWARD: 1\n};\ngoog.object.extend(exports, proto.iotextypes);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/types/action_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/types/blockchain_pb.js":
/*!**************************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/types/blockchain_pb.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/types/blockchain.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar proto_types_action_pb = __webpack_require__(/*! ../../proto/types/action_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/action_pb.js\");\n\ngoog.object.extend(proto, proto_types_action_pb);\n\nvar proto_types_endorsement_pb = __webpack_require__(/*! ../../proto/types/endorsement_pb.js */ \"./node_modules/iotex-antenna/protogen/proto/types/endorsement_pb.js\");\n\ngoog.object.extend(proto, proto_types_endorsement_pb);\n\nvar google_protobuf_timestamp_pb = __webpack_require__(/*! google-protobuf/google/protobuf/timestamp_pb.js */ \"./node_modules/google-protobuf/google/protobuf/timestamp_pb.js\");\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.iotextypes.AccountMeta', null, global);\ngoog.exportSymbol('proto.iotextypes.Block', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockBody', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockFooter', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockHeader', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockHeaderCore', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockIdentifier', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockMeta', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockStore', null, global);\ngoog.exportSymbol('proto.iotextypes.BlockStores', null, global);\ngoog.exportSymbol('proto.iotextypes.ChainMeta', null, global);\ngoog.exportSymbol('proto.iotextypes.EpochData', null, global);\ngoog.exportSymbol('proto.iotextypes.Receipts', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotextypes.BlockHeader = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockHeader, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockHeader.displayName = 'proto.iotextypes.BlockHeader';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockHeaderCore = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockHeaderCore, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockHeaderCore.displayName = 'proto.iotextypes.BlockHeaderCore';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockFooter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.BlockFooter.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockFooter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockFooter.displayName = 'proto.iotextypes.BlockFooter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockBody = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.BlockBody.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockBody, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockBody.displayName = 'proto.iotextypes.BlockBody';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Block = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.Block, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Block.displayName = 'proto.iotextypes.Block';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.Receipts = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.Receipts.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.Receipts, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Receipts.displayName = 'proto.iotextypes.Receipts';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.EpochData = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.EpochData, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.EpochData.displayName = 'proto.iotextypes.EpochData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.ChainMeta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.ChainMeta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.ChainMeta.displayName = 'proto.iotextypes.ChainMeta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockMeta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockMeta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockMeta.displayName = 'proto.iotextypes.BlockMeta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockIdentifier = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockIdentifier, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockIdentifier.displayName = 'proto.iotextypes.BlockIdentifier';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.AccountMeta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.AccountMeta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.AccountMeta.displayName = 'proto.iotextypes.AccountMeta';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockStore = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.BlockStore.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockStore, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockStore.displayName = 'proto.iotextypes.BlockStore';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.BlockStores = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.BlockStores.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.BlockStores, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.BlockStores.displayName = 'proto.iotextypes.BlockStores';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockHeader.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockHeader.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockHeader} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockHeader.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      core: (f = msg.getCore()) && proto.iotextypes.BlockHeaderCore.toObject(includeInstance, f),\n      producerpubkey: msg.getProducerpubkey_asB64(),\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockHeader}\n */\n\n\nproto.iotextypes.BlockHeader.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockHeader();\n  return proto.iotextypes.BlockHeader.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockHeader} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockHeader}\n */\n\n\nproto.iotextypes.BlockHeader.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.BlockHeaderCore();\n        reader.readMessage(value, proto.iotextypes.BlockHeaderCore.deserializeBinaryFromReader);\n        msg.setCore(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setProducerpubkey(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockHeader.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockHeader} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockHeader.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCore();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotextypes.BlockHeaderCore.serializeBinaryToWriter);\n  }\n\n  f = message.getProducerpubkey_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getSignature_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional BlockHeaderCore core = 1;\n * @return {?proto.iotextypes.BlockHeaderCore}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.getCore = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockHeaderCore} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.BlockHeaderCore, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockHeaderCore|undefined} value\n * @return {!proto.iotextypes.BlockHeader} returns this\n*/\n\n\nproto.iotextypes.BlockHeader.prototype.setCore = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.BlockHeader} returns this\n */\n\n\nproto.iotextypes.BlockHeader.prototype.clearCore = function () {\n  return this.setCore(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.hasCore = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes producerPubkey = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.getProducerpubkey = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes producerPubkey = 2;\n * This is a type-conversion wrapper around `getProducerpubkey()`\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.getProducerpubkey_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getProducerpubkey())\n  );\n};\n/**\n * optional bytes producerPubkey = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProducerpubkey()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.getProducerpubkey_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getProducerpubkey())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.BlockHeader} returns this\n */\n\n\nproto.iotextypes.BlockHeader.prototype.setProducerpubkey = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional bytes signature = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.getSignature = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.getSignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSignature())\n  );\n};\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeader.prototype.getSignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.BlockHeader} returns this\n */\n\n\nproto.iotextypes.BlockHeader.prototype.setSignature = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockHeaderCore.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockHeaderCore.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockHeaderCore} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockHeaderCore.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      height: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      prevblockhash: msg.getPrevblockhash_asB64(),\n      txroot: msg.getTxroot_asB64(),\n      deltastatedigest: msg.getDeltastatedigest_asB64(),\n      receiptroot: msg.getReceiptroot_asB64(),\n      logsbloom: msg.getLogsbloom_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockHeaderCore}\n */\n\n\nproto.iotextypes.BlockHeaderCore.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockHeaderCore();\n  return proto.iotextypes.BlockHeaderCore.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockHeaderCore} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockHeaderCore}\n */\n\n\nproto.iotextypes.BlockHeaderCore.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setVersion(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setTimestamp(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setPrevblockhash(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setTxroot(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setDeltastatedigest(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setReceiptroot(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setLogsbloom(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockHeaderCore.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockHeaderCore} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockHeaderCore.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getTimestamp();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getPrevblockhash_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n\n  f = message.getTxroot_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(5, f);\n  }\n\n  f = message.getDeltastatedigest_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(6, f);\n  }\n\n  f = message.getReceiptroot_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(7, f);\n  }\n\n  f = message.getLogsbloom_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(8, f);\n  }\n};\n/**\n * optional uint32 version = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getVersion = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setVersion = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional google.protobuf.Timestamp timestamp = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getTimestamp = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n*/\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setTimestamp = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.clearTimestamp = function () {\n  return this.setTimestamp(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.hasTimestamp = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional bytes prevBlockHash = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getPrevblockhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * optional bytes prevBlockHash = 4;\n * This is a type-conversion wrapper around `getPrevblockhash()`\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getPrevblockhash_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getPrevblockhash())\n  );\n};\n/**\n * optional bytes prevBlockHash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPrevblockhash()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getPrevblockhash_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getPrevblockhash())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setPrevblockhash = function (value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n/**\n * optional bytes txRoot = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getTxroot = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * optional bytes txRoot = 5;\n * This is a type-conversion wrapper around `getTxroot()`\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getTxroot_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getTxroot())\n  );\n};\n/**\n * optional bytes txRoot = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxroot()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getTxroot_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getTxroot())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setTxroot = function (value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n/**\n * optional bytes deltaStateDigest = 6;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getDeltastatedigest = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * optional bytes deltaStateDigest = 6;\n * This is a type-conversion wrapper around `getDeltastatedigest()`\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getDeltastatedigest_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getDeltastatedigest())\n  );\n};\n/**\n * optional bytes deltaStateDigest = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDeltastatedigest()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getDeltastatedigest_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getDeltastatedigest())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setDeltastatedigest = function (value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n/**\n * optional bytes receiptRoot = 7;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getReceiptroot = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * optional bytes receiptRoot = 7;\n * This is a type-conversion wrapper around `getReceiptroot()`\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getReceiptroot_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getReceiptroot())\n  );\n};\n/**\n * optional bytes receiptRoot = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReceiptroot()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getReceiptroot_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getReceiptroot())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setReceiptroot = function (value) {\n  return jspb.Message.setProto3BytesField(this, 7, value);\n};\n/**\n * optional bytes logsBloom = 8;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getLogsbloom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/**\n * optional bytes logsBloom = 8;\n * This is a type-conversion wrapper around `getLogsbloom()`\n * @return {string}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getLogsbloom_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getLogsbloom())\n  );\n};\n/**\n * optional bytes logsBloom = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLogsbloom()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.getLogsbloom_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getLogsbloom())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.BlockHeaderCore} returns this\n */\n\n\nproto.iotextypes.BlockHeaderCore.prototype.setLogsbloom = function (value) {\n  return jspb.Message.setProto3BytesField(this, 8, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.BlockFooter.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockFooter.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockFooter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockFooter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockFooter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      endorsementsList: jspb.Message.toObjectList(msg.getEndorsementsList(), proto_types_endorsement_pb.Endorsement.toObject, includeInstance),\n      timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockFooter}\n */\n\n\nproto.iotextypes.BlockFooter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockFooter();\n  return proto.iotextypes.BlockFooter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockFooter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockFooter}\n */\n\n\nproto.iotextypes.BlockFooter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_endorsement_pb.Endorsement();\n        reader.readMessage(value, proto_types_endorsement_pb.Endorsement.deserializeBinaryFromReader);\n        msg.addEndorsements(value);\n        break;\n\n      case 2:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setTimestamp(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockFooter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockFooter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockFooter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockFooter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEndorsementsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto_types_endorsement_pb.Endorsement.serializeBinaryToWriter);\n  }\n\n  f = message.getTimestamp();\n\n  if (f != null) {\n    writer.writeMessage(2, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Endorsement endorsements = 1;\n * @return {!Array<!proto.iotextypes.Endorsement>}\n */\n\n\nproto.iotextypes.BlockFooter.prototype.getEndorsementsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Endorsement>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_endorsement_pb.Endorsement, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Endorsement>} value\n * @return {!proto.iotextypes.BlockFooter} returns this\n*/\n\n\nproto.iotextypes.BlockFooter.prototype.setEndorsementsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.Endorsement=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Endorsement}\n */\n\n\nproto.iotextypes.BlockFooter.prototype.addEndorsements = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.Endorsement, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.BlockFooter} returns this\n */\n\n\nproto.iotextypes.BlockFooter.prototype.clearEndorsementsList = function () {\n  return this.setEndorsementsList([]);\n};\n/**\n * optional google.protobuf.Timestamp timestamp = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.iotextypes.BlockFooter.prototype.getTimestamp = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.iotextypes.BlockFooter} returns this\n*/\n\n\nproto.iotextypes.BlockFooter.prototype.setTimestamp = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.BlockFooter} returns this\n */\n\n\nproto.iotextypes.BlockFooter.prototype.clearTimestamp = function () {\n  return this.setTimestamp(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.BlockFooter.prototype.hasTimestamp = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.BlockBody.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockBody.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockBody.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockBody} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockBody.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionsList: jspb.Message.toObjectList(msg.getActionsList(), proto_types_action_pb.Action.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockBody}\n */\n\n\nproto.iotextypes.BlockBody.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockBody();\n  return proto.iotextypes.BlockBody.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockBody} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockBody}\n */\n\n\nproto.iotextypes.BlockBody.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Action();\n        reader.readMessage(value, proto_types_action_pb.Action.deserializeBinaryFromReader);\n        msg.addActions(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockBody.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockBody.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockBody} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockBody.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto_types_action_pb.Action.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Action actions = 1;\n * @return {!Array<!proto.iotextypes.Action>}\n */\n\n\nproto.iotextypes.BlockBody.prototype.getActionsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Action>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_action_pb.Action, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Action>} value\n * @return {!proto.iotextypes.BlockBody} returns this\n*/\n\n\nproto.iotextypes.BlockBody.prototype.setActionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.Action=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Action}\n */\n\n\nproto.iotextypes.BlockBody.prototype.addActions = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.Action, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.BlockBody} returns this\n */\n\n\nproto.iotextypes.BlockBody.prototype.clearActionsList = function () {\n  return this.setActionsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Block.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Block.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Block} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Block.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      header: (f = msg.getHeader()) && proto.iotextypes.BlockHeader.toObject(includeInstance, f),\n      body: (f = msg.getBody()) && proto.iotextypes.BlockBody.toObject(includeInstance, f),\n      footer: (f = msg.getFooter()) && proto.iotextypes.BlockFooter.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Block}\n */\n\n\nproto.iotextypes.Block.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Block();\n  return proto.iotextypes.Block.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Block} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Block}\n */\n\n\nproto.iotextypes.Block.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.BlockHeader();\n        reader.readMessage(value, proto.iotextypes.BlockHeader.deserializeBinaryFromReader);\n        msg.setHeader(value);\n        break;\n\n      case 2:\n        var value = new proto.iotextypes.BlockBody();\n        reader.readMessage(value, proto.iotextypes.BlockBody.deserializeBinaryFromReader);\n        msg.setBody(value);\n        break;\n\n      case 3:\n        var value = new proto.iotextypes.BlockFooter();\n        reader.readMessage(value, proto.iotextypes.BlockFooter.deserializeBinaryFromReader);\n        msg.setFooter(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Block.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Block.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Block} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Block.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getHeader();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotextypes.BlockHeader.serializeBinaryToWriter);\n  }\n\n  f = message.getBody();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.iotextypes.BlockBody.serializeBinaryToWriter);\n  }\n\n  f = message.getFooter();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.iotextypes.BlockFooter.serializeBinaryToWriter);\n  }\n};\n/**\n * optional BlockHeader header = 1;\n * @return {?proto.iotextypes.BlockHeader}\n */\n\n\nproto.iotextypes.Block.prototype.getHeader = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockHeader} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.BlockHeader, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockHeader|undefined} value\n * @return {!proto.iotextypes.Block} returns this\n*/\n\n\nproto.iotextypes.Block.prototype.setHeader = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.Block} returns this\n */\n\n\nproto.iotextypes.Block.prototype.clearHeader = function () {\n  return this.setHeader(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.Block.prototype.hasHeader = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional BlockBody body = 2;\n * @return {?proto.iotextypes.BlockBody}\n */\n\n\nproto.iotextypes.Block.prototype.getBody = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockBody} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.BlockBody, 2)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockBody|undefined} value\n * @return {!proto.iotextypes.Block} returns this\n*/\n\n\nproto.iotextypes.Block.prototype.setBody = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.Block} returns this\n */\n\n\nproto.iotextypes.Block.prototype.clearBody = function () {\n  return this.setBody(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.Block.prototype.hasBody = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional BlockFooter footer = 3;\n * @return {?proto.iotextypes.BlockFooter}\n */\n\n\nproto.iotextypes.Block.prototype.getFooter = function () {\n  return (\n    /** @type{?proto.iotextypes.BlockFooter} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.BlockFooter, 3)\n  );\n};\n/**\n * @param {?proto.iotextypes.BlockFooter|undefined} value\n * @return {!proto.iotextypes.Block} returns this\n*/\n\n\nproto.iotextypes.Block.prototype.setFooter = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.Block} returns this\n */\n\n\nproto.iotextypes.Block.prototype.clearFooter = function () {\n  return this.setFooter(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.Block.prototype.hasFooter = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.Receipts.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Receipts.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Receipts.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Receipts} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Receipts.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      receiptsList: jspb.Message.toObjectList(msg.getReceiptsList(), proto_types_action_pb.Receipt.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Receipts}\n */\n\n\nproto.iotextypes.Receipts.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Receipts();\n  return proto.iotextypes.Receipts.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Receipts} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Receipts}\n */\n\n\nproto.iotextypes.Receipts.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto_types_action_pb.Receipt();\n        reader.readMessage(value, proto_types_action_pb.Receipt.deserializeBinaryFromReader);\n        msg.addReceipts(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Receipts.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Receipts.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Receipts} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Receipts.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getReceiptsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto_types_action_pb.Receipt.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Receipt receipts = 1;\n * @return {!Array<!proto.iotextypes.Receipt>}\n */\n\n\nproto.iotextypes.Receipts.prototype.getReceiptsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Receipt>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_action_pb.Receipt, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Receipt>} value\n * @return {!proto.iotextypes.Receipts} returns this\n*/\n\n\nproto.iotextypes.Receipts.prototype.setReceiptsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.Receipt=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Receipt}\n */\n\n\nproto.iotextypes.Receipts.prototype.addReceipts = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.Receipt, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.Receipts} returns this\n */\n\n\nproto.iotextypes.Receipts.prototype.clearReceiptsList = function () {\n  return this.setReceiptsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.EpochData.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.EpochData.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.EpochData} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.EpochData.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      num: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      height: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      gravitychainstartheight: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.EpochData}\n */\n\n\nproto.iotextypes.EpochData.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.EpochData();\n  return proto.iotextypes.EpochData.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.EpochData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.EpochData}\n */\n\n\nproto.iotextypes.EpochData.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setNum(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGravitychainstartheight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.EpochData.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.EpochData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.EpochData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.EpochData.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getNum();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getGravitychainstartheight();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional uint64 num = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.EpochData.prototype.getNum = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.EpochData} returns this\n */\n\n\nproto.iotextypes.EpochData.prototype.setNum = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.EpochData.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.EpochData} returns this\n */\n\n\nproto.iotextypes.EpochData.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 gravityChainStartHeight = 3;\n * @return {number}\n */\n\n\nproto.iotextypes.EpochData.prototype.getGravitychainstartheight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.EpochData} returns this\n */\n\n\nproto.iotextypes.EpochData.prototype.setGravitychainstartheight = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.ChainMeta.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.ChainMeta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.ChainMeta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.ChainMeta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      height: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      numactions: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      tps: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      epoch: (f = msg.getEpoch()) && proto.iotextypes.EpochData.toObject(includeInstance, f),\n      tpsfloat: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),\n      chainid: jspb.Message.getFieldWithDefault(msg, 6, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.ChainMeta}\n */\n\n\nproto.iotextypes.ChainMeta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.ChainMeta();\n  return proto.iotextypes.ChainMeta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.ChainMeta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.ChainMeta}\n */\n\n\nproto.iotextypes.ChainMeta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setNumactions(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTps(value);\n        break;\n\n      case 4:\n        var value = new proto.iotextypes.EpochData();\n        reader.readMessage(value, proto.iotextypes.EpochData.deserializeBinaryFromReader);\n        msg.setEpoch(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readFloat();\n        msg.setTpsfloat(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setChainid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.ChainMeta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.ChainMeta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.ChainMeta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getNumactions();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getTps();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n\n  f = message.getEpoch();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.iotextypes.EpochData.serializeBinaryToWriter);\n  }\n\n  f = message.getTpsfloat();\n\n  if (f !== 0.0) {\n    writer.writeFloat(5, f);\n  }\n\n  f = message.getChainid();\n\n  if (f !== 0) {\n    writer.writeUint32(6, f);\n  }\n};\n/**\n * optional uint64 height = 1;\n * @return {number}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ChainMeta} returns this\n */\n\n\nproto.iotextypes.ChainMeta.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int64 numActions = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.getNumactions = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ChainMeta} returns this\n */\n\n\nproto.iotextypes.ChainMeta.prototype.setNumactions = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional int64 tps = 3;\n * @return {number}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.getTps = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ChainMeta} returns this\n */\n\n\nproto.iotextypes.ChainMeta.prototype.setTps = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional EpochData epoch = 4;\n * @return {?proto.iotextypes.EpochData}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.getEpoch = function () {\n  return (\n    /** @type{?proto.iotextypes.EpochData} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.EpochData, 4)\n  );\n};\n/**\n * @param {?proto.iotextypes.EpochData|undefined} value\n * @return {!proto.iotextypes.ChainMeta} returns this\n*/\n\n\nproto.iotextypes.ChainMeta.prototype.setEpoch = function (value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ChainMeta} returns this\n */\n\n\nproto.iotextypes.ChainMeta.prototype.clearEpoch = function () {\n  return this.setEpoch(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.hasEpoch = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional float tpsFloat = 5;\n * @return {number}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.getTpsfloat = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ChainMeta} returns this\n */\n\n\nproto.iotextypes.ChainMeta.prototype.setTpsfloat = function (value) {\n  return jspb.Message.setProto3FloatField(this, 5, value);\n};\n/**\n * optional uint32 chainID = 6;\n * @return {number}\n */\n\n\nproto.iotextypes.ChainMeta.prototype.getChainid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.ChainMeta} returns this\n */\n\n\nproto.iotextypes.ChainMeta.prototype.setChainid = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockMeta.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockMeta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockMeta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockMeta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      hash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      height: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      numactions: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      produceraddress: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      transferamount: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      txroot: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      receiptroot: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n      deltastatedigest: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n      logsbloom: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n      previousblockhash: jspb.Message.getFieldWithDefault(msg, 11, \"\"),\n      gaslimit: jspb.Message.getFieldWithDefault(msg, 12, 0),\n      gasused: jspb.Message.getFieldWithDefault(msg, 13, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockMeta}\n */\n\n\nproto.iotextypes.BlockMeta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockMeta();\n  return proto.iotextypes.BlockMeta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockMeta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockMeta}\n */\n\n\nproto.iotextypes.BlockMeta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHash(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setTimestamp(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setNumactions(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProduceraddress(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTransferamount(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTxroot(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setReceiptroot(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDeltastatedigest(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setLogsbloom(value);\n        break;\n\n      case 11:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPreviousblockhash(value);\n        break;\n\n      case 12:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGaslimit(value);\n        break;\n\n      case 13:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setGasused(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockMeta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockMeta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockMeta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getHash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getTimestamp();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getNumactions();\n\n  if (f !== 0) {\n    writer.writeInt64(4, f);\n  }\n\n  f = message.getProduceraddress();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getTransferamount();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getTxroot();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getReceiptroot();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n\n  f = message.getDeltastatedigest();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n\n  f = message.getLogsbloom();\n\n  if (f.length > 0) {\n    writer.writeString(10, f);\n  }\n\n  f = message.getPreviousblockhash();\n\n  if (f.length > 0) {\n    writer.writeString(11, f);\n  }\n\n  f = message.getGaslimit();\n\n  if (f !== 0) {\n    writer.writeUint64(12, f);\n  }\n\n  f = message.getGasused();\n\n  if (f !== 0) {\n    writer.writeUint64(13, f);\n  }\n};\n/**\n * optional string hash = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getHash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setHash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional google.protobuf.Timestamp timestamp = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getTimestamp = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n*/\n\n\nproto.iotextypes.BlockMeta.prototype.setTimestamp = function (value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.clearTimestamp = function () {\n  return this.setTimestamp(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.hasTimestamp = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional int64 numActions = 4;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getNumactions = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setNumactions = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional string producerAddress = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getProduceraddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setProduceraddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string transferAmount = 6;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getTransferamount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setTransferamount = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string txRoot = 7;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getTxroot = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setTxroot = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional string receiptRoot = 8;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getReceiptroot = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setReceiptroot = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n/**\n * optional string deltaStateDigest = 9;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getDeltastatedigest = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setDeltastatedigest = function (value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * optional string logsBloom = 10;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getLogsbloom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 10, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setLogsbloom = function (value) {\n  return jspb.Message.setProto3StringField(this, 10, value);\n};\n/**\n * optional string previousBlockHash = 11;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getPreviousblockhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 11, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setPreviousblockhash = function (value) {\n  return jspb.Message.setProto3StringField(this, 11, value);\n};\n/**\n * optional uint64 gasLimit = 12;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getGaslimit = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 12, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setGaslimit = function (value) {\n  return jspb.Message.setProto3IntField(this, 12, value);\n};\n/**\n * optional uint64 gasUsed = 13;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockMeta.prototype.getGasused = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 13, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockMeta} returns this\n */\n\n\nproto.iotextypes.BlockMeta.prototype.setGasused = function (value) {\n  return jspb.Message.setProto3IntField(this, 13, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockIdentifier.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockIdentifier.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockIdentifier} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockIdentifier.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      hash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      height: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockIdentifier}\n */\n\n\nproto.iotextypes.BlockIdentifier.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockIdentifier();\n  return proto.iotextypes.BlockIdentifier.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockIdentifier} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockIdentifier}\n */\n\n\nproto.iotextypes.BlockIdentifier.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHash(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setHeight(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockIdentifier.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockIdentifier.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockIdentifier} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockIdentifier.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getHash();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getHeight();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * optional string hash = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.BlockIdentifier.prototype.getHash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.BlockIdentifier} returns this\n */\n\n\nproto.iotextypes.BlockIdentifier.prototype.setHash = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 height = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.BlockIdentifier.prototype.getHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.BlockIdentifier} returns this\n */\n\n\nproto.iotextypes.BlockIdentifier.prototype.setHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.AccountMeta.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.AccountMeta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.AccountMeta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.AccountMeta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      balance: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      nonce: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      pendingnonce: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      numactions: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      iscontract: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),\n      contractbytecode: msg.getContractbytecode_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.AccountMeta}\n */\n\n\nproto.iotextypes.AccountMeta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.AccountMeta();\n  return proto.iotextypes.AccountMeta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.AccountMeta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.AccountMeta}\n */\n\n\nproto.iotextypes.AccountMeta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setBalance(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setNonce(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPendingnonce(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setNumactions(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setIscontract(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setContractbytecode(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.AccountMeta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.AccountMeta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.AccountMeta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getBalance();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getNonce();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getPendingnonce();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getNumactions();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n\n  f = message.getIscontract();\n\n  if (f) {\n    writer.writeBool(6, f);\n  }\n\n  f = message.getContractbytecode_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(7, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.AccountMeta} returns this\n */\n\n\nproto.iotextypes.AccountMeta.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string balance = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getBalance = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.AccountMeta} returns this\n */\n\n\nproto.iotextypes.AccountMeta.prototype.setBalance = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint64 nonce = 3;\n * @return {number}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getNonce = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.AccountMeta} returns this\n */\n\n\nproto.iotextypes.AccountMeta.prototype.setNonce = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint64 pendingNonce = 4;\n * @return {number}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getPendingnonce = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.AccountMeta} returns this\n */\n\n\nproto.iotextypes.AccountMeta.prototype.setPendingnonce = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint64 numActions = 5;\n * @return {number}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getNumactions = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.AccountMeta} returns this\n */\n\n\nproto.iotextypes.AccountMeta.prototype.setNumactions = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional bool isContract = 6;\n * @return {boolean}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getIscontract = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 6, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotextypes.AccountMeta} returns this\n */\n\n\nproto.iotextypes.AccountMeta.prototype.setIscontract = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 6, value);\n};\n/**\n * optional bytes contractByteCode = 7;\n * @return {string}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getContractbytecode = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * optional bytes contractByteCode = 7;\n * This is a type-conversion wrapper around `getContractbytecode()`\n * @return {string}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getContractbytecode_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getContractbytecode())\n  );\n};\n/**\n * optional bytes contractByteCode = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractbytecode()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.AccountMeta.prototype.getContractbytecode_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getContractbytecode())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.AccountMeta} returns this\n */\n\n\nproto.iotextypes.AccountMeta.prototype.setContractbytecode = function (value) {\n  return jspb.Message.setProto3BytesField(this, 7, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.BlockStore.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockStore.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockStore.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockStore} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockStore.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      block: (f = msg.getBlock()) && proto.iotextypes.Block.toObject(includeInstance, f),\n      receiptsList: jspb.Message.toObjectList(msg.getReceiptsList(), proto_types_action_pb.Receipt.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockStore}\n */\n\n\nproto.iotextypes.BlockStore.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockStore();\n  return proto.iotextypes.BlockStore.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockStore} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockStore}\n */\n\n\nproto.iotextypes.BlockStore.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.Block();\n        reader.readMessage(value, proto.iotextypes.Block.deserializeBinaryFromReader);\n        msg.setBlock(value);\n        break;\n\n      case 2:\n        var value = new proto_types_action_pb.Receipt();\n        reader.readMessage(value, proto_types_action_pb.Receipt.deserializeBinaryFromReader);\n        msg.addReceipts(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockStore.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockStore.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockStore} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockStore.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlock();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.iotextypes.Block.serializeBinaryToWriter);\n  }\n\n  f = message.getReceiptsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto_types_action_pb.Receipt.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Block block = 1;\n * @return {?proto.iotextypes.Block}\n */\n\n\nproto.iotextypes.BlockStore.prototype.getBlock = function () {\n  return (\n    /** @type{?proto.iotextypes.Block} */\n    jspb.Message.getWrapperField(this, proto.iotextypes.Block, 1)\n  );\n};\n/**\n * @param {?proto.iotextypes.Block|undefined} value\n * @return {!proto.iotextypes.BlockStore} returns this\n*/\n\n\nproto.iotextypes.BlockStore.prototype.setBlock = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.BlockStore} returns this\n */\n\n\nproto.iotextypes.BlockStore.prototype.clearBlock = function () {\n  return this.setBlock(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.BlockStore.prototype.hasBlock = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated Receipt receipts = 2;\n * @return {!Array<!proto.iotextypes.Receipt>}\n */\n\n\nproto.iotextypes.BlockStore.prototype.getReceiptsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.Receipt>} */\n    jspb.Message.getRepeatedWrapperField(this, proto_types_action_pb.Receipt, 2)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.Receipt>} value\n * @return {!proto.iotextypes.BlockStore} returns this\n*/\n\n\nproto.iotextypes.BlockStore.prototype.setReceiptsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.iotextypes.Receipt=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.Receipt}\n */\n\n\nproto.iotextypes.BlockStore.prototype.addReceipts = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.iotextypes.Receipt, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.BlockStore} returns this\n */\n\n\nproto.iotextypes.BlockStore.prototype.clearReceiptsList = function () {\n  return this.setReceiptsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.BlockStores.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.BlockStores.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.BlockStores.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.BlockStores} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.BlockStores.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      blockstoresList: jspb.Message.toObjectList(msg.getBlockstoresList(), proto.iotextypes.BlockStore.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.BlockStores}\n */\n\n\nproto.iotextypes.BlockStores.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.BlockStores();\n  return proto.iotextypes.BlockStores.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.BlockStores} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.BlockStores}\n */\n\n\nproto.iotextypes.BlockStores.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.BlockStore();\n        reader.readMessage(value, proto.iotextypes.BlockStore.deserializeBinaryFromReader);\n        msg.addBlockstores(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.BlockStores.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.BlockStores.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.BlockStores} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.BlockStores.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBlockstoresList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.iotextypes.BlockStore.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated BlockStore blockStores = 1;\n * @return {!Array<!proto.iotextypes.BlockStore>}\n */\n\n\nproto.iotextypes.BlockStores.prototype.getBlockstoresList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.BlockStore>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.BlockStore, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.BlockStore>} value\n * @return {!proto.iotextypes.BlockStores} returns this\n*/\n\n\nproto.iotextypes.BlockStores.prototype.setBlockstoresList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.BlockStore=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.BlockStore}\n */\n\n\nproto.iotextypes.BlockStores.prototype.addBlockstores = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.BlockStore, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.BlockStores} returns this\n */\n\n\nproto.iotextypes.BlockStores.prototype.clearBlockstoresList = function () {\n  return this.setBlockstoresList([]);\n};\n\ngoog.object.extend(exports, proto.iotextypes);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/types/blockchain_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/types/election_pb.js":
/*!************************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/types/election_pb.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/types/election.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_duration_pb = __webpack_require__(/*! google-protobuf/google/protobuf/duration_pb.js */ \"./node_modules/google-protobuf/google/protobuf/duration_pb.js\");\n\ngoog.object.extend(proto, google_protobuf_duration_pb);\n\nvar google_protobuf_timestamp_pb = __webpack_require__(/*! google-protobuf/google/protobuf/timestamp_pb.js */ \"./node_modules/google-protobuf/google/protobuf/timestamp_pb.js\");\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.iotextypes.ElectionBucket', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotextypes.ElectionBucket = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.ElectionBucket, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.ElectionBucket.displayName = 'proto.iotextypes.ElectionBucket';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.ElectionBucket.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.ElectionBucket.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.ElectionBucket} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.ElectionBucket.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      voter: msg.getVoter_asB64(),\n      candidate: msg.getCandidate_asB64(),\n      amount: msg.getAmount_asB64(),\n      starttime: (f = msg.getStarttime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),\n      decay: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.ElectionBucket}\n */\n\n\nproto.iotextypes.ElectionBucket.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.ElectionBucket();\n  return proto.iotextypes.ElectionBucket.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.ElectionBucket} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.ElectionBucket}\n */\n\n\nproto.iotextypes.ElectionBucket.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setVoter(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setCandidate(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setAmount(value);\n        break;\n\n      case 4:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setStarttime(value);\n        break;\n\n      case 5:\n        var value = new google_protobuf_duration_pb.Duration();\n        reader.readMessage(value, google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);\n        msg.setDuration(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setDecay(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.ElectionBucket.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.ElectionBucket} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.ElectionBucket.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVoter_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getCandidate_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getAmount_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getStarttime();\n\n  if (f != null) {\n    writer.writeMessage(4, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getDuration();\n\n  if (f != null) {\n    writer.writeMessage(5, f, google_protobuf_duration_pb.Duration.serializeBinaryToWriter);\n  }\n\n  f = message.getDecay();\n\n  if (f) {\n    writer.writeBool(6, f);\n  }\n};\n/**\n * optional bytes voter = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getVoter = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes voter = 1;\n * This is a type-conversion wrapper around `getVoter()`\n * @return {string}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getVoter_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getVoter())\n  );\n};\n/**\n * optional bytes voter = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoter()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getVoter_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getVoter())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.ElectionBucket} returns this\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.setVoter = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional bytes candidate = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getCandidate = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes candidate = 2;\n * This is a type-conversion wrapper around `getCandidate()`\n * @return {string}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getCandidate_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getCandidate())\n  );\n};\n/**\n * optional bytes candidate = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCandidate()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getCandidate_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getCandidate())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.ElectionBucket} returns this\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.setCandidate = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional bytes amount = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes amount = 3;\n * This is a type-conversion wrapper around `getAmount()`\n * @return {string}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getAmount_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getAmount())\n  );\n};\n/**\n * optional bytes amount = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAmount()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getAmount_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getAmount())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.ElectionBucket} returns this\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional google.protobuf.Timestamp startTime = 4;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getStarttime = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.iotextypes.ElectionBucket} returns this\n*/\n\n\nproto.iotextypes.ElectionBucket.prototype.setStarttime = function (value) {\n  return jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ElectionBucket} returns this\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.clearStarttime = function () {\n  return this.setStarttime(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.hasStarttime = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional google.protobuf.Duration duration = 5;\n * @return {?proto.google.protobuf.Duration}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getDuration = function () {\n  return (\n    /** @type{?proto.google.protobuf.Duration} */\n    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 5)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Duration|undefined} value\n * @return {!proto.iotextypes.ElectionBucket} returns this\n*/\n\n\nproto.iotextypes.ElectionBucket.prototype.setDuration = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.ElectionBucket} returns this\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.clearDuration = function () {\n  return this.setDuration(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.hasDuration = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional bool decay = 6;\n * @return {boolean}\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.getDecay = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 6, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.iotextypes.ElectionBucket} returns this\n */\n\n\nproto.iotextypes.ElectionBucket.prototype.setDecay = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 6, value);\n};\n\ngoog.object.extend(exports, proto.iotextypes);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/types/election_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/types/endorsement_pb.js":
/*!***************************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/types/endorsement_pb.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/types/endorsement.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = __webpack_require__(/*! google-protobuf/google/protobuf/timestamp_pb.js */ \"./node_modules/google-protobuf/google/protobuf/timestamp_pb.js\");\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.iotextypes.Endorsement', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotextypes.Endorsement = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.Endorsement, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.Endorsement.displayName = 'proto.iotextypes.Endorsement';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.Endorsement.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.Endorsement.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.Endorsement} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.Endorsement.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      endorser: msg.getEndorser_asB64(),\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.Endorsement}\n */\n\n\nproto.iotextypes.Endorsement.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.Endorsement();\n  return proto.iotextypes.Endorsement.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.Endorsement} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.Endorsement}\n */\n\n\nproto.iotextypes.Endorsement.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setTimestamp(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setEndorser(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Endorsement.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.Endorsement.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.Endorsement} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.Endorsement.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n\n  if (f != null) {\n    writer.writeMessage(1, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getEndorser_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getSignature_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional google.protobuf.Timestamp timestamp = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.iotextypes.Endorsement.prototype.getTimestamp = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.iotextypes.Endorsement} returns this\n*/\n\n\nproto.iotextypes.Endorsement.prototype.setTimestamp = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.iotextypes.Endorsement} returns this\n */\n\n\nproto.iotextypes.Endorsement.prototype.clearTimestamp = function () {\n  return this.setTimestamp(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.iotextypes.Endorsement.prototype.hasTimestamp = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes endorser = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.Endorsement.prototype.getEndorser = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes endorser = 2;\n * This is a type-conversion wrapper around `getEndorser()`\n * @return {string}\n */\n\n\nproto.iotextypes.Endorsement.prototype.getEndorser_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getEndorser())\n  );\n};\n/**\n * optional bytes endorser = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getEndorser()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Endorsement.prototype.getEndorser_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getEndorser())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Endorsement} returns this\n */\n\n\nproto.iotextypes.Endorsement.prototype.setEndorser = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * optional bytes signature = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.Endorsement.prototype.getSignature = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.iotextypes.Endorsement.prototype.getSignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSignature())\n  );\n};\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.Endorsement.prototype.getSignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.Endorsement} returns this\n */\n\n\nproto.iotextypes.Endorsement.prototype.setSignature = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\ngoog.object.extend(exports, proto.iotextypes);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/types/endorsement_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/types/node_pb.js":
/*!********************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/types/node_pb.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/types/node.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.iotextypes.ServerMeta', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotextypes.ServerMeta = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.ServerMeta, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.ServerMeta.displayName = 'proto.iotextypes.ServerMeta';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.ServerMeta.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.ServerMeta.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.ServerMeta} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.ServerMeta.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      packageversion: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      packagecommitid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      gitstatus: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      goversion: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      buildtime: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.ServerMeta}\n */\n\n\nproto.iotextypes.ServerMeta.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.ServerMeta();\n  return proto.iotextypes.ServerMeta.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.ServerMeta} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.ServerMeta}\n */\n\n\nproto.iotextypes.ServerMeta.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPackageversion(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPackagecommitid(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setGitstatus(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setGoversion(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setBuildtime(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.ServerMeta.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.ServerMeta.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.ServerMeta} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.ServerMeta.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPackageversion();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getPackagecommitid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getGitstatus();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getGoversion();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getBuildtime();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n};\n/**\n * optional string packageVersion = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.ServerMeta.prototype.getPackageversion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.ServerMeta} returns this\n */\n\n\nproto.iotextypes.ServerMeta.prototype.setPackageversion = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string packageCommitID = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.ServerMeta.prototype.getPackagecommitid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.ServerMeta} returns this\n */\n\n\nproto.iotextypes.ServerMeta.prototype.setPackagecommitid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string gitStatus = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.ServerMeta.prototype.getGitstatus = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.ServerMeta} returns this\n */\n\n\nproto.iotextypes.ServerMeta.prototype.setGitstatus = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string goVersion = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.ServerMeta.prototype.getGoversion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.ServerMeta} returns this\n */\n\n\nproto.iotextypes.ServerMeta.prototype.setGoversion = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string buildTime = 5;\n * @return {string}\n */\n\n\nproto.iotextypes.ServerMeta.prototype.getBuildtime = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.ServerMeta} returns this\n */\n\n\nproto.iotextypes.ServerMeta.prototype.setBuildtime = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\ngoog.object.extend(exports, proto.iotextypes);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/types/node_pb.js?");

/***/ }),

/***/ "./node_modules/iotex-antenna/protogen/proto/types/transaction_log_pb.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/iotex-antenna/protogen/proto/types/transaction_log_pb.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// source: proto/types/transaction_log.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = __webpack_require__(/*! google-protobuf */ \"./node_modules/google-protobuf/google-protobuf.js\");\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.iotextypes.TransactionLog', null, global);\ngoog.exportSymbol('proto.iotextypes.TransactionLog.Transaction', null, global);\ngoog.exportSymbol('proto.iotextypes.TransactionLogType', null, global);\ngoog.exportSymbol('proto.iotextypes.TransactionLogs', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.iotextypes.TransactionLog = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.TransactionLog.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.TransactionLog, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.TransactionLog.displayName = 'proto.iotextypes.TransactionLog';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.TransactionLog.Transaction = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.iotextypes.TransactionLog.Transaction, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.TransactionLog.Transaction.displayName = 'proto.iotextypes.TransactionLog.Transaction';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.iotextypes.TransactionLogs = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.iotextypes.TransactionLogs.repeatedFields_, null);\n};\n\ngoog.inherits(proto.iotextypes.TransactionLogs, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.iotextypes.TransactionLogs.displayName = 'proto.iotextypes.TransactionLogs';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.TransactionLog.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.TransactionLog.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.TransactionLog.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.TransactionLog} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.TransactionLog.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      actionhash: msg.getActionhash_asB64(),\n      numtransactions: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(), proto.iotextypes.TransactionLog.Transaction.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.TransactionLog}\n */\n\n\nproto.iotextypes.TransactionLog.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.TransactionLog();\n  return proto.iotextypes.TransactionLog.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.TransactionLog} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.TransactionLog}\n */\n\n\nproto.iotextypes.TransactionLog.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setActionhash(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setNumtransactions(value);\n        break;\n\n      case 3:\n        var value = new proto.iotextypes.TransactionLog.Transaction();\n        reader.readMessage(value, proto.iotextypes.TransactionLog.Transaction.deserializeBinaryFromReader);\n        msg.addTransactions(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.TransactionLog.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.TransactionLog.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.TransactionLog} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.TransactionLog.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getActionhash_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getNumtransactions();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getTransactionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.iotextypes.TransactionLog.Transaction.serializeBinaryToWriter);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.TransactionLog.Transaction.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.TransactionLog.Transaction.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.TransactionLog.Transaction} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.TransactionLog.Transaction.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      topic: msg.getTopic_asB64(),\n      amount: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      sender: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      recipient: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      type: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.TransactionLog.Transaction}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.TransactionLog.Transaction();\n  return proto.iotextypes.TransactionLog.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.TransactionLog.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.TransactionLog.Transaction}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setTopic(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSender(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRecipient(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {!proto.iotextypes.TransactionLogType} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.TransactionLog.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.TransactionLog.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTopic_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getSender();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getRecipient();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getType();\n\n  if (f !== 0.0) {\n    writer.writeEnum(5, f);\n  }\n};\n/**\n * optional bytes topic = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.getTopic = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes topic = 1;\n * This is a type-conversion wrapper around `getTopic()`\n * @return {string}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.getTopic_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getTopic())\n  );\n};\n/**\n * optional bytes topic = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTopic()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.getTopic_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getTopic())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.TransactionLog.Transaction} returns this\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.setTopic = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string amount = 2;\n * @return {string}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.TransactionLog.Transaction} returns this\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string sender = 3;\n * @return {string}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.getSender = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.TransactionLog.Transaction} returns this\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.setSender = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string recipient = 4;\n * @return {string}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.getRecipient = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.iotextypes.TransactionLog.Transaction} returns this\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.setRecipient = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional TransactionLogType type = 5;\n * @return {!proto.iotextypes.TransactionLogType}\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.getType = function () {\n  return (\n    /** @type {!proto.iotextypes.TransactionLogType} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {!proto.iotextypes.TransactionLogType} value\n * @return {!proto.iotextypes.TransactionLog.Transaction} returns this\n */\n\n\nproto.iotextypes.TransactionLog.Transaction.prototype.setType = function (value) {\n  return jspb.Message.setProto3EnumField(this, 5, value);\n};\n/**\n * optional bytes actionHash = 1;\n * @return {string}\n */\n\n\nproto.iotextypes.TransactionLog.prototype.getActionhash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes actionHash = 1;\n * This is a type-conversion wrapper around `getActionhash()`\n * @return {string}\n */\n\n\nproto.iotextypes.TransactionLog.prototype.getActionhash_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getActionhash())\n  );\n};\n/**\n * optional bytes actionHash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getActionhash()`\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.TransactionLog.prototype.getActionhash_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getActionhash())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.iotextypes.TransactionLog} returns this\n */\n\n\nproto.iotextypes.TransactionLog.prototype.setActionhash = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional uint64 numTransactions = 2;\n * @return {number}\n */\n\n\nproto.iotextypes.TransactionLog.prototype.getNumtransactions = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.iotextypes.TransactionLog} returns this\n */\n\n\nproto.iotextypes.TransactionLog.prototype.setNumtransactions = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated Transaction transactions = 3;\n * @return {!Array<!proto.iotextypes.TransactionLog.Transaction>}\n */\n\n\nproto.iotextypes.TransactionLog.prototype.getTransactionsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.TransactionLog.Transaction>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.TransactionLog.Transaction, 3)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.TransactionLog.Transaction>} value\n * @return {!proto.iotextypes.TransactionLog} returns this\n*/\n\n\nproto.iotextypes.TransactionLog.prototype.setTransactionsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.iotextypes.TransactionLog.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.TransactionLog.Transaction}\n */\n\n\nproto.iotextypes.TransactionLog.prototype.addTransactions = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.iotextypes.TransactionLog.Transaction, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.TransactionLog} returns this\n */\n\n\nproto.iotextypes.TransactionLog.prototype.clearTransactionsList = function () {\n  return this.setTransactionsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.iotextypes.TransactionLogs.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.iotextypes.TransactionLogs.prototype.toObject = function (opt_includeInstance) {\n    return proto.iotextypes.TransactionLogs.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.iotextypes.TransactionLogs} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.iotextypes.TransactionLogs.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      logsList: jspb.Message.toObjectList(msg.getLogsList(), proto.iotextypes.TransactionLog.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.iotextypes.TransactionLogs}\n */\n\n\nproto.iotextypes.TransactionLogs.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.iotextypes.TransactionLogs();\n  return proto.iotextypes.TransactionLogs.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.iotextypes.TransactionLogs} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.iotextypes.TransactionLogs}\n */\n\n\nproto.iotextypes.TransactionLogs.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.iotextypes.TransactionLog();\n        reader.readMessage(value, proto.iotextypes.TransactionLog.deserializeBinaryFromReader);\n        msg.addLogs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.iotextypes.TransactionLogs.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.iotextypes.TransactionLogs.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.iotextypes.TransactionLogs} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.iotextypes.TransactionLogs.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getLogsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.iotextypes.TransactionLog.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated TransactionLog logs = 1;\n * @return {!Array<!proto.iotextypes.TransactionLog>}\n */\n\n\nproto.iotextypes.TransactionLogs.prototype.getLogsList = function () {\n  return (\n    /** @type{!Array<!proto.iotextypes.TransactionLog>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.iotextypes.TransactionLog, 1)\n  );\n};\n/**\n * @param {!Array<!proto.iotextypes.TransactionLog>} value\n * @return {!proto.iotextypes.TransactionLogs} returns this\n*/\n\n\nproto.iotextypes.TransactionLogs.prototype.setLogsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.iotextypes.TransactionLog=} opt_value\n * @param {number=} opt_index\n * @return {!proto.iotextypes.TransactionLog}\n */\n\n\nproto.iotextypes.TransactionLogs.prototype.addLogs = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.iotextypes.TransactionLog, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.iotextypes.TransactionLogs} returns this\n */\n\n\nproto.iotextypes.TransactionLogs.prototype.clearLogsList = function () {\n  return this.setLogsList([]);\n};\n/**\n * @enum {number}\n */\n\n\nproto.iotextypes.TransactionLogType = {\n  IN_CONTRACT_TRANSFER: 0,\n  WITHDRAW_BUCKET: 1,\n  CREATE_BUCKET: 2,\n  DEPOSIT_TO_BUCKET: 3,\n  CANDIDATE_SELF_STAKE: 4,\n  CANDIDATE_REGISTRATION_FEE: 5,\n  GAS_FEE: 6,\n  NATIVE_TRANSFER: 7,\n  DEPOSIT_TO_REWARDING_FUND: 8,\n  CLAIM_FROM_REWARDING_FUND: 9\n};\ngoog.object.extend(exports, proto.iotextypes);\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/protogen/proto/types/transaction_log_pb.js?");

/***/ }),

/***/ "./node_modules/is-arguments/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-arguments/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n  if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n    return false;\n  }\n\n  return $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n  if (isStandardArguments(value)) {\n    return true;\n  }\n\n  return value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && $toString(value) !== '[object Array]' && $toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = function () {\n  return isStandardArguments(arguments);\n}();\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n\n//# sourceURL=webpack://test/./node_modules/is-arguments/index.js?");

/***/ }),

/***/ "./node_modules/is-generator-function/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/is-generator-function/index.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar getProto = Object.getPrototypeOf;\n\nvar getGeneratorFunc = function () {\n  // eslint-disable-line consistent-return\n  if (!hasToStringTag) {\n    return false;\n  }\n\n  try {\n    return Function('return function*() {}')();\n  } catch (e) {}\n};\n\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n  if (typeof fn !== 'function') {\n    return false;\n  }\n\n  if (isFnRegex.test(fnToStr.call(fn))) {\n    return true;\n  }\n\n  if (!hasToStringTag) {\n    var str = toStr.call(fn);\n    return str === '[object GeneratorFunction]';\n  }\n\n  if (!getProto) {\n    return false;\n  }\n\n  if (typeof GeneratorFunction === 'undefined') {\n    var generatorFunc = getGeneratorFunc();\n    GeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n  }\n\n  return getProto(fn) === GeneratorFunction;\n};\n\n//# sourceURL=webpack://test/./node_modules/is-generator-function/index.js?");

/***/ }),

/***/ "./node_modules/is-hex-prefixed/src/index.js":
/*!***************************************************!*\
  !*** ./node_modules/is-hex-prefixed/src/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + typeof str + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n};\n\n//# sourceURL=webpack://test/./node_modules/is-hex-prefixed/src/index.js?");

/***/ }),

/***/ "./node_modules/is-nan/implementation.js":
/*!***********************************************!*\
  !*** ./node_modules/is-nan/implementation.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n  return value !== value;\n};\n\n//# sourceURL=webpack://test/./node_modules/is-nan/implementation.js?");

/***/ }),

/***/ "./node_modules/is-nan/index.js":
/*!**************************************!*\
  !*** ./node_modules/is-nan/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar callBind = __webpack_require__(/*! call-bind */ \"./node_modules/call-bind/index.js\");\n\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/is-nan/implementation.js\");\n\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/is-nan/polyfill.js\");\n\nvar shim = __webpack_require__(/*! ./shim */ \"./node_modules/is-nan/shim.js\");\n\nvar polyfill = callBind(getPolyfill(), Number);\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n  getPolyfill: getPolyfill,\n  implementation: implementation,\n  shim: shim\n});\nmodule.exports = polyfill;\n\n//# sourceURL=webpack://test/./node_modules/is-nan/index.js?");

/***/ }),

/***/ "./node_modules/is-nan/polyfill.js":
/*!*****************************************!*\
  !*** ./node_modules/is-nan/polyfill.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/is-nan/implementation.js\");\n\nmodule.exports = function getPolyfill() {\n  if (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n    return Number.isNaN;\n  }\n\n  return implementation;\n};\n\n//# sourceURL=webpack://test/./node_modules/is-nan/polyfill.js?");

/***/ }),

/***/ "./node_modules/is-nan/shim.js":
/*!*************************************!*\
  !*** ./node_modules/is-nan/shim.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\n\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/is-nan/polyfill.js\");\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\n\nmodule.exports = function shimNumberIsNaN() {\n  var polyfill = getPolyfill();\n  define(Number, {\n    isNaN: polyfill\n  }, {\n    isNaN: function testIsNaN() {\n      return Number.isNaN !== polyfill;\n    }\n  });\n  return polyfill;\n};\n\n//# sourceURL=webpack://test/./node_modules/is-nan/shim.js?");

/***/ }),

/***/ "./node_modules/is-typed-array/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-typed-array/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar forEach = __webpack_require__(/*! foreach */ \"./node_modules/foreach/index.js\");\n\nvar availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ \"./node_modules/available-typed-arrays/index.js\");\n\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/has-symbols/index.js\")();\n\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\n\nvar gOPD = __webpack_require__(/*! es-abstract/helpers/getOwnPropertyDescriptor */ \"./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js\");\n\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\nif (hasToStringTag && gOPD && getPrototypeOf) {\n  forEach(typedArrays, function (typedArray) {\n    var arr = new __webpack_require__.g[typedArray]();\n\n    if (!(Symbol.toStringTag in arr)) {\n      throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n    }\n\n    var proto = getPrototypeOf(arr);\n    var descriptor = gOPD(proto, Symbol.toStringTag);\n\n    if (!descriptor) {\n      var superProto = getPrototypeOf(proto);\n      descriptor = gOPD(superProto, Symbol.toStringTag);\n    }\n\n    toStrTags[typedArray] = descriptor.get;\n  });\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n  var anyTrue = false;\n  forEach(toStrTags, function (getter, typedArray) {\n    if (!anyTrue) {\n      try {\n        anyTrue = getter.call(value) === typedArray;\n      } catch (e) {\n        /**/\n      }\n    }\n  });\n  return anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n\n  if (!hasToStringTag) {\n    var tag = $slice($toString(value), 8, -1);\n    return $indexOf(typedArrays, tag) > -1;\n  }\n\n  if (!gOPD) {\n    return false;\n  }\n\n  return tryTypedArrays(value);\n};\n\n//# sourceURL=webpack://test/./node_modules/is-typed-array/index.js?");

/***/ }),

/***/ "./node_modules/isomorphic-ws/browser.js":
/*!***********************************************!*\
  !*** ./node_modules/isomorphic-ws/browser.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\nvar ws = null;\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket;\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket;\n} else if (typeof __webpack_require__.g !== 'undefined') {\n  ws = __webpack_require__.g.WebSocket || __webpack_require__.g.MozWebSocket;\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket;\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket;\n}\n\nmodule.exports = ws;\n\n//# sourceURL=webpack://test/./node_modules/isomorphic-ws/browser.js?");

/***/ }),

/***/ "./node_modules/js-sha3/src/sha3.js":
/*!******************************************!*\
  !*** ./node_modules/js-sha3/src/sha3.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\n\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n  if (NODE_JS) {\n    root = __webpack_require__.g;\n  }\n\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(bits, padding, type);\n    }\n\n    return method;\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createShakeOutputMethod(bits, padding, type);\n    }\n\n    return method;\n  };\n\n  var algorithms = [{\n    name: 'keccak',\n    padding: KECCAK_PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'sha3',\n    padding: PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'shake',\n    padding: SHAKE_PADDING,\n    bits: SHAKE_BITS,\n    createMethod: createShakeMethod\n  }];\n  var methods = {},\n      methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = 1600 - (bits << 1) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    var notString = typeof message !== 'string';\n\n    if (notString && message.constructor === ArrayBuffer) {\n      message = new Uint8Array(message);\n    }\n\n    var length = message.length,\n        blocks = this.blocks,\n        byteCount = this.byteCount,\n        blockCount = this.blockCount,\n        index = 0,\n        s = this.s,\n        i,\n        code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    var blocks = this.blocks,\n        i = this.lastByteIndex,\n        blockCount = this.blockCount,\n        s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n\n    blocks[blockCount - 1] |= 0x80000000;\n\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var hex = '',\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n\n    if (extraBytes) {\n      block = s[i];\n\n      if (extraBytes > 0) {\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n      }\n\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n      }\n\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n      }\n    }\n\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n\n    if (extraBytes) {\n      buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n\n    var array = new Uint32Array(buffer);\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var array = [],\n        offset,\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = block >> 8 & 0xFF;\n        array[offset + 2] = block >> 16 & 0xFF;\n        array[offset + 3] = block >> 24 & 0xFF;\n      }\n\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n\n      if (extraBytes > 0) {\n        array[offset] = block & 0xFF;\n      }\n\n      if (extraBytes > 1) {\n        array[offset + 1] = block >> 8 & 0xFF;\n      }\n\n      if (extraBytes > 2) {\n        array[offset + 2] = block >> 16 & 0xFF;\n      }\n    }\n\n    return array;\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n      h = c8 ^ (c2 << 1 | c3 >>> 31);\n      l = c9 ^ (c3 << 1 | c2 >>> 31);\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ (c4 << 1 | c5 >>> 31);\n      l = c1 ^ (c5 << 1 | c4 >>> 31);\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ (c6 << 1 | c7 >>> 31);\n      l = c3 ^ (c7 << 1 | c6 >>> 31);\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ (c8 << 1 | c9 >>> 31);\n      l = c5 ^ (c9 << 1 | c8 >>> 31);\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ (c0 << 1 | c1 >>> 31);\n      l = c7 ^ (c1 << 1 | c0 >>> 31);\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n      b0 = s[0];\n      b1 = s[1];\n      b32 = s[11] << 4 | s[10] >>> 28;\n      b33 = s[10] << 4 | s[11] >>> 28;\n      b14 = s[20] << 3 | s[21] >>> 29;\n      b15 = s[21] << 3 | s[20] >>> 29;\n      b46 = s[31] << 9 | s[30] >>> 23;\n      b47 = s[30] << 9 | s[31] >>> 23;\n      b28 = s[40] << 18 | s[41] >>> 14;\n      b29 = s[41] << 18 | s[40] >>> 14;\n      b20 = s[2] << 1 | s[3] >>> 31;\n      b21 = s[3] << 1 | s[2] >>> 31;\n      b2 = s[13] << 12 | s[12] >>> 20;\n      b3 = s[12] << 12 | s[13] >>> 20;\n      b34 = s[22] << 10 | s[23] >>> 22;\n      b35 = s[23] << 10 | s[22] >>> 22;\n      b16 = s[33] << 13 | s[32] >>> 19;\n      b17 = s[32] << 13 | s[33] >>> 19;\n      b48 = s[42] << 2 | s[43] >>> 30;\n      b49 = s[43] << 2 | s[42] >>> 30;\n      b40 = s[5] << 30 | s[4] >>> 2;\n      b41 = s[4] << 30 | s[5] >>> 2;\n      b22 = s[14] << 6 | s[15] >>> 26;\n      b23 = s[15] << 6 | s[14] >>> 26;\n      b4 = s[25] << 11 | s[24] >>> 21;\n      b5 = s[24] << 11 | s[25] >>> 21;\n      b36 = s[34] << 15 | s[35] >>> 17;\n      b37 = s[35] << 15 | s[34] >>> 17;\n      b18 = s[45] << 29 | s[44] >>> 3;\n      b19 = s[44] << 29 | s[45] >>> 3;\n      b10 = s[6] << 28 | s[7] >>> 4;\n      b11 = s[7] << 28 | s[6] >>> 4;\n      b42 = s[17] << 23 | s[16] >>> 9;\n      b43 = s[16] << 23 | s[17] >>> 9;\n      b24 = s[26] << 25 | s[27] >>> 7;\n      b25 = s[27] << 25 | s[26] >>> 7;\n      b6 = s[36] << 21 | s[37] >>> 11;\n      b7 = s[37] << 21 | s[36] >>> 11;\n      b38 = s[47] << 24 | s[46] >>> 8;\n      b39 = s[46] << 24 | s[47] >>> 8;\n      b30 = s[8] << 27 | s[9] >>> 5;\n      b31 = s[9] << 27 | s[8] >>> 5;\n      b12 = s[18] << 20 | s[19] >>> 12;\n      b13 = s[19] << 20 | s[18] >>> 12;\n      b44 = s[29] << 7 | s[28] >>> 25;\n      b45 = s[28] << 7 | s[29] >>> 25;\n      b26 = s[38] << 8 | s[39] >>> 24;\n      b27 = s[39] << 8 | s[38] >>> 24;\n      b8 = s[48] << 14 | s[49] >>> 18;\n      b9 = s[49] << 14 | s[48] >>> 18;\n      s[0] = b0 ^ ~b2 & b4;\n      s[1] = b1 ^ ~b3 & b5;\n      s[10] = b10 ^ ~b12 & b14;\n      s[11] = b11 ^ ~b13 & b15;\n      s[20] = b20 ^ ~b22 & b24;\n      s[21] = b21 ^ ~b23 & b25;\n      s[30] = b30 ^ ~b32 & b34;\n      s[31] = b31 ^ ~b33 & b35;\n      s[40] = b40 ^ ~b42 & b44;\n      s[41] = b41 ^ ~b43 & b45;\n      s[2] = b2 ^ ~b4 & b6;\n      s[3] = b3 ^ ~b5 & b7;\n      s[12] = b12 ^ ~b14 & b16;\n      s[13] = b13 ^ ~b15 & b17;\n      s[22] = b22 ^ ~b24 & b26;\n      s[23] = b23 ^ ~b25 & b27;\n      s[32] = b32 ^ ~b34 & b36;\n      s[33] = b33 ^ ~b35 & b37;\n      s[42] = b42 ^ ~b44 & b46;\n      s[43] = b43 ^ ~b45 & b47;\n      s[4] = b4 ^ ~b6 & b8;\n      s[5] = b5 ^ ~b7 & b9;\n      s[14] = b14 ^ ~b16 & b18;\n      s[15] = b15 ^ ~b17 & b19;\n      s[24] = b24 ^ ~b26 & b28;\n      s[25] = b25 ^ ~b27 & b29;\n      s[34] = b34 ^ ~b36 & b38;\n      s[35] = b35 ^ ~b37 & b39;\n      s[44] = b44 ^ ~b46 & b48;\n      s[45] = b45 ^ ~b47 & b49;\n      s[6] = b6 ^ ~b8 & b0;\n      s[7] = b7 ^ ~b9 & b1;\n      s[16] = b16 ^ ~b18 & b10;\n      s[17] = b17 ^ ~b19 & b11;\n      s[26] = b26 ^ ~b28 & b20;\n      s[27] = b27 ^ ~b29 & b21;\n      s[36] = b36 ^ ~b38 & b30;\n      s[37] = b37 ^ ~b39 & b31;\n      s[46] = b46 ^ ~b48 & b40;\n      s[47] = b47 ^ ~b49 & b41;\n      s[8] = b8 ^ ~b0 & b2;\n      s[9] = b9 ^ ~b1 & b3;\n      s[18] = b18 ^ ~b10 & b12;\n      s[19] = b19 ^ ~b11 & b13;\n      s[28] = b28 ^ ~b20 & b22;\n      s[29] = b29 ^ ~b21 & b23;\n      s[38] = b38 ^ ~b30 & b32;\n      s[39] = b39 ^ ~b31 & b33;\n      s[48] = b48 ^ ~b40 & b42;\n      s[49] = b49 ^ ~b41 & b43;\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (var i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n  }\n})();\n\n//# sourceURL=webpack://test/./node_modules/js-sha3/src/sha3.js?");

/***/ }),

/***/ "./node_modules/keccak/js.js":
/*!***********************************!*\
  !*** ./node_modules/keccak/js.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/api */ \"./node_modules/keccak/lib/api/index.js\")(__webpack_require__(/*! ./lib/keccak */ \"./node_modules/keccak/lib/keccak.js\"));\n\n//# sourceURL=webpack://test/./node_modules/keccak/js.js?");

/***/ }),

/***/ "./node_modules/keccak/lib/api/index.js":
/*!**********************************************!*\
  !*** ./node_modules/keccak/lib/api/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const createKeccak = __webpack_require__(/*! ./keccak */ \"./node_modules/keccak/lib/api/keccak.js\");\n\nconst createShake = __webpack_require__(/*! ./shake */ \"./node_modules/keccak/lib/api/shake.js\");\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState);\n  const Shake = createShake(KeccakState);\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm;\n\n    switch (hash) {\n      case 'keccak224':\n        return new Keccak(1152, 448, null, 224, options);\n\n      case 'keccak256':\n        return new Keccak(1088, 512, null, 256, options);\n\n      case 'keccak384':\n        return new Keccak(832, 768, null, 384, options);\n\n      case 'keccak512':\n        return new Keccak(576, 1024, null, 512, options);\n\n      case 'sha3-224':\n        return new Keccak(1152, 448, 0x06, 224, options);\n\n      case 'sha3-256':\n        return new Keccak(1088, 512, 0x06, 256, options);\n\n      case 'sha3-384':\n        return new Keccak(832, 768, 0x06, 384, options);\n\n      case 'sha3-512':\n        return new Keccak(576, 1024, 0x06, 512, options);\n\n      case 'shake128':\n        return new Shake(1344, 256, 0x1f, options);\n\n      case 'shake256':\n        return new Shake(1088, 512, 0x1f, options);\n\n      default:\n        throw new Error('Invald algorithm: ' + algorithm);\n    }\n  };\n};\n\n//# sourceURL=webpack://test/./node_modules/keccak/lib/api/index.js?");

/***/ }),

/***/ "./node_modules/keccak/lib/api/keccak.js":
/*!***********************************************!*\
  !*** ./node_modules/keccak/lib/api/keccak.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  Transform\n} = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\");\n\nmodule.exports = KeccakState => class Keccak extends Transform {\n  constructor(rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options);\n    this._rate = rate;\n    this._capacity = capacity;\n    this._delimitedSuffix = delimitedSuffix;\n    this._hashBitLength = hashBitLength;\n    this._options = options;\n    this._state = new KeccakState();\n\n    this._state.initialize(rate, capacity);\n\n    this._finalized = false;\n  }\n\n  _transform(chunk, encoding, callback) {\n    let error = null;\n\n    try {\n      this.update(chunk, encoding);\n    } catch (err) {\n      error = err;\n    }\n\n    callback(error);\n  }\n\n  _flush(callback) {\n    let error = null;\n\n    try {\n      this.push(this.digest());\n    } catch (err) {\n      error = err;\n    }\n\n    callback(error);\n  }\n\n  update(data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n    if (this._finalized) throw new Error('Digest already called');\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n\n    this._state.absorb(data);\n\n    return this;\n  }\n\n  digest(encoding) {\n    if (this._finalized) throw new Error('Digest already called');\n    this._finalized = true;\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix);\n\n    let digest = this._state.squeeze(this._hashBitLength / 8);\n\n    if (encoding !== undefined) digest = digest.toString(encoding);\n\n    this._resetState();\n\n    return digest;\n  } // remove result from memory\n\n\n  _resetState() {\n    this._state.initialize(this._rate, this._capacity);\n\n    return this;\n  } // because sometimes we need hash right now and little later\n\n\n  _clone() {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);\n\n    this._state.copy(clone._state);\n\n    clone._finalized = this._finalized;\n    return clone;\n  }\n\n};\n\n//# sourceURL=webpack://test/./node_modules/keccak/lib/api/keccak.js?");

/***/ }),

/***/ "./node_modules/keccak/lib/api/shake.js":
/*!**********************************************!*\
  !*** ./node_modules/keccak/lib/api/shake.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  Transform\n} = __webpack_require__(/*! stream */ \"./node_modules/stream-browserify/index.js\");\n\nmodule.exports = KeccakState => class Shake extends Transform {\n  constructor(rate, capacity, delimitedSuffix, options) {\n    super(options);\n    this._rate = rate;\n    this._capacity = capacity;\n    this._delimitedSuffix = delimitedSuffix;\n    this._options = options;\n    this._state = new KeccakState();\n\n    this._state.initialize(rate, capacity);\n\n    this._finalized = false;\n  }\n\n  _transform(chunk, encoding, callback) {\n    let error = null;\n\n    try {\n      this.update(chunk, encoding);\n    } catch (err) {\n      error = err;\n    }\n\n    callback(error);\n  }\n\n  _flush() {}\n\n  _read(size) {\n    this.push(this.squeeze(size));\n  }\n\n  update(data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n    if (this._finalized) throw new Error('Squeeze already called');\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n\n    this._state.absorb(data);\n\n    return this;\n  }\n\n  squeeze(dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true;\n\n      this._state.absorbLastFewBits(this._delimitedSuffix);\n    }\n\n    let data = this._state.squeeze(dataByteLength);\n\n    if (encoding !== undefined) data = data.toString(encoding);\n    return data;\n  }\n\n  _resetState() {\n    this._state.initialize(this._rate, this._capacity);\n\n    return this;\n  }\n\n  _clone() {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options);\n\n    this._state.copy(clone._state);\n\n    clone._finalized = this._finalized;\n    return clone;\n  }\n\n};\n\n//# sourceURL=webpack://test/./node_modules/keccak/lib/api/shake.js?");

/***/ }),

/***/ "./node_modules/keccak/lib/keccak-state-unroll.js":
/*!********************************************************!*\
  !*** ./node_modules/keccak/lib/keccak-state-unroll.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31);\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31);\n    const t1slo0 = s[0] ^ lo;\n    const t1shi0 = s[1] ^ hi;\n    const t1slo5 = s[10] ^ lo;\n    const t1shi5 = s[11] ^ hi;\n    const t1slo10 = s[20] ^ lo;\n    const t1shi10 = s[21] ^ hi;\n    const t1slo15 = s[30] ^ lo;\n    const t1shi15 = s[31] ^ hi;\n    const t1slo20 = s[40] ^ lo;\n    const t1shi20 = s[41] ^ hi;\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31);\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31);\n    const t1slo1 = s[2] ^ lo;\n    const t1shi1 = s[3] ^ hi;\n    const t1slo6 = s[12] ^ lo;\n    const t1shi6 = s[13] ^ hi;\n    const t1slo11 = s[22] ^ lo;\n    const t1shi11 = s[23] ^ hi;\n    const t1slo16 = s[32] ^ lo;\n    const t1shi16 = s[33] ^ hi;\n    const t1slo21 = s[42] ^ lo;\n    const t1shi21 = s[43] ^ hi;\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31);\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31);\n    const t1slo2 = s[4] ^ lo;\n    const t1shi2 = s[5] ^ hi;\n    const t1slo7 = s[14] ^ lo;\n    const t1shi7 = s[15] ^ hi;\n    const t1slo12 = s[24] ^ lo;\n    const t1shi12 = s[25] ^ hi;\n    const t1slo17 = s[34] ^ lo;\n    const t1shi17 = s[35] ^ hi;\n    const t1slo22 = s[44] ^ lo;\n    const t1shi22 = s[45] ^ hi;\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31);\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31);\n    const t1slo3 = s[6] ^ lo;\n    const t1shi3 = s[7] ^ hi;\n    const t1slo8 = s[16] ^ lo;\n    const t1shi8 = s[17] ^ hi;\n    const t1slo13 = s[26] ^ lo;\n    const t1shi13 = s[27] ^ hi;\n    const t1slo18 = s[36] ^ lo;\n    const t1shi18 = s[37] ^ hi;\n    const t1slo23 = s[46] ^ lo;\n    const t1shi23 = s[47] ^ hi;\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31);\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31);\n    const t1slo4 = s[8] ^ lo;\n    const t1shi4 = s[9] ^ hi;\n    const t1slo9 = s[18] ^ lo;\n    const t1shi9 = s[19] ^ hi;\n    const t1slo14 = s[28] ^ lo;\n    const t1shi14 = s[29] ^ hi;\n    const t1slo19 = s[38] ^ lo;\n    const t1shi19 = s[39] ^ hi;\n    const t1slo24 = s[48] ^ lo;\n    const t1shi24 = s[49] ^ hi; // rho & pi\n\n    const t2slo0 = t1slo0;\n    const t2shi0 = t1shi0;\n    const t2slo16 = t1shi5 << 4 | t1slo5 >>> 28;\n    const t2shi16 = t1slo5 << 4 | t1shi5 >>> 28;\n    const t2slo7 = t1slo10 << 3 | t1shi10 >>> 29;\n    const t2shi7 = t1shi10 << 3 | t1slo10 >>> 29;\n    const t2slo23 = t1shi15 << 9 | t1slo15 >>> 23;\n    const t2shi23 = t1slo15 << 9 | t1shi15 >>> 23;\n    const t2slo14 = t1slo20 << 18 | t1shi20 >>> 14;\n    const t2shi14 = t1shi20 << 18 | t1slo20 >>> 14;\n    const t2slo10 = t1slo1 << 1 | t1shi1 >>> 31;\n    const t2shi10 = t1shi1 << 1 | t1slo1 >>> 31;\n    const t2slo1 = t1shi6 << 12 | t1slo6 >>> 20;\n    const t2shi1 = t1slo6 << 12 | t1shi6 >>> 20;\n    const t2slo17 = t1slo11 << 10 | t1shi11 >>> 22;\n    const t2shi17 = t1shi11 << 10 | t1slo11 >>> 22;\n    const t2slo8 = t1shi16 << 13 | t1slo16 >>> 19;\n    const t2shi8 = t1slo16 << 13 | t1shi16 >>> 19;\n    const t2slo24 = t1slo21 << 2 | t1shi21 >>> 30;\n    const t2shi24 = t1shi21 << 2 | t1slo21 >>> 30;\n    const t2slo20 = t1shi2 << 30 | t1slo2 >>> 2;\n    const t2shi20 = t1slo2 << 30 | t1shi2 >>> 2;\n    const t2slo11 = t1slo7 << 6 | t1shi7 >>> 26;\n    const t2shi11 = t1shi7 << 6 | t1slo7 >>> 26;\n    const t2slo2 = t1shi12 << 11 | t1slo12 >>> 21;\n    const t2shi2 = t1slo12 << 11 | t1shi12 >>> 21;\n    const t2slo18 = t1slo17 << 15 | t1shi17 >>> 17;\n    const t2shi18 = t1shi17 << 15 | t1slo17 >>> 17;\n    const t2slo9 = t1shi22 << 29 | t1slo22 >>> 3;\n    const t2shi9 = t1slo22 << 29 | t1shi22 >>> 3;\n    const t2slo5 = t1slo3 << 28 | t1shi3 >>> 4;\n    const t2shi5 = t1shi3 << 28 | t1slo3 >>> 4;\n    const t2slo21 = t1shi8 << 23 | t1slo8 >>> 9;\n    const t2shi21 = t1slo8 << 23 | t1shi8 >>> 9;\n    const t2slo12 = t1slo13 << 25 | t1shi13 >>> 7;\n    const t2shi12 = t1shi13 << 25 | t1slo13 >>> 7;\n    const t2slo3 = t1slo18 << 21 | t1shi18 >>> 11;\n    const t2shi3 = t1shi18 << 21 | t1slo18 >>> 11;\n    const t2slo19 = t1shi23 << 24 | t1slo23 >>> 8;\n    const t2shi19 = t1slo23 << 24 | t1shi23 >>> 8;\n    const t2slo15 = t1slo4 << 27 | t1shi4 >>> 5;\n    const t2shi15 = t1shi4 << 27 | t1slo4 >>> 5;\n    const t2slo6 = t1slo9 << 20 | t1shi9 >>> 12;\n    const t2shi6 = t1shi9 << 20 | t1slo9 >>> 12;\n    const t2slo22 = t1shi14 << 7 | t1slo14 >>> 25;\n    const t2shi22 = t1slo14 << 7 | t1shi14 >>> 25;\n    const t2slo13 = t1slo19 << 8 | t1shi19 >>> 24;\n    const t2shi13 = t1shi19 << 8 | t1slo19 >>> 24;\n    const t2slo4 = t1slo24 << 14 | t1shi24 >>> 18;\n    const t2shi4 = t1shi24 << 14 | t1slo24 >>> 18; // chi\n\n    s[0] = t2slo0 ^ ~t2slo1 & t2slo2;\n    s[1] = t2shi0 ^ ~t2shi1 & t2shi2;\n    s[10] = t2slo5 ^ ~t2slo6 & t2slo7;\n    s[11] = t2shi5 ^ ~t2shi6 & t2shi7;\n    s[20] = t2slo10 ^ ~t2slo11 & t2slo12;\n    s[21] = t2shi10 ^ ~t2shi11 & t2shi12;\n    s[30] = t2slo15 ^ ~t2slo16 & t2slo17;\n    s[31] = t2shi15 ^ ~t2shi16 & t2shi17;\n    s[40] = t2slo20 ^ ~t2slo21 & t2slo22;\n    s[41] = t2shi20 ^ ~t2shi21 & t2shi22;\n    s[2] = t2slo1 ^ ~t2slo2 & t2slo3;\n    s[3] = t2shi1 ^ ~t2shi2 & t2shi3;\n    s[12] = t2slo6 ^ ~t2slo7 & t2slo8;\n    s[13] = t2shi6 ^ ~t2shi7 & t2shi8;\n    s[22] = t2slo11 ^ ~t2slo12 & t2slo13;\n    s[23] = t2shi11 ^ ~t2shi12 & t2shi13;\n    s[32] = t2slo16 ^ ~t2slo17 & t2slo18;\n    s[33] = t2shi16 ^ ~t2shi17 & t2shi18;\n    s[42] = t2slo21 ^ ~t2slo22 & t2slo23;\n    s[43] = t2shi21 ^ ~t2shi22 & t2shi23;\n    s[4] = t2slo2 ^ ~t2slo3 & t2slo4;\n    s[5] = t2shi2 ^ ~t2shi3 & t2shi4;\n    s[14] = t2slo7 ^ ~t2slo8 & t2slo9;\n    s[15] = t2shi7 ^ ~t2shi8 & t2shi9;\n    s[24] = t2slo12 ^ ~t2slo13 & t2slo14;\n    s[25] = t2shi12 ^ ~t2shi13 & t2shi14;\n    s[34] = t2slo17 ^ ~t2slo18 & t2slo19;\n    s[35] = t2shi17 ^ ~t2shi18 & t2shi19;\n    s[44] = t2slo22 ^ ~t2slo23 & t2slo24;\n    s[45] = t2shi22 ^ ~t2shi23 & t2shi24;\n    s[6] = t2slo3 ^ ~t2slo4 & t2slo0;\n    s[7] = t2shi3 ^ ~t2shi4 & t2shi0;\n    s[16] = t2slo8 ^ ~t2slo9 & t2slo5;\n    s[17] = t2shi8 ^ ~t2shi9 & t2shi5;\n    s[26] = t2slo13 ^ ~t2slo14 & t2slo10;\n    s[27] = t2shi13 ^ ~t2shi14 & t2shi10;\n    s[36] = t2slo18 ^ ~t2slo19 & t2slo15;\n    s[37] = t2shi18 ^ ~t2shi19 & t2shi15;\n    s[46] = t2slo23 ^ ~t2slo24 & t2slo20;\n    s[47] = t2shi23 ^ ~t2shi24 & t2shi20;\n    s[8] = t2slo4 ^ ~t2slo0 & t2slo1;\n    s[9] = t2shi4 ^ ~t2shi0 & t2shi1;\n    s[18] = t2slo9 ^ ~t2slo5 & t2slo6;\n    s[19] = t2shi9 ^ ~t2shi5 & t2shi6;\n    s[28] = t2slo14 ^ ~t2slo10 & t2slo11;\n    s[29] = t2shi14 ^ ~t2shi10 & t2shi11;\n    s[38] = t2slo19 ^ ~t2slo15 & t2slo16;\n    s[39] = t2shi19 ^ ~t2shi15 & t2shi16;\n    s[48] = t2slo24 ^ ~t2slo20 & t2slo21;\n    s[49] = t2shi24 ^ ~t2shi20 & t2shi21; // iota\n\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2];\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1];\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/keccak/lib/keccak-state-unroll.js?");

/***/ }),

/***/ "./node_modules/keccak/lib/keccak.js":
/*!*******************************************!*\
  !*** ./node_modules/keccak/lib/keccak.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const keccakState = __webpack_require__(/*! ./keccak-state-unroll */ \"./node_modules/keccak/lib/keccak-state-unroll.js\");\n\nfunction Keccak() {\n  // much faster than `new Array(50)`\n  this.state = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  this.blockSize = null;\n  this.count = 0;\n  this.squeezing = false;\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0;\n\n  this.blockSize = rate / 8;\n  this.count = 0;\n  this.squeezing = false;\n};\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << 8 * (this.count % 4);\n    this.count += 1;\n\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state);\n      this.count = 0;\n    }\n  }\n};\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << 8 * (this.count % 4);\n  if ((bits & 0x80) !== 0 && this.count === this.blockSize - 1) keccakState.p1600(this.state);\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << 8 * ((this.blockSize - 1) % 4);\n  keccakState.p1600(this.state);\n  this.count = 0;\n  this.squeezing = true;\n};\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01);\n  const output = Buffer.alloc(length);\n\n  for (let i = 0; i < length; ++i) {\n    output[i] = this.state[~~(this.count / 4)] >>> 8 * (this.count % 4) & 0xff;\n    this.count += 1;\n\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state);\n      this.count = 0;\n    }\n  }\n\n  return output;\n};\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i];\n\n  dest.blockSize = this.blockSize;\n  dest.count = this.count;\n  dest.squeezing = this.squeezing;\n};\n\nmodule.exports = Keccak;\n\n//# sourceURL=webpack://test/./node_modules/keccak/lib/keccak.js?");

/***/ }),

/***/ "./node_modules/md5.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/md5.js/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar HashBase = __webpack_require__(/*! hash-base */ \"./node_modules/hash-base/index.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar ARRAY16 = new Array(16);\n\nfunction MD5() {\n  HashBase.call(this, 64); // state\n\n  this._a = 0x67452301;\n  this._b = 0xefcdab89;\n  this._c = 0x98badcfe;\n  this._d = 0x10325476;\n}\n\ninherits(MD5, HashBase);\n\nMD5.prototype._update = function () {\n  var M = ARRAY16;\n\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4);\n\n  var a = this._a;\n  var b = this._b;\n  var c = this._c;\n  var d = this._d;\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7);\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12);\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17);\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22);\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7);\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12);\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17);\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22);\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7);\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12);\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17);\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22);\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7);\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12);\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17);\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22);\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5);\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9);\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14);\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20);\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5);\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9);\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14);\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20);\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5);\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9);\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14);\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20);\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5);\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9);\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14);\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20);\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4);\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11);\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16);\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23);\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4);\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11);\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16);\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23);\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4);\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11);\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16);\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23);\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4);\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11);\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16);\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23);\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6);\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10);\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15);\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21);\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6);\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10);\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15);\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21);\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6);\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10);\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15);\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21);\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6);\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10);\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15);\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21);\n  this._a = this._a + a | 0;\n  this._b = this._b + b | 0;\n  this._c = this._c + c | 0;\n  this._d = this._d + d | 0;\n};\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80;\n\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64);\n\n    this._update();\n\n    this._blockOffset = 0;\n  }\n\n  this._block.fill(0, this._blockOffset, 56);\n\n  this._block.writeUInt32LE(this._length[0], 56);\n\n  this._block.writeUInt32LE(this._length[1], 60);\n\n  this._update(); // produce result\n\n\n  var buffer = Buffer.allocUnsafe(16);\n  buffer.writeInt32LE(this._a, 0);\n  buffer.writeInt32LE(this._b, 4);\n  buffer.writeInt32LE(this._c, 8);\n  buffer.writeInt32LE(this._d, 12);\n  return buffer;\n};\n\nfunction rotl(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction fnF(a, b, c, d, m, k, s) {\n  return rotl(a + (b & c | ~b & d) + m + k | 0, s) + b | 0;\n}\n\nfunction fnG(a, b, c, d, m, k, s) {\n  return rotl(a + (b & d | c & ~d) + m + k | 0, s) + b | 0;\n}\n\nfunction fnH(a, b, c, d, m, k, s) {\n  return rotl(a + (b ^ c ^ d) + m + k | 0, s) + b | 0;\n}\n\nfunction fnI(a, b, c, d, m, k, s) {\n  return rotl(a + (c ^ (b | ~d)) + m + k | 0, s) + b | 0;\n}\n\nmodule.exports = MD5;\n\n//# sourceURL=webpack://test/./node_modules/md5.js/index.js?");

/***/ }),

/***/ "./node_modules/miller-rabin/lib/mr.js":
/*!*********************************************!*\
  !*** ./node_modules/miller-rabin/lib/mr.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var bn = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar brorand = __webpack_require__(/*! brorand */ \"./node_modules/brorand/index.js\");\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\n\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8); // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n\n  do var a = new bn(this.rand.generate(min_bytes)); while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n  if (!k) k = Math.max(1, len / 48 | 0); // Find d and s, (n - 1) = (2 ^ s) * d;\n\n  var n1 = n.subn(1);\n\n  for (var s = 0; !n1.testn(s); s++) {}\n\n  var d = n.shrn(s);\n  var rn1 = n1.toRed(red);\n  var prime = true;\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    if (cb) cb(a);\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n      if (x.cmp(rone) === 0) return false;\n      if (x.cmp(rn1) === 0) break;\n    }\n\n    if (i === s) return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n  if (!k) k = Math.max(1, len / 48 | 0); // Find d and s, (n - 1) = (2 ^ s) * d;\n\n  var n1 = n.subn(1);\n\n  for (var s = 0; !n1.testn(s); s++) {}\n\n  var d = n.shrn(s);\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0) return g;\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n      if (x.cmp(rone) === 0) return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0) break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n\n//# sourceURL=webpack://test/./node_modules/miller-rabin/lib/mr.js?");

/***/ }),

/***/ "./node_modules/minimalistic-assert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/minimalistic-assert/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\n//# sourceURL=webpack://test/./node_modules/minimalistic-assert/index.js?");

/***/ }),

/***/ "./node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n    return res;\n  }\n\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0) msg = '0' + msg;\n\n    for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi) res.push(hi, lo);else res.push(lo);\n    }\n  }\n\n  return res;\n}\n\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n  return res;\n}\n\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex') return toHex(arr);else return arr;\n};\n\n//# sourceURL=webpack://test/./node_modules/minimalistic-crypto-utils/lib/utils.js?");

/***/ }),

/***/ "./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js":
/*!****************************************************************!*\
  !*** ./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n\n//# sourceURL=webpack://test/./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/number-to-bn/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/number-to-bn/src/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var BN = __webpack_require__(/*! bn.js */ \"./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js\");\n\nvar stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ \"./node_modules/strip-hex-prefix/src/index.js\");\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\n\n\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if (!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/) || stringArg.match(/^[a-fA-F]+$/) || isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/)) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && !arg.pop && !arg.push) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n};\n\n//# sourceURL=webpack://test/./node_modules/number-to-bn/src/index.js?");

/***/ }),

/***/ "./node_modules/object-is/implementation.js":
/*!**************************************************!*\
  !*** ./node_modules/object-is/implementation.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar numberIsNaN = function (value) {\n  return value !== value;\n};\n\nmodule.exports = function is(a, b) {\n  if (a === 0 && b === 0) {\n    return 1 / a === 1 / b;\n  }\n\n  if (a === b) {\n    return true;\n  }\n\n  if (numberIsNaN(a) && numberIsNaN(b)) {\n    return true;\n  }\n\n  return false;\n};\n\n//# sourceURL=webpack://test/./node_modules/object-is/implementation.js?");

/***/ }),

/***/ "./node_modules/object-is/index.js":
/*!*****************************************!*\
  !*** ./node_modules/object-is/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\n\nvar callBind = __webpack_require__(/*! call-bind */ \"./node_modules/call-bind/index.js\");\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/object-is/implementation.js\");\n\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/object-is/polyfill.js\");\n\nvar shim = __webpack_require__(/*! ./shim */ \"./node_modules/object-is/shim.js\");\n\nvar polyfill = callBind(getPolyfill(), Object);\ndefine(polyfill, {\n  getPolyfill: getPolyfill,\n  implementation: implementation,\n  shim: shim\n});\nmodule.exports = polyfill;\n\n//# sourceURL=webpack://test/./node_modules/object-is/index.js?");

/***/ }),

/***/ "./node_modules/object-is/polyfill.js":
/*!********************************************!*\
  !*** ./node_modules/object-is/polyfill.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/object-is/implementation.js\");\n\nmodule.exports = function getPolyfill() {\n  return typeof Object.is === 'function' ? Object.is : implementation;\n};\n\n//# sourceURL=webpack://test/./node_modules/object-is/polyfill.js?");

/***/ }),

/***/ "./node_modules/object-is/shim.js":
/*!****************************************!*\
  !*** ./node_modules/object-is/shim.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/object-is/polyfill.js\");\n\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\n\nmodule.exports = function shimObjectIs() {\n  var polyfill = getPolyfill();\n  define(Object, {\n    is: polyfill\n  }, {\n    is: function testObjectIs() {\n      return Object.is !== polyfill;\n    }\n  });\n  return polyfill;\n};\n\n//# sourceURL=webpack://test/./node_modules/object-is/shim.js?");

/***/ }),

/***/ "./node_modules/object-keys/implementation.js":
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar keysShim;\n\nif (!Object.keys) {\n  // modified from https://github.com/es-shims/es5-shim\n  var has = Object.prototype.hasOwnProperty;\n  var toStr = Object.prototype.toString;\n\n  var isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\"); // eslint-disable-line global-require\n\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var hasDontEnumBug = !isEnumerable.call({\n    toString: null\n  }, 'toString');\n  var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n  var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n\n  var equalsConstructorPrototype = function (o) {\n    var ctor = o.constructor;\n    return ctor && ctor.prototype === o;\n  };\n\n  var excludedKeys = {\n    $applicationCache: true,\n    $console: true,\n    $external: true,\n    $frame: true,\n    $frameElement: true,\n    $frames: true,\n    $innerHeight: true,\n    $innerWidth: true,\n    $onmozfullscreenchange: true,\n    $onmozfullscreenerror: true,\n    $outerHeight: true,\n    $outerWidth: true,\n    $pageXOffset: true,\n    $pageYOffset: true,\n    $parent: true,\n    $scrollLeft: true,\n    $scrollTop: true,\n    $scrollX: true,\n    $scrollY: true,\n    $self: true,\n    $webkitIndexedDB: true,\n    $webkitStorageInfo: true,\n    $window: true\n  };\n\n  var hasAutomationEqualityBug = function () {\n    /* global window */\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    for (var k in window) {\n      try {\n        if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n          try {\n            equalsConstructorPrototype(window[k]);\n          } catch (e) {\n            return true;\n          }\n        }\n      } catch (e) {\n        return true;\n      }\n    }\n\n    return false;\n  }();\n\n  var equalsConstructorPrototypeIfNotBuggy = function (o) {\n    /* global window */\n    if (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n      return equalsConstructorPrototype(o);\n    }\n\n    try {\n      return equalsConstructorPrototype(o);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  keysShim = function keys(object) {\n    var isObject = object !== null && typeof object === 'object';\n    var isFunction = toStr.call(object) === '[object Function]';\n    var isArguments = isArgs(object);\n    var isString = isObject && toStr.call(object) === '[object String]';\n    var theKeys = [];\n\n    if (!isObject && !isFunction && !isArguments) {\n      throw new TypeError('Object.keys called on a non-object');\n    }\n\n    var skipProto = hasProtoEnumBug && isFunction;\n\n    if (isString && object.length > 0 && !has.call(object, 0)) {\n      for (var i = 0; i < object.length; ++i) {\n        theKeys.push(String(i));\n      }\n    }\n\n    if (isArguments && object.length > 0) {\n      for (var j = 0; j < object.length; ++j) {\n        theKeys.push(String(j));\n      }\n    } else {\n      for (var name in object) {\n        if (!(skipProto && name === 'prototype') && has.call(object, name)) {\n          theKeys.push(String(name));\n        }\n      }\n    }\n\n    if (hasDontEnumBug) {\n      var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n      for (var k = 0; k < dontEnums.length; ++k) {\n        if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n          theKeys.push(dontEnums[k]);\n        }\n      }\n    }\n\n    return theKeys;\n  };\n}\n\nmodule.exports = keysShim;\n\n//# sourceURL=webpack://test/./node_modules/object-keys/implementation.js?");

/***/ }),

/***/ "./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar slice = Array.prototype.slice;\n\nvar isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\");\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) {\n  return origKeys(o);\n} : __webpack_require__(/*! ./implementation */ \"./node_modules/object-keys/implementation.js\");\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n  if (Object.keys) {\n    var keysWorksWithArguments = function () {\n      // Safari 5.0 bug\n      var args = Object.keys(arguments);\n      return args && args.length === arguments.length;\n    }(1, 2);\n\n    if (!keysWorksWithArguments) {\n      Object.keys = function keys(object) {\n        // eslint-disable-line func-name-matching\n        if (isArgs(object)) {\n          return originalKeys(slice.call(object));\n        }\n\n        return originalKeys(object);\n      };\n    }\n  } else {\n    Object.keys = keysShim;\n  }\n\n  return Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n//# sourceURL=webpack://test/./node_modules/object-keys/index.js?");

/***/ }),

/***/ "./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n  var str = toStr.call(value);\n  var isArgs = str === '[object Arguments]';\n\n  if (!isArgs) {\n    isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';\n  }\n\n  return isArgs;\n};\n\n//# sourceURL=webpack://test/./node_modules/object-keys/isArguments.js?");

/***/ }),

/***/ "./node_modules/parse-asn1/asn1.js":
/*!*****************************************!*\
  !*** ./node_modules/parse-asn1/asn1.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n\nvar asn1 = __webpack_require__(/*! asn1.js */ \"./node_modules/asn1.js/lib/asn1.js\");\n\nexports.certificate = __webpack_require__(/*! ./certificate */ \"./node_modules/parse-asn1/certificate.js\");\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(this.key('version').int(), this.key('modulus').int(), this.key('publicExponent').int(), this.key('privateExponent').int(), this.key('prime1').int(), this.key('prime2').int(), this.key('exponent1').int(), this.key('exponent2').int(), this.key('coefficient').int());\n});\nexports.RSAPrivateKey = RSAPrivateKey;\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(this.key('modulus').int(), this.key('publicExponent').int());\n});\nexports.RSAPublicKey = RSAPublicKey;\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());\n});\nexports.PublicKey = PublicKey;\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(this.key('algorithm').objid(), this.key('none').null_().optional(), this.key('curve').objid().optional(), this.key('params').seq().obj(this.key('p').int(), this.key('q').int(), this.key('g').int()).optional());\n});\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(this.key('version').int(), this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPrivateKey').octstr());\n});\nexports.PrivateKey = PrivateKeyInfo;\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').seq().obj(this.key('id').objid(), this.key('decrypt').seq().obj(this.key('kde').seq().obj(this.key('id').objid(), this.key('kdeparams').seq().obj(this.key('salt').octstr(), this.key('iters').int())), this.key('cipher').seq().obj(this.key('algo').objid(), this.key('iv').octstr()))), this.key('subjectPrivateKey').octstr());\n});\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(this.key('version').int(), this.key('p').int(), this.key('q').int(), this.key('g').int(), this.key('pub_key').int(), this.key('priv_key').int());\n});\nexports.DSAPrivateKey = DSAPrivateKey;\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int();\n});\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(this.key('version').int(), this.key('privateKey').octstr(), this.key('parameters').optional().explicit(0).use(ECParameters), this.key('publicKey').optional().explicit(1).bitstr());\n});\nexports.ECPrivateKey = ECPrivateKey;\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  });\n});\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(this.key('r').int(), this.key('s').int());\n});\n\n//# sourceURL=webpack://test/./node_modules/parse-asn1/asn1.js?");

/***/ }),

/***/ "./node_modules/parse-asn1/certificate.js":
/*!************************************************!*\
  !*** ./node_modules/parse-asn1/certificate.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n\nvar asn = __webpack_require__(/*! asn1.js */ \"./node_modules/asn1.js/lib/asn1.js\");\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  });\n});\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(this.key('type').objid(), this.key('value').any());\n});\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(this.key('algorithm').objid(), this.key('parameters').optional(), this.key('curve').objid().optional());\n});\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(this.key('algorithm').use(AlgorithmIdentifier), this.key('subjectPublicKey').bitstr());\n});\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue);\n});\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName);\n});\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  });\n});\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(this.key('notBefore').use(Time), this.key('notAfter').use(Time));\n});\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(this.key('extnID').objid(), this.key('critical').bool().def(false), this.key('extnValue').octstr());\n});\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(this.key('version').explicit(0).int().optional(), this.key('serialNumber').int(), this.key('signature').use(AlgorithmIdentifier), this.key('issuer').use(Name), this.key('validity').use(Validity), this.key('subject').use(Name), this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo), this.key('issuerUniqueID').implicit(1).bitstr().optional(), this.key('subjectUniqueID').implicit(2).bitstr().optional(), this.key('extensions').explicit(3).seqof(Extension).optional());\n});\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(this.key('tbsCertificate').use(TBSCertificate), this.key('signatureAlgorithm').use(AlgorithmIdentifier), this.key('signatureValue').bitstr());\n});\nmodule.exports = X509Certificate;\n\n//# sourceURL=webpack://test/./node_modules/parse-asn1/certificate.js?");

/***/ }),

/***/ "./node_modules/parse-asn1/fixProc.js":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/fixProc.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m;\n\nvar evp = __webpack_require__(/*! evp_bytestokey */ \"./node_modules/evp_bytestokey/index.js\");\n\nvar ciphers = __webpack_require__(/*! browserify-aes */ \"./node_modules/browserify-aes/browser.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nmodule.exports = function (okey, password) {\n  var key = okey.toString();\n  var match = key.match(findProc);\n  var decrypted;\n\n  if (!match) {\n    var match2 = key.match(fullRegex);\n    decrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n  } else {\n    var suite = 'aes' + match[1];\n    var iv = Buffer.from(match[2], 'hex');\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n    var out = [];\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n    out.push(cipher.update(cipherText));\n    out.push(cipher.final());\n    decrypted = Buffer.concat(out);\n  }\n\n  var tag = key.match(startRegex)[1];\n  return {\n    tag: tag,\n    data: decrypted\n  };\n};\n\n//# sourceURL=webpack://test/./node_modules/parse-asn1/fixProc.js?");

/***/ }),

/***/ "./node_modules/parse-asn1/index.js":
/*!******************************************!*\
  !*** ./node_modules/parse-asn1/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var asn1 = __webpack_require__(/*! ./asn1 */ \"./node_modules/parse-asn1/asn1.js\");\n\nvar aesid = __webpack_require__(/*! ./aesid.json */ \"./node_modules/parse-asn1/aesid.json\");\n\nvar fixProc = __webpack_require__(/*! ./fixProc */ \"./node_modules/parse-asn1/fixProc.js\");\n\nvar ciphers = __webpack_require__(/*! browserify-aes */ \"./node_modules/browserify-aes/browser.js\");\n\nvar compat = __webpack_require__(/*! pbkdf2 */ \"./node_modules/pbkdf2/browser.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nmodule.exports = parseKeys;\n\nfunction parseKeys(buffer) {\n  var password;\n\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase;\n    buffer = buffer.key;\n  }\n\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  }\n\n  var stripped = fixProc(buffer, password);\n  var type = stripped.tag;\n  var data = stripped.data;\n  var subtype, ndata;\n\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n    // falls through\n\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der');\n      }\n\n      subtype = ndata.algorithm.algorithm.join('.');\n\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey;\n          return {\n            type: 'ec',\n            data: ndata\n          };\n\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          };\n\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n\n    // throw new Error('unknown key type ' + type)\n\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der');\n      data = decrypt(data, password);\n    // falls through\n\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der');\n      subtype = ndata.algorithm.algorithm.join('.');\n\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          };\n\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          };\n\n        default:\n          throw new Error('unknown key id ' + subtype);\n      }\n\n    // throw new Error('unknown key type ' + type)\n\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der');\n\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der');\n\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      };\n\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der');\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      };\n\n    default:\n      throw new Error('unknown key type ' + type);\n  }\n}\n\nparseKeys.signature = asn1.signature;\n\nfunction decrypt(data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt;\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n  var iv = data.algorithm.decrypt.cipher.iv;\n  var cipherText = data.subjectPrivateKey;\n  var keylen = parseInt(algo.split('-')[1], 10) / 8;\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n  var cipher = ciphers.createDecipheriv(algo, key, iv);\n  var out = [];\n  out.push(cipher.update(cipherText));\n  out.push(cipher.final());\n  return Buffer.concat(out);\n}\n\n//# sourceURL=webpack://test/./node_modules/parse-asn1/index.js?");

/***/ }),

/***/ "./node_modules/pbkdf2/browser.js":
/*!****************************************!*\
  !*** ./node_modules/pbkdf2/browser.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ \"./node_modules/pbkdf2/lib/async.js\");\nexports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ \"./node_modules/pbkdf2/lib/sync-browser.js\");\n\n//# sourceURL=webpack://test/./node_modules/pbkdf2/browser.js?");

/***/ }),

/***/ "./node_modules/pbkdf2/lib/async.js":
/*!******************************************!*\
  !*** ./node_modules/pbkdf2/lib/async.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar checkParameters = __webpack_require__(/*! ./precondition */ \"./node_modules/pbkdf2/lib/precondition.js\");\n\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"./node_modules/pbkdf2/lib/default-encoding.js\");\n\nvar sync = __webpack_require__(/*! ./sync */ \"./node_modules/pbkdf2/lib/sync-browser.js\");\n\nvar toBuffer = __webpack_require__(/*! ./to-buffer */ \"./node_modules/pbkdf2/lib/to-buffer.js\");\n\nvar ZERO_BUF;\nvar subtle = __webpack_require__.g.crypto && __webpack_require__.g.crypto.subtle;\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n};\nvar checks = [];\n\nfunction checkNative(algo) {\n  if (__webpack_require__.g.process && !__webpack_require__.g.process.browser) {\n    return Promise.resolve(false);\n  }\n\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false);\n  }\n\n  if (checks[algo] !== undefined) {\n    return checks[algo];\n  }\n\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8);\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function () {\n    return true;\n  }).catch(function () {\n    return false;\n  });\n  checks[algo] = prom;\n  return prom;\n}\n\nvar nextTick;\n\nfunction getNextTick() {\n  if (nextTick) {\n    return nextTick;\n  }\n\n  if (__webpack_require__.g.process && __webpack_require__.g.process.nextTick) {\n    nextTick = __webpack_require__.g.process.nextTick;\n  } else if (__webpack_require__.g.queueMicrotask) {\n    nextTick = __webpack_require__.g.queueMicrotask;\n  } else if (__webpack_require__.g.setImmediate) {\n    nextTick = __webpack_require__.g.setImmediate;\n  } else {\n    nextTick = __webpack_require__.g.setTimeout;\n  }\n\n  return nextTick;\n}\n\nfunction browserPbkdf2(password, salt, iterations, length, algo) {\n  return subtle.importKey('raw', password, {\n    name: 'PBKDF2'\n  }, false, ['deriveBits']).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3);\n  }).then(function (res) {\n    return Buffer.from(res);\n  });\n}\n\nfunction resolvePromise(promise, callback) {\n  promise.then(function (out) {\n    getNextTick()(function () {\n      callback(null, out);\n    });\n  }, function (e) {\n    getNextTick()(function () {\n      callback(e);\n    });\n  });\n}\n\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest;\n    digest = undefined;\n  }\n\n  digest = digest || 'sha1';\n  var algo = toBrowser[digest.toLowerCase()];\n\n  if (!algo || typeof __webpack_require__.g.Promise !== 'function') {\n    getNextTick()(function () {\n      var out;\n\n      try {\n        out = sync(password, salt, iterations, keylen, digest);\n      } catch (e) {\n        return callback(e);\n      }\n\n      callback(null, out);\n    });\n    return;\n  }\n\n  checkParameters(iterations, keylen);\n  password = toBuffer(password, defaultEncoding, 'Password');\n  salt = toBuffer(salt, defaultEncoding, 'Salt');\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2');\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo);\n    return sync(password, salt, iterations, keylen, digest);\n  }), callback);\n};\n\n//# sourceURL=webpack://test/./node_modules/pbkdf2/lib/async.js?");

/***/ }),

/***/ "./node_modules/pbkdf2/lib/default-encoding.js":
/*!*****************************************************!*\
  !*** ./node_modules/pbkdf2/lib/default-encoding.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\nvar defaultEncoding;\n/* istanbul ignore next */\n\nif (__webpack_require__.g.process && __webpack_require__.g.process.browser) {\n  defaultEncoding = 'utf-8';\n} else if (__webpack_require__.g.process && __webpack_require__.g.process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10);\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary';\n} else {\n  defaultEncoding = 'utf-8';\n}\n\nmodule.exports = defaultEncoding;\n\n//# sourceURL=webpack://test/./node_modules/pbkdf2/lib/default-encoding.js?");

/***/ }),

/***/ "./node_modules/pbkdf2/lib/precondition.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/precondition.js ***!
  \*************************************************/
/***/ ((module) => {

eval("var MAX_ALLOC = Math.pow(2, 30) - 1; // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number');\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations');\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number');\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) {\n    /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length');\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/pbkdf2/lib/precondition.js?");

/***/ }),

/***/ "./node_modules/pbkdf2/lib/sync-browser.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/sync-browser.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var md5 = __webpack_require__(/*! create-hash/md5 */ \"./node_modules/create-hash/md5.js\");\n\nvar RIPEMD160 = __webpack_require__(/*! ripemd160 */ \"./node_modules/ripemd160/index.js\");\n\nvar sha = __webpack_require__(/*! sha.js */ \"./node_modules/sha.js/index.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar checkParameters = __webpack_require__(/*! ./precondition */ \"./node_modules/pbkdf2/lib/precondition.js\");\n\nvar defaultEncoding = __webpack_require__(/*! ./default-encoding */ \"./node_modules/pbkdf2/lib/default-encoding.js\");\n\nvar toBuffer = __webpack_require__(/*! ./to-buffer */ \"./node_modules/pbkdf2/lib/to-buffer.js\");\n\nvar ZEROS = Buffer.alloc(128);\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n};\n\nfunction Hmac(alg, key, saltLen) {\n  var hash = getDigest(alg);\n  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n\n  if (key.length > blocksize) {\n    key = hash(key);\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize);\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);\n  ipad.copy(ipad1, 0, 0, blocksize);\n  this.ipad1 = ipad1;\n  this.ipad2 = ipad;\n  this.opad = opad;\n  this.alg = alg;\n  this.blocksize = blocksize;\n  this.hash = hash;\n  this.size = sizes[alg];\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize);\n  var h = this.hash(ipad);\n  h.copy(this.opad, this.blocksize);\n  return this.hash(this.opad);\n};\n\nfunction getDigest(alg) {\n  function shaFunc(data) {\n    return sha(alg).update(data).digest();\n  }\n\n  function rmd160Func(data) {\n    return new RIPEMD160().update(data).digest();\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func;\n  if (alg === 'md5') return md5;\n  return shaFunc;\n}\n\nfunction pbkdf2(password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen);\n  password = toBuffer(password, defaultEncoding, 'Password');\n  salt = toBuffer(salt, defaultEncoding, 'Salt');\n  digest = digest || 'sha1';\n  var hmac = new Hmac(digest, password, salt.length);\n  var DK = Buffer.allocUnsafe(keylen);\n  var block1 = Buffer.allocUnsafe(salt.length + 4);\n  salt.copy(block1, 0, 0, salt.length);\n  var destPos = 0;\n  var hLen = sizes[digest];\n  var l = Math.ceil(keylen / hLen);\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length);\n    var T = hmac.run(block1, hmac.ipad1);\n    var U = T;\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2);\n\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k];\n    }\n\n    T.copy(DK, destPos);\n    destPos += hLen;\n  }\n\n  return DK;\n}\n\nmodule.exports = pbkdf2;\n\n//# sourceURL=webpack://test/./node_modules/pbkdf2/lib/sync-browser.js?");

/***/ }),

/***/ "./node_modules/pbkdf2/lib/to-buffer.js":
/*!**********************************************!*\
  !*** ./node_modules/pbkdf2/lib/to-buffer.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing;\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding);\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer);\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView');\n  }\n};\n\n//# sourceURL=webpack://test/./node_modules/pbkdf2/lib/to-buffer.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

eval("// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n//# sourceURL=webpack://test/./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/public-encrypt/browser.js":
/*!************************************************!*\
  !*** ./node_modules/public-encrypt/browser.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ \"./node_modules/public-encrypt/publicEncrypt.js\");\nexports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ \"./node_modules/public-encrypt/privateDecrypt.js\");\n\nexports.privateEncrypt = function privateEncrypt(key, buf) {\n  return exports.publicEncrypt(key, buf, true);\n};\n\nexports.publicDecrypt = function publicDecrypt(key, buf) {\n  return exports.privateDecrypt(key, buf, true);\n};\n\n//# sourceURL=webpack://test/./node_modules/public-encrypt/browser.js?");

/***/ }),

/***/ "./node_modules/public-encrypt/mgf.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/mgf.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0);\n  var i = 0;\n  var c;\n\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = Buffer.allocUnsafe(4);\n  out.writeUInt32BE(c, 0);\n  return out;\n}\n\n//# sourceURL=webpack://test/./node_modules/public-encrypt/mgf.js?");

/***/ }),

/***/ "./node_modules/public-encrypt/privateDecrypt.js":
/*!*******************************************************!*\
  !*** ./node_modules/public-encrypt/privateDecrypt.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var parseKeys = __webpack_require__(/*! parse-asn1 */ \"./node_modules/parse-asn1/index.js\");\n\nvar mgf = __webpack_require__(/*! ./mgf */ \"./node_modules/public-encrypt/mgf.js\");\n\nvar xor = __webpack_require__(/*! ./xor */ \"./node_modules/public-encrypt/xor.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar crt = __webpack_require__(/*! browserify-rsa */ \"./node_modules/browserify-rsa/index.js\");\n\nvar createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\n\nvar withPublic = __webpack_require__(/*! ./withPublic */ \"./node_modules/public-encrypt/withPublic.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nmodule.exports = function privateDecrypt(privateKey, enc, reverse) {\n  var padding;\n\n  if (privateKey.padding) {\n    padding = privateKey.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n\n  var key = parseKeys(privateKey);\n  var k = key.modulus.byteLength();\n\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error');\n  }\n\n  var msg;\n\n  if (reverse) {\n    msg = withPublic(new BN(enc), key);\n  } else {\n    msg = crt(enc, key);\n  }\n\n  var zBuffer = Buffer.alloc(k - msg.length);\n  msg = Buffer.concat([zBuffer, msg], k);\n\n  if (padding === 4) {\n    return oaep(key, msg);\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    return msg;\n  } else {\n    throw new Error('unknown padding');\n  }\n};\n\nfunction oaep(key, msg) {\n  var k = key.modulus.byteLength();\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();\n  var hLen = iHash.length;\n\n  if (msg[0] !== 0) {\n    throw new Error('decryption error');\n  }\n\n  var maskedSeed = msg.slice(1, hLen + 1);\n  var maskedDb = msg.slice(hLen + 1);\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen));\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1));\n\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error');\n  }\n\n  var i = hLen;\n\n  while (db[i] === 0) {\n    i++;\n  }\n\n  if (db[i++] !== 1) {\n    throw new Error('decryption error');\n  }\n\n  return db.slice(i);\n}\n\nfunction pkcs1(key, msg, reverse) {\n  var p1 = msg.slice(0, 2);\n  var i = 2;\n  var status = 0;\n\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++;\n      break;\n    }\n  }\n\n  var ps = msg.slice(2, i - 1);\n\n  if (p1.toString('hex') !== '0002' && !reverse || p1.toString('hex') !== '0001' && reverse) {\n    status++;\n  }\n\n  if (ps.length < 8) {\n    status++;\n  }\n\n  if (status) {\n    throw new Error('decryption error');\n  }\n\n  return msg.slice(i);\n}\n\nfunction compare(a, b) {\n  a = Buffer.from(a);\n  b = Buffer.from(b);\n  var dif = 0;\n  var len = a.length;\n\n  if (a.length !== b.length) {\n    dif++;\n    len = Math.min(a.length, b.length);\n  }\n\n  var i = -1;\n\n  while (++i < len) {\n    dif += a[i] ^ b[i];\n  }\n\n  return dif;\n}\n\n//# sourceURL=webpack://test/./node_modules/public-encrypt/privateDecrypt.js?");

/***/ }),

/***/ "./node_modules/public-encrypt/publicEncrypt.js":
/*!******************************************************!*\
  !*** ./node_modules/public-encrypt/publicEncrypt.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var parseKeys = __webpack_require__(/*! parse-asn1 */ \"./node_modules/parse-asn1/index.js\");\n\nvar randomBytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\n\nvar createHash = __webpack_require__(/*! create-hash */ \"./node_modules/create-hash/browser.js\");\n\nvar mgf = __webpack_require__(/*! ./mgf */ \"./node_modules/public-encrypt/mgf.js\");\n\nvar xor = __webpack_require__(/*! ./xor */ \"./node_modules/public-encrypt/xor.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar withPublic = __webpack_require__(/*! ./withPublic */ \"./node_modules/public-encrypt/withPublic.js\");\n\nvar crt = __webpack_require__(/*! browserify-rsa */ \"./node_modules/browserify-rsa/index.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nmodule.exports = function publicEncrypt(publicKey, msg, reverse) {\n  var padding;\n\n  if (publicKey.padding) {\n    padding = publicKey.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n\n  var key = parseKeys(publicKey);\n  var paddedMsg;\n\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg);\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg);\n\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus');\n    }\n  } else {\n    throw new Error('unknown padding');\n  }\n\n  if (reverse) {\n    return crt(paddedMsg, key);\n  } else {\n    return withPublic(paddedMsg, key);\n  }\n};\n\nfunction oaep(key, msg) {\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long');\n  }\n\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2);\n  var dblen = k - hLen - 1;\n  var seed = randomBytes(hLen);\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen));\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen));\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k));\n}\n\nfunction pkcs1(key, msg, reverse) {\n  var mLen = msg.length;\n  var k = key.modulus.byteLength();\n\n  if (mLen > k - 11) {\n    throw new Error('message too long');\n  }\n\n  var ps;\n\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff);\n  } else {\n    ps = nonZero(k - mLen - 3);\n  }\n\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k));\n}\n\nfunction nonZero(len) {\n  var out = Buffer.allocUnsafe(len);\n  var i = 0;\n  var cache = randomBytes(len * 2);\n  var cur = 0;\n  var num;\n\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2);\n      cur = 0;\n    }\n\n    num = cache[cur++];\n\n    if (num) {\n      out[i++] = num;\n    }\n  }\n\n  return out;\n}\n\n//# sourceURL=webpack://test/./node_modules/public-encrypt/publicEncrypt.js?");

/***/ }),

/***/ "./node_modules/public-encrypt/withPublic.js":
/*!***************************************************!*\
  !*** ./node_modules/public-encrypt/withPublic.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nfunction withPublic(paddedMsg, key) {\n  return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());\n}\n\nmodule.exports = withPublic;\n\n//# sourceURL=webpack://test/./node_modules/public-encrypt/withPublic.js?");

/***/ }),

/***/ "./node_modules/public-encrypt/xor.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/xor.js ***!
  \********************************************/
/***/ ((module) => {

eval("module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n\n  return a;\n};\n\n//# sourceURL=webpack://test/./node_modules/public-encrypt/xor.js?");

/***/ }),

/***/ "./node_modules/randombytes/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/randombytes/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n // limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n\nvar MAX_BYTES = 65536; // Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\n\nvar MAX_UINT32 = 4294967295;\n\nfunction oldBrowser() {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11');\n}\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto;\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes;\n} else {\n  module.exports = oldBrowser;\n}\n\nfunction randomBytes(size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes');\n  var bytes = Buffer.allocUnsafe(size);\n\n  if (size > 0) {\n    // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) {\n      // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES));\n      }\n    } else {\n      crypto.getRandomValues(bytes);\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes);\n    });\n  }\n\n  return bytes;\n}\n\n//# sourceURL=webpack://test/./node_modules/randombytes/browser.js?");

/***/ }),

/***/ "./node_modules/randomfill/browser.js":
/*!********************************************!*\
  !*** ./node_modules/randomfill/browser.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n\n\nfunction oldBrowser() {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11');\n}\n\nvar safeBuffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\");\n\nvar randombytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\n\nvar Buffer = safeBuffer.Buffer;\nvar kBufferMaxLength = safeBuffer.kMaxLength;\nvar crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto;\nvar kMaxUint32 = Math.pow(2, 32) - 1;\n\nfunction assertOffset(offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) {\n    // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number');\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32');\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range');\n  }\n}\n\nfunction assertSize(size, offset, length) {\n  if (typeof size !== 'number' || size !== size) {\n    // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number');\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32');\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small');\n  }\n}\n\nif (crypto && crypto.getRandomValues || !process.browser) {\n  exports.randomFill = randomFill;\n  exports.randomFillSync = randomFillSync;\n} else {\n  exports.randomFill = oldBrowser;\n  exports.randomFillSync = oldBrowser;\n}\n\nfunction randomFill(buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof __webpack_require__.g.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset;\n    offset = 0;\n    size = buf.length;\n  } else if (typeof size === 'function') {\n    cb = size;\n    size = buf.length - offset;\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function');\n  }\n\n  assertOffset(offset, buf.length);\n  assertSize(size, offset, buf.length);\n  return actualFill(buf, offset, size, cb);\n}\n\nfunction actualFill(buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer;\n    var uint = new Uint8Array(ourBuf, offset, size);\n    crypto.getRandomValues(uint);\n\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf);\n      });\n      return;\n    }\n\n    return buf;\n  }\n\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err);\n      }\n\n      bytes.copy(buf, offset);\n      cb(null, buf);\n    });\n    return;\n  }\n\n  var bytes = randombytes(size);\n  bytes.copy(buf, offset);\n  return buf;\n}\n\nfunction randomFillSync(buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0;\n  }\n\n  if (!Buffer.isBuffer(buf) && !(buf instanceof __webpack_require__.g.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array');\n  }\n\n  assertOffset(offset, buf.length);\n  if (size === undefined) size = buf.length - offset;\n  assertSize(size, offset, buf.length);\n  return actualFill(buf, offset, size);\n}\n\n//# sourceURL=webpack://test/./node_modules/randomfill/browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/errors-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/errors-browser.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/errors-browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\n\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/_stream_duplex.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\nmodule.exports = PassThrough;\n\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/_stream_passthrough.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer;\n\nvar OurUint8Array = __webpack_require__.g.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = __webpack_require__(/*! util */ \"?d17e\");\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ \"./node_modules/readable-stream/lib/internal/streams/buffer_list.js\");\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = __webpack_require__(/*! ../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ \"./node_modules/readable-stream/lib/internal/streams/async_iterator.js\");\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = __webpack_require__(/*! ./internal/streams/from */ \"./node_modules/readable-stream/lib/internal/streams/from-browser.js\");\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/_stream_readable.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nmodule.exports = Transform;\n\nvar _require$codes = __webpack_require__(/*! ../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/_stream_transform.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\n\nvar Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer;\n\nvar OurUint8Array = __webpack_require__.g.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/readable-stream/lib/internal/streams/destroy.js\");\n\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/readable-stream/lib/internal/streams/state.js\"),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = __webpack_require__(/*! ../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/readable-stream/lib/_stream_duplex.js\"); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/_stream_writable.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar finished = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this; // if we have detected an error in the meanwhile\n    // reject straight away\n\n\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this; // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n\n\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/async_iterator.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!**************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar _require = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\"),\n    Buffer = _require.Buffer;\n\nvar _require2 = __webpack_require__(/*! util */ \"?ed1b\"),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/buffer_list.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/destroy.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar ERR_STREAM_PREMATURE_CLOSE = __webpack_require__(/*! ../../../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/end-of-stream.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \***************************************************************************/
/***/ ((module) => {

eval("module.exports = function () {\n  throw new Error('Readable.from is not available in the browser');\n};\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/from-browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!***********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = __webpack_require__(/*! ../../../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/pipeline.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/state.js":
/*!********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/state.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar ERR_INVALID_OPT_VALUE = __webpack_require__(/*! ../../../errors */ \"./node_modules/readable-stream/errors-browser.js\").codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/state.js?");

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/lib/internal/streams/stream-browser.js?");

/***/ }),

/***/ "./node_modules/readable-stream/readable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/readable-stream/lib/_stream_passthrough.js\");\nexports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ \"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nexports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ \"./node_modules/readable-stream/lib/internal/streams/pipeline.js\");\n\n//# sourceURL=webpack://test/./node_modules/readable-stream/readable-browser.js?");

/***/ }),

/***/ "./node_modules/ripemd160/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ripemd160/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer;\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar HashBase = __webpack_require__(/*! hash-base */ \"./node_modules/hash-base/index.js\");\n\nvar ARRAY16 = new Array(16);\nvar zl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar zr = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar sl = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sr = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e];\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000];\n\nfunction RIPEMD160() {\n  HashBase.call(this, 64); // state\n\n  this._a = 0x67452301;\n  this._b = 0xefcdab89;\n  this._c = 0x98badcfe;\n  this._d = 0x10325476;\n  this._e = 0xc3d2e1f0;\n}\n\ninherits(RIPEMD160, HashBase);\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16;\n\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4);\n\n  var al = this._a | 0;\n  var bl = this._b | 0;\n  var cl = this._c | 0;\n  var dl = this._d | 0;\n  var el = this._e | 0;\n  var ar = this._a | 0;\n  var br = this._b | 0;\n  var cr = this._c | 0;\n  var dr = this._d | 0;\n  var er = this._e | 0; // computation\n\n  for (var i = 0; i < 80; i += 1) {\n    var tl;\n    var tr;\n\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);\n    } else {\n      // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);\n    }\n\n    al = el;\n    el = dl;\n    dl = rotl(cl, 10);\n    cl = bl;\n    bl = tl;\n    ar = er;\n    er = dr;\n    dr = rotl(cr, 10);\n    cr = br;\n    br = tr;\n  } // update state\n\n\n  var t = this._b + cl + dr | 0;\n  this._b = this._c + dl + er | 0;\n  this._c = this._d + el + ar | 0;\n  this._d = this._e + al + br | 0;\n  this._e = this._a + bl + cr | 0;\n  this._a = t;\n};\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80;\n\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64);\n\n    this._update();\n\n    this._blockOffset = 0;\n  }\n\n  this._block.fill(0, this._blockOffset, 56);\n\n  this._block.writeUInt32LE(this._length[0], 56);\n\n  this._block.writeUInt32LE(this._length[1], 60);\n\n  this._update(); // produce result\n\n\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);\n  buffer.writeInt32LE(this._a, 0);\n  buffer.writeInt32LE(this._b, 4);\n  buffer.writeInt32LE(this._c, 8);\n  buffer.writeInt32LE(this._d, 12);\n  buffer.writeInt32LE(this._e, 16);\n  return buffer;\n};\n\nfunction rotl(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction fn1(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn2(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn3(a, b, c, d, e, m, k, s) {\n  return rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn4(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;\n}\n\nfunction fn5(a, b, c, d, e, m, k, s) {\n  return rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;\n}\n\nmodule.exports = RIPEMD160;\n\n//# sourceURL=webpack://test/./node_modules/ripemd160/index.js?");

/***/ }),

/***/ "./node_modules/rlp/dist/index.js":
/*!****************************************!*\
  !*** ./node_modules/rlp/dist/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getLength = exports.decode = exports.encode = void 0;\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\n\n\nfunction encode(input) {\n  if (Array.isArray(input)) {\n    var output = [];\n\n    for (var i = 0; i < input.length; i++) {\n      output.push(encode(input[i]));\n    }\n\n    var buf = Buffer.concat(output);\n    return Buffer.concat([encodeLength(buf.length, 192), buf]);\n  } else {\n    var inputBuf = toBuffer(input);\n    return inputBuf.length === 1 && inputBuf[0] < 128 ? inputBuf : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n  }\n}\n\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\n\nfunction safeParseInt(v, base) {\n  if (v.slice(0, 2) === '00') {\n    throw new Error('invalid RLP: extra zeros');\n  }\n\n  return parseInt(v, base);\n}\n\nfunction encodeLength(len, offset) {\n  if (len < 56) {\n    return Buffer.from([len + offset]);\n  } else {\n    var hexLength = intToHex(len);\n    var lLength = hexLength.length / 2;\n    var firstByte = intToHex(offset + 55 + lLength);\n    return Buffer.from(firstByte + hexLength, 'hex');\n  }\n}\n\nfunction decode(input, stream) {\n  if (stream === void 0) {\n    stream = false;\n  }\n\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n\n  var decoded = _decode(inputBuffer);\n\n  if (stream) {\n    return decoded;\n  }\n\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid remainder');\n  }\n\n  return decoded.data;\n}\n\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\n\nfunction getLength(input) {\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n  var firstByte = inputBuffer[0];\n\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length;\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f;\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6;\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf;\n  } else {\n    // a list  over 55 bytes long\n    var llength = firstByte - 0xf6;\n    var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n    return llength + length;\n  }\n}\n\nexports.getLength = getLength;\n/** Decode an input with RLP */\n\nfunction _decode(input) {\n  var length, llength, data, innerRemainder, d;\n  var decoded = [];\n  var firstByte = input[0];\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1)\n    };\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f; // set 0x80 null to 0\n\n    if (firstByte === 0x80) {\n      data = Buffer.from([]);\n    } else {\n      data = input.slice(1, length);\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid rlp encoding: byte must be less 0x80');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length)\n    };\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6;\n\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length');\n    }\n\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55');\n    }\n\n    data = input.slice(llength, length + llength);\n\n    if (data.length < length) {\n      throw new Error('invalid RLP: not enough bytes for string');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length + llength)\n    };\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf;\n    innerRemainder = input.slice(1, length);\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length)\n    };\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6;\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n    var totalLength = llength + length;\n\n    if (totalLength > input.length) {\n      throw new Error('invalid rlp: total length is larger than the data');\n    }\n\n    innerRemainder = input.slice(llength, totalLength);\n\n    if (innerRemainder.length === 0) {\n      throw new Error('invalid rlp, List has a invalid length');\n    }\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength)\n    };\n  }\n}\n/** Check if a string is prefixed by 0x */\n\n\nfunction isHexPrefixed(str) {\n  return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\n\n\nfunction stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\n\n\nfunction intToHex(integer) {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!');\n  }\n\n  var hex = integer.toString(16);\n  return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\n\n\nfunction padToEven(a) {\n  return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\n\n\nfunction intToBuffer(integer) {\n  var hex = intToHex(integer);\n  return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\n\n\nfunction toBuffer(v) {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === 'string') {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n      } else {\n        return Buffer.from(v);\n      }\n    } else if (typeof v === 'number' || typeof v === 'bigint') {\n      if (!v) {\n        return Buffer.from([]);\n      } else {\n        return intToBuffer(v);\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([]);\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v);\n    } else if (BN.isBN(v)) {\n      // converts a BN to a Buffer\n      return Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n}\n\n//# sourceURL=webpack://test/./node_modules/rlp/dist/index.js?");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype); // Copy static methods from Buffer\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};\n\n//# sourceURL=webpack://test/./node_modules/safe-buffer/index.js?");

/***/ }),

/***/ "./node_modules/safer-buffer/safer.js":
/*!********************************************!*\
  !*** ./node_modules/safer-buffer/safer.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n/* eslint-disable node/no-deprecated-api */\n\n\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\nvar Buffer = buffer.Buffer;\nvar safer = {};\nvar key;\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue;\n  if (key === 'SlowBuffer' || key === 'Buffer') continue;\n  safer[key] = buffer[key];\n}\n\nvar Safer = safer.Buffer = {};\n\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue;\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue;\n  Safer[key] = Buffer[key];\n}\n\nsafer.Buffer.prototype = Buffer.prototype;\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value);\n    }\n\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value);\n    }\n\n    return Buffer(value, encodingOrOffset, length);\n  };\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size);\n    }\n\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n\n    var buf = Buffer(size);\n\n    if (!fill || fill.length === 0) {\n      buf.fill(0);\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n\n    return buf;\n  };\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength;\n  } catch (e) {// we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  };\n\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;\n  }\n}\n\nmodule.exports = safer;\n\n//# sourceURL=webpack://test/./node_modules/safer-buffer/safer.js?");

/***/ }),

/***/ "./node_modules/scrypt.js/js.js":
/*!**************************************!*\
  !*** ./node_modules/scrypt.js/js.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! scryptsy */ \"./node_modules/scryptsy/lib/scrypt.js\");\n\n//# sourceURL=webpack://test/./node_modules/scrypt.js/js.js?");

/***/ }),

/***/ "./node_modules/scryptsy/lib/scrypt.js":
/*!*********************************************!*\
  !*** ./node_modules/scryptsy/lib/scrypt.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var pbkdf2Sync = __webpack_require__(/*! pbkdf2 */ \"./node_modules/pbkdf2/browser.js\").pbkdf2Sync;\n\nvar MAX_VALUE = 0x7fffffff; // N = Cpu cost, r = Memory cost, p = parallelization cost\n\nfunction scrypt(key, salt, N, r, p, dkLen, progressCallback) {\n  if (N === 0 || (N & N - 1) !== 0) throw Error('N must be > 0 and a power of 2');\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large');\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large');\n  var XY = new Buffer(256 * r);\n  var V = new Buffer(128 * r * N); // pseudo global\n\n  var B32 = new Int32Array(16); // salsa20_8\n\n  var x = new Int32Array(16); // salsa20_8\n\n  var _X = new Buffer(64); // blockmix_salsa8\n  // pseudo global\n\n\n  var B = pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256');\n  var tickCallback;\n\n  if (progressCallback) {\n    var totalOps = p * N * 2;\n    var currentOp = 0;\n\n    tickCallback = function () {\n      ++currentOp; // send progress notifications once every 1,000 ops\n\n      if (currentOp % 1000 === 0) {\n        progressCallback({\n          current: currentOp,\n          total: totalOps,\n          percent: currentOp / totalOps * 100.0\n        });\n      }\n    };\n  }\n\n  for (var i = 0; i < p; i++) {\n    smix(B, i * 128 * r, r, N, V, XY);\n  }\n\n  return pbkdf2Sync(key, B, 1, dkLen, 'sha256'); // all of these functions are actually moved to the top\n  // due to function hoisting\n\n  function smix(B, Bi, r, N, V, XY) {\n    var Xi = 0;\n    var Yi = 128 * r;\n    var i;\n    B.copy(XY, Xi, Bi, Bi + Yi);\n\n    for (i = 0; i < N; i++) {\n      XY.copy(V, i * Yi, Xi, Xi + Yi);\n      blockmix_salsa8(XY, Xi, Yi, r);\n      if (tickCallback) tickCallback();\n    }\n\n    for (i = 0; i < N; i++) {\n      var offset = Xi + (2 * r - 1) * 64;\n      var j = XY.readUInt32LE(offset) & N - 1;\n      blockxor(V, j * Yi, XY, Xi, Yi);\n      blockmix_salsa8(XY, Xi, Yi, r);\n      if (tickCallback) tickCallback();\n    }\n\n    XY.copy(B, Bi, Xi, Xi + Yi);\n  }\n\n  function blockmix_salsa8(BY, Bi, Yi, r) {\n    var i;\n    arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64);\n\n    for (i = 0; i < 2 * r; i++) {\n      blockxor(BY, i * 64, _X, 0, 64);\n      salsa20_8(_X);\n      arraycopy(_X, 0, BY, Yi + i * 64, 64);\n    }\n\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + i * 2 * 64, BY, Bi + i * 64, 64);\n    }\n\n    for (i = 0; i < r; i++) {\n      arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64);\n    }\n  }\n\n  function R(a, b) {\n    return a << b | a >>> 32 - b;\n  }\n\n  function salsa20_8(B) {\n    var i;\n\n    for (i = 0; i < 16; i++) {\n      B32[i] = (B[i * 4 + 0] & 0xff) << 0;\n      B32[i] |= (B[i * 4 + 1] & 0xff) << 8;\n      B32[i] |= (B[i * 4 + 2] & 0xff) << 16;\n      B32[i] |= (B[i * 4 + 3] & 0xff) << 24; // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\n    }\n\n    arraycopy(B32, 0, x, 0, 16);\n\n    for (i = 8; i > 0; i -= 2) {\n      x[4] ^= R(x[0] + x[12], 7);\n      x[8] ^= R(x[4] + x[0], 9);\n      x[12] ^= R(x[8] + x[4], 13);\n      x[0] ^= R(x[12] + x[8], 18);\n      x[9] ^= R(x[5] + x[1], 7);\n      x[13] ^= R(x[9] + x[5], 9);\n      x[1] ^= R(x[13] + x[9], 13);\n      x[5] ^= R(x[1] + x[13], 18);\n      x[14] ^= R(x[10] + x[6], 7);\n      x[2] ^= R(x[14] + x[10], 9);\n      x[6] ^= R(x[2] + x[14], 13);\n      x[10] ^= R(x[6] + x[2], 18);\n      x[3] ^= R(x[15] + x[11], 7);\n      x[7] ^= R(x[3] + x[15], 9);\n      x[11] ^= R(x[7] + x[3], 13);\n      x[15] ^= R(x[11] + x[7], 18);\n      x[1] ^= R(x[0] + x[3], 7);\n      x[2] ^= R(x[1] + x[0], 9);\n      x[3] ^= R(x[2] + x[1], 13);\n      x[0] ^= R(x[3] + x[2], 18);\n      x[6] ^= R(x[5] + x[4], 7);\n      x[7] ^= R(x[6] + x[5], 9);\n      x[4] ^= R(x[7] + x[6], 13);\n      x[5] ^= R(x[4] + x[7], 18);\n      x[11] ^= R(x[10] + x[9], 7);\n      x[8] ^= R(x[11] + x[10], 9);\n      x[9] ^= R(x[8] + x[11], 13);\n      x[10] ^= R(x[9] + x[8], 18);\n      x[12] ^= R(x[15] + x[14], 7);\n      x[13] ^= R(x[12] + x[15], 9);\n      x[14] ^= R(x[13] + x[12], 13);\n      x[15] ^= R(x[14] + x[13], 18);\n    }\n\n    for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i];\n\n    for (i = 0; i < 16; i++) {\n      var bi = i * 4;\n      B[bi + 0] = B32[i] >> 0 & 0xff;\n      B[bi + 1] = B32[i] >> 8 & 0xff;\n      B[bi + 2] = B32[i] >> 16 & 0xff;\n      B[bi + 3] = B32[i] >> 24 & 0xff; // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\n    }\n  } // naive approach... going back to loop unrolling may yield additional performance\n\n\n  function blockxor(S, Si, D, Di, len) {\n    for (var i = 0; i < len; i++) {\n      D[Di + i] ^= S[Si + i];\n    }\n  }\n}\n\nfunction arraycopy(src, srcPos, dest, destPos, length) {\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\n    src.copy(dest, destPos, srcPos, srcPos + length);\n  } else {\n    while (length--) {\n      dest[destPos++] = src[srcPos++];\n    }\n  }\n}\n\nmodule.exports = scrypt;\n\n//# sourceURL=webpack://test/./node_modules/scryptsy/lib/scrypt.js?");

/***/ }),

/***/ "./node_modules/secp256k1/elliptic.js":
/*!********************************************!*\
  !*** ./node_modules/secp256k1/elliptic.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib */ \"./node_modules/secp256k1/lib/index.js\")(__webpack_require__(/*! ./lib/elliptic */ \"./node_modules/secp256k1/lib/elliptic.js\"));\n\n//# sourceURL=webpack://test/./node_modules/secp256k1/elliptic.js?");

/***/ }),

/***/ "./node_modules/secp256k1/lib/elliptic.js":
/*!************************************************!*\
  !*** ./node_modules/secp256k1/lib/elliptic.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const EC = __webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\").ec;\n\nconst ec = new EC('secp256k1');\nconst ecparams = ec.curve; // Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\n\nconst BN = ecparams.n.constructor;\n\nfunction loadCompressedPublicKey(first, xbuf) {\n  let x = new BN(xbuf); // overflow\n\n  if (x.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red); // compute corresponding Y\n\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();\n  if (first === 0x03 !== y.isOdd()) y = y.redNeg();\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadUncompressedPublicKey(first, xbuf, ybuf) {\n  let x = new BN(xbuf);\n  let y = new BN(ybuf); // overflow\n\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red);\n  y = y.toRed(ecparams.red); // is odd flag\n\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null; // x*x*x + b = y*y\n\n  const x3 = x.redSqr().redIMul(x);\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadPublicKey(pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0];\n\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null;\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33));\n\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null;\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65));\n\n    default:\n      return null;\n  }\n}\n\nfunction savePublicKey(output, point) {\n  const pubkey = point.encode(null, output.length === 33); // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i];\n}\n\nmodule.exports = {\n  contextRandomize() {\n    return 0;\n  },\n\n  privateKeyVerify(seckey) {\n    const bn = new BN(seckey);\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1;\n  },\n\n  privateKeyNegate(seckey) {\n    const bn = new BN(seckey);\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(negate);\n    return 0;\n  },\n\n  privateKeyTweakAdd(seckey, tweak) {\n    const bn = new BN(tweak);\n    if (bn.cmp(ecparams.n) >= 0) return 1;\n    bn.iadd(new BN(seckey));\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n);\n    if (bn.isZero()) return 1;\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(tweaked);\n    return 0;\n  },\n\n  privateKeyTweakMul(seckey, tweak) {\n    let bn = new BN(tweak);\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;\n    bn.imul(new BN(seckey));\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n);\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(tweaked);\n    return 0;\n  },\n\n  publicKeyVerify(pubkey) {\n    const pair = loadPublicKey(pubkey);\n    return pair === null ? 1 : 0;\n  },\n\n  publicKeyCreate(output, seckey) {\n    const bn = new BN(seckey);\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;\n    const point = ec.keyFromPrivate(seckey).getPublic();\n    savePublicKey(output, point);\n    return 0;\n  },\n\n  publicKeyConvert(output, pubkey) {\n    const pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    const point = pair.getPublic();\n    savePublicKey(output, point);\n    return 0;\n  },\n\n  publicKeyNegate(output, pubkey) {\n    const pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    const point = pair.getPublic();\n    point.y = point.y.redNeg();\n    savePublicKey(output, point);\n    return 0;\n  },\n\n  publicKeyCombine(output, pubkeys) {\n    const pairs = new Array(pubkeys.length);\n\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i]);\n      if (pairs[i] === null) return 1;\n    }\n\n    let point = pairs[0].getPublic();\n\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub);\n\n    if (point.isInfinity()) return 2;\n    savePublicKey(output, point);\n    return 0;\n  },\n\n  publicKeyTweakAdd(output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    tweak = new BN(tweak);\n    if (tweak.cmp(ecparams.n) >= 0) return 2;\n    const point = pair.getPublic().add(ecparams.g.mul(tweak));\n    if (point.isInfinity()) return 2;\n    savePublicKey(output, point);\n    return 0;\n  },\n\n  publicKeyTweakMul(output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    tweak = new BN(tweak);\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2;\n    const point = pair.getPublic().mul(tweak);\n    savePublicKey(output, point);\n    return 0;\n  },\n\n  signatureNormalize(sig) {\n    const r = new BN(sig.subarray(0, 32));\n    const s = new BN(sig.subarray(32, 64));\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1;\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32);\n    }\n\n    return 0;\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport(obj, sig) {\n    const sigR = sig.subarray(0, 32);\n    const sigS = sig.subarray(32, 64);\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1;\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1;\n    const {\n      output\n    } = obj; // Prepare R\n\n    let r = output.subarray(4, 4 + 33);\n    r[0] = 0x00;\n    r.set(sigR, 1);\n    let lenR = 33;\n    let posR = 0;\n\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR);\n    if (r[0] & 0x80) return 1;\n    if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80)) return 1; // Prepare S\n\n    let s = output.subarray(6 + 33, 6 + 33 + 33);\n    s[0] = 0x00;\n    s.set(sigS, 1);\n    let lenS = 33;\n    let posS = 0;\n\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS);\n    if (s[0] & 0x80) return 1;\n    if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80)) return 1; // Set output length for return\n\n    obj.outputlen = 6 + lenR + lenS; // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n\n    output[0] = 0x30;\n    output[1] = obj.outputlen - 2;\n    output[2] = 0x02;\n    output[3] = r.length;\n    output.set(r, 4);\n    output[4 + lenR] = 0x02;\n    output[5 + lenR] = s.length;\n    output.set(s, 6 + lenR);\n    return 0;\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport(output, sig) {\n    if (sig.length < 8) return 1;\n    if (sig.length > 72) return 1;\n    if (sig[0] !== 0x30) return 1;\n    if (sig[1] !== sig.length - 2) return 1;\n    if (sig[2] !== 0x02) return 1;\n    const lenR = sig[3];\n    if (lenR === 0) return 1;\n    if (5 + lenR >= sig.length) return 1;\n    if (sig[4 + lenR] !== 0x02) return 1;\n    const lenS = sig[5 + lenR];\n    if (lenS === 0) return 1;\n    if (6 + lenR + lenS !== sig.length) return 1;\n    if (sig[4] & 0x80) return 1;\n    if (lenR > 1 && sig[4] === 0x00 && !(sig[5] & 0x80)) return 1;\n    if (sig[lenR + 6] & 0x80) return 1;\n    if (lenS > 1 && sig[lenR + 6] === 0x00 && !(sig[lenR + 7] & 0x80)) return 1;\n    let sigR = sig.subarray(4, 4 + lenR);\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1);\n    if (sigR.length > 32) return 1;\n    let sigS = sig.subarray(6 + lenR);\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1);\n    if (sigS.length > 32) throw new Error('S length is too long');\n    let r = new BN(sigR);\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0);\n    let s = new BN(sig.subarray(6 + lenR));\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0);\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0);\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32);\n    return 0;\n  },\n\n  ecdsaSign(obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn;\n\n      noncefn = counter => {\n        const nonce = _noncefn(message, seckey, null, data, counter);\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32;\n        if (!isValid) throw new Error('This is the way');\n        return new BN(nonce);\n      };\n    }\n\n    const d = new BN(seckey);\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1;\n    let sig;\n\n    try {\n      sig = ec.sign(message, seckey, {\n        canonical: true,\n        k: noncefn,\n        pers: data\n      });\n    } catch (err) {\n      return 1;\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0);\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32);\n    obj.recid = sig.recoveryParam;\n    return 0;\n  },\n\n  ecdsaVerify(sig, msg32, pubkey) {\n    const sigObj = {\n      r: sig.subarray(0, 32),\n      s: sig.subarray(32, 64)\n    };\n    const sigr = new BN(sigObj.r);\n    const sigs = new BN(sigObj.s);\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3;\n    const pair = loadPublicKey(pubkey);\n    if (pair === null) return 2;\n    const point = pair.getPublic();\n    const isValid = ec.verify(msg32, sigObj, point);\n    return isValid ? 0 : 3;\n  },\n\n  ecdsaRecover(output, sig, recid, msg32) {\n    const sigObj = {\n      r: sig.slice(0, 32),\n      s: sig.slice(32, 64)\n    };\n    const sigr = new BN(sigObj.r);\n    const sigs = new BN(sigObj.s);\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;\n    if (sigr.isZero() || sigs.isZero()) return 2; // Can throw `throw new Error('Unable to find sencond key candinate');`\n\n    let point;\n\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid);\n    } catch (err) {\n      return 2;\n    }\n\n    savePublicKey(output, point);\n    return 0;\n  },\n\n  ecdh(output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    const scalar = new BN(seckey);\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2;\n    const point = pair.getPublic().mul(scalar);\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true);\n      const sha256 = ec.hash().update(data).digest();\n\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i];\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32);\n      const x = point.getX().toArray('be', 32);\n\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i];\n\n      if (!ybuf) ybuf = new Uint8Array(32);\n      const y = point.getY().toArray('be', 32);\n\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i];\n\n      const hash = hashfn(xbuf, ybuf, data);\n      const isValid = hash instanceof Uint8Array && hash.length === output.length;\n      if (!isValid) return 2;\n      output.set(hash);\n    }\n\n    return 0;\n  }\n\n};\n\n//# sourceURL=webpack://test/./node_modules/secp256k1/lib/elliptic.js?");

/***/ }),

/***/ "./node_modules/secp256k1/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/secp256k1/lib/index.js ***!
  \*********************************************/
/***/ ((module) => {

eval("const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD: 'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n};\n\nfunction assert(cond, msg) {\n  if (!cond) throw new Error(msg);\n}\n\nfunction isUint8Array(name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`);\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ');\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`;\n      assert(length.includes(value.length), msg);\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`;\n      assert(value.length === length, msg);\n    }\n  }\n}\n\nfunction isCompressed(value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean');\n}\n\nfunction getAssertedOutput(output = len => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length);\n  isUint8Array('output', output, length);\n  return output;\n}\n\nfunction toTypeString(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\n\nmodule.exports = secp256k1 => {\n  return {\n    contextRandomize(seed) {\n      assert(seed === null || seed instanceof Uint8Array, 'Expected seed to be an Uint8Array or null');\n      if (seed !== null) isUint8Array('seed', seed, 32);\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW);\n      }\n    },\n\n    privateKeyVerify(seckey) {\n      isUint8Array('private key', seckey, 32);\n      return secp256k1.privateKeyVerify(seckey) === 0;\n    },\n\n    privateKeyNegate(seckey) {\n      isUint8Array('private key', seckey, 32);\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n\n    privateKeyTweakAdd(seckey, tweak) {\n      isUint8Array('private key', seckey, 32);\n      isUint8Array('tweak', tweak, 32);\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.TWEAK_ADD);\n      }\n    },\n\n    privateKeyTweakMul(seckey, tweak) {\n      isUint8Array('private key', seckey, 32);\n      isUint8Array('tweak', tweak, 32);\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.TWEAK_MUL);\n      }\n    },\n\n    publicKeyVerify(pubkey) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      return secp256k1.publicKeyVerify(pubkey) === 0;\n    },\n\n    publicKeyCreate(seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SECKEY_INVALID);\n\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n\n    publicKeyConvert(pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n\n    publicKeyNegate(pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n\n    publicKeyCombine(pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array');\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items');\n\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65]);\n      }\n\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE);\n\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n\n    publicKeyTweakAdd(pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('tweak', tweak, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.TWEAK_ADD);\n      }\n    },\n\n    publicKeyTweakMul(pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('tweak', tweak, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.TWEAK_MUL);\n      }\n    },\n\n    signatureNormalize(sig) {\n      isUint8Array('signature', sig, 64);\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n      }\n    },\n\n    signatureExport(sig, output) {\n      isUint8Array('signature', sig, 64);\n      output = getAssertedOutput(output, 72);\n      const obj = {\n        output,\n        outputlen: 72\n      };\n\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen);\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n\n    signatureImport(sig, output) {\n      isUint8Array('signature', sig);\n      output = getAssertedOutput(output, 64);\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n\n    ecdsaSign(msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32);\n      isUint8Array('private key', seckey, 32);\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object');\n      if (options.data !== undefined) isUint8Array('options.data', options.data);\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function');\n      output = getAssertedOutput(output, 64);\n      const obj = {\n        signature: output,\n        recid: null\n      };\n\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj;\n\n        case 1:\n          throw new Error(errors.SIGN);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n\n    ecdsaVerify(sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64);\n      isUint8Array('message', msg32, 32);\n      isUint8Array('public key', pubkey, [33, 65]);\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true;\n\n        case 3:\n          return false;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE);\n      }\n    },\n\n    ecdsaRecover(sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64);\n      assert(toTypeString(recid) === 'Number' && recid >= 0 && recid <= 3, 'Expected recovery id to be a Number within interval [0, 3]');\n      isUint8Array('message', msg32, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.RECOVER);\n\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n\n    ecdh(pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('private key', seckey, 32);\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object');\n      if (options.data !== undefined) isUint8Array('options.data', options.data);\n\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function');\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32);\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32);\n        isUint8Array('output', output);\n      } else {\n        output = getAssertedOutput(output, 32);\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.ECDH);\n      }\n    }\n\n  };\n};\n\n//# sourceURL=webpack://test/./node_modules/secp256k1/lib/index.js?");

/***/ }),

/***/ "./node_modules/sha.js/hash.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/hash.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer; // prototype class for hash functions\n\n\nfunction Hash(blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize);\n  this._finalSize = finalSize;\n  this._blockSize = blockSize;\n  this._len = 0;\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8';\n    data = Buffer.from(data, enc);\n  }\n\n  var block = this._block;\n  var blockSize = this._blockSize;\n  var length = data.length;\n  var accum = this._len;\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize;\n    var remainder = Math.min(length - offset, blockSize - assigned);\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i];\n    }\n\n    accum += remainder;\n    offset += remainder;\n\n    if (accum % blockSize === 0) {\n      this._update(block);\n    }\n  }\n\n  this._len += length;\n  return this;\n};\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize;\n  this._block[rem] = 0x80; // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n\n  this._block.fill(0, rem + 1);\n\n  if (rem >= this._finalSize) {\n    this._update(this._block);\n\n    this._block.fill(0);\n  }\n\n  var bits = this._len * 8; // uint32\n\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4); // uint64\n\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0;\n    var highBits = (bits - lowBits) / 0x100000000;\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8);\n\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4);\n  }\n\n  this._update(this._block);\n\n  var hash = this._hash();\n\n  return enc ? hash.toString(enc) : hash;\n};\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass');\n};\n\nmodule.exports = Hash;\n\n//# sourceURL=webpack://test/./node_modules/sha.js/hash.js?");

/***/ }),

/***/ "./node_modules/sha.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/sha.js/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var exports = module.exports = function SHA(algorithm) {\n  algorithm = algorithm.toLowerCase();\n  var Algorithm = exports[algorithm];\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)');\n  return new Algorithm();\n};\n\nexports.sha = __webpack_require__(/*! ./sha */ \"./node_modules/sha.js/sha.js\");\nexports.sha1 = __webpack_require__(/*! ./sha1 */ \"./node_modules/sha.js/sha1.js\");\nexports.sha224 = __webpack_require__(/*! ./sha224 */ \"./node_modules/sha.js/sha224.js\");\nexports.sha256 = __webpack_require__(/*! ./sha256 */ \"./node_modules/sha.js/sha256.js\");\nexports.sha384 = __webpack_require__(/*! ./sha384 */ \"./node_modules/sha.js/sha384.js\");\nexports.sha512 = __webpack_require__(/*! ./sha512 */ \"./node_modules/sha.js/sha512.js\");\n\n//# sourceURL=webpack://test/./node_modules/sha.js/index.js?");

/***/ }),

/***/ "./node_modules/sha.js/sha.js":
/*!************************************!*\
  !*** ./node_modules/sha.js/sha.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];\nvar W = new Array(80);\n\nfunction Sha() {\n  this.init();\n  this._w = W;\n  Hash.call(this, 64, 56);\n}\n\ninherits(Sha, Hash);\n\nSha.prototype.init = function () {\n  this._a = 0x67452301;\n  this._b = 0xefcdab89;\n  this._c = 0x98badcfe;\n  this._d = 0x10325476;\n  this._e = 0xc3d2e1f0;\n  return this;\n};\n\nfunction rotl5(num) {\n  return num << 5 | num >>> 27;\n}\n\nfunction rotl30(num) {\n  return num << 30 | num >>> 2;\n}\n\nfunction ft(s, b, c, d) {\n  if (s === 0) return b & c | ~b & d;\n  if (s === 2) return b & c | b & d | c & d;\n  return b ^ c ^ d;\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w;\n  var a = this._a | 0;\n  var b = this._b | 0;\n  var c = this._c | 0;\n  var d = this._d | 0;\n  var e = this._e | 0;\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4);\n\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20);\n    var t = rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s] | 0;\n    e = d;\n    d = c;\n    c = rotl30(b);\n    b = a;\n    a = t;\n  }\n\n  this._a = a + this._a | 0;\n  this._b = b + this._b | 0;\n  this._c = c + this._c | 0;\n  this._d = d + this._d | 0;\n  this._e = e + this._e | 0;\n};\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20);\n  H.writeInt32BE(this._a | 0, 0);\n  H.writeInt32BE(this._b | 0, 4);\n  H.writeInt32BE(this._c | 0, 8);\n  H.writeInt32BE(this._d | 0, 12);\n  H.writeInt32BE(this._e | 0, 16);\n  return H;\n};\n\nmodule.exports = Sha;\n\n//# sourceURL=webpack://test/./node_modules/sha.js/sha.js?");

/***/ }),

/***/ "./node_modules/sha.js/sha1.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/sha1.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0];\nvar W = new Array(80);\n\nfunction Sha1() {\n  this.init();\n  this._w = W;\n  Hash.call(this, 64, 56);\n}\n\ninherits(Sha1, Hash);\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301;\n  this._b = 0xefcdab89;\n  this._c = 0x98badcfe;\n  this._d = 0x10325476;\n  this._e = 0xc3d2e1f0;\n  return this;\n};\n\nfunction rotl1(num) {\n  return num << 1 | num >>> 31;\n}\n\nfunction rotl5(num) {\n  return num << 5 | num >>> 27;\n}\n\nfunction rotl30(num) {\n  return num << 30 | num >>> 2;\n}\n\nfunction ft(s, b, c, d) {\n  if (s === 0) return b & c | ~b & d;\n  if (s === 2) return b & c | b & d | c & d;\n  return b ^ c ^ d;\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w;\n  var a = this._a | 0;\n  var b = this._b | 0;\n  var c = this._c | 0;\n  var d = this._d | 0;\n  var e = this._e | 0;\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4);\n\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]);\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20);\n    var t = rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s] | 0;\n    e = d;\n    d = c;\n    c = rotl30(b);\n    b = a;\n    a = t;\n  }\n\n  this._a = a + this._a | 0;\n  this._b = b + this._b | 0;\n  this._c = c + this._c | 0;\n  this._d = d + this._d | 0;\n  this._e = e + this._e | 0;\n};\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20);\n  H.writeInt32BE(this._a | 0, 0);\n  H.writeInt32BE(this._b | 0, 4);\n  H.writeInt32BE(this._c | 0, 8);\n  H.writeInt32BE(this._d | 0, 12);\n  H.writeInt32BE(this._e | 0, 16);\n  return H;\n};\n\nmodule.exports = Sha1;\n\n//# sourceURL=webpack://test/./node_modules/sha.js/sha1.js?");

/***/ }),

/***/ "./node_modules/sha.js/sha224.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha224.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Sha256 = __webpack_require__(/*! ./sha256 */ \"./node_modules/sha.js/sha256.js\");\n\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar W = new Array(64);\n\nfunction Sha224() {\n  this.init();\n  this._w = W; // new Array(64)\n\n  Hash.call(this, 64, 56);\n}\n\ninherits(Sha224, Sha256);\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8;\n  this._b = 0x367cd507;\n  this._c = 0x3070dd17;\n  this._d = 0xf70e5939;\n  this._e = 0xffc00b31;\n  this._f = 0x68581511;\n  this._g = 0x64f98fa7;\n  this._h = 0xbefa4fa4;\n  return this;\n};\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28);\n  H.writeInt32BE(this._a, 0);\n  H.writeInt32BE(this._b, 4);\n  H.writeInt32BE(this._c, 8);\n  H.writeInt32BE(this._d, 12);\n  H.writeInt32BE(this._e, 16);\n  H.writeInt32BE(this._f, 20);\n  H.writeInt32BE(this._g, 24);\n  return H;\n};\n\nmodule.exports = Sha224;\n\n//# sourceURL=webpack://test/./node_modules/sha.js/sha224.js?");

/***/ }),

/***/ "./node_modules/sha.js/sha256.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha256.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\nvar W = new Array(64);\n\nfunction Sha256() {\n  this.init();\n  this._w = W; // new Array(64)\n\n  Hash.call(this, 64, 56);\n}\n\ninherits(Sha256, Hash);\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667;\n  this._b = 0xbb67ae85;\n  this._c = 0x3c6ef372;\n  this._d = 0xa54ff53a;\n  this._e = 0x510e527f;\n  this._f = 0x9b05688c;\n  this._g = 0x1f83d9ab;\n  this._h = 0x5be0cd19;\n  return this;\n};\n\nfunction ch(x, y, z) {\n  return z ^ x & (y ^ z);\n}\n\nfunction maj(x, y, z) {\n  return x & y | z & (x | y);\n}\n\nfunction sigma0(x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);\n}\n\nfunction sigma1(x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);\n}\n\nfunction gamma0(x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;\n}\n\nfunction gamma1(x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w;\n  var a = this._a | 0;\n  var b = this._b | 0;\n  var c = this._c | 0;\n  var d = this._d | 0;\n  var e = this._e | 0;\n  var f = this._f | 0;\n  var g = this._g | 0;\n  var h = this._h | 0;\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4);\n\n  for (; i < 64; ++i) W[i] = gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16] | 0;\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = h + sigma1(e) + ch(e, f, g) + K[j] + W[j] | 0;\n    var T2 = sigma0(a) + maj(a, b, c) | 0;\n    h = g;\n    g = f;\n    f = e;\n    e = d + T1 | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = T1 + T2 | 0;\n  }\n\n  this._a = a + this._a | 0;\n  this._b = b + this._b | 0;\n  this._c = c + this._c | 0;\n  this._d = d + this._d | 0;\n  this._e = e + this._e | 0;\n  this._f = f + this._f | 0;\n  this._g = g + this._g | 0;\n  this._h = h + this._h | 0;\n};\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32);\n  H.writeInt32BE(this._a, 0);\n  H.writeInt32BE(this._b, 4);\n  H.writeInt32BE(this._c, 8);\n  H.writeInt32BE(this._d, 12);\n  H.writeInt32BE(this._e, 16);\n  H.writeInt32BE(this._f, 20);\n  H.writeInt32BE(this._g, 24);\n  H.writeInt32BE(this._h, 28);\n  return H;\n};\n\nmodule.exports = Sha256;\n\n//# sourceURL=webpack://test/./node_modules/sha.js/sha256.js?");

/***/ }),

/***/ "./node_modules/sha.js/sha384.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha384.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar SHA512 = __webpack_require__(/*! ./sha512 */ \"./node_modules/sha.js/sha512.js\");\n\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar W = new Array(160);\n\nfunction Sha384() {\n  this.init();\n  this._w = W;\n  Hash.call(this, 128, 112);\n}\n\ninherits(Sha384, SHA512);\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d;\n  this._bh = 0x629a292a;\n  this._ch = 0x9159015a;\n  this._dh = 0x152fecd8;\n  this._eh = 0x67332667;\n  this._fh = 0x8eb44a87;\n  this._gh = 0xdb0c2e0d;\n  this._hh = 0x47b5481d;\n  this._al = 0xc1059ed8;\n  this._bl = 0x367cd507;\n  this._cl = 0x3070dd17;\n  this._dl = 0xf70e5939;\n  this._el = 0xffc00b31;\n  this._fl = 0x68581511;\n  this._gl = 0x64f98fa7;\n  this._hl = 0xbefa4fa4;\n  return this;\n};\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48);\n\n  function writeInt64BE(h, l, offset) {\n    H.writeInt32BE(h, offset);\n    H.writeInt32BE(l, offset + 4);\n  }\n\n  writeInt64BE(this._ah, this._al, 0);\n  writeInt64BE(this._bh, this._bl, 8);\n  writeInt64BE(this._ch, this._cl, 16);\n  writeInt64BE(this._dh, this._dl, 24);\n  writeInt64BE(this._eh, this._el, 32);\n  writeInt64BE(this._fh, this._fl, 40);\n  return H;\n};\n\nmodule.exports = Sha384;\n\n//# sourceURL=webpack://test/./node_modules/sha.js/sha384.js?");

/***/ }),

/***/ "./node_modules/sha.js/sha512.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha512.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nvar Hash = __webpack_require__(/*! ./hash */ \"./node_modules/sha.js/hash.js\");\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n\nvar K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\nvar W = new Array(160);\n\nfunction Sha512() {\n  this.init();\n  this._w = W;\n  Hash.call(this, 128, 112);\n}\n\ninherits(Sha512, Hash);\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667;\n  this._bh = 0xbb67ae85;\n  this._ch = 0x3c6ef372;\n  this._dh = 0xa54ff53a;\n  this._eh = 0x510e527f;\n  this._fh = 0x9b05688c;\n  this._gh = 0x1f83d9ab;\n  this._hh = 0x5be0cd19;\n  this._al = 0xf3bcc908;\n  this._bl = 0x84caa73b;\n  this._cl = 0xfe94f82b;\n  this._dl = 0x5f1d36f1;\n  this._el = 0xade682d1;\n  this._fl = 0x2b3e6c1f;\n  this._gl = 0xfb41bd6b;\n  this._hl = 0x137e2179;\n  return this;\n};\n\nfunction Ch(x, y, z) {\n  return z ^ x & (y ^ z);\n}\n\nfunction maj(x, y, z) {\n  return x & y | z & (x | y);\n}\n\nfunction sigma0(x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);\n}\n\nfunction sigma1(x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);\n}\n\nfunction Gamma0(x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ x >>> 7;\n}\n\nfunction Gamma0l(x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);\n}\n\nfunction Gamma1(x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ x >>> 6;\n}\n\nfunction Gamma1l(x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);\n}\n\nfunction getCarry(a, b) {\n  return a >>> 0 < b >>> 0 ? 1 : 0;\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w;\n  var ah = this._ah | 0;\n  var bh = this._bh | 0;\n  var ch = this._ch | 0;\n  var dh = this._dh | 0;\n  var eh = this._eh | 0;\n  var fh = this._fh | 0;\n  var gh = this._gh | 0;\n  var hh = this._hh | 0;\n  var al = this._al | 0;\n  var bl = this._bl | 0;\n  var cl = this._cl | 0;\n  var dl = this._dl | 0;\n  var el = this._el | 0;\n  var fl = this._fl | 0;\n  var gl = this._gl | 0;\n  var hl = this._hl | 0;\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4);\n    W[i + 1] = M.readInt32BE(i * 4 + 4);\n  }\n\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2];\n    var xl = W[i - 15 * 2 + 1];\n    var gamma0 = Gamma0(xh, xl);\n    var gamma0l = Gamma0l(xl, xh);\n    xh = W[i - 2 * 2];\n    xl = W[i - 2 * 2 + 1];\n    var gamma1 = Gamma1(xh, xl);\n    var gamma1l = Gamma1l(xl, xh); // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\n    var Wi7h = W[i - 7 * 2];\n    var Wi7l = W[i - 7 * 2 + 1];\n    var Wi16h = W[i - 16 * 2];\n    var Wi16l = W[i - 16 * 2 + 1];\n    var Wil = gamma0l + Wi7l | 0;\n    var Wih = gamma0 + Wi7h + getCarry(Wil, gamma0l) | 0;\n    Wil = Wil + gamma1l | 0;\n    Wih = Wih + gamma1 + getCarry(Wil, gamma1l) | 0;\n    Wil = Wil + Wi16l | 0;\n    Wih = Wih + Wi16h + getCarry(Wil, Wi16l) | 0;\n    W[i] = Wih;\n    W[i + 1] = Wil;\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j];\n    Wil = W[j + 1];\n    var majh = maj(ah, bh, ch);\n    var majl = maj(al, bl, cl);\n    var sigma0h = sigma0(ah, al);\n    var sigma0l = sigma0(al, ah);\n    var sigma1h = sigma1(eh, el);\n    var sigma1l = sigma1(el, eh); // t1 = h + sigma1 + ch + K[j] + W[j]\n\n    var Kih = K[j];\n    var Kil = K[j + 1];\n    var chh = Ch(eh, fh, gh);\n    var chl = Ch(el, fl, gl);\n    var t1l = hl + sigma1l | 0;\n    var t1h = hh + sigma1h + getCarry(t1l, hl) | 0;\n    t1l = t1l + chl | 0;\n    t1h = t1h + chh + getCarry(t1l, chl) | 0;\n    t1l = t1l + Kil | 0;\n    t1h = t1h + Kih + getCarry(t1l, Kil) | 0;\n    t1l = t1l + Wil | 0;\n    t1h = t1h + Wih + getCarry(t1l, Wil) | 0; // t2 = sigma0 + maj\n\n    var t2l = sigma0l + majl | 0;\n    var t2h = sigma0h + majh + getCarry(t2l, sigma0l) | 0;\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    el = dl + t1l | 0;\n    eh = dh + t1h + getCarry(el, dl) | 0;\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    al = t1l + t2l | 0;\n    ah = t1h + t2h + getCarry(al, t1l) | 0;\n  }\n\n  this._al = this._al + al | 0;\n  this._bl = this._bl + bl | 0;\n  this._cl = this._cl + cl | 0;\n  this._dl = this._dl + dl | 0;\n  this._el = this._el + el | 0;\n  this._fl = this._fl + fl | 0;\n  this._gl = this._gl + gl | 0;\n  this._hl = this._hl + hl | 0;\n  this._ah = this._ah + ah + getCarry(this._al, al) | 0;\n  this._bh = this._bh + bh + getCarry(this._bl, bl) | 0;\n  this._ch = this._ch + ch + getCarry(this._cl, cl) | 0;\n  this._dh = this._dh + dh + getCarry(this._dl, dl) | 0;\n  this._eh = this._eh + eh + getCarry(this._el, el) | 0;\n  this._fh = this._fh + fh + getCarry(this._fl, fl) | 0;\n  this._gh = this._gh + gh + getCarry(this._gl, gl) | 0;\n  this._hh = this._hh + hh + getCarry(this._hl, hl) | 0;\n};\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64);\n\n  function writeInt64BE(h, l, offset) {\n    H.writeInt32BE(h, offset);\n    H.writeInt32BE(l, offset + 4);\n  }\n\n  writeInt64BE(this._ah, this._al, 0);\n  writeInt64BE(this._bh, this._bl, 8);\n  writeInt64BE(this._ch, this._cl, 16);\n  writeInt64BE(this._dh, this._dl, 24);\n  writeInt64BE(this._eh, this._el, 32);\n  writeInt64BE(this._fh, this._fl, 40);\n  writeInt64BE(this._gh, this._gl, 48);\n  writeInt64BE(this._hh, this._hl, 56);\n  return H;\n};\n\nmodule.exports = Sha512;\n\n//# sourceURL=webpack://test/./node_modules/sha.js/sha512.js?");

/***/ }),

/***/ "./node_modules/sha3/index.js":
/*!************************************!*\
  !*** ./node_modules/sha3/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = exports.SHA3Hash = exports.SHA3 = exports.Keccak = void 0;\n\nvar _buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\nvar _sponge = _interopRequireDefault(__webpack_require__(/*! ./sponge */ \"./node_modules/sha3/sponge/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar createHash = function createHash(_ref) {\n  var padding = _ref.padding;\n  return function Hash() {\n    var _this = this;\n\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 512;\n\n    if (!this || this.constructor !== Hash) {\n      return new Hash(size);\n    }\n\n    var sponge = new _sponge.default({\n      capacity: size,\n      padding: padding\n    });\n\n    this.update = function (input) {\n      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"utf8\";\n\n      if (_buffer.Buffer.isBuffer(input)) {\n        sponge.absorb(input);\n        return _this;\n      }\n\n      if (typeof input === \"string\") {\n        return _this.update(_buffer.Buffer.from(input, encoding));\n      }\n\n      throw new TypeError(\"Not a string or buffer\");\n    };\n\n    this.digest = function () {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"binary\";\n      var buffer = sponge.squeeze();\n\n      if (format && format !== \"binary\") {\n        return buffer.toString(format);\n      }\n\n      return buffer;\n    };\n\n    this.reset = function () {\n      sponge.reset();\n      return _this;\n    };\n\n    return this;\n  };\n};\n\nvar Keccak = createHash({\n  padding: 1\n});\nexports.Keccak = Keccak;\nvar SHA3 = createHash({\n  padding: 6\n});\nexports.SHA3 = SHA3;\nvar SHA3Hash = Keccak;\nexports.SHA3Hash = SHA3Hash;\nSHA3.SHA3Hash = SHA3Hash;\nvar _default = SHA3;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/index.js":
/*!*******************************************!*\
  !*** ./node_modules/sha3/sponge/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\nvar _permute = _interopRequireDefault(__webpack_require__(/*! ./permute */ \"./node_modules/sha3/sponge/permute/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar allowedCapacityValues = [224, 256, 384, 512];\n\nvar writeState = function writeState(I, O) {\n  for (var i = 0; i < I.length; i += 8) {\n    var o = i / 4;\n    O[o] ^= I[i + 7] << 24 | I[i + 6] << 16 | I[i + 5] << 8 | I[i + 4];\n    O[o + 1] ^= I[i + 3] << 24 | I[i + 2] << 16 | I[i + 1] << 8 | I[i];\n  }\n};\n\nvar readHash = function readHash(I, n) {\n  var O = _buffer.Buffer.allocUnsafe(n);\n\n  for (var o = 0; o < n; o += 8) {\n    var i = o / 4;\n    O[o] = I[i + 1];\n    O[o + 1] = I[i + 1] >>> 8;\n    O[o + 2] = I[i + 1] >>> 16;\n    O[o + 3] = I[i + 1] >>> 24;\n    O[o + 4] = I[i];\n    O[o + 5] = I[i] >>> 8;\n    O[o + 6] = I[i] >>> 16;\n    O[o + 7] = I[i] >>> 24;\n  }\n\n  return O;\n};\n\nvar Sponge = function Sponge(_ref) {\n  var _this = this;\n\n  var capacity = _ref.capacity,\n      padding = _ref.padding;\n\n  if (!allowedCapacityValues.includes(capacity)) {\n    throw new Error(\"Unsupported hash length\");\n  }\n\n  var keccak = (0, _permute.default)();\n  var stateSize = 200;\n  var hashSize = capacity / 8;\n  var queueSize = stateSize - hashSize * 2;\n  var queueOffset = 0;\n  var state = new Uint32Array(stateSize / 4);\n\n  var queue = _buffer.Buffer.allocUnsafe(queueSize);\n\n  this.absorb = function (buffer) {\n    for (var i = 0; i < buffer.length; i++) {\n      queue[queueOffset] = buffer[i];\n      queueOffset += 1;\n\n      if (queueOffset >= queueSize) {\n        writeState(queue, state);\n        keccak(state);\n        queueOffset = 0;\n      }\n    }\n\n    return _this;\n  };\n\n  this.squeeze = function () {\n    var output = {\n      queue: _buffer.Buffer.allocUnsafe(queueSize),\n      state: new Uint32Array(stateSize / 4)\n    };\n    queue.copy(output.queue);\n\n    for (var i = 0; i < state.length; i++) {\n      output.state[i] = state[i];\n    }\n\n    output.queue.fill(0, queueOffset);\n    output.queue[queueOffset] |= padding;\n    output.queue[queueSize - 1] |= 128;\n    writeState(output.queue, output.state);\n    keccak(output.state);\n    return readHash(output.state, hashSize);\n  };\n\n  this.reset = function () {\n    queue.fill(0);\n    state.fill(0);\n    queueOffset = 0;\n    return _this;\n  };\n\n  return this;\n};\n\nvar _default = Sponge;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/chi/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/chi/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _copy = _interopRequireDefault(__webpack_require__(/*! ../copy */ \"./node_modules/sha3/sponge/permute/copy/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar chi = function chi(_ref) {\n  var A = _ref.A,\n      C = _ref.C;\n\n  for (var y = 0; y < 25; y += 5) {\n    for (var x = 0; x < 5; x++) {\n      (0, _copy.default)(A, y + x)(C, x);\n    }\n\n    for (var _x = 0; _x < 5; _x++) {\n      var xy = (y + _x) * 2;\n      var x1 = (_x + 1) % 5 * 2;\n      var x2 = (_x + 2) % 5 * 2;\n      A[xy] ^= ~C[x1] & C[x2];\n      A[xy + 1] ^= ~C[x1 + 1] & C[x2 + 1];\n    }\n  }\n};\n\nvar _default = chi;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/chi/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/copy/index.js":
/*!********************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/copy/index.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar copy = function copy(I, i) {\n  return function (O, o) {\n    var oi = o * 2;\n    var ii = i * 2;\n    O[oi] = I[ii];\n    O[oi + 1] = I[ii + 1];\n  };\n};\n\nmodule.exports = copy;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/copy/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/index.js":
/*!***************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _chi = _interopRequireDefault(__webpack_require__(/*! ./chi */ \"./node_modules/sha3/sponge/permute/chi/index.js\"));\n\nvar _iota = _interopRequireDefault(__webpack_require__(/*! ./iota */ \"./node_modules/sha3/sponge/permute/iota/index.js\"));\n\nvar _rhoPi = _interopRequireDefault(__webpack_require__(/*! ./rho-pi */ \"./node_modules/sha3/sponge/permute/rho-pi/index.js\"));\n\nvar _theta = _interopRequireDefault(__webpack_require__(/*! ./theta */ \"./node_modules/sha3/sponge/permute/theta/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar reset = function reset() {\n  for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n    arrays[_key] = arguments[_key];\n  }\n\n  for (var _i = 0; _i < arrays.length; _i++) {\n    var array = arrays[_i];\n    array.fill(0);\n  }\n};\n\nvar permute = function permute() {\n  var C = new Uint32Array(10);\n  var D = new Uint32Array(10);\n  var W = new Uint32Array(2);\n  return function (A) {\n    for (var roundIndex = 0; roundIndex < 24; roundIndex++) {\n      (0, _theta.default)({\n        A: A,\n        C: C,\n        D: D,\n        W: W\n      });\n      (0, _rhoPi.default)({\n        A: A,\n        C: C,\n        W: W\n      });\n      (0, _chi.default)({\n        A: A,\n        C: C\n      });\n      (0, _iota.default)({\n        A: A,\n        roundIndex: roundIndex\n      });\n    }\n\n    reset(C, D, W);\n  };\n};\n\nvar _default = permute;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/iota/index.js":
/*!********************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/iota/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _roundConstants = _interopRequireDefault(__webpack_require__(/*! ./round-constants */ \"./node_modules/sha3/sponge/permute/iota/round-constants/index.js\"));\n\nvar _xor = _interopRequireDefault(__webpack_require__(/*! ../xor */ \"./node_modules/sha3/sponge/permute/xor/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar iota = function iota(_ref) {\n  var A = _ref.A,\n      roundIndex = _ref.roundIndex;\n  (0, _xor.default)(A, 0)(A, 0, _roundConstants.default, roundIndex);\n};\n\nvar _default = iota;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/iota/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/iota/round-constants/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/iota/round-constants/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\nvar ROUND_CONSTANTS = new Uint32Array([0, 1, 0, 32898, 2147483648, 32906, 2147483648, 2147516416, 0, 32907, 0, 2147483649, 2147483648, 2147516545, 2147483648, 32777, 0, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 2147483648, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 0, 32778, 2147483648, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 0, 2147483649, 2147483648, 2147516424]);\nvar _default = ROUND_CONSTANTS;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/iota/round-constants/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/rho-pi/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/rho-pi/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _piShuffles = _interopRequireDefault(__webpack_require__(/*! ./pi-shuffles */ \"./node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js\"));\n\nvar _rhoOffsets = _interopRequireDefault(__webpack_require__(/*! ./rho-offsets */ \"./node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js\"));\n\nvar _copy = _interopRequireDefault(__webpack_require__(/*! ../copy */ \"./node_modules/sha3/sponge/permute/copy/index.js\"));\n\nvar _rotate = _interopRequireDefault(__webpack_require__(/*! ../rotate */ \"./node_modules/sha3/sponge/permute/rotate/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar rhoPi = function rhoPi(_ref) {\n  var A = _ref.A,\n      C = _ref.C,\n      W = _ref.W;\n  (0, _copy.default)(A, 1)(W, 0);\n\n  for (var i = 0; i < 24; i++) {\n    var j = _piShuffles.default[i];\n    var r = _rhoOffsets.default[i];\n    (0, _copy.default)(A, j)(C, 0);\n    (0, _copy.default)((0, _rotate.default)(W, r), 0)(A, j);\n    (0, _copy.default)(C, 0)(W, 0);\n  }\n};\n\nvar _default = rhoPi;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/rho-pi/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\nvar PI_SHUFFLES = [10, 7, 11, 17, 18, 3, 5, 16, 8, 21, 24, 4, 15, 23, 19, 13, 12, 2, 20, 14, 22, 9, 6, 1];\nvar _default = PI_SHUFFLES;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\nvar RHO_OFFSETS = [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 2, 14, 27, 41, 56, 8, 25, 43, 62, 18, 39, 61, 20, 44];\nvar _default = RHO_OFFSETS;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/rotate/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/rotate/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar M = 32;\n\nvar rotate = function rotate(W, r) {\n  var _W = _slicedToArray(W, 2),\n      H = _W[0],\n      L = _W[1];\n\n  var i = r < 32 ? 0 : 1;\n  var j = (i + 1) % 2;\n  W[i] = H << r | L >>> M - r;\n  W[j] = L << r | H >>> M - r;\n  return W;\n};\n\nvar _default = rotate;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/rotate/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/theta/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/theta/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar _copy = _interopRequireDefault(__webpack_require__(/*! ../copy */ \"./node_modules/sha3/sponge/permute/copy/index.js\"));\n\nvar _rotate = _interopRequireDefault(__webpack_require__(/*! ../rotate */ \"./node_modules/sha3/sponge/permute/rotate/index.js\"));\n\nvar _xor = _interopRequireDefault(__webpack_require__(/*! ../xor */ \"./node_modules/sha3/sponge/permute/xor/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar theta0 = function theta0(_ref) {\n  var A = _ref.A,\n      C = _ref.C;\n\n  for (var x = 0; x < 5; x++) {\n    (0, _xor.default)(C, x)(A, x, A, x + 5, A, x + 10, A, x + 15, A, x + 20);\n  }\n};\n\nvar theta1 = function theta1(_ref2) {\n  var A = _ref2.A,\n      C = _ref2.C,\n      D = _ref2.D,\n      W = _ref2.W;\n\n  for (var x = 0; x < 5; x++) {\n    (0, _copy.default)(C, (x + 1) % 5)(W, 0);\n    (0, _xor.default)(D, x)(C, (x + 4) % 5, (0, _rotate.default)(W, 1), 0);\n\n    for (var y = 0; y < 25; y += 5) {\n      (0, _xor.default)(A, y + x)(A, y + x, D, x);\n    }\n  }\n};\n\nvar theta = function theta(_ref3) {\n  var A = _ref3.A,\n      C = _ref3.C,\n      D = _ref3.D,\n      W = _ref3.W;\n  theta0({\n    A: A,\n    C: C\n  });\n  theta1({\n    A: A,\n    C: C,\n    D: D,\n    W: W\n  });\n};\n\nvar _default = theta;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/theta/index.js?");

/***/ }),

/***/ "./node_modules/sha3/sponge/permute/xor/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/sha3/sponge/permute/xor/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.default = void 0;\n\nvar xor = function xor(O, o) {\n  return function () {\n    var oi = o * 2;\n\n    for (var _len = arguments.length, I = new Array(_len), _key = 0; _key < _len; _key++) {\n      I[_key] = arguments[_key];\n    }\n\n    if (I.length >= 2) {\n      var ii = I[1] * 2;\n      O[oi] = I[0][ii];\n      O[oi + 1] = I[0][ii + 1];\n    }\n\n    for (var i = 2; i < I.length; i += 2) {\n      var _ii = I[i + 1] * 2;\n\n      O[oi] ^= I[i][_ii];\n      O[oi + 1] ^= I[i][_ii + 1];\n    }\n  };\n};\n\nvar _default = xor;\nexports.default = _default;\n\n//# sourceURL=webpack://test/./node_modules/sha3/sponge/permute/xor/index.js?");

/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nmodule.exports = Stream;\n\nvar EE = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\ninherits(Stream, EE);\nStream.Readable = __webpack_require__(/*! readable-stream/lib/_stream_readable.js */ \"./node_modules/readable-stream/lib/_stream_readable.js\");\nStream.Writable = __webpack_require__(/*! readable-stream/lib/_stream_writable.js */ \"./node_modules/readable-stream/lib/_stream_writable.js\");\nStream.Duplex = __webpack_require__(/*! readable-stream/lib/_stream_duplex.js */ \"./node_modules/readable-stream/lib/_stream_duplex.js\");\nStream.Transform = __webpack_require__(/*! readable-stream/lib/_stream_transform.js */ \"./node_modules/readable-stream/lib/_stream_transform.js\");\nStream.PassThrough = __webpack_require__(/*! readable-stream/lib/_stream_passthrough.js */ \"./node_modules/readable-stream/lib/_stream_passthrough.js\");\nStream.finished = __webpack_require__(/*! readable-stream/lib/internal/streams/end-of-stream.js */ \"./node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nStream.pipeline = __webpack_require__(/*! readable-stream/lib/internal/streams/pipeline.js */ \"./node_modules/readable-stream/lib/internal/streams/pipeline.js\"); // Backwards-compat with node 0.4.x\n\nStream.Stream = Stream; // old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function (dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain); // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    dest.end();\n  }\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n    if (typeof dest.destroy === 'function') dest.destroy();\n  } // don't leave dangling pipes when there are errors.\n\n\n  function onerror(er) {\n    cleanup();\n\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror); // remove all the event listeners that were added.\n\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n  dest.on('close', cleanup);\n  dest.emit('pipe', source); // Allow for unix-like usage: A.pipe(B).pipe(C)\n\n  return dest;\n};\n\n//# sourceURL=webpack://test/./node_modules/stream-browserify/index.js?");

/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*<replacement>*/\n\nvar Buffer = __webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer;\n/*</replacement>*/\n\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n    case 'raw':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n\n      default:\n        if (retried) return; // undefined\n\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n}\n\n; // Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\n\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n} // StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\n\n\nexports.StringDecoder = StringDecoder;\n\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End; // Returns only complete characters in a Buffer\n\nStringDecoder.prototype.text = utf8Text; // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n}; // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\n\n\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n} // Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\n\n\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n\n    return nb;\n  }\n\n  return 0;\n} // Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\n\n\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n} // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n\n\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n} // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\n\n\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n} // For UTF-8, a replacement character is added when ending on a partial\n// character.\n\n\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n} // UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\n\n\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n\n    return r;\n  }\n\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n} // For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\n\n\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n} // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n\n\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//# sourceURL=webpack://test/./node_modules/string_decoder/lib/string_decoder.js?");

/***/ }),

/***/ "./node_modules/strip-hex-prefix/src/index.js":
/*!****************************************************!*\
  !*** ./node_modules/strip-hex-prefix/src/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"./node_modules/is-hex-prefixed/src/index.js\");\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\n\n\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n};\n\n//# sourceURL=webpack://test/./node_modules/strip-hex-prefix/src/index.js?");

/***/ }),

/***/ "./node_modules/underscore/underscore.js":
/*!***********************************************!*\
  !*** ./node_modules/underscore/underscore.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n(function () {\n  // Baseline setup\n  // --------------\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self || typeof __webpack_require__.g == 'object' && __webpack_require__.g.global === __webpack_require__.g && __webpack_require__.g || this || {}; // Save the previous value of the `_` variable.\n\n  var previousUnderscore = root._; // Save bytes in the minified (but not gzipped) version:\n\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null; // Create quick reference variables for speed access to core prototypes.\n\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create; // Naked function reference for surrogate-prototype-swapping.\n\n  var Ctor = function () {}; // Create a safe reference to the Underscore object for use below.\n\n\n  var _ = function (obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  }; // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n\n\n  if ( true && !exports.nodeType) {\n    if ( true && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n\n    exports._ = _;\n  } else {\n    root._ = _;\n  } // Current version.\n\n\n  _.VERSION = '1.9.1'; // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n\n  var optimizeCb = function (func, context, argCount) {\n    if (context === void 0) return func;\n\n    switch (argCount == null ? 3 : argCount) {\n      case 1:\n        return function (value) {\n          return func.call(context, value);\n        };\n      // The 2-argument case is omitted because we’re not using it.\n\n      case 3:\n        return function (value, index, collection) {\n          return func.call(context, value, index, collection);\n        };\n\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(context, accumulator, value, index, collection);\n        };\n    }\n\n    return function () {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee; // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n\n  var cb = function (value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  }; // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n\n\n  _.iteratee = builtinIteratee = function (value, context) {\n    return cb(value, context, Infinity);\n  }; // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n\n\n  var restArguments = function (func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function () {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n\n      switch (startIndex) {\n        case 0:\n          return func.call(this, rest);\n\n        case 1:\n          return func.call(this, arguments[0], rest);\n\n        case 2:\n          return func.call(this, arguments[0], arguments[1], rest);\n      }\n\n      var args = Array(startIndex + 1);\n\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  }; // An internal function for creating a new object that inherits from another.\n\n\n  var baseCreate = function (prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor();\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function (key) {\n    return function (obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function (obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  };\n\n  var deepGet = function (obj, path) {\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n\n    return length ? obj : void 0;\n  }; // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\n\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n\n  var isArrayLike = function (collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  }; // Collection Functions\n  // --------------------\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n\n\n  _.each = _.forEach = function (obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n\n    return obj;\n  }; // Return the results of applying the iteratee to each element.\n\n\n  _.map = _.collect = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Create a reducing function iterating left or right.\n\n\n  var createReduce = function (dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function (obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n\n      return memo;\n    };\n\n    return function (obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  }; // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n\n\n  _.reduce = _.foldl = _.inject = createReduce(1); // The right-associative version of reduce, also known as `foldr`.\n\n  _.reduceRight = _.foldr = createReduce(-1); // Return the first value which passes a truth test. Aliased as `detect`.\n\n  _.find = _.detect = function (obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  }; // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n\n\n  _.filter = _.select = function (obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n\n    _.each(obj, function (value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n\n    return results;\n  }; // Return all the elements for which a truth test fails.\n\n\n  _.reject = function (obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  }; // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n\n\n  _.every = _.all = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n\n    return true;\n  }; // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n\n\n  _.some = _.any = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n\n    return false;\n  }; // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n\n\n  _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  }; // Invoke a method (with arguments) on every item in a collection.\n\n\n  _.invoke = restArguments(function (obj, path, args) {\n    var contextPath, func;\n\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n\n    return _.map(obj, function (context) {\n      var method = func;\n\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n\n        if (context == null) return void 0;\n        method = context[path];\n      }\n\n      return method == null ? method : method.apply(context, args);\n    });\n  }); // Convenience version of a common use case of `map`: fetching a property.\n\n  _.pluck = function (obj, key) {\n    return _.map(obj, _.property(key));\n  }; // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n\n\n  _.where = function (obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  }; // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n\n\n  _.findWhere = function (obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  }; // Return the maximum element (or element-based computation).\n\n\n  _.max = function (obj, iteratee, context) {\n    var result = -Infinity,\n        lastComputed = -Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Return the minimum element (or element-based computation).\n\n\n  _.min = function (obj, iteratee, context) {\n    var result = Infinity,\n        lastComputed = Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Shuffle a collection.\n\n\n  _.shuffle = function (obj) {\n    return _.sample(obj, Infinity);\n  }; // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n\n\n  _.sample = function (obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n\n    return sample.slice(0, n);\n  }; // Sort the object's values by a criterion produced by an iteratee.\n\n\n  _.sortBy = function (obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function (value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n\n      return left.index - right.index;\n    }), 'value');\n  }; // An internal function used for aggregate \"group by\" operations.\n\n\n  var group = function (behavior, partition) {\n    return function (obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n\n      return result;\n    };\n  }; // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n\n\n  _.groupBy = group(function (result, value, key) {\n    if (has(result, key)) result[key].push(value);else result[key] = [value];\n  }); // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n\n  _.indexBy = group(function (result, value, key) {\n    result[key] = value;\n  }); // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n\n  _.countBy = group(function (result, value, key) {\n    if (has(result, key)) result[key]++;else result[key] = 1;\n  });\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g; // Safely create a real, live array from anything iterable.\n\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  }; // Return the number of elements in an object.\n\n\n  _.size = function (obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  }; // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n\n\n  _.partition = group(function (result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true); // Array Functions\n  // ---------------\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n\n  _.first = _.head = _.take = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  }; // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n\n\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  }; // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n\n\n  _.last = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n\n\n  _.rest = _.tail = _.drop = function (array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  }; // Trim out all falsy values from an array.\n\n\n  _.compact = function (array) {\n    return _.filter(array, Boolean);\n  }; // Internal implementation of a recursive `flatten` function.\n\n\n  var flatten = function (input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0,\n              len = value.length;\n\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n\n    return output;\n  }; // Flatten out an array, either recursively (by default), or just one level.\n\n\n  _.flatten = function (array, shallow) {\n    return flatten(array, shallow, false);\n  }; // Return a version of the array that does not contain the specified value(s).\n\n\n  _.without = restArguments(function (array, otherArrays) {\n    return _.difference(array, otherArrays);\n  }); // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n\n  _.uniq = _.unique = function (array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }; // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n\n\n  _.union = restArguments(function (arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  }); // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n\n  _.intersection = function (array) {\n    var result = [];\n    var argsLength = arguments.length;\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n\n      if (j === argsLength) result.push(item);\n    }\n\n    return result;\n  }; // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n\n\n  _.difference = restArguments(function (array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function (value) {\n      return !_.contains(rest, value);\n    });\n  }); // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n\n  _.unzip = function (array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n\n    return result;\n  }; // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n\n\n  _.zip = restArguments(_.unzip); // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n\n  _.object = function (list, values) {\n    var result = {};\n\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n\n    return result;\n  }; // Generator function to create the findIndex and findLastIndex functions.\n\n\n  var createPredicateIndexFinder = function (dir) {\n    return function (array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n\n      return -1;\n    };\n  }; // Returns the first index on an array-like that passes a predicate test.\n\n\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1); // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n\n  _.sortedIndex = function (array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0,\n        high = getLength(array);\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;\n    }\n\n    return low;\n  }; // Generator function to create the indexOf and lastIndexOf functions.\n\n\n  var createIndexFinder = function (dir, predicateFind, sortedIndex) {\n    return function (array, item, idx) {\n      var i = 0,\n          length = getLength(array);\n\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n\n      return -1;\n    };\n  }; // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n\n\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex); // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\n  _.range = function (start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  }; // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n\n\n  _.chunk = function (array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0,\n        length = array.length;\n\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n\n    return result;\n  }; // Function (ahem) Functions\n  // ------------------\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n\n\n  var executeBound = function (sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  }; // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n\n\n  _.bind = restArguments(function (func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function (callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  }); // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n\n  _.partial = restArguments(function (func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n\n    var bound = function () {\n      var position = 0,\n          length = boundArgs.length;\n      var args = Array(length);\n\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n\n      while (position < arguments.length) args.push(arguments[position++]);\n\n      return executeBound(func, bound, this, this, args);\n    };\n\n    return bound;\n  });\n  _.partial.placeholder = _; // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n\n  _.bindAll = restArguments(function (obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  }); // Memoize an expensive function by storing its results.\n\n  _.memoize = function (func, hasher) {\n    var memoize = function (key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n\n    memoize.cache = {};\n    return memoize;\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  _.delay = restArguments(function (func, wait, args) {\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  }); // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n\n  _.defer = _.partial(_.delay, _, 1); // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\n  _.throttle = function (func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function () {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function () {\n      var now = _.now();\n\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n\n    throttled.cancel = function () {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  }; // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n\n\n  _.debounce = function (func, wait, immediate) {\n    var timeout, result;\n\n    var later = function (context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function (args) {\n      if (timeout) clearTimeout(timeout);\n\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function () {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  }; // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n\n\n  _.wrap = function (func, wrapper) {\n    return _.partial(wrapper, func);\n  }; // Returns a negated version of the passed-in predicate.\n\n\n  _.negate = function (predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }; // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n\n\n  _.compose = function () {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n\n      while (i--) result = args[i].call(this, result);\n\n      return result;\n    };\n  }; // Returns a function that will only be executed on and after the Nth call.\n\n\n  _.after = function (times, func) {\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }; // Returns a function that will only be executed up to (but not including) the Nth call.\n\n\n  _.before = function (times, func) {\n    var memo;\n    return function () {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n\n      if (times <= 1) func = null;\n      return memo;\n    };\n  }; // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n\n\n  _.once = _.partial(_.before, 2);\n  _.restArguments = restArguments; // Object Functions\n  // ----------------\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\n  var hasEnumBug = !{\n    toString: null\n  }.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function (obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto; // Constructor is a special case.\n\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }; // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n\n\n  _.keys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n\n    for (var key in obj) if (has(obj, key)) keys.push(key); // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve all the property names of an object.\n\n\n  _.allKeys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n\n    for (var key in obj) keys.push(key); // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve the values of an object's properties.\n\n\n  _.values = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var values = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n\n    return values;\n  }; // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n\n\n  _.mapObject = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n\n\n  _.pairs = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var pairs = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n\n    return pairs;\n  }; // Invert the keys and values of an object. The values must be serializable.\n\n\n  _.invert = function (obj) {\n    var result = {};\n\n    var keys = _.keys(obj);\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n\n    return result;\n  }; // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n\n\n  _.functions = _.methods = function (obj) {\n    var names = [];\n\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n\n    return names.sort();\n  }; // An internal function for creating assigner functions.\n\n\n  var createAssigner = function (keysFunc, defaults) {\n    return function (obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n\n      return obj;\n    };\n  }; // Extend a given object with all the properties in passed-in object(s).\n\n\n  _.extend = createAssigner(_.allKeys); // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\n  _.extendOwn = _.assign = createAssigner(_.keys); // Returns the first key on an object that passes a predicate test.\n\n  _.findKey = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = _.keys(obj),\n        key;\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  }; // Internal pick helper function to determine if `obj` has key `key`.\n\n\n  var keyInObj = function (value, key, obj) {\n    return key in obj;\n  }; // Return a copy of the object only containing the whitelisted properties.\n\n\n  _.pick = restArguments(function (obj, keys) {\n    var result = {},\n        iteratee = keys[0];\n    if (obj == null) return result;\n\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n\n    return result;\n  }); // Return a copy of the object without the blacklisted properties.\n\n  _.omit = restArguments(function (obj, keys) {\n    var iteratee = keys[0],\n        context;\n\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n\n      iteratee = function (value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n\n    return _.pick(obj, iteratee, context);\n  }); // Fill in a given object with default properties.\n\n  _.defaults = createAssigner(_.allKeys, true); // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n\n  _.create = function (prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  }; // Create a (shallow-cloned) duplicate of an object.\n\n\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }; // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n\n\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }; // Returns whether an object has a given set of `key:value` pairs.\n\n\n  _.isMatch = function (object, attrs) {\n    var keys = _.keys(attrs),\n        length = keys.length;\n\n    if (object == null) return !length;\n    var obj = Object(object);\n\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n\n    return true;\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  var eq, deepEq;\n\n  eq = function (a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b; // `null` or `undefined` only equal to itself (strict comparison).\n\n    if (a == null || b == null) return false; // `NaN`s are equivalent, but non-reflexive.\n\n    if (a !== a) return b !== b; // Exhaust primitive checks\n\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  deepEq = function (a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]': // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b; // An `egal` comparison is performed for other numeric values.\n\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false; // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n\n      var aCtor = a.constructor,\n          bCtor = b.constructor;\n\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n        return false;\n      }\n    } // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n\n\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    } // Add the first object to the stack of traversed objects.\n\n\n    aStack.push(a);\n    bStack.push(b); // Recursively compare objects and arrays.\n\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false; // Deep compare the contents, ignoring non-numeric properties.\n\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a),\n          key;\n\n      length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.\n\n      if (_.keys(b).length !== length) return false;\n\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    } // Remove the first object from the stack of traversed objects.\n\n\n    aStack.pop();\n    bStack.pop();\n    return true;\n  }; // Perform a deep comparison to check if two objects are equal.\n\n\n  _.isEqual = function (a, b) {\n    return eq(a, b);\n  }; // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n\n\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  }; // Is a given value a DOM element?\n\n\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  }; // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n\n\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n  }; // Is a given variable an object?\n\n\n  _.isObject = function (obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n\n\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function (name) {\n    _['is' + name] = function (obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  }); // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n\n\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return has(obj, 'callee');\n    };\n  } // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n\n\n  var nodelist = root.document && root.document.childNodes;\n\n  if ( true && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function (obj) {\n      return typeof obj == 'function' || false;\n    };\n  } // Is a given object a finite number?\n\n\n  _.isFinite = function (obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  }; // Is the given value `NaN`?\n\n\n  _.isNaN = function (obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  }; // Is a given value a boolean?\n\n\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  }; // Is a given value equal to null?\n\n\n  _.isNull = function (obj) {\n    return obj === null;\n  }; // Is a given variable undefined?\n\n\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  }; // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n\n\n  _.has = function (obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n\n      obj = obj[key];\n    }\n\n    return !!length;\n  }; // Utility Functions\n  // -----------------\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n\n\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  }; // Keep the identity function around for default iteratees.\n\n\n  _.identity = function (value) {\n    return value;\n  }; // Predicate-generating functions. Often useful outside of Underscore.\n\n\n  _.constant = function (value) {\n    return function () {\n      return value;\n    };\n  };\n\n  _.noop = function () {}; // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n\n\n  _.property = function (path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n\n    return function (obj) {\n      return deepGet(obj, path);\n    };\n  }; // Generates a function for a given object that returns a given property.\n\n\n  _.propertyOf = function (obj) {\n    if (obj == null) {\n      return function () {};\n    }\n\n    return function (path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  }; // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n\n\n  _.matcher = _.matches = function (attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function (obj) {\n      return _.isMatch(obj, attrs);\n    };\n  }; // Run a function **n** times.\n\n\n  _.times = function (n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n\n    return accum;\n  }; // Return a random integer between min and max (inclusive).\n\n\n  _.random = function (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n\n    return min + Math.floor(Math.random() * (max - min + 1));\n  }; // A (possibly faster) way to get the current timestamp as an integer.\n\n\n  _.now = Date.now || function () {\n    return new Date().getTime();\n  }; // List of HTML entities for escaping.\n\n\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n\n  var unescapeMap = _.invert(escapeMap); // Functions for escaping and unescaping strings to/from HTML interpolation.\n\n\n  var createEscaper = function (map) {\n    var escaper = function (match) {\n      return map[match];\n    }; // Regexes for identifying a key that needs to be escaped.\n\n\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function (string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap); // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n\n  _.result = function (obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n\n    return obj;\n  }; // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n\n\n  var idCounter = 0;\n\n  _.uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  }; // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n\n\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  }; // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n\n  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function (match) {\n    return '\\\\' + escapes[match];\n  }; // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n\n\n  _.template = function (text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      } // Adobe VMs need the match returned to produce the correct offset.\n\n\n      return match;\n    });\n    source += \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + 'return __p;\\n';\n    var render;\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function (data) {\n      return render.call(this, data, _);\n    }; // Provide the compiled source as a convenience for precompilation.\n\n\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n    return template;\n  }; // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\n\n  _.chain = function (obj) {\n    var instance = _(obj);\n\n    instance._chain = true;\n    return instance;\n  }; // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  // Helper function to continue chaining intermediate results.\n\n\n  var chainResult = function (instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  }; // Add your own custom functions to the Underscore object.\n\n\n  _.mixin = function (obj) {\n    _.each(_.functions(obj), function (name) {\n      var func = _[name] = obj[name];\n\n      _.prototype[name] = function () {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n\n    return _;\n  }; // Add all of the Underscore functions to the wrapper object.\n\n\n  _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  }); // Add all accessor Array functions to the wrapper.\n\n\n  _.each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  }); // Extracts the result from a wrapped and chained object.\n\n\n  _.prototype.value = function () {\n    return this._wrapped;\n  }; // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n\n\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function () {\n    return String(this._wrapped);\n  }; // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return _;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n})();\n\n//# sourceURL=webpack://test/./node_modules/underscore/underscore.js?");

/***/ }),

/***/ "./node_modules/utf8/utf8.js":
/*!***********************************!*\
  !*** ./node_modules/utf8/utf8.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;\n\n(function (root) {\n  var stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\n  function ucs2decode(string) {\n    var output = [];\n    var counter = 0;\n    var length = string.length;\n    var value;\n    var extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  } // Taken from https://mths.be/punycode\n\n\n  function ucs2encode(array) {\n    var length = array.length;\n    var index = -1;\n    var value;\n    var output = '';\n\n    while (++index < length) {\n      value = array[index];\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n    }\n\n    return output;\n  }\n\n  function checkScalarValue(codePoint) {\n    if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  function createByte(codePoint, shift) {\n    return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n  }\n\n  function encodeCodePoint(codePoint) {\n    if ((codePoint & 0xFFFFFF80) == 0) {\n      // 1-byte sequence\n      return stringFromCharCode(codePoint);\n    }\n\n    var symbol = '';\n\n    if ((codePoint & 0xFFFFF800) == 0) {\n      // 2-byte sequence\n      symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n    } else if ((codePoint & 0xFFFF0000) == 0) {\n      // 3-byte sequence\n      checkScalarValue(codePoint);\n      symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n      symbol += createByte(codePoint, 6);\n    } else if ((codePoint & 0xFFE00000) == 0) {\n      // 4-byte sequence\n      symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n      symbol += createByte(codePoint, 12);\n      symbol += createByte(codePoint, 6);\n    }\n\n    symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n    return symbol;\n  }\n\n  function utf8encode(string) {\n    var codePoints = ucs2decode(string);\n    var length = codePoints.length;\n    var index = -1;\n    var codePoint;\n    var byteString = '';\n\n    while (++index < length) {\n      codePoint = codePoints[index];\n      byteString += encodeCodePoint(codePoint);\n    }\n\n    return byteString;\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  function readContinuationByte() {\n    if (byteIndex >= byteCount) {\n      throw Error('Invalid byte index');\n    }\n\n    var continuationByte = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n\n    if ((continuationByte & 0xC0) == 0x80) {\n      return continuationByte & 0x3F;\n    } // If we end up here, it’s not a continuation byte\n\n\n    throw Error('Invalid continuation byte');\n  }\n\n  function decodeSymbol() {\n    var byte1;\n    var byte2;\n    var byte3;\n    var byte4;\n    var codePoint;\n\n    if (byteIndex > byteCount) {\n      throw Error('Invalid byte index');\n    }\n\n    if (byteIndex == byteCount) {\n      return false;\n    } // Read first byte\n\n\n    byte1 = byteArray[byteIndex] & 0xFF;\n    byteIndex++; // 1-byte sequence (no continuation bytes)\n\n    if ((byte1 & 0x80) == 0) {\n      return byte1;\n    } // 2-byte sequence\n\n\n    if ((byte1 & 0xE0) == 0xC0) {\n      byte2 = readContinuationByte();\n      codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n      if (codePoint >= 0x80) {\n        return codePoint;\n      } else {\n        throw Error('Invalid continuation byte');\n      }\n    } // 3-byte sequence (may include unpaired surrogates)\n\n\n    if ((byte1 & 0xF0) == 0xE0) {\n      byte2 = readContinuationByte();\n      byte3 = readContinuationByte();\n      codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n      if (codePoint >= 0x0800) {\n        checkScalarValue(codePoint);\n        return codePoint;\n      } else {\n        throw Error('Invalid continuation byte');\n      }\n    } // 4-byte sequence\n\n\n    if ((byte1 & 0xF8) == 0xF0) {\n      byte2 = readContinuationByte();\n      byte3 = readContinuationByte();\n      byte4 = readContinuationByte();\n      codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n      if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n        return codePoint;\n      }\n    }\n\n    throw Error('Invalid UTF-8 detected');\n  }\n\n  var byteArray;\n  var byteCount;\n  var byteIndex;\n\n  function utf8decode(byteString) {\n    byteArray = ucs2decode(byteString);\n    byteCount = byteArray.length;\n    byteIndex = 0;\n    var codePoints = [];\n    var tmp;\n\n    while ((tmp = decodeSymbol()) !== false) {\n      codePoints.push(tmp);\n    }\n\n    return ucs2encode(codePoints);\n  }\n  /*--------------------------------------------------------------------------*/\n\n\n  root.version = '3.0.0';\n  root.encode = utf8encode;\n  root.decode = utf8decode;\n})( false ? 0 : exports);\n\n//# sourceURL=webpack://test/./node_modules/utf8/utf8.js?");

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Module exports.\n */\nmodule.exports = deprecate;\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate(fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\n\nfunction config(name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!__webpack_require__.g.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n\n  var val = __webpack_require__.g.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n//# sourceURL=webpack://test/./node_modules/util-deprecate/browser.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/***/ ((module) => {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};\n\n//# sourceURL=webpack://test/./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/support/types.js":
/*!********************************************!*\
  !*** ./node_modules/util/support/types.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n\nvar isArgumentsObject = __webpack_require__(/*! is-arguments */ \"./node_modules/is-arguments/index.js\");\n\nvar isGeneratorFunction = __webpack_require__(/*! is-generator-function */ \"./node_modules/is-generator-function/index.js\");\n\nvar whichTypedArray = __webpack_require__(/*! which-typed-array */ \"./node_modules/which-typed-array/index.js\");\n\nvar isTypedArray = __webpack_require__(/*! is-typed-array */ \"./node_modules/is-typed-array/index.js\");\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\nvar ObjectToString = uncurryThis(Object.prototype.toString);\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray; // Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\n\nfunction isPromise(input) {\n  return typeof Promise !== 'undefined' && input instanceof Promise || input !== null && typeof input === 'object' && typeof input.then === 'function' && typeof input.catch === 'function';\n}\n\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return isTypedArray(value) || isDataView(value);\n}\n\nexports.isArrayBufferView = isArrayBufferView;\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\n\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\n\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\n\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\n\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\n\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\n\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\n\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\n\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\n\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\n\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\n\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\n\nisMapToString.working = typeof Map !== 'undefined' && isMapToString(new Map());\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working ? isMapToString(value) : value instanceof Map;\n}\n\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\n\nisSetToString.working = typeof Set !== 'undefined' && isSetToString(new Set());\n\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working ? isSetToString(value) : value instanceof Set;\n}\n\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\n\nisWeakMapToString.working = typeof WeakMap !== 'undefined' && isWeakMapToString(new WeakMap());\n\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working ? isWeakMapToString(value) : value instanceof WeakMap;\n}\n\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\n\nisWeakSetToString.working = typeof WeakSet !== 'undefined' && isWeakSetToString(new WeakSet());\n\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\n\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\n\nisArrayBufferToString.working = typeof ArrayBuffer !== 'undefined' && isArrayBufferToString(new ArrayBuffer());\n\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working ? isArrayBufferToString(value) : value instanceof ArrayBuffer;\n}\n\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\n\nisDataViewToString.working = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined' && isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1));\n\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working ? isDataViewToString(value) : value instanceof DataView;\n}\n\nexports.isDataView = isDataView;\n\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\n\nisSharedArrayBufferToString.working = typeof SharedArrayBuffer !== 'undefined' && isSharedArrayBufferToString(new SharedArrayBuffer());\n\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isSharedArrayBufferToString.working ? isSharedArrayBufferToString(value) : value instanceof SharedArrayBuffer;\n}\n\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\n\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\n\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\n\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\n\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\n\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\n\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\n\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\n\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\n\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\n\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return isNumberObject(value) || isStringObject(value) || isBooleanObject(value) || isBigIntObject(value) || isSymbolObject(value);\n}\n\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (isArrayBuffer(value) || isSharedArrayBuffer(value));\n}\n\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function (method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function () {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n\n//# sourceURL=webpack://test/./node_modules/util/support/types.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {\n  var keys = Object.keys(obj);\n  var descriptors = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n  }\n\n  return descriptors;\n};\n\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}; // Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\n\nexports.deprecate = function (fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  } // Allow for deprecating things in the process of starting up.\n\n\n  if (typeof process === 'undefined') {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&').replace(/\\*/g, '.*').replace(/,/g, '$|^').toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\n\nexports.debuglog = function (set) {\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str + '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nexports.types = __webpack_require__(/*! ./support/types */ \"./node_modules/util/support/types.js\");\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\n\n\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function') throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn,\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  });\n  return Object.defineProperties(fn, getOwnPropertyDescriptors(original));\n};\n\nexports.promisify.custom = kCustomPromisifiedSymbol;\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  } // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n\n\n  function callbackified() {\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n\n    var self = this;\n\n    var cb = function () {\n      return maybeCb.apply(self, arguments);\n    }; // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n\n\n    original.apply(this, args).then(function (ret) {\n      process.nextTick(cb.bind(null, null, ret));\n    }, function (rej) {\n      process.nextTick(callbackifyOnRejected.bind(null, rej, cb));\n    });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n  return callbackified;\n}\n\nexports.callbackify = callbackify;\n\n//# sourceURL=webpack://test/./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/bytesToUuid.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/bytesToUuid.js ***!
  \**********************************************/
/***/ ((module) => {

eval("/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nmodule.exports = bytesToUuid;\n\n//# sourceURL=webpack://test/./node_modules/uuid/lib/bytesToUuid.js?");

/***/ }),

/***/ "./node_modules/uuid/lib/rng-browser.js":
/*!**********************************************!*\
  !*** ./node_modules/uuid/lib/rng-browser.js ***!
  \**********************************************/
/***/ ((module) => {

eval("// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\n//# sourceURL=webpack://test/./node_modules/uuid/lib/rng-browser.js?");

/***/ }),

/***/ "./node_modules/uuid/v4.js":
/*!*********************************!*\
  !*** ./node_modules/uuid/v4.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var rng = __webpack_require__(/*! ./lib/rng */ \"./node_modules/uuid/lib/rng-browser.js\");\n\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"./node_modules/uuid/lib/bytesToUuid.js\");\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n//# sourceURL=webpack://test/./node_modules/uuid/v4.js?");

/***/ }),

/***/ "./node_modules/web3-eth-abi/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth-abi/lib/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file index.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @date 2018\n */\nvar Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer;\n\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar utils = __webpack_require__(/*! web3-utils */ \"./node_modules/web3-utils/lib/index.js\");\n\nvar EthersAbiCoder = __webpack_require__(/*! @ethersproject/abi */ \"./node_modules/@ethersproject/abi/lib.esm/index.js\").AbiCoder;\n\nvar ParamType = __webpack_require__(/*! @ethersproject/abi */ \"./node_modules/@ethersproject/abi/lib.esm/index.js\").ParamType;\n\nvar ethersAbiCoder = new EthersAbiCoder(function (type, value) {\n  if (type.match(/^u?int/) && !_.isArray(value) && (!_.isObject(value) || value.constructor.name !== 'BN')) {\n    return value.toString();\n  }\n\n  return value;\n}); // result method\n\nfunction Result() {}\n/**\n * ABICoder prototype should be used to encode/decode solidity params of any type\n */\n\n\nvar ABICoder = function () {};\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n *\n * @method encodeFunctionSignature\n * @param {String|Object} functionName\n * @return {String} encoded function name\n */\n\n\nABICoder.prototype.encodeFunctionSignature = function (functionName) {\n  if (_.isObject(functionName)) {\n    functionName = utils._jsonInterfaceMethodToString(functionName);\n  }\n\n  return utils.sha3(functionName).slice(0, 10);\n};\n/**\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\n *\n * @method encodeEventSignature\n * @param {String|Object} functionName\n * @return {String} encoded function name\n */\n\n\nABICoder.prototype.encodeEventSignature = function (functionName) {\n  if (_.isObject(functionName)) {\n    functionName = utils._jsonInterfaceMethodToString(functionName);\n  }\n\n  return utils.sha3(functionName);\n};\n/**\n * Should be used to encode plain param\n *\n * @method encodeParameter\n *\n * @param {String|Object} type\n * @param {any} param\n *\n * @return {String} encoded plain param\n */\n\n\nABICoder.prototype.encodeParameter = function (type, param) {\n  return this.encodeParameters([type], [param]);\n};\n/**\n * Should be used to encode list of params\n *\n * @method encodeParameters\n *\n * @param {Array<String|Object>} types\n * @param {Array<any>} params\n *\n * @return {String} encoded list of params\n */\n\n\nABICoder.prototype.encodeParameters = function (types, params) {\n  var self = this;\n  types = self.mapTypes(types);\n  params = params.map(function (param, index) {\n    let type = types[index];\n\n    if (typeof type === 'object' && type.type) {\n      // We may get a named type of shape {name, type}\n      type = type.type;\n    }\n\n    param = self.formatParam(type, param); // Format params for tuples\n\n    if (typeof type === 'string' && type.includes('tuple')) {\n      const coder = ethersAbiCoder._getCoder(ParamType.from(type));\n\n      const modifyParams = (coder, param) => {\n        if (coder.name === 'array') {\n          return param.map(p => modifyParams(ethersAbiCoder._getCoder(ParamType.from(coder.type.replace('[]', ''))), p));\n        }\n\n        coder.coders.forEach((c, i) => {\n          if (c.name === 'tuple') {\n            modifyParams(c, param[i]);\n          } else {\n            param[i] = self.formatParam(c.name, param[i]);\n          }\n        });\n      };\n\n      modifyParams(coder, param);\n    }\n\n    return param;\n  });\n  return ethersAbiCoder.encode(types, params);\n};\n/**\n * Map types if simplified format is used\n *\n * @method mapTypes\n * @param {Array} types\n * @return {Array}\n */\n\n\nABICoder.prototype.mapTypes = function (types) {\n  var self = this;\n  var mappedTypes = [];\n  types.forEach(function (type) {\n    // Remap `function` type params to bytes24 since Ethers does not\n    // recognize former type. Solidity docs say `Function` is a bytes24\n    // encoding the contract address followed by the function selector hash.\n    if (typeof type === 'object' && type.type === 'function') {\n      type = Object.assign({}, type, {\n        type: \"bytes24\"\n      });\n    }\n\n    if (self.isSimplifiedStructFormat(type)) {\n      var structName = Object.keys(type)[0];\n      mappedTypes.push(Object.assign(self.mapStructNameAndType(structName), {\n        components: self.mapStructToCoderFormat(type[structName])\n      }));\n      return;\n    }\n\n    mappedTypes.push(type);\n  });\n  return mappedTypes;\n};\n/**\n * Check if type is simplified struct format\n *\n * @method isSimplifiedStructFormat\n * @param {string | Object} type\n * @returns {boolean}\n */\n\n\nABICoder.prototype.isSimplifiedStructFormat = function (type) {\n  return typeof type === 'object' && typeof type.components === 'undefined' && typeof type.name === 'undefined';\n};\n/**\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\n *\n * @method mapStructNameAndType\n * @param {string} structName\n * @return {{type: string, name: *}}\n */\n\n\nABICoder.prototype.mapStructNameAndType = function (structName) {\n  var type = 'tuple';\n\n  if (structName.indexOf('[]') > -1) {\n    type = 'tuple[]';\n    structName = structName.slice(0, -2);\n  }\n\n  return {\n    type: type,\n    name: structName\n  };\n};\n/**\n * Maps the simplified format in to the expected format of the ABICoder\n *\n * @method mapStructToCoderFormat\n * @param {Object} struct\n * @return {Array}\n */\n\n\nABICoder.prototype.mapStructToCoderFormat = function (struct) {\n  var self = this;\n  var components = [];\n  Object.keys(struct).forEach(function (key) {\n    if (typeof struct[key] === 'object') {\n      components.push(Object.assign(self.mapStructNameAndType(key), {\n        components: self.mapStructToCoderFormat(struct[key])\n      }));\n      return;\n    }\n\n    components.push({\n      name: key,\n      type: struct[key]\n    });\n  });\n  return components;\n};\n/**\n * Handle some formatting of params for backwards compatability with Ethers V4\n *\n * @method formatParam\n * @param {String} - type\n * @param {any} - param\n * @return {any} - The formatted param\n */\n\n\nABICoder.prototype.formatParam = function (type, param) {\n  const paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\n  const paramTypeBytesArray = new RegExp(/^bytes([0-9]*)\\[\\]$/);\n  const paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n  const paramTypeNumberArray = new RegExp(/^(u?int)([0-9]*)\\[\\]$/); // Format BN to string\n\n  if (utils.isBN(param) || utils.isBigNumber(param)) {\n    return param.toString(10);\n  }\n\n  if (type.match(paramTypeBytesArray) || type.match(paramTypeNumberArray)) {\n    return param.map(p => this.formatParam(type.replace('[]', ''), p));\n  } // Format correct width for u?int[0-9]*\n\n\n  let match = type.match(paramTypeNumber);\n\n  if (match) {\n    let size = parseInt(match[2] || \"256\");\n\n    if (size / 8 < param.length) {\n      // pad to correct bit width\n      param = utils.leftPad(param, size);\n    }\n  } // Format correct length for bytes[0-9]+\n\n\n  match = type.match(paramTypeBytes);\n\n  if (match) {\n    if (Buffer.isBuffer(param)) {\n      param = utils.toHex(param);\n    } // format to correct length\n\n\n    let size = parseInt(match[1]);\n\n    if (size) {\n      let maxSize = size * 2;\n\n      if (param.substring(0, 2) === '0x') {\n        maxSize += 2;\n      }\n\n      if (param.length < maxSize) {\n        // pad to correct length\n        param = utils.rightPad(param, size * 2);\n      }\n    } // format odd-length bytes to even-length\n\n\n    if (param.length % 2 === 1) {\n      param = '0x0' + param.substring(2);\n    }\n  }\n\n  return param;\n};\n/**\n * Encodes a function call from its json interface and parameters.\n *\n * @method encodeFunctionCall\n * @param {Array} jsonInterface\n * @param {Array} params\n * @return {String} The encoded ABI for this function call\n */\n\n\nABICoder.prototype.encodeFunctionCall = function (jsonInterface, params) {\n  return this.encodeFunctionSignature(jsonInterface) + this.encodeParameters(jsonInterface.inputs, params).replace('0x', '');\n};\n/**\n * Should be used to decode bytes to plain param\n *\n * @method decodeParameter\n * @param {String} type\n * @param {String} bytes\n * @return {Object} plain param\n */\n\n\nABICoder.prototype.decodeParameter = function (type, bytes) {\n  return this.decodeParameters([type], bytes)[0];\n};\n/**\n * Should be used to decode list of params\n *\n * @method decodeParameter\n * @param {Array} outputs\n * @param {String} bytes\n * @return {Array} array of plain params\n */\n\n\nABICoder.prototype.decodeParameters = function (outputs, bytes) {\n  return this.decodeParametersWith(outputs, bytes, false);\n};\n/**\n * Should be used to decode list of params\n *\n * @method decodeParameter\n * @param {Array} outputs\n * @param {String} bytes\n * @param {Boolean} loose\n * @return {Array} array of plain params\n */\n\n\nABICoder.prototype.decodeParametersWith = function (outputs, bytes, loose) {\n  if (outputs.length > 0 && (!bytes || bytes === '0x' || bytes === '0X')) {\n    throw new Error('Returned values aren\\'t valid, did it run Out of Gas? ' + 'You might also see this error if you are not using the ' + 'correct ABI for the contract you are retrieving data from, ' + 'requesting data from a block number that does not exist, ' + 'or querying a node which is not fully synced.');\n  }\n\n  var res = ethersAbiCoder.decode(this.mapTypes(outputs), '0x' + bytes.replace(/0x/i, ''), loose);\n  var returnValue = new Result();\n  returnValue.__length__ = 0;\n  outputs.forEach(function (output, i) {\n    var decodedValue = res[returnValue.__length__];\n    decodedValue = decodedValue === '0x' ? null : decodedValue;\n    returnValue[i] = decodedValue;\n\n    if (_.isObject(output) && output.name) {\n      returnValue[output.name] = decodedValue;\n    }\n\n    returnValue.__length__++;\n  });\n  return returnValue;\n};\n/**\n * Decodes events non- and indexed parameters.\n *\n * @method decodeLog\n * @param {Object} inputs\n * @param {String} data\n * @param {Array} topics\n * @return {Array} array of plain params\n */\n\n\nABICoder.prototype.decodeLog = function (inputs, data, topics) {\n  var _this = this;\n\n  topics = _.isArray(topics) ? topics : [topics];\n  data = data || '';\n  var notIndexedInputs = [];\n  var indexedParams = [];\n  var topicCount = 0; // TODO check for anonymous logs?\n\n  inputs.forEach(function (input, i) {\n    if (input.indexed) {\n      indexedParams[i] = ['bool', 'int', 'uint', 'address', 'fixed', 'ufixed'].find(function (staticType) {\n        return input.type.indexOf(staticType) !== -1;\n      }) ? _this.decodeParameter(input.type, topics[topicCount]) : topics[topicCount];\n      topicCount++;\n    } else {\n      notIndexedInputs[i] = input;\n    }\n  });\n  var nonIndexedData = data;\n  var notIndexedParams = nonIndexedData ? this.decodeParametersWith(notIndexedInputs, nonIndexedData, true) : [];\n  var returnValue = new Result();\n  returnValue.__length__ = 0;\n  inputs.forEach(function (res, i) {\n    returnValue[i] = res.type === 'string' ? '' : null;\n\n    if (typeof notIndexedParams[i] !== 'undefined') {\n      returnValue[i] = notIndexedParams[i];\n    }\n\n    if (typeof indexedParams[i] !== 'undefined') {\n      returnValue[i] = indexedParams[i];\n    }\n\n    if (res.name) {\n      returnValue[res.name] = returnValue[i];\n    }\n\n    returnValue.__length__++;\n  });\n  return returnValue;\n};\n\nvar coder = new ABICoder();\nmodule.exports = coder;\n\n//# sourceURL=webpack://test/./node_modules/web3-eth-abi/lib/index.js?");

/***/ }),

/***/ "./node_modules/web3-utils/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/web3-utils/lib/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar ethjsUnit = __webpack_require__(/*! ethjs-unit */ \"./node_modules/ethjs-unit/lib/index.js\");\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/web3-utils/lib/utils.js\");\n\nvar soliditySha3 = __webpack_require__(/*! ./soliditySha3.js */ \"./node_modules/web3-utils/lib/soliditySha3.js\");\n\nvar randombytes = __webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\n\n\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n  /*jshint maxcomplexity: 10 */\n  // add data if given\n  if (_.isObject(error) && !(error instanceof Error) && error.data) {\n    if (_.isObject(error.data) || _.isArray(error.data)) {\n      error.data = JSON.stringify(error.data, null, 2);\n    }\n\n    error = error.message + \"\\n\" + error.data;\n  }\n\n  if (_.isString(error)) {\n    error = new Error(error);\n  }\n\n  if (_.isFunction(callback)) {\n    callback(error, optionalData);\n  }\n\n  if (_.isFunction(reject)) {\n    // suppress uncatched error if an error listener is present\n    // OR suppress uncatched error if an callback listener is present\n    if (emitter && _.isFunction(emitter.listeners) && emitter.listeners('error').length || _.isFunction(callback)) {\n      emitter.catch(function () {});\n    } // reject later, to be able to return emitter\n\n\n    setTimeout(function () {\n      reject(error);\n    }, 1);\n  }\n\n  if (emitter && _.isFunction(emitter.emit)) {\n    // emit later, to be able to return emitter\n    setTimeout(function () {\n      emitter.emit('error', error, optionalData);\n      emitter.removeAllListeners();\n    }, 1);\n  }\n\n  return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\n\n\nvar _jsonInterfaceMethodToString = function (json) {\n  if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n    return json.name;\n  }\n\n  return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\n\n\nvar _flattenTypes = function (includeTuple, puts) {\n  // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n  var types = [];\n  puts.forEach(function (param) {\n    if (typeof param.components === 'object') {\n      if (param.type.substring(0, 5) !== 'tuple') {\n        throw new Error('components found but type is not tuple; report on GitHub');\n      }\n\n      var suffix = '';\n      var arrayBracket = param.type.indexOf('[');\n\n      if (arrayBracket >= 0) {\n        suffix = param.type.substring(arrayBracket);\n      }\n\n      var result = _flattenTypes(includeTuple, param.components); // console.log(\"result should have things: \" + result)\n\n\n      if (_.isArray(result) && includeTuple) {\n        // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n        types.push('tuple(' + result.join(',') + ')' + suffix);\n      } else if (!includeTuple) {\n        // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n        types.push('(' + result.join(',') + ')' + suffix);\n      } else {\n        // console.log(\"its a single type within a tuple: \" + result.types)\n        types.push('(' + result + ')');\n      }\n    } else {\n      // console.log(\"its a type and not directly in a tuple: \" + param.type)\n      types.push(param.type);\n    }\n  });\n  return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\n\n\nvar randomHex = function (size) {\n  return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nvar hexToAscii = function (hex) {\n  if (!utils.isHexStrict(hex)) throw new Error('The parameter must be a valid HEX string.');\n  var str = \"\";\n  var i = 0,\n      l = hex.length;\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\n\n\nvar asciiToHex = function (str) {\n  if (!str) return \"0x00\";\n  var hex = \"\";\n\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\n\n\nvar getUnitValue = function (unit) {\n  unit = unit ? unit.toLowerCase() : 'ether';\n\n  if (!ethjsUnit.unitMap[unit]) {\n    throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n  }\n\n  return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\n\n\nvar fromWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\n\n\nvar toWei = function (number, unit) {\n  unit = getUnitValue(unit);\n\n  if (!utils.isBN(number) && !_.isString(number)) {\n    throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n  }\n\n  return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\n\n\nvar toChecksumAddress = function (address) {\n  if (typeof address === 'undefined') return '';\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n  address = address.toLowerCase().replace(/^0x/i, '');\n  var addressHash = utils.sha3(address).replace(/^0x/i, '');\n  var checksumAddress = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    // If ith character is 8 to f then make it uppercase\n    if (parseInt(addressHash[i], 16) > 7) {\n      checksumAddress += address[i].toUpperCase();\n    } else {\n      checksumAddress += address[i];\n    }\n  }\n\n  return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\n\n\nvar compareBlockNumbers = function (a, b) {\n  if (a == b) {\n    return 0;\n  } else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n    return 0;\n  } else if (\"genesis\" == a || \"earliest\" == a) {\n    // b !== a, thus a < b\n    return -1;\n  } else if (\"genesis\" == b || \"earliest\" == b) {\n    // b !== a, thus a > b\n    return 1;\n  } else if (a == \"latest\") {\n    if (b == \"pending\") {\n      return -1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return 1;\n    }\n  } else if (b === \"latest\") {\n    if (a == \"pending\") {\n      return 1;\n    } else {\n      // b !== (\"pending\" OR \"latest\"), thus a > b\n      return -1;\n    }\n  } else if (a == \"pending\") {\n    // b (== OR <) \"latest\", thus a > b\n    return 1;\n  } else if (b == \"pending\") {\n    return -1;\n  } else {\n    let bnA = new BN(a);\n    let bnB = new BN(b);\n\n    if (bnA.lt(bnB)) {\n      return -1;\n    } else if (bnA.eq(bnB)) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n};\n\nmodule.exports = {\n  _fireError: _fireError,\n  _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n  _flattenTypes: _flattenTypes,\n  // extractDisplayName: extractDisplayName,\n  // extractTypeName: extractTypeName,\n  randomHex: randomHex,\n  _: _,\n  BN: utils.BN,\n  isBN: utils.isBN,\n  isBigNumber: utils.isBigNumber,\n  isHex: utils.isHex,\n  isHexStrict: utils.isHexStrict,\n  sha3: utils.sha3,\n  sha3Raw: utils.sha3Raw,\n  keccak256: utils.sha3,\n  soliditySha3: soliditySha3.soliditySha3,\n  soliditySha3Raw: soliditySha3.soliditySha3Raw,\n  encodePacked: soliditySha3.encodePacked,\n  isAddress: utils.isAddress,\n  checkAddressChecksum: utils.checkAddressChecksum,\n  toChecksumAddress: toChecksumAddress,\n  toHex: utils.toHex,\n  toBN: utils.toBN,\n  bytesToHex: utils.bytesToHex,\n  hexToBytes: utils.hexToBytes,\n  hexToNumberString: utils.hexToNumberString,\n  hexToNumber: utils.hexToNumber,\n  toDecimal: utils.hexToNumber,\n  numberToHex: utils.numberToHex,\n  fromDecimal: utils.numberToHex,\n  hexToUtf8: utils.hexToUtf8,\n  hexToString: utils.hexToUtf8,\n  toUtf8: utils.hexToUtf8,\n  stripHexPrefix: utils.stripHexPrefix,\n  utf8ToHex: utils.utf8ToHex,\n  stringToHex: utils.utf8ToHex,\n  fromUtf8: utils.utf8ToHex,\n  hexToAscii: hexToAscii,\n  toAscii: hexToAscii,\n  asciiToHex: asciiToHex,\n  fromAscii: asciiToHex,\n  unitMap: ethjsUnit.unitMap,\n  toWei: toWei,\n  fromWei: fromWei,\n  padLeft: utils.leftPad,\n  leftPad: utils.leftPad,\n  padRight: utils.rightPad,\n  rightPad: utils.rightPad,\n  toTwosComplement: utils.toTwosComplement,\n  isBloom: utils.isBloom,\n  isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n  isContractAddressInBloom: utils.isContractAddressInBloom,\n  isTopic: utils.isTopic,\n  isTopicInBloom: utils.isTopicInBloom,\n  isInBloom: utils.isInBloom,\n  compareBlockNumbers: compareBlockNumbers\n};\n\n//# sourceURL=webpack://test/./node_modules/web3-utils/lib/index.js?");

/***/ }),

/***/ "./node_modules/web3-utils/lib/soliditySha3.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-utils/lib/soliditySha3.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/web3-utils/lib/utils.js\");\n\nvar _elementaryName = function (name) {\n  /*jshint maxcomplexity:false */\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3);\n  } else if (name === 'int') {\n    return 'int256';\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4);\n  } else if (name === 'uint') {\n    return 'uint256';\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5);\n  } else if (name === 'fixed') {\n    return 'fixed128x128';\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6);\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128';\n  }\n\n  return name;\n}; // Parse N from type<N>\n\n\nvar _parseTypeN = function (type) {\n  var typesize = /^\\D+(\\d+).*$/.exec(type);\n  return typesize ? parseInt(typesize[1], 10) : null;\n}; // Parse N from type[<N>]\n\n\nvar _parseTypeNArray = function (type) {\n  var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n  return arraySize ? parseInt(arraySize[1], 10) : null;\n};\n\nvar _parseNumber = function (arg) {\n  var type = typeof arg;\n\n  if (type === 'string') {\n    if (utils.isHexStrict(arg)) {\n      return new BN(arg.replace(/0x/i, ''), 16);\n    } else {\n      return new BN(arg, 10);\n    }\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (utils.isBigNumber(arg)) {\n    return new BN(arg.toString(10));\n  } else if (utils.isBN(arg)) {\n    return arg;\n  } else {\n    throw new Error(arg + ' is not a number');\n  }\n};\n\nvar _solidityPack = function (type, value, arraySize) {\n  /*jshint maxcomplexity:false */\n  var size, num;\n  type = _elementaryName(type);\n\n  if (type === 'bytes') {\n    if (value.replace(/^0x/i, '').length % 2 !== 0) {\n      throw new Error('Invalid bytes characters ' + value.length);\n    }\n\n    return value;\n  } else if (type === 'string') {\n    return utils.utf8ToHex(value);\n  } else if (type === 'bool') {\n    return value ? '01' : '00';\n  } else if (type.startsWith('address')) {\n    if (arraySize) {\n      size = 64;\n    } else {\n      size = 40;\n    }\n\n    if (!utils.isAddress(value)) {\n      throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n    }\n\n    return utils.leftPad(value.toLowerCase(), size);\n  }\n\n  size = _parseTypeN(type);\n\n  if (type.startsWith('bytes')) {\n    if (!size) {\n      throw new Error('bytes[] not yet supported in solidity');\n    } // must be 32 byte slices when in an array\n\n\n    if (arraySize) {\n      size = 32;\n    }\n\n    if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n      throw new Error('Invalid bytes' + size + ' for ' + value);\n    }\n\n    return utils.rightPad(value, size * 2);\n  } else if (type.startsWith('uint')) {\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid uint' + size + ' size');\n    }\n\n    num = _parseNumber(value);\n\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n    }\n\n    if (num.lt(new BN(0))) {\n      throw new Error('Supplied uint ' + num.toString() + ' is negative');\n    }\n\n    return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n  } else if (type.startsWith('int')) {\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid int' + size + ' size');\n    }\n\n    num = _parseNumber(value);\n\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n    }\n\n    if (num.lt(new BN(0))) {\n      return num.toTwos(size).toString('hex');\n    } else {\n      return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type);\n  }\n};\n\nvar _processSolidityEncodePackedArgs = function (arg) {\n  /*jshint maxcomplexity:false */\n  if (_.isArray(arg)) {\n    throw new Error('Autodetection of array types is not supported.');\n  }\n\n  var type,\n      value = '';\n  var hexArg, arraySize; // if type is given\n\n  if (_.isObject(arg) && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n    type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n    value = arg.hasOwnProperty('v') ? arg.v : arg.value; // otherwise try to guess the type\n  } else {\n    type = utils.toHex(arg, true);\n    value = utils.toHex(arg);\n\n    if (!type.startsWith('int') && !type.startsWith('uint')) {\n      type = 'bytes';\n    }\n  }\n\n  if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n    value = new BN(value);\n  } // get the array size\n\n\n  if (_.isArray(value)) {\n    arraySize = _parseTypeNArray(type);\n\n    if (arraySize && value.length !== arraySize) {\n      throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n    } else {\n      arraySize = value.length;\n    }\n  }\n\n  if (_.isArray(value)) {\n    hexArg = value.map(function (val) {\n      return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n    });\n    return hexArg.join('');\n  } else {\n    hexArg = _solidityPack(type, value, arraySize);\n    return hexArg.toString('hex').replace('0x', '');\n  }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\n\n\nvar soliditySha3 = function () {\n  /*jshint maxcomplexity:false */\n  var args = Array.prototype.slice.call(arguments);\n\n  var hexArgs = _.map(args, _processSolidityEncodePackedArgs); // console.log(args, hexArgs);\n  // console.log('0x'+ hexArgs.join(''));\n\n\n  return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\n\n\nvar soliditySha3Raw = function () {\n  return utils.sha3Raw('0x' + _.map(Array.prototype.slice.call(arguments), _processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\n\n\nvar encodePacked = function () {\n  /*jshint maxcomplexity:false */\n  var args = Array.prototype.slice.call(arguments);\n\n  var hexArgs = _.map(args, _processSolidityEncodePackedArgs);\n\n  return '0x' + hexArgs.join('').toLowerCase();\n};\n\nmodule.exports = {\n  soliditySha3: soliditySha3,\n  soliditySha3Raw: soliditySha3Raw,\n  encodePacked: encodePacked\n};\n\n//# sourceURL=webpack://test/./node_modules/web3-utils/lib/soliditySha3.js?");

/***/ }),

/***/ "./node_modules/web3-utils/lib/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/web3-utils/lib/utils.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n\nvar numberToBN = __webpack_require__(/*! number-to-bn */ \"./node_modules/number-to-bn/src/index.js\");\n\nvar utf8 = __webpack_require__(/*! utf8 */ \"./node_modules/utf8/utf8.js\");\n\nvar Hash = __webpack_require__(/*! eth-lib/lib/hash */ \"./node_modules/eth-lib/lib/hash.js\");\n\nvar ethereumBloomFilters = __webpack_require__(/*! ethereum-bloom-filters */ \"./node_modules/ethereum-bloom-filters/dist/index.js\");\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\n\n\nvar isBN = function (object) {\n  return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\n\n\nvar isBigNumber = function (object) {\n  return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\n\n\nvar toBN = function (number) {\n  try {\n    return numberToBN.apply(null, arguments);\n  } catch (e) {\n    throw new Error(e + ' Given value: \"' + number + '\"');\n  }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\n\n\nvar toTwosComplement = function (number) {\n  return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\n\n\nvar isAddress = function (address) {\n  // check if it has the basic requirements of an address\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false; // If it's ALL lowercase or ALL upppercase\n  } else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n    return true; // Otherwise check each case\n  } else {\n    return checkAddressChecksum(address);\n  }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\n\n\nvar checkAddressChecksum = function (address) {\n  // Check each case\n  address = address.replace(/^0x/i, '');\n  var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n\n  for (var i = 0; i < 40; i++) {\n    // the nth letter should be uppercase if the nth digit of casemap is 1\n    if (parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i] || parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\n\n\nvar leftPad = function (string, chars, sign) {\n  var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n  string = string.toString(16).replace(/^0x/i, '');\n  var padding = chars - string.length + 1 >= 0 ? chars - string.length + 1 : 0;\n  return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\n\n\nvar rightPad = function (string, chars, sign) {\n  var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n  string = string.toString(16).replace(/^0x/i, '');\n  var padding = chars - string.length + 1 >= 0 ? chars - string.length + 1 : 0;\n  return (hasPrefix ? '0x' : '') + string + new Array(padding).join(sign ? sign : \"0\");\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\n\n\nvar utf8ToHex = function (str) {\n  str = utf8.encode(str);\n  var hex = \"\"; // remove \\u0000 padding from either side\n\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str.split(\"\").reverse().join(\"\");\n  str = str.replace(/^(?:\\u0000)*/, '');\n  str = str.split(\"\").reverse().join(\"\");\n\n  for (var i = 0; i < str.length; i++) {\n    var code = str.charCodeAt(i); // if (code !== 0) {\n\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n; // }\n  }\n\n  return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nvar hexToUtf8 = function (hex) {\n  if (!isHexStrict(hex)) throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n  var str = \"\";\n  var code = 0;\n  hex = hex.replace(/^0x/i, ''); // remove 00 padding from either side\n\n  hex = hex.replace(/^(?:00)*/, '');\n  hex = hex.split(\"\").reverse().join(\"\");\n  hex = hex.replace(/^(?:00)*/, '');\n  hex = hex.split(\"\").reverse().join(\"\");\n  var l = hex.length;\n\n  for (var i = 0; i < l; i += 2) {\n    code = parseInt(hex.substr(i, 2), 16); // if (code !== 0) {\n\n    str += String.fromCharCode(code); // }\n  }\n\n  return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\n\n\nvar hexToNumber = function (value) {\n  if (!value) {\n    return value;\n  }\n\n  if (_.isString(value) && !isHexStrict(value)) {\n    throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n  }\n\n  return toBN(value).toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\n\n\nvar hexToNumberString = function (value) {\n  if (!value) return value;\n\n  if (_.isString(value) && !isHexStrict(value)) {\n    throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n  }\n\n  return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\n\n\nvar numberToHex = function (value) {\n  if (_.isNull(value) || _.isUndefined(value)) {\n    return value;\n  }\n\n  if (!isFinite(value) && !isHexStrict(value)) {\n    throw new Error('Given input \"' + value + '\" is not a number.');\n  }\n\n  var number = toBN(value);\n  var result = number.toString(16);\n  return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\n\n\nvar bytesToHex = function (bytes) {\n  for (var hex = [], i = 0; i < bytes.length; i++) {\n    /* jshint ignore:start */\n    hex.push((bytes[i] >>> 4).toString(16));\n    hex.push((bytes[i] & 0xF).toString(16));\n    /* jshint ignore:end */\n  }\n\n  return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\n\n\nvar hexToBytes = function (hex) {\n  hex = hex.toString(16);\n\n  if (!isHexStrict(hex)) {\n    throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n  }\n\n  hex = hex.replace(/^0x/i, '');\n\n  for (var bytes = [], c = 0; c < hex.length; c += 2) bytes.push(parseInt(hex.substr(c, 2), 16));\n\n  return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\n\n\nvar toHex = function (value, returnType) {\n  /*jshint maxcomplexity: false */\n  if (isAddress(value)) {\n    return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n  }\n\n  if (_.isBoolean(value)) {\n    return returnType ? 'bool' : value ? '0x01' : '0x00';\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return '0x' + value.toString('hex');\n  }\n\n  if (_.isObject(value) && !isBigNumber(value) && !isBN(value)) {\n    return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n  } // if its a negative number, pass it through numberToHex\n\n\n  if (_.isString(value)) {\n    if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n      return returnType ? 'int256' : numberToHex(value);\n    } else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n      return returnType ? 'bytes' : value;\n    } else if (!isFinite(value)) {\n      return returnType ? 'string' : utf8ToHex(value);\n    }\n  }\n\n  return returnType ? value < 0 ? 'int256' : 'uint256' : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\n\n\nvar isHexStrict = function (hex) {\n  return (_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\n\n\nvar isHex = function (hex) {\n  return (_.isString(hex) || _.isNumber(hex)) && /^(-0x|0x)?[0-9a-f]*$/i.test(hex);\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\n\n\nvar stripHexPrefix = function (str) {\n  if (str !== 0 && isHex(str)) return str.replace(/^(-)?0x/i, '$1');\n  return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\n\n\nvar isBloom = function (bloom) {\n  return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\n\n\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n  return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\n\n\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n  return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\n\n\nvar isTopic = function (topic) {\n  return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\n\n\nvar isTopicInBloom = function (bloom, topic) {\n  return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\n\n\nvar isInBloom = function (bloom, topic) {\n  return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\n\n\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n\nvar sha3 = function (value) {\n  if (isBN(value)) {\n    value = value.toString();\n  }\n\n  if (isHexStrict(value) && /^0x/i.test(value.toString())) {\n    value = hexToBytes(value);\n  }\n\n  var returnValue = Hash.keccak256(value); // jshint ignore:line\n\n  if (returnValue === SHA3_NULL_S) {\n    return null;\n  } else {\n    return returnValue;\n  }\n}; // expose the under the hood keccak256\n\n\nsha3._Hash = Hash;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\n\nvar sha3Raw = function (value) {\n  value = sha3(value);\n\n  if (value === null) {\n    return SHA3_NULL_S;\n  }\n\n  return value;\n};\n\nmodule.exports = {\n  BN: BN,\n  isBN: isBN,\n  isBigNumber: isBigNumber,\n  toBN: toBN,\n  isAddress: isAddress,\n  isBloom: isBloom,\n  isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n  isContractAddressInBloom: isContractAddressInBloom,\n  isTopic: isTopic,\n  isTopicInBloom: isTopicInBloom,\n  isInBloom: isInBloom,\n  checkAddressChecksum: checkAddressChecksum,\n  utf8ToHex: utf8ToHex,\n  hexToUtf8: hexToUtf8,\n  hexToNumber: hexToNumber,\n  hexToNumberString: hexToNumberString,\n  numberToHex: numberToHex,\n  toHex: toHex,\n  hexToBytes: hexToBytes,\n  bytesToHex: bytesToHex,\n  isHex: isHex,\n  isHexStrict: isHexStrict,\n  stripHexPrefix: stripHexPrefix,\n  leftPad: leftPad,\n  rightPad: rightPad,\n  toTwosComplement: toTwosComplement,\n  sha3: sha3,\n  sha3Raw: sha3Raw\n};\n\n//# sourceURL=webpack://test/./node_modules/web3-utils/lib/utils.js?");

/***/ }),

/***/ "./node_modules/which-typed-array/index.js":
/*!*************************************************!*\
  !*** ./node_modules/which-typed-array/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar forEach = __webpack_require__(/*! foreach */ \"./node_modules/foreach/index.js\");\n\nvar availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ \"./node_modules/available-typed-arrays/index.js\");\n\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/has-symbols/index.js\")();\n\nvar hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';\nvar typedArrays = availableTypedArrays();\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\n\nvar gOPD = __webpack_require__(/*! es-abstract/helpers/getOwnPropertyDescriptor */ \"./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js\");\n\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\nif (hasToStringTag && gOPD && getPrototypeOf) {\n  forEach(typedArrays, function (typedArray) {\n    if (typeof __webpack_require__.g[typedArray] === 'function') {\n      var arr = new __webpack_require__.g[typedArray]();\n\n      if (!(Symbol.toStringTag in arr)) {\n        throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');\n      }\n\n      var proto = getPrototypeOf(arr);\n      var descriptor = gOPD(proto, Symbol.toStringTag);\n\n      if (!descriptor) {\n        var superProto = getPrototypeOf(proto);\n        descriptor = gOPD(superProto, Symbol.toStringTag);\n      }\n\n      toStrTags[typedArray] = descriptor.get;\n    }\n  });\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n  var foundName = false;\n  forEach(toStrTags, function (getter, typedArray) {\n    if (!foundName) {\n      try {\n        var name = getter.call(value);\n\n        if (name === typedArray) {\n          foundName = name;\n        }\n      } catch (e) {}\n    }\n  });\n  return foundName;\n};\n\nvar isTypedArray = __webpack_require__(/*! is-typed-array */ \"./node_modules/is-typed-array/index.js\");\n\nmodule.exports = function whichTypedArray(value) {\n  if (!isTypedArray(value)) {\n    return false;\n  }\n\n  if (!hasToStringTag) {\n    return $slice($toString(value), 8, -1);\n  }\n\n  return tryTypedArrays(value);\n};\n\n//# sourceURL=webpack://test/./node_modules/which-typed-array/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sleep_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sleep-promise */ \"./node_modules/sleep-promise/build/esm.mjs\");\n/* harmony import */ var iotex_antenna__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! iotex-antenna */ \"./node_modules/iotex-antenna/lib/index.js\");\n/* harmony import */ var iotex_antenna_lib_plugin_ws_ws_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! iotex-antenna/lib/plugin/ws/ws.js */ \"./node_modules/iotex-antenna/lib/plugin/ws/ws.js\");\n/* harmony import */ var iotex_antenna_lib_account_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! iotex-antenna/lib/account/utils.js */ \"./node_modules/iotex-antenna/lib/account/utils.js\");\n/* harmony import */ var iotex_antenna_lib_contract_contract_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! iotex-antenna/lib/contract/contract.js */ \"./node_modules/iotex-antenna/lib/contract/contract.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n_asyncToGenerator(function* () {\n  var antenna = new iotex_antenna__WEBPACK_IMPORTED_MODULE_1__(\"http://api.iotex.one:80\", {\n    signer: new iotex_antenna_lib_plugin_ws_ws_js__WEBPACK_IMPORTED_MODULE_2__.WsSignerPlugin()\n  });\n  yield (0,sleep_promise__WEBPACK_IMPORTED_MODULE_0__.default)(3000); // example for transfer\n\n  var resp = yield antenna.iotx.sendTransfer({\n    to: \"io1mwekae7qqwlr23220k5n9z3fmjxz72tuchra3m\",\n    from: antenna.iotx.accounts[0].address,\n    value: (0,iotex_antenna_lib_account_utils_js__WEBPACK_IMPORTED_MODULE_3__.toRau)(\"1\", \"Iotx\"),\n    gasLimit: \"100000\",\n    gasPrice: (0,iotex_antenna_lib_account_utils_js__WEBPACK_IMPORTED_MODULE_3__.toRau)(\"1\", \"Qev\")\n  });\n  console.log(resp); // example for contract call\n  // option 1: using simple executeContract shortcut\n\n  resp = yield antenna.iotx.executeContract({\n    contractAddress: \"io1jmq0epcswzu7vyquxlr9j9jvplwpvtc4d50ze9\",\n    amount: \"0\",\n    abi: '[{\"constant\":false,\"inputs\":[{\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]',\n    method: \"set\",\n    gasLimit: \"100000\",\n    gasPrice: (0,iotex_antenna_lib_account_utils_js__WEBPACK_IMPORTED_MODULE_3__.toRau)(\"1\", \"Qev\"),\n    from: antenna.iotx.accounts[0].address\n  }, 666);\n  console.log(resp); // example for contract call\n  // option 2: using full-featured contract class\n\n  var contract = new iotex_antenna_lib_contract_contract_js__WEBPACK_IMPORTED_MODULE_4__.Contract([{\n    constant: false,\n    inputs: [{\n      name: \"x\",\n      type: \"uint256\"\n    }],\n    name: \"set\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"get\",\n    outputs: [{\n      name: \"\",\n      type: \"uint256\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }], \"io1jmq0epcswzu7vyquxlr9j9jvplwpvtc4d50ze9\", {\n    provider: antenna.iotx,\n    signer: antenna.iotx.signer\n  });\n  resp = yield contract.methods.set(999, {\n    account: antenna.iotx.accounts[0],\n    gasLimit: \"300000\",\n    gasPrice: \"1000000000000\",\n    amount: (0,iotex_antenna_lib_account_utils_js__WEBPACK_IMPORTED_MODULE_3__.toRau)(0, \"IOTX\")\n  });\n  console.log(\"contract.set() => \".concat(resp));\n  yield (0,sleep_promise__WEBPACK_IMPORTED_MODULE_0__.default)(20000);\n  resp = yield contract.methods.get({\n    from: antenna.iotx.accounts[0].address\n  });\n  console.log(\"contract.get() => \".concat(resp));\n})();\n\n//# sourceURL=webpack://test/./src/index.js?");

/***/ }),

/***/ "./node_modules/browserify-aes/modes/list.json":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/list.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"aes-128-ecb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-192-ecb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-256-ecb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-128-cbc\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-192-cbc\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-256-cbc\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes128\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes192\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes256\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-128-cfb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-192-cfb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-256-cfb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-128-cfb8\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-192-cfb8\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-256-cfb8\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-128-cfb1\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-192-cfb1\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-256-cfb1\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-128-ofb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-192-ofb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-256-ofb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-128-ctr\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-192-ctr\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-256-ctr\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-128-gcm\":{\"cipher\":\"AES\",\"key\":128,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-192-gcm\":{\"cipher\":\"AES\",\"key\":192,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-256-gcm\":{\"cipher\":\"AES\",\"key\":256,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"}}');\n\n//# sourceURL=webpack://test/./node_modules/browserify-aes/modes/list.json?");

/***/ }),

/***/ "./node_modules/browserify-sign/browser/algorithms.json":
/*!**************************************************************!*\
  !*** ./node_modules/browserify-sign/browser/algorithms.json ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"sha224WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"sha256WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"sha384WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"sha512WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{\"sign\":\"rsa\",\"hash\":\"sha1\",\"id\":\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{\"sign\":\"ecdsa\",\"hash\":\"sha1\",\"id\":\"\"},\"sha256\":{\"sign\":\"ecdsa\",\"hash\":\"sha256\",\"id\":\"\"},\"sha224\":{\"sign\":\"ecdsa\",\"hash\":\"sha224\",\"id\":\"\"},\"sha384\":{\"sign\":\"ecdsa\",\"hash\":\"sha384\",\"id\":\"\"},\"sha512\":{\"sign\":\"ecdsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-SHA1\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-WITH-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-WITH-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-WITH-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-WITH-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-RIPEMD160\":{\"sign\":\"dsa\",\"hash\":\"rmd160\",\"id\":\"\"},\"ripemd160WithRSA\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"md5WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"}}');\n\n//# sourceURL=webpack://test/./node_modules/browserify-sign/browser/algorithms.json?");

/***/ }),

/***/ "./node_modules/browserify-sign/browser/curves.json":
/*!**********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/curves.json ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"}');\n\n//# sourceURL=webpack://test/./node_modules/browserify-sign/browser/curves.json?");

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/primes.json":
/*!*****************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/primes.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"modp1\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},\"modp2\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},\"modp5\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},\"modp14\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},\"modp15\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},\"modp16\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},\"modp17\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},\"modp18\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}}');\n\n//# sourceURL=webpack://test/./node_modules/diffie-hellman/lib/primes.json?");

/***/ }),

/***/ "./node_modules/elliptic/package.json":
/*!********************************************!*\
  !*** ./node_modules/elliptic/package.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_from\":\"elliptic@6.5.4\",\"_id\":\"elliptic@6.5.4\",\"_inBundle\":false,\"_integrity\":\"sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==\",\"_location\":\"/elliptic\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"elliptic@6.5.4\",\"name\":\"elliptic\",\"escapedName\":\"elliptic\",\"rawSpec\":\"6.5.4\",\"saveSpec\":null,\"fetchSpec\":\"6.5.4\"},\"_requiredBy\":[\"/eth-lib\",\"/secp256k1\"],\"_resolved\":\"https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz\",\"_shasum\":\"da37cebd31e79a1367e941b592ed1fbebd58abbb\",\"_spec\":\"elliptic@6.5.4\",\"_where\":\"/home/jeremi-solus/Coding/WebOS/IoTeX/test-antenna/node_modules/eth-lib\",\"author\":{\"name\":\"Fedor Indutny\",\"email\":\"fedor@indutny.com\"},\"bugs\":{\"url\":\"https://github.com/indutny/elliptic/issues\"},\"bundleDependencies\":false,\"dependencies\":{\"bn.js\":\"^4.11.9\",\"brorand\":\"^1.1.0\",\"hash.js\":\"^1.0.0\",\"hmac-drbg\":\"^1.0.1\",\"inherits\":\"^2.0.4\",\"minimalistic-assert\":\"^1.0.1\",\"minimalistic-crypto-utils\":\"^1.0.1\"},\"deprecated\":false,\"description\":\"EC cryptography\",\"devDependencies\":{\"brfs\":\"^2.0.2\",\"coveralls\":\"^3.1.0\",\"eslint\":\"^7.6.0\",\"grunt\":\"^1.2.1\",\"grunt-browserify\":\"^5.3.0\",\"grunt-cli\":\"^1.3.2\",\"grunt-contrib-connect\":\"^3.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^5.0.0\",\"grunt-mocha-istanbul\":\"^5.0.2\",\"grunt-saucelabs\":\"^9.0.1\",\"istanbul\":\"^0.4.5\",\"mocha\":\"^8.0.1\"},\"files\":[\"lib\"],\"homepage\":\"https://github.com/indutny/elliptic\",\"keywords\":[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],\"license\":\"MIT\",\"main\":\"lib/elliptic.js\",\"name\":\"elliptic\",\"repository\":{\"type\":\"git\",\"url\":\"git+ssh://git@github.com/indutny/elliptic.git\"},\"scripts\":{\"lint\":\"eslint lib test\",\"lint:fix\":\"npm run lint -- --fix\",\"test\":\"npm run lint && npm run unit\",\"unit\":\"istanbul test _mocha --reporter=spec test/index.js\",\"version\":\"grunt dist && git add dist/\"},\"version\":\"6.5.4\"}');\n\n//# sourceURL=webpack://test/./node_modules/elliptic/package.json?");

/***/ }),

/***/ "./node_modules/iotex-antenna/node_modules/elliptic/package.json":
/*!***********************************************************************!*\
  !*** ./node_modules/iotex-antenna/node_modules/elliptic/package.json ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"_from\":\"elliptic@6.5.3\",\"_id\":\"elliptic@6.5.3\",\"_inBundle\":false,\"_integrity\":\"sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==\",\"_location\":\"/iotex-antenna/elliptic\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"elliptic@6.5.3\",\"name\":\"elliptic\",\"escapedName\":\"elliptic\",\"rawSpec\":\"6.5.3\",\"saveSpec\":null,\"fetchSpec\":\"6.5.3\"},\"_requiredBy\":[\"/iotex-antenna\"],\"_resolved\":\"https://registry.npmjs.org/elliptic/-/elliptic-6.5.3.tgz\",\"_shasum\":\"cb59eb2efdaf73a0bd78ccd7015a62ad6e0f93d6\",\"_spec\":\"elliptic@6.5.3\",\"_where\":\"/home/jeremi-solus/Coding/WebOS/IoTeX/test-antenna/node_modules/iotex-antenna\",\"author\":{\"name\":\"Fedor Indutny\",\"email\":\"fedor@indutny.com\"},\"bugs\":{\"url\":\"https://github.com/indutny/elliptic/issues\"},\"bundleDependencies\":false,\"dependencies\":{\"bn.js\":\"^4.4.0\",\"brorand\":\"^1.0.1\",\"hash.js\":\"^1.0.0\",\"hmac-drbg\":\"^1.0.0\",\"inherits\":\"^2.0.1\",\"minimalistic-assert\":\"^1.0.0\",\"minimalistic-crypto-utils\":\"^1.0.0\"},\"deprecated\":false,\"description\":\"EC cryptography\",\"devDependencies\":{\"brfs\":\"^1.4.3\",\"coveralls\":\"^3.0.8\",\"grunt\":\"^1.0.4\",\"grunt-browserify\":\"^5.0.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-connect\":\"^1.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^1.0.1\",\"grunt-mocha-istanbul\":\"^3.0.1\",\"grunt-saucelabs\":\"^9.0.1\",\"istanbul\":\"^0.4.2\",\"jscs\":\"^3.0.7\",\"jshint\":\"^2.10.3\",\"mocha\":\"^6.2.2\"},\"files\":[\"lib\"],\"homepage\":\"https://github.com/indutny/elliptic\",\"keywords\":[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],\"license\":\"MIT\",\"main\":\"lib/elliptic.js\",\"name\":\"elliptic\",\"repository\":{\"type\":\"git\",\"url\":\"git+ssh://git@github.com/indutny/elliptic.git\"},\"scripts\":{\"jscs\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"jshint\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"lint\":\"npm run jscs && npm run jshint\",\"test\":\"npm run lint && npm run unit\",\"unit\":\"istanbul test _mocha --reporter=spec test/index.js\",\"version\":\"grunt dist && git add dist/\"},\"version\":\"6.5.3\"}');\n\n//# sourceURL=webpack://test/./node_modules/iotex-antenna/node_modules/elliptic/package.json?");

/***/ }),

/***/ "./node_modules/parse-asn1/aesid.json":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/aesid.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"}');\n\n//# sourceURL=webpack://test/./node_modules/parse-asn1/aesid.json?");

/***/ }),

/***/ "./node_modules/sleep-promise/build/esm.mjs":
/*!**************************************************!*\
  !*** ./node_modules/sleep-promise/build/esm.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar e=setTimeout;function t(t,n){var u=n.useCachedSetTimeout?e:setTimeout;return new Promise((function(e){u(e,t)}))}function n(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},u=n.useCachedSetTimeout,r=t(e,{useCachedSetTimeout:u});function o(e){return r.then((function(){return e}))}return o.then=function(){return r.then.apply(r,arguments)},o.catch=Promise.resolve().catch,o}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (n);\n\n\n//# sourceURL=webpack://test/./node_modules/sleep-promise/build/esm.mjs?");

/***/ }),

/***/ "?8131":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://test/buffer_(ignored)?");

/***/ }),

/***/ "?3fc0":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://test/crypto_(ignored)?");

/***/ }),

/***/ "?f9d4":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://test/buffer_(ignored)?");

/***/ }),

/***/ "?7a28":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://test/buffer_(ignored)?");

/***/ }),

/***/ "?4a58":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://test/buffer_(ignored)?");

/***/ }),

/***/ "?ed1b":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://test/util_(ignored)?");

/***/ }),

/***/ "?d17e":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://test/util_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});